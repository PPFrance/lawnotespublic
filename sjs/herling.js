cts_ = "WwogICAgIkNhc2UiLAogICAgIkNvbmNlcHQiLAogICAgIkhlYWRub3RlcyIsCiAgICAiSGVscCIsCiAgICAiU3RhdHV0ZSIKXQ=="; 

crt_ = "WwogICAgIkVXQ0EiLAogICAgIkVXSEMiLAogICAgIlVLSEwiLAogICAgIlVLUEMiLAogICAgIlVLU0MiCl0="; 

cnc_ = "WwogICAgIjIuIFRlcm1zIHdoaWNoIHN1cHBsZW1lbnQgdGhlIGNvbnRyYWN0ICh3YXJyYW50aWVzIGV0YykiLAogICAgIkEgbmV3IGJhc2lzIGZvciBkZWNpZGluZyBxdWVzdGlvbnMgb2YgcmVtb3RlbmVzcz8iLAogICAgIkFjY2VwdGFuY2UgQnkgQ29uZHVjdCIsCiAgICAiQWNjZXB0YW5jZSBCeSBTaWxlbmNlL0luYWN0aXZpdHkiLAogICAgIkFudGljaXBhdG9yeSBCcmVhY2giLAogICAgIkFydGlmaWNpYWxseSBsaW1pdGluZyB0aGUgbWF0cml4IG9mIGZhY3QiLAogICAgIkFzc3VtcHRpb24gb2YgcmVzcG9uc2liaWxpdHkgLyBhZHZpY2UgdG8gdmVyaWZ5IiwKICAgICJBdGl5YWgncyBVbmRlcnN0YW5kaW5nIG9mIENvbnNpZGVyYXRpb24iLAogICAgIkJleW9uZCBzZWN0aW9uIDMiLAogICAgIkJyZWFjaCBvZiBDb250cmFjdCAtIEludHJvZHVjdGlvbiIsCiAgICAiQnJlYWNoIG9mIGNvbnRyYWN0IFx1MjAxMyB0aGUgYmFzaWMgcmlnaHRzIiwKICAgICJDaGFyYWN0ZXJpc3RpY3Mgb2YgUHJvbWlzc29yeSBFc3RvcHBlbCIsCiAgICAiQ2xhc3NpZmljYXRpb24gb2YgVGVybXMgLSBJbnRyb2R1Y3Rpb24iLAogICAgIkNvbGxhdGVyYWwgQ29udHJhY3RzIiwKICAgICJDb21tZW50YXJ5IG9uIExvcmQgSG9mZm1hbm4ncyBSZXN0YXRlbWVudCIsCiAgICAiQ29tbWVudHMiLAogICAgIkNvbW1lbnRzLiIsCiAgICAiQ29tbWVyY2lhbCBBZ3JlZW1lbnRzIiwKICAgICJDb21tb24gTGF3IEJhcnMgdG8gUmVzY2lzc2lvbiIsCiAgICAiQ29tbW9uIE1pc3Rha2UiLAogICAgIkNvbW1vbiBtaXN0YWtlIGFzIHRvIHRoZSBzdWJqZWN0LW1hdHRlciBvZiB0aGUgY29udHJhY3QiLAogICAgIkNvbW11bmljYXRpb24gb2YgQWNjZXB0YW5jZSAtIEludHJvIiwKICAgICJDb25kaXRpb25hbCBBZ3JlZW1lbnRzIiwKICAgICJDb25kaXRpb25zIiwKICAgICJDb25zaWRlcmF0aW9uIC0gSW50cm9kdWN0aW9uIiwKICAgICJDb25zaWRlcmF0aW9uIERpc3Rpbmd1aXNoZWQgRnJvbSBDb25kaXRpb25hbCBHaWZ0cyIsCiAgICAiQ29uc2lkZXJhdGlvbiBNdXN0IEJlIFJlcXVlc3RlZCIsCiAgICAiQ29uc2lkZXJhdGlvbiBNdXN0IE5vdCBCZSBQYXN0IiwKICAgICJDb250cmFjdCBhbmQgdG9ydCBtZWFzdXJlcyBjb21wYXJlZCIsCiAgICAiQ29udHJhY3R1YWwgcXVhbnR1bSBtZXJ1aXQiLAogICAgIkNvbnRyb2wgb2YgRXhlbXB0aW9uIENsYXVzZXMgVWN0YSAxOTk3LCBDcmEgMjAxNSAtIEludHJvZHVjdGlvbiIsCiAgICAiQ291bnRlci1PZmZlciIsCiAgICAiRGVmZXJyZWQgQWdyZWVtZW50cyIsCiAgICAiRGV2ZWxvcG1lbnQgb2YgTW9kZXJuIEludGVycHJldGF0aW9uIiwKICAgICJEb2N0cmluZSBvZiBJbXBsaWVkIEFzc3VtcHNpdCIsCiAgICAiRWZmZWN0IG9mIFByb21pc3NvcnkgRXN0b3BwZWwiLAogICAgIkVucmljaG1lbnQgYnkgc3VidHJhY3Rpb24iLAogICAgIkVucmljaG1lbnQgd2l0aG91dCBzdWJ0cmFjdGlvbiIsCiAgICAiRW50aXJlIGFuZCBzZXZlcmFibGUgb2JsaWdhdGlvbnMiLAogICAgIkV4Y2x1ZGluZyBsaWFiaWxpdHkgZm9yIG5lZ2xpZ2VuY2UiLAogICAgIkV4Y2x1c2lvbiBhbmQgbGltaXRhdGlvbiBjbGF1c2VzIiwKICAgICJGYWN0LCBhcyBvcHBvc2VkIHRvIG9waW5pb24sIGJlbGllZiwgaW50ZW50aW9uLCBvciAoZm9ybWVybHkpIGxhdyIsCiAgICAiRnJhdWR1bGVudCwgbmVnbGlnZW50IGFuZCBpbm5vY2VudCBtaXNyZXByZXNlbnRhdGlvbiIsCiAgICAiRnJ1c3RyYXRpb24gLSBJbnRyb2R1Y3Rpb24iLAogICAgIkZydXN0cmF0aW9uIG9mIGNvbW1vbiBwdXJwb3NlIiwKICAgICJGdXJ0aGVyIGFzcGVjdHMgb2YgdGhlIHJlbWVkaWFsIHNjaGVtZSIsCiAgICAiR29pbmcgYmV5b25kIFx1MjAxY21pc3Rha2VzXHUyMDFkIGluIHRoZSBjb250cmFjdCIsCiAgICAiSW1wbGljYXRpb24gZnJvbSBjdXN0b20iLAogICAgIkltcGxpY2F0aW9uIGZyb20gcHJlc3VtZWQgaW50ZW50aW9uIChcdTIwMWN0ZXJtcyBpbXBsaWVkIGluIGZhY3RcdTIwMWQpIiwKICAgICJJbXBsaWNhdGlvbiBmcm9tIHRoZSBwYXJ0aWVzJyBsZWdhbCByZWxhdGlvbnNoaXAgKFx1MjAxY3Rlcm1zIGltcGxpZWQgaW4gbGF3XHUyMDFkKSIsCiAgICAiSW1wbGljYXRpb24gb2YgVGVybXMgLSBJbnRyb2R1Y3Rpb24iLAogICAgIkltcG9ydGFuY2Ugb2YgSW50ZXJwcmV0YXRpb24iLAogICAgIkluY29tcGxldGUgYW5kIFZhZ3VlIEFncmVlbWVudHMgLSBJbnRyb2R1Y3Rpb24iLAogICAgIkluY29ycG9yYXRpb24gb2YgVGVybXMgLSBJbnRyb2R1Y3Rpb24iLAogICAgIklubm9jZW50IE1pc3JlcHJlc2VudGF0aW9uIiwKICAgICJJbm5vbWluYXRlIHRlcm1zIiwKICAgICJJbnNpc3RlbmNlIG9uIHBlcmZvcm1hbmNlIiwKICAgICJJbnRlbnRpb24gdG8gQ3JlYXRlIExlZ2FsIFJlbGF0aW9ucyAtIENvbmNsdXNpb24iLAogICAgIkludGVudGlvbiB0byBDcmVhdGUgTGVnYWwgUmVsYXRpb25zIC0gSW50cm9kdWN0aW9uIiwKICAgICJJbnRlcnByZXRhdGlvbiBhbmQgcHJlY2VkZW50IiwKICAgICJJbnRlcnByZXRhdGlvbiBvZiBDb250cmFjdHMgLSBJbnRyb2R1Y3Rpb24iLAogICAgIkxhdyBSZWZvcm0gKEZydXN0cmF0ZWQgQ29udHJhY3RzKSBBY3QgMTk0MyIsCiAgICAiTG9yZCBEZW5uaW5nJ3MgaW52ZW50aW9uIG9mIGNvbW1vbiBtaXN0YWtlIGluIGVxdWl0eSIsCiAgICAiTWFraW5nIHRoZSBlbGVjdGlvbiB0byBhZmZpcm0gb3IgdGVybWluYXRlIiwKICAgICJNYXRlcmlhbGl0eSBhbmQgcmVsaWFuY2UiLAogICAgIk1pc3JlcHJlc2VudGF0aW9uICgxKSAtIEludHJvZHVjdGlvbiIsCiAgICAiTWlzcmVwcmVzZW50YXRpb24gKDIpIC0gSW50cm9kdWN0aW9uIiwKICAgICJNaXNyZXByZXNlbnRhdGlvbiBhcmlzaW5nIGZyb20gc2lsZW5jZSBhbmQvb3IgY29uZHVjdCIsCiAgICAiTWlzdGFrZSAtIEludHJvZHVjdGlvbiIsCiAgICAiTW92aW5nIG9uIGZyb20gQmVsbCIsCiAgICAiTXV0dWFsIE1pc3Rha2UiLAogICAgIk5lZ2xpZ2VudCBNaXNyZXByZXNlbnRhdGlvbiIsCiAgICAiT2JqZWN0aXZlIHZpZXcgb2YgSW50ZW50aW9uIGFuZCBBZ3JlZW1lbnQiLAogICAgIk9mZmVyIERpc3Rpbmd1aXNoZWQgRnJvbSBJbnZpdGF0aW9uIHRvIFRyZWF0IiwKICAgICJPZmZlcnMgLSBJbnRyb2R1Y3Rpb24iLAogICAgIk9uZXJvdXMgb3IgdW51c3VhbCBjbGF1c2VzIiwKICAgICJPdGhlciB0ZXN0cyIsCiAgICAiT3Zlci1leHRlbmRpbmcgdGhlIFx1MjAxY21hdHJpeCBvZiBmYWN0XHUyMDFkIiwKICAgICJQYXJ0IFBheW1lbnQgb2YgYSBEZWJ0IGFzIENvbnNpZGVyYXRpb24iLAogICAgIlBlbmFsdGllcy9BZ3JlZWQgc3VtcyBwYXlhYmxlIG9uIGJyZWFjaCIsCiAgICAiUGVyZm9ybWFuY2Ugb2YgRXhpc3RpbmcgTGVnYWwgRHV0aWVzIGFzIENvbnNpZGVyYXRpb24iLAogICAgIlBvc3RhbCBSdWxlIiwKICAgICJQcmUtRW1wdGl2ZSBBZ3JlZW1lbnRzIiwKICAgICJSZWFjdGlvbnMgdG8gdGhlIGlubm9taW5hdGUgYW5hbHlzaXMiLAogICAgIlJlYXNvbmFibGUgbm90aWNlIGFuZCByZWFzb25hYmxlIGFzc3VtcHRpb25zIFx1MjAxMyB0aGUgXHUyMDFjdGlja2V0IGNhc2VzXHUyMDFkIiwKICAgICJSZWJ1dHRhbCBvZiBQcmVzdW1wdGlvbiIsCiAgICAiUmVkdWN0aW9uIG9mIHRoZSBjb250cmFjdCB0byB3cml0aW5nIiwKICAgICJSZW1lZGllcyAtIEludHJvZHVjdGlvbiIsCiAgICAiUmVzY2lzc2lvbiIsCiAgICAiUnVsZXMgb2YgU3VmZmljaWVuY3kiLAogICAgIlNlY3Rpb24gMTogdHJlYXRpbmcgYSBjb250cmFjdCB0ZXJtIGFzIGEgbWlzcmVwcmVzZW50YXRpb24iLAogICAgIlNlY3Rpb24gMigxKSIsCiAgICAiU2VsZi1pbmR1Y2VkIGZydXN0cmF0aW9uIiwKICAgICJTcGVjaWFsIHR5cGVzIG9mIGxvc3MiLAogICAgIlN1YnN0YW50aWFsIHBlcmZvcm1hbmNlIiwKICAgICJUZW5kZXIgb2YgcGVyZm9ybWFuY2UiLAogICAgIlRoZSBDb25zdW1lciBSaWdodHMgQWN0IDIwMTUiLAogICAgIlRoZSBMYXcgUmVmb3JtIChGcnVzdHJhdGVkIENvbnRyYWN0cykgQWN0IDE5NDMiLAogICAgIlRoZSBQYXJvbCBFdmlkZW5jZSBSdWxlIiwKICAgICJUaGUgYXNzZXNzbWVudCBvZiBkZWxheSIsCiAgICAiVGhlIGJhc2ljcyIsCiAgICAiVGhlIGJhc2lzIG9mIHF1YW50aWZpY2F0aW9uIiwKICAgICJUaGUgY2lyY3Vtc3RhbmNlcyBvZiBmcnVzdHJhdGlvbiIsCiAgICAiVGhlIGNvbnN0cnVjdGlvbiBvZiBleGVtcHRpb24gY2xhdXNlcyIsCiAgICAiVGhlIGNvbnRyYWN0dWFsIG5hdHVyZSBvZiB0aGUgZG9jdW1lbnQgLyBleHBlY3RhdGlvbnMgb2YgdGhlIHBhcnRpZXMiLAogICAgIlRoZSBkZXZpYXRpb24gYW5kIGJhaWxtZW50IGNhc2VzIiwKICAgICJUaGUgZG9jdHJpbmUgb2YgZnVuZGFtZW50YWwgYnJlYWNoIiwKICAgICJUaGUgZWZmZWN0cyBvZiBmcnVzdHJhdGlvbiIsCiAgICAiVGhlIGVsZWN0aW9uIHRvIHRlcm1pbmF0ZSIsCiAgICAiVGhlIGZyYXVkIGNhc2VzIiwKICAgICJUaGUgZnVuY3Rpb24gb2YgZXhlbXB0aW9uIGNsYXVzZXMiLAogICAgIlRoZSBpbnRlbnRpb24gd2l0aCB3aGljaCB0aGUgc3RhdGVtZW50IHdhcyBtYWRlIiwKICAgICJUaGUgb2xkIHByaW5jaXBsZXMgb2YgXHUyMDFjbGVnYWxcdTIwMWQgaW50ZXJwcmV0YXRpb24iLAogICAgIlRoZSBwdXJwb3NlIGZvciB3aGljaCBkYW1hZ2VzIGFyZSBhd2FyZGVkIiwKICAgICJUaGUgcmF0aW9uYWxlIGZvciBmcnVzdHJhdGlvbiIsCiAgICAiVGhlIHJvbGUgb2YgZm9yZXNpZ2h0IiwKICAgICJUaGUgcnVsZSBpbiBIYWRsZXkgdiBCYXhlbmRhbGUiLAogICAgIlRoZSBzcGVjaWFsIGNhc2VzIiwKICAgICJUaGUgdGVtcHRhdGlvbiB0byBnbyBiZXlvbmQgdGhlIGRpY3Rpb25hcnkiLAogICAgIlRpbWluZyIsCiAgICAiVGltaW5nLiIsCiAgICAiVG93YXJkcyBQcm9taXNzb3J5IEVzdG9wcGVsIC0gSW50cm9kdWN0aW9uIiwKICAgICJUcmFuc21pc3Npb24gb2YgQWNjZXB0YW5jZSIsCiAgICAiVW5mYWlyIENvbnRyYWN0IFRlcm1zIEFjdCAxOTc3IC0gSW50cm9kdWN0aW9uIiwKICAgICJVbmlsYXRlcmFsIE1pc3Rha2UiLAogICAgIlVzaW5nIHRoZSBVbmZhaXIgQ29udHJhY3QgVGVybXMgQWN0IDE5NzciLAogICAgIldhcnJhbnRpZXMiLAogICAgIlx1MjAxY1Byb2JsZW1cdTIwMWQgQ2FzZXMiCl0="; 

cgs_ = "[
    "(A) Generally",
    "(B) In Unilateral Contracts",
    "(C) In Contracts Involving Land",
    "(D) In Auction Sales",
    "(E) In Sales By Tender",
    "Acas",
    "Acceptance",
    "Acceptance By Conduct",
    "Acceptance By Silence/Inactivity",
    "Acceptance In Unilateral Contracts",
    "Access",
    "Accord and Satisfaction",
    "Acquiescence",
    "Adjudication",
    "Adjudicators' Powers and Duties",
    "Administration",
    "Administrative Decision-Making",
    "Administrative Law Other Related Subjects: Human Rights",
    "Administrators' Powers and Duties",
    "Admissibility",
    "Advertisements",
    "Advice",
    "Agency",
    "Agents' Liabilities",
    "Agreement",
    "Agreements",
    "Aircraft Components",
    "Alterations",
    "Animals Other Related Subjects: Commercial Law",
    "Anticipatory Breach",
    "Appointments",
    "Apportionment",
    "Apprenticeship",
    "Arbitration Other Related Subjects: Shipping",
    "Arbitrators",
    "Arrears",
    "Articles of Association",
    "Assessment",
    "Assessment of Delay",
    "Assignment",
    "Assumption of Responsibility",
    "Atiyah's Understanding of Consideration",
    "Auctions",
    "Auditors",
    "Authority",
    "Aviation",
    "Avoidance",
    "Banking and Finance",
    "Banking and Finance Other Related Subjects: Contracts",
    "Banks",
    "Barristers",
    "Battle of Forms",
    "Beer",
    "Belize",
    "Birds",
    "Bonus Payments",
    "Breach",
    "Breach of Contract",
    "Breach of Contract \u2013 Basic Rights",
    "Breach of Duty of Care",
    "Building and Engineering Contracts",
    "Canada",
    "Car Parks",
    "Cargo",
    "Carriage By Sea",
    "Cars",
    "Case Management",
    "Causation",
    "Causes of Action",
    "Certainty",
    "Characteristics of Promissory Estoppel",
    "Charterparties",
    "Cheques",
    "Circumstances of Frustration",
    "Civil Procedure",
    "Civil Procedure Other Related Subjects: Legal Profession",
    "Classification of Terms",
    "Client Accounts",
    "Coalescence of Contractual Interpretation and Implication of Terms In Fact",
    "Collateral Contracts",
    "Collective Bargaining",
    "Comfort Letters",
    "Commentary on Lord Hoffmann's Restatement",
    "Commercial Agreements",
    "Commercial Contracts",
    "Commercial Property",
    "Commission",
    "Common Law Bars to Rescission",
    "Common Mistake",
    "Communication of Acceptance",
    "Companies House",
    "Company Law",
    "Company Law Other Related Subjects: Contracts",
    "Company Law Other Related Subjects: Damages",
    "Compensatory Damages",
    "Conditional Agreements",
    "Conditional Fee Agreements",
    "Conditional Offers",
    "Conditions",
    "Conditions of Sale",
    "Conduct",
    "Conservation",
    "Consideration",
    "Consideration Distinguished From Conditional Gifts",
    "Consideration In Compromises of Legal Claims",
    "Consideration Must Be Requested",
    "Consideration Must Be of Some value In Eye of Law",
    "Consideration Must Not Be Past",
    "Construction Contracts",
    "Construction Law",
    "Construction Law Other Related Subjects: Dispute Resolution",
    "Construction of Exemption Clauses",
    "Consumer Contracts",
    "Consumer Law",
    "Contract For Sale of Land",
    "Contract Terms",
    "Contract and Tort Measures Compared",
    "Contract of Employment",
    "Contracts",
    "Contracts Other Related Subjects: Banking and Finance",
    "Contracts Other Related Subjects: Civil Procedure",
    "Contracts Other Related Subjects: Commercial Law",
    "Contracts Other Related Subjects: Company Law",
    "Contracts Other Related Subjects: Construction Law",
    "Contracts Other Related Subjects: Consumer Law",
    "Contracts Other Related Subjects: Damages",
    "Contracts Other Related Subjects: Equity",
    "Contracts Other Related Subjects: Family Law",
    "Contracts Other Related Subjects: Landlord and Tenant",
    "Contracts Other Related Subjects: Negligence",
    "Contracts Other Related Subjects: Sale of Goods",
    "Contracts Other Related Subjects: Torts",
    "Contracts of Employment",
    "Contracts of Sale",
    "Contractual Liability",
    "Contractual Machinery For Agreement",
    "Contractual Nature of Document / Expectations of Parties",
    "Contractual Quantum Meruit",
    "Contractual Rights",
    "Conveyancing",
    "Copyright",
    "Costs",
    "Counter-Offer",
    "Courts",
    "Covenants",
    "Cranes",
    "Criminal Law",
    "Criminal Procedure",
    "Crown Servants",
    "Damage",
    "Damages",
    "Damages Other Related Subjects: Contracts",
    "Deceit",
    "Defences",
    "Deferred Agreements",
    "Definitions of Consideration",
    "Delay",
    "Demurrage",
    "Deportation",
    "Detention",
    "Development of Modern Interpretation",
    "Directors",
    "Distinguishing Between Terms and Representations",
    "Distribution",
    "Divorce",
    "Doctrine of Implied Assumpsit",
    "Document Exchanges",
    "Domestic and Social Agreements",
    "Duty of Care",
    "Early Retirement",
    "Easements",
    "Economic Duress",
    "Economic Loss",
    "Effect of Promissory Estoppel",
    "Effects of Frustration",
    "Employers' Duties",
    "Employment",
    "Employment Other Related Subjects: Contracts",
    "Enforcement",
    "Entire and Severable Obligations",
    "Environment Other Related Subjects: Administrative Law",
    "Equitable Interests",
    "Equitable Jurisdiction",
    "Equitable Principles",
    "Equity Other Related Subjects: Contracts",
    "Equity's Evasion of Pinnel's Case",
    "Estate Agents",
    "Estoppel",
    "Evasion of Rule In Pinnel's Case",
    "Evasion of the Rule in Stik v Myrick",
    "Ex Gratia Payments",
    "Exclusion Clauses",
    "Exclusion of Liability For Negligence",
    "Executed Agreements",
    "Exemption Clauses (UCTA 1997 and CRA 2015)",
    "Exemption of Liability For Misrepresentation",
    "Existing Contractual Obligations to Promisor as Consideration",
    "Extensions of Time",
    "Fact, as Opposed to Opinion, Belief, Intention and (Formerly) Law",
    "Families",
    "Family Law",
    "Family Law Other Related Subjects: Civil Procedure",
    "Family Law Other Related Subjects: Real Property",
    "Fees",
    "Flats",
    "Force Majeure",
    "Foreseeability",
    "Formalities",
    "Formation of Contract",
    "Fradulent Misrepresentation",
    "Fraud",
    "Fraud Cases",
    "Fraudulent Misrepresentation",
    "Frustration",
    "Frustration of Common Purpose",
    "Fundamental Breach",
    "Groups of Companies",
    "Guarantees",
    "Hague Rules",
    "Health Other Related Subjects: Sale of Goods",
    "Hire Purchase",
    "Hiring",
    "Home Income Plans",
    "Hotels",
    "Ill Health",
    "Illegal Entrants",
    "Implication of Terms",
    "Implied Terms",
    "Importance of Interpretation",
    "Importance of the Statement",
    "Incomplete Agreements",
    "Incomplete and Vague Agreements",
    "Inconvenience",
    "Incorporation By Course of Dealing",
    "Incorporation By Notice",
    "Incorporation By Signature",
    "Incorporation of Conlicting Terms",
    "Incorporation of Terms",
    "Innocent Misrepresentation",
    "Innominate Terms",
    "Insistence on Performance",
    "Insolvency Other Related Subjects: Trusts",
    "Instalments",
    "Insurance",
    "Insurance Companies",
    "Insurance Intermediaries",
    "Insurance Premiums",
    "Intellectual Property",
    "Intention",
    "Intention of Parties",
    "Intention to Create Legal Relations",
    "Intermediate Terms",
    "Interpretation",
    "Interpretation of Contracts",
    "Introduction",
    "Investment Banks",
    "Investors Compensation Scheme",
    "Judgments and Orders",
    "Judicial Decision-Making",
    "Jurisdiction",
    "Knowledge of Offer",
    "Land Drainage",
    "Landlord and Tenant",
    "Landlord and Tenant Other Related Subjects: Contracts",
    "Landlord and Tenant Other Related Subjects: Housing",
    "Late Delivery",
    "Law Reform (Frustrated Contracts) Act 1943",
    "Leases",
    "Legal Profession Other Related Subjects: Agency",
    "Legal Representation",
    "Legal Rights",
    "Letters",
    "Letters of Allotment",
    "Letters of Intent",
    "Liabilities",
    "Liability For Fundamental Breaches of Contract",
    "Licences",
    "Liens",
    "Limit of Liability",
    "Limit on Use of Promissory Estoppel",
    "Lloyd'S",
    "Loans",
    "Lockout Agreements",
    "Maintenance Agreements",
    "Marriage",
    "Materiality and Reliance",
    "Matrimonial Home",
    "Measure of Damages",
    "Minimum Wage",
    "Misreprentation Act  1967",
    "Misrepresentation",
    "Misrepresentation (1)",
    "Misrepresentation (2)",
    "Misrepresentations Arising From Silence And/Or Conduct",
    "Mistake",
    "Mistake as to Subject-Matter of Contract",
    "Mistake of Law",
    "Mitigation",
    "Motor Insurance",
    "Motor Insurers' Bureau",
    "Music Industry",
    "Musical Works",
    "Mutual Mistake",
    "Mutual Trust and Confidence",
    "Names",
    "Narrow Reading of Exemption Clauses",
    "National Park Authorities",
    "National Parks",
    "Negligence",
    "Negligence Other Related Subjects: Contracts",
    "Negligence Other Related Subjects: Government Administration",
    "Negligent Misrepresentation",
    "Negligent Misstatement",
    "Negligent Misstatement: Conditions of Liability",
    "Negotiations",
    "Non-Compliance",
    "Non-Delivery",
    "Notice",
    "Notices",
    "Objective view of Intention and Agreement",
    "Offensive Weapons",
    "Offer Distinguished From Invitation to Treat",
    "Offer and Acceptance",
    "Offers",
    "Offers For Sale",
    "Onerous Or Unusual Terms",
    "Operating Agreements",
    "Options",
    "Oral Contracts",
    "Parol Evidence Rule",
    "Part Payment of a Debt as Consideration",
    "Part Performance",
    "Passengers",
    "Payments",
    "Penalties",
    "Penalties/Agreed Sums Payable on Breach",
    "Penalty Clauses",
    "Performance",
    "Performance of Contractual Duties Owed to a Third Party as Consideration",
    "Performance of Existing Legal Duties as Consideration",
    "Personal Injury Claims",
    "Personal Injury Other Related Subjects: Legal Advice and Funding",
    "Pharmacists",
    "Poisons",
    "Postal Rule",
    "Postal Service",
    "Postal Services",
    "Pre-Action Protocols",
    "Pre-Emptive Agreements",
    "Preliminary Inquiries",
    "Price Marking",
    "Pricing",
    "Professional Conduct",
    "Professional Negligence",
    "Profits",
    "Promises",
    "Promissory Estoppel",
    "Proportionality",
    "Proximity",
    "Public Authorities",
    "Pupillage",
    "Quantum Meruit",
    "Rationale For Frustration",
    "Real Property",
    "Real Property Other Related Subjects: Contracts",
    "Reasonableness of Notice",
    "Rebranding",
    "Rebuttal of Presumption",
    "Rectification",
    "Register of Companies",
    "Registrar of Companies",
    "Release",
    "Reliance",
    "Reliance and Inequity",
    "Relief From Sanctions",
    "Remedies",
    "Remoteness",
    "Remoteness of Loss",
    "Remuneration",
    "Rent Control",
    "Repairs",
    "Repudiation",
    "Res Extincta",
    "Res Sua",
    "Rescission",
    "Rescission Generally",
    "Resolution of Incompleteness",
    "Responses to Offers",
    "Road Traffic",
    "Road Traffic Other Related Subjects: Transport",
    "Role of Foresight",
    "Royalties",
    "Rule In |Hadley v Baxendale|",
    "Rules of Sufficiency",
    "Sale By Auction",
    "Sale of Business",
    "Sale of Goods",
    "Sale of Goods Other Related Subjects: Contracts",
    "Sale of Land",
    "Satisfactory Quality",
    "Scotland",
    "Seaworthiness",
    "Security Companies",
    "Self-Induced Frustration",
    "Separation",
    "Settlement",
    "Severance of Uncertainties",
    "Share Purchases",
    "Share Sales",
    "Shareholders",
    "Shipowners",
    "Shipping",
    "Shipping Contracts",
    "Shipping Other Related Subjects: Contracts",
    "Shipping Other Related Subjects: Negligence",
    "Shipping Other Related Subjects: Sale of Goods",
    "Ships",
    "Solicitors",
    "Solicitors' Remuneration",
    "Special Relationships",
    "Specific Performance",
    "Sponsorship",
    "Staff Handbooks",
    "Standard Forms of Contract",
    "Standard Terms",
    "Statutory Demands",
    "Statutory Duties",
    "Statutory Trusts",
    "Subsidiary Tests",
    "Substantial Performance",
    "Succession",
    "Supply of Services",
    "Suspension",
    "Tax",
    "Telex",
    "Tenancies",
    "Tenancies at Will",
    "Tender Offers",
    "Tender of Performance",
    "Tenders",
    "Termination",
    "Terms Implied By Custom",
    "Terms Implied From Parties' Legal Relationship (\u201cTerms Implied In Law\u201d)",
    "Terms Implied From Parties' Presumed Intentions (\u201cTerms Implied In Fact\u201d)",
    "Terms and Conditions",
    "Theft",
    "Third Parties",
    "Tickets",
    "Tie-Ins",
    "Time",
    "Time Charters",
    "Time Limits",
    "Timing",
    "Title to Goods",
    "Torts",
    "Towards Promissory Estoppel",
    "Transmission of Acceptance",
    "Uncertainties Incapable of Resolution",
    "Uncertainty",
    "Unconscionability",
    "Unfair Contract Terms",
    "Unfair Contract Terms Act 1977",
    "Unilateral Contracts",
    "Unilateral Mistake",
    "Vacation of Office",
    "Vague Agreements",
    "Valuation",
    "Variation",
    "Waiver",
    "War",
    "War Damage",
    "War Zones",
    "Warranties",
    "Winding-Up",
    "Withdrawal of Offer (and Lapse)",
    "a New Basis For Deciding Questions of Remoteness?",
    "\u201cProblem\u201d Cases"
]"; 

pfl_ = "WwogICAgIjIwMTUvMjAxNiEiLAogICAgIkFwcHJvdmVkIiwKICAgICJBcmRlbiIsCiAgICAiQXRraW4iLAogICAgIkJpbmdoYW0iLAogICAgIkJyYW13ZWxsIiwKICAgICJDcml0aWNpc2VkIiwKICAgICJEZW5uaW5nIiwKICAgICJEaXBsb2NrIiwKICAgICJIYWxlIiwKICAgICJIb2ZmbWFuIiwKICAgICJIb2ZmbWFubiIsCiAgICAiTWNLZW5kcmljayIsCiAgICAiTmV1YmVyZ2VyIiwKICAgICJPdmVycnVsZWQiLAogICAgIlN0ZXluIiwKICAgICJUcmVpdGVsIiwKICAgICJhcHBlYWwtb3V0c3RhbmRpbmciCl0="; 

ntn_ = '{
    "bank of credit and commerce international sa v ali":"193",
    "payne v cave":"18",
    "attwood v small":"256",
    "re selectmove ltd":"54",
    "shirlaw v southern foundries ltd":"206",
    "anticipatory breach":"337",
    "unfair contract terms act 1977  introduction":"239",
    "warranties":"216",
    "wl mcrae v commonwealth disposals commission":"471",
    "wl sudbrook trading estate ltd v eggleton":"403",
    "interpretation and precedent":"192",
    "the assessment of delay":"324",
    "wl d  c builders ltd v rees":"412",
    "wl davis contractors ltd v fareham urban district council":"475",
    "wl re selectmove ltd":"390",
    "wl finelvet ag v vinava shipping co ltd the chrysalis":"478",
    "errington v errington and woods":"43",
    "harvela investments ltd v royal trust of canada ltd":"24",
    "incomplete and vague agreements  introduction":"65",
    "sumpter v hedges":"343",
    "wl doyle v olby ironmngers ltd":"458",
    "interfoto picture library ltd v stiletto visual productions ltd":"161",
    "williams v carwardine":"39",
    "wl brs v arthur crutchley ltd":"379",
    "bunge corporation v tradax export sa":"223",
    "kings norton metal v edridge":"291",
    "smith v hughes":"3",
    "wl errington v errington and woods":"385",
    "preemptive agreements":"72",
    "wl gibson v manchester city council":"375",
    "communication of acceptance  intro":"45",
    "wl british bank for foreign trade ltd v novinex ltd":"402",
    "forman  co proprietary ltd v the ship liddesdale":"346",
    "tekdata interconnections ltd v amphenol ltd":"32",
    "cundy v lindsay":"290",
    "caparo industries plc v dickman":"259",
    "the effects of frustration":"327",
    "wl j evans  son portsmouth v andrea merzario ltd":"435",
    "reardon smith line ltd v yngvar hansentangen":"187",
    "attorney general of belize v belize telecom ltd":"207",
    "wl photo production ltd v securicor transport ltd":"479",
    "wl butler machine tool co ltd v excello corp":"380",
    "wl household fire insurance co v grant":"395",
    "consideration distinguished from conditional gifts":"91",
    "pankhania v hackney borough council":"249",
    "wl tool metal manufacturing co ltd v tungsten electric co ltd":"414",
    "foakes v beer":"116",
    "substantial performance":"344",
    "hochster v de la tour":"338",
    "british bank for foreign trade ltd v novinex ltd":"75",
    "wl nicolene v simmonds":"404",
    "consideration must be requested":"88",
    "wl chappell  co v nestle co ltd":"405",
    "davis contractors ltd v fareham urban district council":"311",
    "frost v knight":"339",
    "wl tekdata interconnections ltd v amphenol ltd":"381",
    "balfour v balfour":"133",
    "edgington v fitzmaurice":"248",
    "wl harvela investments ltd v royal trust of canada ltd":"378",
    "hartley v ponsonby":"111",
    "wl combe v combe":"406",
    "wl howard marine  dredging co ltd v a ogden  sons excavation ltd":"460",
    "consideration must not be past":"93",
    "wl george mitchell chesterhall ltd v finney lock seeds":"439",
    "cook v wright":"86",
    "misrepresentation 2  introduction":"262",
    "wl lewis v averay":"469",
    "branca v cobarro":"70",
    "the purpose for which damages are awarded":"355",
    "wl parker v clark":"419",
    "barry v davies":"21",
    "felthouse v bindley":"51",
    "the construction of exemption clauses":"227",
    "household fire insurance co v grant":"61",
    "the post chaser":"123",
    "lord dennings invention of common mistake in equity":"304",
    "henderson v merrett syndicates":"260",
    "negligent misrepresentation":"269",
    "carlill v carbolic smoke ball co":"47",
    "wl transfield shipping inc v mercator shipping inc the achilleas":"486",
    "overbrooke estates ltd v glencombe properties ltd":"279",
    "wl inntrepreneur pub co v east crown ltd":"432",
    "wl the brimnes":"394",
    "albert v motor insurers bureau":"132",
    "parker v south eastern railway co":"158",
    "wl dickinson v abel":"407",
    "hillas v arcos":"80",
    "grainger  sons v gough surveyor of taxes":"10",
    "wl raffles v wichelhaus":"466",
    "innominate terms":"217",
    "chartbrook ltd v persimmon homes ltd":"196",
    "wl caparo industries plc v dickman":"455",
    "dresdner kleinwort ltd v attrill":"55",
    "wl branca v cobarro":"398",
    "breach of contract  the basic rights":"333",
    "alpenstow v regalian properties":"71",
    "chappell  co v nestle co ltd":"85",
    "fibrosa sa v fairbairn lawson combe barbour ltd":"329",
    "stilk v myrick":"110",
    "wl photo production ltd v securicor transport":"449",
    "william sindall plc v cambridgeshire county council":"277",
    "oscar chess":"168",
    "krell v henry":"317",
    "dimmock v hallett":"253",
    "hutton v warren":"202",
    "wl h parsons livestock ltd v uttley ingham  co":"485",
    "wl reardon smith line ltd v yngvar hansentangen":"437",
    "howard marine  dredging co ltd v a ogden  sons excavation ltd":"270",
    "wl thornton v shoe lane parking":"373",
    "shadwell v shadwell":"90",
    "the brimnes":"59",
    "parker v clark":"138",
    "wl central london property trust v high trees house ltd":"409",
    "gran gelato ltd v richcliff group ltd":"272",
    "the rationale for frustration":"308",
    "wl grogan v robin meredith plant hire":"423",
    "counteroffer":"26",
    "the law reform frustrated contracts act 1943":"330",
    "wl east v maurer":"459",
    "rose and frank co v crompton and brothers":"143",
    "special types of loss":"357",
    "the consumer rights act 2015":"242",
    "redgrave v hurd":"257",
    "the rule in hadley v baxendale":"358",
    "wl royscot trust v rogerson":"461",
    "heilbut  symons  co v buckleton":"166",
    "wl british crane hire corporation ltd v ipswich plant hire ltd":"426",
    "ward v byham":"102",
    "dunlop v new garage":"352",
    "entores v miles far east corporation":"58",
    "smith v wilson":"200",
    "consideration  introduction":"82",
    "wallis son  wells v pratt  haynes":"228",
    "cooper v phibbs":"299",
    "wl karsales harrow ltd v wallis":"448",
    "koufos v czarnikow ltd the heron ii":"362",
    "h parsons livestock ltd v uttley ingham  co":"363",
    "centrovincial estates v merchant investors assurance company ltd":"6",
    "thompson v london midland and scottish railway co ltd":"159",
    "reduction of the contract to writing":"175",
    "wl l j korbetis v transgrain shipping bv":"397",
    "section 21":"264",
    "misrepresentation arising from silence andor conduct":"250",
    "carlill v carbolic smoke ball company":"14",
    "ingram v little":"293",
    "george mitchell chesterhall ltd v finney lock seeds":"191",
    "deferred agreements":"68",
    "chandler v webster":"328",
    "wl societe italobelge v palm and vegetable oils malaysia the post chaser":"411",
    "wl chartbrook ltd v persimmon homes ltd":"441",
    "wl attorney general of belize v belize telecom ltd":"442",
    "ajayi ea v briscoe nigeria ltd":"122",
    "bell v lever bros ltd":"301",
    "mistake  introduction":"282",
    "shogun finance v hudson":"295",
    "courtney  fairbairn ltd v tolaini bros hotels ltd":"73",
    "doctrine of implied assumpsit":"95",
    "walford v miles":"74",
    "common law bars to rescission":"278",
    "holwell securities ltd v hughes":"63",
    "partridge v crittenden":"8",
    "wl kings norton metal co ltd v edridge merrett  co":"467",
    "andrews bros bournemouth ltd v singer  co ltd":"230",
    "glasbrook v glamorgan cc":"101",
    "may  butcher v the king":"81",
    "wl brogden v metropolitan railway":"388",
    "mountford v scott":"34",
    "frustration  introduction":"307",
    "interpretation of contracts  introduction":"183",
    "making the election to affirm or terminate":"219",
    "implication from the parties legal relationship terms implied in law":"208",
    "lipkin gorman v karpnale ltd":"107",
    "entores v miles":"58",
    "wl koufos v czarnikow ltd the heron ii":"484",
    "the leonidas d":"52",
    "enrichment without subtraction":"367",
    "towards promissory estoppel  introduction":"109",
    "wl schawel v reade":"431",
    "the circumstances of frustration":"313",
    "wl investors compensation scheme ltd v west bromwich building society":"438",
    "wl daulia ltd v four millbank nominees ltd":"386",
    "misrepresentation  glossary":"243",
    "reigate v union manufacturing co":"205",
    "rebuttal of presumption":"137",
    "wl ramsgate victoria hotel v montefiore":"383",
    "olley v marlborough court hotel":"152",
    "materiality and reliance":"255",
    "wl pharmaceutical society of great britain v boots cash chemists southern ltd":"372",
    "derry v peek":"266",
    "wl city and westminster properties v mudd":"434",
    "selfinduced frustration":"319",
    "wl gran gelato ltd v richcliff group ltd":"462",
    "wl rose v pim":"368",
    "importance of interpretation":"184",
    "cremdean v nash":"280",
    "penaltiesagreed sums payable on breach":"351",
    "common mistake as to the subjectmatter of the contract":"300",
    "frustration of common purpose":"315",
    "scally v southern health and social services board":"210",
    "wl william sindall plc v cambridgeshire county council":"464",
    "central london property trust v high trees house":"120",
    "re selectmove ltd  promissory estoppel":"113",
    "wl courtney  fairbairn ltd v tolaini bros hotels ltd":"400",
    "timing":"151",
    "conditional agreements":"66",
    "associated japanese bank international ltd v credit du nord":"303",
    "wl dresdner kleinwort ltd v attrill":"391",
    "acceptance by conduct":"46",
    "exclusion and limitation clauses":"229",
    "routledge v grant":"33",
    "reactions to the innominate analysis":"220",
    "herne bay steam boat co v hutton":"318",
    "white v bluett":"106",
    "control of exemption clauses ucta 1997 cra 2015  introduction":"226",
    "postal rule":"60",
    "wl british steel corporation v cleveland bridge and engineering co ltd":"389",
    "clifton v palumbo":"16",
    "brs v arthur crutchley ltd":"30",
    "wl blackpool and fylde aeroclub ltd v blackpool borough council":"377",
    "dickinson v abel":"92",
    "photo production ltd v securicor transport":"233",
    "the old principles of legal interpretation":"190",
    "wl walford v miles":"401",
    "smith v land and house property corporation":"247",
    "schawel v reade":"172",
    "ocean tramp tankers corporation v vo sovfracht the eugenia":"323",
    "contract and tort measures compared":"361",
    "the super servant two":"320",
    "startup v macdonald":"348",
    "the temptation to go beyond the dictionary":"197",
    "wl bolton v mahadeva":"480",
    "butler machine tool co ltd v excello corp":"31",
    "new zealand shipping v satterthwaite":"104",
    "winn v bull":"67",
    "implication from presumed intention terms implied in fact":"203",
    "royscot trust v rogerson":"271",
    "wl oscar chess ltd v williams":"429",
    "responses to offers  intro":"25",
    "wl esso petroleum co ltd v mardon":"436",
    "wl canada steamship lines ltd v the king":"450",
    "edwards v skyways":"141",
    "offer distinguished from invitation to treat":"7",
    "mccullough v lane fox and partners ltd":"261",
    "assumption of responsibility  advice to verify":"171",
    "insistence on performance":"349",
    "chapelton v barry urban district council":"13",
    "the parol evidence rule":"177",
    "eliason v henshaw":"57",
    "the eurymedon":"104",
    "simpkins v pays":"139",
    "finelvet ag v vinava shipping co ltd the chrysalis":"326",
    "edmonds v lawson":"142",
    "wl partridge v crittenden":"370",
    "wl pankhania v hackney borough council":"452",
    "wl dick bentley productions ltd v harold smith motors ltd":"430",
    "fisher v bell":"9",
    "re caseys patents":"97",
    "cavendish square holding bv v talal el makdessi":"353",
    "esso petroleum co ltd v mardon":"182",
    "blackpool and fylde aeroclub ltd v blackpool borough council":"23",
    "wl edwards v skyways":"420",
    "combe v combe  promissory estoppel":"129",
    "kleinwort benson ltd v malaysia mining corporation":"144",
    "boulton v jones":"288",
    "east v maurer":"268",
    "wl kleinwort benson ltd v malaysia mining corporation":"422",
    "wl centrovincial estates v merchant investors assurance company ltd":"369",
    "crossley v faithful  gould holdings":"211",
    "wl solle v butcher":"473",
    "reasonable notice and reasonable assumptions  the ticket cases":"157",
    "hyde v wrench":"27",
    "raffles v wichelhaus":"284",
    "characteristics of promissory estoppel":"121",
    "whittington v sealehayne":"274",
    "phillips v brooks":"292",
    "wl ingram v little":"468",
    "great peace shipping ltd v tsavliris international ltd":"306",
    "tilden rentacar co v clendinning":"148",
    "wl edmonds v lawson":"421",
    "wl associated japanese bank international ltd v credit du nord":"472",
    "j evans  son portsmouth v andrea merzario ltd":"181",
    "performance of existing legal duties as consideration":"99",
    "transmission of acceptance":"56",
    "lestrange v graucob":"147",
    "wl scally v southern health and social services board":"444",
    "spice girls ltd v aprilia world service bv":"254",
    "artificially limiting the matrix of fact":"195",
    "the contractual nature of the document  expectations of the parties":"154",
    "unilateral mistake":"287",
    "chillingworth v esche":"69",
    "wl bank of credit and commerce international sa v ali":"440",
    "pharmaceutical society of great britain v boots cash chemists southern ltd":"11",
    "unfair contract terms act 1977":"240",
    "other tests":"170",
    "onerous or unusual clauses":"160",
    "waltons stores v maher":"130",
    "the hansa nord":"222",
    "wl holwell securities ltd v hughes":"396",
    "wade v simeon":"87",
    "couchman v hill":"178",
    "harvey v facey":"15",
    "collins v godefroy":"100",
    "hadley v baxendale":"359",
    "rules of sufficiency":"84",
    "blackburn bobbin co ltd v t w allen  sons ltd":"314",
    "the mihalis angelos":"221",
    "wl car  universal finance co ltd v caldwell":"463",
    "2 terms which supplement the contract warranties etc":"164",
    "bannerman v white":"167",
    "atiyahs understanding of consideration":"108",
    "wl ajayi ea v briscoe nigeria ltd":"410",
    "wl hollier v rambler motors amc ltd":"451",
    "wl jones v padavatton":"418",
    "wl shogun finance ltd v hudson":"470",
    "wl great peace shipping ltd v tsavliris international ltd":"474",
    "the basics":"213",
    "henthorn v fraser":"62",
    "wl alpenstow v regalian properties":"399",
    "curtis v chemical cleaning  dyeing co":"150",
    "ramsgate victoria hotel v montefiore":"38",
    "hollier v rambler motors amc ltd":"237",
    "wl spice girls ltd v aprilia world service bv":"453",
    "tool metal v tungsten electric":"128",
    "remedies  introduction":"354",
    "doyle v olby ironmngers ltd":"267",
    "thornton v shoe lane parking":"12",
    "going beyond mistakes in the contract":"198",
    "gibson v manchester city council":"17",
    "wl entores v miles far east corporation":"393",
    "the election to terminate":"335",
    "victoria laundry windsor ltd v newman industries ltd":"360",
    "wl carlill v carbolic smoke ball co":"387",
    "wl merritt v merritt":"416",
    "using the unfair contract terms act 1977":"241",
    "wl tinn v hoffman  co":"384",
    "rose v pim":"4",
    "wl liverpool city council v irwin":"443",
    "wl interfoto picture library ltd v stiletto visual productions ltd":"427",
    "wl crossley v faithful  gould holdings":"445",
    "bisset v wilkinson":"246",
    "the deviation and bailment cases":"234",
    "pinnels case":"115",
    "common mistake":"296",
    "section 1 treating a contract term as a misrepresentation":"263",
    "photo production ltd v securicor transport ltd":"334",
    "vitol v norelf":"53",
    "wl pettitt v pettitt":"417",
    "birmingham and district land co v lnwr":"119",
    "grogan v robin meredith plant hire":"149",
    "misrepresentation 1  introduction":"244",
    "lewis v averay":"294",
    "shuey v united states":"37",
    "national carriers ltd v panalpina northern ltd":"312",
    "wl cavendish square holding bv v talal el makdessi":"482",
    "conditions":"215",
    "merritt v merritt":"134",
    "bank line ltd v arthur capel  co":"316",
    "stevenson jacques  co v maclean":"28",
    "wl national carriers ltd v panalpina northern ltd":"476",
    "wl hedley byrne  co ltd v heller  partners":"454",
    "commercial agreements":"140",
    "brogden v metropolitan railway":"48",
    "car  universal finance co ltd v caldwell":"276",
    "enrichment by subtraction":"366",
    "bolton v mahadeva":"345",
    "the doctrine of fundamental breach":"232",
    "williams v roffey":"112",
    "daulia ltd v four millbank nominees":"44",
    "the function of exemption clauses":"238",
    "wl curtis v chemical cleaning  dyeing co":"424",
    "denny v hancock":"286",
    "luxor eastbourne ltd v cooper":"42",
    "tinn v hoffman  co":"40",
    "keates v the earl of cadogan":"251",
    "sudbrook trading estate ltd v eggleton":"76",
    "development of modern interpretation":"185",
    "wl mccutcheon v david macbrayne ltd":"428",
    "dickinson v dodds":"36",
    "mccutcheon v david macbrayne ltd":"163",
    "musumeci v winadell pty ltd":"124",
    "wl overbrooke estates ltd v glencombe properties ltd":"465",
    "hirachand punamchand v temple":"117",
    "problem cases":"105",
    "tender of performance":"347",
    "commentary on lord hoffmanns restatement":"189",
    "david herlings lectures":"0",
    "wl carlill v carbolic smoke ball company":"374",
    "liverpool city council v irwin":"209",
    "intention to create legal relations  introduction":"131",
    "cutter v powell":"341",
    "classification of terms  introduction":"212",
    "foley v classique coaches ltd":"77",
    "jones v padavatton":"136",
    "wl mountford v scott":"382",
    "the basis of quantification":"356",
    "oscar chess v williams":"168",
    "wl collier v wright holdings ltd":"413",
    "fact as opposed to opinion belief intention or formerly law":"245",
    "wl albert v motor insurers bureau":"415",
    "karsales harrow ltd v wallis":"231",
    "canada steamship lines ltd v the king":"236",
    "wl eliason v henshaw":"392",
    "moving on from bell":"302",
    "wl hong kong fir shipping co ltd v kawasaki kisen kaisha ltd":"446",
    "a new basis for deciding questions of remoteness":"364",
    "lampleigh v brathwait":"96",
    "contractual quantum meruit":"342",
    "dc builders v rees":"125",
    "spencer v harding":"22",
    "scammell and nephew ltd v ouston":"79",
    "incorporation of terms  introduction":"146",
    "further aspects of the remedial scheme":"214",
    "pettitt v pettitt":"135",
    "british crane hire corporation ltd v ipswich plant hire ltd":"156",
    "wl mccullough v lane fox and partners ltd":"457",
    "byrne  co v van tienhoven":"35",
    "the intention with which the statement was made":"165",
    "scotson v pegg":"103",
    "roscorla v thomas":"94",
    "law reform frustrated contracts act 1943":"331",
    "excluding liability for negligence":"235",
    "pao on v lau yiu long":"98",
    "collier v wright":"126",
    "overextending the matrix of fact":"194",
    "parkingeye ltd v beavis":"353",
    "wl henderson v merrett syndicates":"456",
    "investors compensation scheme ltd v west bromwich building society":"188",
    "mcrae v commonwealth disposals commission":"298",
    "l j korbetis v transgrain shipping bv":"64",
    "r v clarke":"41",
    "inntrepreneur pub co v east crown ltd":"176",
    "objective view of intention and agreement":"2",
    "combe v combe":"89",
    "paradine v jane":"309",
    "beyond section 3":"281",
    "transfield shipping inc v mercator shipping inc the achilleas":"365",
    "aeg uk ltd v logic resource":"162",
    "mutual mistake":"283",
    "wl couchman v hill":"433",
    "wl olley v marlborough court hotel":"425",
    "wl bunge corporation v tradax export sa":"447",
    "effect of promissory estoppel":"127",
    "the role of foresight":"322",
    "the special cases":"297",
    "breach of contract  introduction":"332",
    "collateral contracts":"179",
    "nicolene v simmonds":"78",
    "joseph constantine steamship line ltd v imperial smelting corporation ltd":"321",
    "the fraud cases":"289",
    "city and westminster properties v mudd":"180",
    "part payment of a debt as consideration":"114",
    "vitol sa v norelf ltd":"336",
    "innocent misrepresentation":"273",
    "lovell  christmas ltd v wall":"186",
    "fraudulent negligent and innocent misrepresentation":"265",
    "wl victoria laundry windsor ltd v newman industries ltd":"483",
    "hughes v metropolitan railway co":"118",
    "dick bentley productions v harold smith motors ltd":"169",
    "hedley byrne  co ltd v heller  partners":"258",
    "wl barry v davies":"376",
    "implication from custom":"201",
    "wl pao on v lau yiu long":"408",
    "hong kong fir shipping co ltd v kawasaki kisen kaisha ltd":"218",
    "rescission":"275",
    "acceptance by silenceinactivity":"50",
    "falck v williams":"285",
    "taylor v caldwell":"310",
    "offers  introduction":"1",
    "solle v butcher":"305",
    "wl fisher v bell":"371",
    "the moorcock":"204",
    "entire and severable obligations":"340",
    "warlow v harrison":"19",
    "harris v nickersen":"20",
    "wl ocean tramp tankers corporation v v":"477",
    "white  carter councils ltd v mcgregor":"350",
    "ecay v godfrey":"173",
    "wl white  carter councils ltd v mcgregor":"481",
    "intention to create legal relations  conclusion":"145",
    "with v oflanagan":"252",
    "british steel corporation v cleveland bridge and engineering co ltd":"49",
    "implication of terms  introduction":"199",
    "hartog v colin  shields":"5",
    "comments":"224",
    "thomas v thomas":"83"
}';

defcols = '3';

currentTexture = 'img/textures/cream-paper.png';

subject = 'herling';

enableTests = true;

darktheme = true;

cds_ = " [ {
    "YEAR": "2016",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Filter</span></span><br>Enter names of <span class=\"bd\">cases</span>, <span class=\"bd\">categories</span>, <span class=\"bd\">concepts</span>, or free text in quotes. These broaden out what&#8217;s displayed. By contrast, <span class=\"bd\">tags</span>, <span class=\"bd\">courts</span> and <span class=\"bd\">card types</span> all whittle down what you see.",
        "<span class=\"ud\"><span class=\"bd\">Config &amp; </span></span><br>The options button (top left) brings up a panel with options to fiddle with. They, like the cards you&#8217;re looking at, are remembered when you come back a day later. But if something fouls up, a discreet link on the bottom left lets you <span class=\"bd\">reset everything</span>.",
        "<span class=\"ud\"><span class=\"bd\">iPhones</span></span><br>Use on iPhones is rendered more biddable and less cluttered by pressing the &#8216;share&#8217; button (bottom centre) in safari, then <span class=\"bd\">add to home screen</span>.",
        "<span class=\"ud\"><span class=\"bd\">Tags</span></span><br>These, in the panel on the right, can be dragged onto or away from cards, or into the filter thingummy up top. You can also make your own.",
        "<span class=\"ud\"><span class=\"bd\">Links</span></span><br>Links to another cards bring them up, jiggling around and fading out unless you click/press to fasten them down. Why? No idea. <span class=\"bd\">Case cards</span> should have <span class=\"bd\">On Westlaw</span> or <span class=\"bd\">On curia.eu</span> at the top left, which should take you straight to the relevant material on those sites. Other links to, e.g., legislation.gov.uk, or wikipedia, if the entry was particularly helpful, will show up when appropriate or when some inexplicable event caused my level of interest to rise above the endlessly grey and listless dysphoria constituting my mental background noise.",
        "<span class=\"ud\"><span class=\"bd\">Notes</span></span>",
        "<ul><li><span class=\"nl\"><span class=\"it\"><span class=\"bd\">Note well</span></span> &mdash; this was chucked together <span class=\"it\">in a hurry</span> so def. has bugs, glitches, half-rephrased sentences in the cards, etc. And it&#8217;s meant for the <span class=\"bd\">latest version of Safari or Chrome</span> on <span class=\"bd\">Mac</span>. What, you&#8217;re a law student and you don&#8217;t have a Mac?</span></li><li><span class=\"nl\"><span class=\"bd\">Also note that</span><span class=\"it\"> &mdash; the actual </span>cards<span class=\"it\"> in this set have been </span>automatically<span class=\"it\"> generated directly from the text of Herling&#8217;s lectures, and I </span>absolutely<span class=\"it\"> am not going to check each one. There may be stray bits of markup, missingness/incompleteness. Don&#8217;t </span>rely_ on this.</span></li></ul>"
    ],
    "CATEGORY": "David Herling's lectures in flashcard format",
    "SPECIAL": "<span class=\"bd\">Hello!</span><br>This is a collection of flashcards for the City GDL. It contains attempts to explain <span class=\"lnk typln\">Concept</span><span class=\"it\">s</span>, cards containing <span class=\"lnk typln\">Case Overviews</span> for a given topic, containing <span class=\"lnk typln\">Statute</span><span class=\"it\">s</span>, and making up the bulk of the material &mdash; <span class=\"lnk typln\">Case</span><span class=\"it\">s</span>. <br><br>Cases can be made less word-heavy by fiddling around in the <span><i class=\"material-icons\" style=\"font-size: 80% !important;\">menu</i></span> options. There you can also change to a <span class=\"sansfont\">sans</span> typeface when Garamond starts to make you want to rip out your kidneys and stuff them into your eye sockets. If the wacky cards-in-a-pile schtick gets up your nose, adjust the <span class=\"it\">messiness</span>. Plus other stuff. <br><br>There are tests. Arguably a bit gimmicky, they&#8217;re by means of multiple-guessing the ratio belonging to a case, or vice-versa. You can also do this by typing in the case name for a ratio <span class=\"it\">without</span> seeing any choices. <br><br>Flipping cards back and forth, moving to the next or fetching back the last, is a matter of the <span class=\"bd\">left</span> and <span class=\"bd\">right</span> keys. Or, on iOS devices, a matter of greasing up the screen by <span class=\"bd\">swiping</span> left or right.",
    "CATEGORIES": [
        "David Herling's lectures in flashcard format"
    ],
    "META-NO-SORTING-FOR-TOC": "",
    "NUMBER": "0",
    "TYPE": "Help",
    "NAME": "David Herling's Lectures",
    "FLAGS": [
        "2015/2016!"
    ]
},
{
    "RELATED": [
        "Offer Distinguished From Invitation to Treat",
        "Objective view of Intention and Agreement",
        "Materiality and reliance",
        "Rescission",
        "Common Law Bars to Rescission",
        "Consideration Must Not Be Past",
        "Intention to Create Legal Relations - Conclusion",
        "2. Terms which supplement the contract (warranties etc)",
        "The fraud cases",
        "The doctrine of fundamental breach",
        "Comments.",
        "Fact, as opposed to opinion, belief, intention, or (formerly) law"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span>",
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Perhaps the most fundamental statement which could be made of the law of contract is this; a contract is an agreement, and the courts normally require agreement to arise from the making of an offer by one party and its acceptance by the other. By this means the parties to a contract can be shown to be \u201cad idem\u201d, or \u201cof the same mind\u201d. In other words, they are in agreement.<br>&emsp;&emsp;To identify the circumstances in which agreement is present, one begins by looking for an offer.<br>&emsp;&emsp;This lecture addresses the means by which the courts identify an offer as such. The topic is a fundamental one, because once an offer has been made, both parties will be bound by its terms if the offeree accepts it."
    ],
    "CATEGORY": "Offers",
    "#CATEGORY": "Offers",
    "#SUMMARY": "<span class=\"ud\"><span class=\"bd\">(E) In Sales By Tender</span></span>",
    "CATEGORIES": [
        "Offers"
    ],
    "#NAME": "Offers - Table of Contents",
    "NUMBER": "1",
    "META-SUBJECT": "herling",
    "NAME": "Offers - Introduction",
    "#TYPE": "Table of Contents",
    "TYPE": "Concept"
},
{
    "CATEGORIES": [
        "Offers",
        "Objective view of Intention and Agreement"
    ],
    "NUMBER": "2",
    "TYPE": "Concept",
    "NAME": "Objective view of Intention and Agreement",
    "CATEGORY": "Offers &mdash; Objective view of Intention and Agreement",
    "RELATED": [
        "Offer Distinguished From Invitation to Treat",
        "Offers - Introduction",
        "Fact, as opposed to opinion, belief, intention, or (formerly) law",
        "Incomplete and Vague Agreements - Introduction",
        "Fraudulent, negligent and innocent misrepresentation",
        "Misrepresentation (1) - Introduction",
        "Doctrine of Implied Assumpsit",
        "Making the election to affirm or terminate",
        "Negligent Misrepresentation",
        "Substantial performance",
        "Interpretation and precedent",
        "The doctrine of fundamental breach"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Objective view of Intention and Agreement</span></span><br>&emsp;&emsp;What is an offer? Before this question can be addressed, there is a preliminary issue which must be explored. What perspective is adopted by the courts when they analyse the parties&#8217; dealings in order to identify offer and acceptance? Is the status of the parties&#8217; communications with each other analysed objectively, by reference to their ostensible meaning, or is it deduced from the parties&#8217; subjective intentions? The applicable rule is the first of those two approaches. The parties&#8217; \u201cintentions\u201d are objectively gauged.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">If that is so, and it is actually the <b>appearance</b> rather than the <b>fact</b> of agreement which is required, then the notion of being \u201cof the same mind\u201d is mildly problematic. The parties may be deemed to be in agreement even though actually they are not. </span><br>&emsp;&emsp;<span class=\"it\">The following proposition goes some way towards resolving this tension. Being \u201cad idem\u201d is a broad ideal in contract analysis; for example, it is perfectly proper to point out that the parties are not \u201cad idem\u201d when there is open disagreement between them. However, ostensible agreement may prevail over actual but latent misunderstanding. The ideal of true agreement cannot generally be used to invalidate an ostensible agreement. The reason is that each party must be entitled to rely on what reasonably appears to be other&#8217;s intentions. Private, unexpressed intentions or reservations cannot undermine reasonable grounds for reliance. If it were otherwise, contract law would fail in its duty to promote certainty and predictability within the commercial sphere. </span>"
    ]
},
{
    "CATEGORIES": [
        "Offers",
        "Objective view of Intention and Agreement"
    ],
    "YEAR": "1871",
    "NUMBER": "3",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant, a trainer of racehorses, agreed to buy a quantity of oats, thinking them to be \u201cold\u201d oats. He had seen a sample of the oats. In fact they were new, not old. For that reason he refused to pay for them, and was sued by the plaintiff. At trial, the judge directed the jury to give a verdict in the defendant&#8217;s favour if they found that the oats had been described as \u201cold\u201d, or alternatively if they found if the plaintiff seller had been aware that the defendant believed he was contracting to buy old oats. They found for the defendant, but were not asked to state on which basis. The Court of Appeal ordered a re-trial on the ground that the trial judge&#8217;s direction had been unclear.<br>&emsp;&emsp;The value of the case lies in the judges&#8217; discussion of the direction given to the jury at trial, and the fine distinction that in their view it failed to convey.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The first part of the direction to the jury was unexceptionable. If, as the defendant contended, the plaintiff seller had referred to the oats as \u201cold\u201d, then that would have been materially misleading. The second part of the direction had been unclear (although technically acceptable) because it failed to make an adequate distinction between two possible situations. If the plaintiff had merely been aware that the defendant was buying the oats believing them to be old, and had taken no steps to disabuse him of that belief, then the contract was valid. However, if the plaintiff had known that the defendant thought he had the benefit of a contractual promise that the oats were old, then there would have been no true agreement between the parties, and therefore no contract. The jury could not reliably be assumed to have grasped that fine distinction.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The decision in <i>Smith v Hughes</i> turns upon quite a narrow point of construction, but the judgments lay down broad propositions about the way in which contracting parties&#8217; states of mind impact upon the validity of their dealings. One party may be mistaken about the subject matter of the contract, even to the extent that he would not have entered into the contract had he known the truth, but the contract remains valid. The principle is stated by Blackburn J to be this: \u201cIf, whatever a man&#8217;s real intention may be, he so conducts himself that a reasonable man would believe that he was assenting to the terms proposed by the other party, and that other party upon that belief enters into the contract with him, the man thus conducting himself would be equally bound as if he had intended to agree to the other party&#8217;s terms\u201d. Furthermore, the one party may be aware that the other is making a mistake, but be under no obligation to correct him; still the contract is valid.<br>&emsp;&emsp;It is quite different if one has taken active steps to promote or sustain the mistaken belief; the objective appearance of agreement yields to the subjective knowledge of the true state of affairs. The reason is that deception is now present; naturally no court will collude with it.<br>&emsp;&emsp;It seems that the same result follows where the mistake relates to the terms of the contract and the other knows of the mistake, <i>even though he has done nothing to induce it.</i> Cases of this sort, all involving mistakes as to price, are given below. First, though, be aware of another case in which the doctrine of <i>Smith v Hughes</i> cuts through the confusion."
    ],
    "NAME": "Smith v Hughes",
    "CATEGORY": "Offers &mdash; Objective view of Intention and Agreement",
    "CITATION": "Smith v Hughes (1871) LR 6 QB 597",
    "RELATED": [
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Rose v Pim",
        "Hartog v Colin & Shields",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Payne v Cave",
        "Partridge v Crittenden",
        "Gibson v Manchester City Council",
        "Clifton v Palumbo",
        "Barry v Davies",
        "Carlill v Carbolic Smoke Ball Company"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1953",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This is another case in which objective appearance prevailed over a subjective concern. The plaintiffs were asked by their Egyptian house to acquire \u201cMoroccan horsebeans described here as feveroles\u201d. They asked the defendants&#8217; representative what \u201cfeveroles\u201d were, and were told that they were simply horsebeans. A chain of related supply contracts was then agreed in which the commodity to be supplied was described as \u201chorsebeans\u201d. The eventual buyer found that they were not \u201cfeveroles\u201d, and sought damages. The plaintiffs in the present action were applying for rectification of their contract with the defendants on the basis that it mistakenly referred to \u201chorsebeans\u201d and should have specified \u201cfeveroles\u201d. They failed. The agreement was simply one for the supply of horsebeans.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The judgment of <span class=\"bd\">Denning LJ</span> includes emphatic support for the objective approach to the construction of contracts: \u201cThe parties no doubt intended that the goods should satisfy the inquiry of the Egyptian buyers, namely, \u201chorsebeans described in Egypt as feveroles\u201d. They assumed that they would do so, but they made no contract to that effect. Their agreement, as outwardly expressed, both orally and in writing, was for \u201chorsebeans\u201d. That is all the defendants ever committed themselves to supply; and all that they should be bound to\u201d."
    ],
    "CATEGORY": "Offers &mdash; Objective view of Intention and Agreement",
    "CITATION": "Rose v Pim [1953] 2QB 450",
    "CATEGORIES": [
        "Offers",
        "Objective view of Intention and Agreement"
    ],
    "RELATED": [
        "Hartog v Colin & Shields",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Smith v Hughes",
        "Spencer v Harding",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Chapelton v Barry Urban District Council",
        "Harris v Nickersen",
        "Thornton v Shoe Lane Parking",
        "Barry v Davies",
        "Fisher v Bell",
        "Warlow v Harrison",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd"
    ],
    "NUMBER": "4",
    "TYPE": "Case",
    "NAME": "Rose v Pim",
    "FLAGS": [
        "Denning"
    ]
},
{
    "YEAR": "1939",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The sellers offered Argentine hare skins at a given price per pound. This was a mistake; they had in mind the price per piece, and had therefore quoted at roughly one third of the going rate. The buyer ordered 30,000 hare skins, and sued the sellers when they refused to deliver. The court held that the buyer must have been aware of the sellers&#8217; mistake, and therefore must have been aware that the sellers&#8217; offer did not represent their true intention. Thus there was no agreement between the parties upon which an action could be maintained.<br>&emsp;&emsp;The case is significant because it seems to propose that the subjective knowledge of an error defeats the objective appearance of agreement.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;There was strong evidence in this case that the price of Argentine hare skins was normally quoted per piece, so the court had no difficulty concluding that the buyer must have been aware of the mistake.<br>&emsp;&emsp;Behaviour like that of the buyer here is often described as the \u201csnapping up\u201d of an offer. It occurs where one party purports to accept an offer which he knows it was not the other&#8217;s true intention to make. Here, it seems to work to say that the parties were not \u201cad idem\u201d. However some care is needed in order to reconcile this principle with some of what was said in <i>Smith v Hughes</i>. There, it would have been acceptable for the seller of new oats to enforce a bargain with a buyer who obviously thought the oats were old. Is that known mistake really different from the known mistake in <i>Hartog</i>? It seems that it is. The allowable mistake in <i>Smith v Hughes</i> can be regarded as one of mere motive; the buyer is making a wrong, unintended, unwise deal, maybe even to the certain knowledge of the seller, but he is under no mistake as to the terms of the deal itself. The invalidating mistake in <i>Hartog</i> concerns one of the most fundamental terms of the deal \u2013 the price.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Nevertheless, it is easy to lose sight of this distinction. The reason is that the court&#8217;s express analysis in Hartog focuses quite strongly on the state of mind of the would-be buyer of hare skins; he must have known that the other was making a mistake. It is tempting to conclude that it is the presence of this knowledge (with its connotations of impropriety) that drives the decision. In a more recent case, Chwee Kin Kong v Digilandmall.com Pte [2004] SGHC 71, there is express emphasis on the state of mind of the would-be snappers up. When a price for laser printers was mistakenly given as 66 rather than 3,854 Singaporean dollars, buyers were said to have moved \u201cat the dead of night\u201d and with \u201cindecent haste\u201d to place huge orders before the mistake could be corrected. Unsurprisingly, they were not successful in their attempt to sue for loss of profits when the printers were not delivered. But on a proper analysis, the reason they fail is <b>not</b> that they attempt to take unconscionable advantage of the mistaken seller. Nor is it that the seller&#8217;s mistake is clear. They fail because the mistake relates to a term of the contract so that the parties are never in agreement. If the mistake had been equally serious and equally obvious, but related only to something beyond the terms of the contract, the result ought in theory to be different.</span><br>&emsp;&emsp;<span class=\"it\">Why does this distinction seem to get overlooked? The answer is that it is always going to be easier to talk about one party&#8217;s bad behaviour than about the fine and abstract difference between two types of mistake. This is often so in law; the surface discourse may not wholly connect with the real principles in play.</span><br>&emsp;&emsp;<span class=\"it\">Further permutations of mistake affecting the formation of the contract will be examined later (during term 2) when the various types of contractual mistake are in issue. The cases on \u201cmutual mistake\u201d, where the parties are at cross-purposes, and \u201ccommon mistake\u201d, where they share a single delusion, take the discussion forward. However, you may already be wondering why so much should seem to turn on the distinction between a mistake about the content of a contract, and a mistake about its context. <span class=\"bd\">Treitel</span> comments that \u201cthis distinction seems to be generally accepted, but the reason for it is not easy to see\u201d (para 8-044).</span><br>&emsp;&emsp;<span class=\"it\">There is another well-known case on the attempted snapping-up of an offer \u2013 <i>Centrovincial Estates plc v Merchant Investors Assurance Company Ltd. </i> A lot of prominence is given to it by <span class=\"bd\">McKendrick</span>, even though it does not go far beyond the two cases set out above. However, a procedural aspect of the case makes it rather hard to understand. For some help with the difficulty, read on.</span>"
    ],
    "CATEGORY": "Offers &mdash; Objective view of Intention and Agreement",
    "CITATION": "Hartog v Colin &amp; Shields [1939] All ER 566",
    "CATEGORIES": [
        "Offers",
        "Objective view of Intention and Agreement"
    ],
    "RELATED": [
        "Smith v Hughes",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Rose v Pim",
        "Barry v Davies",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "Harvey v Facey",
        "Warlow v Harrison",
        "Clifton v Palumbo",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Chapelton v Barry Urban District Council",
        "Gibson v Manchester City Council",
        "Carlill v Carbolic Smoke Ball Company"
    ],
    "NUMBER": "5",
    "TYPE": "Case",
    "NAME": "Hartog v Colin & Shields",
    "FLAGS": [
        "Treitel",
        "McKendrick"
    ]
},
{
    "CATEGORIES": [
        "Offers",
        "Objective view of Intention and Agreement"
    ],
    "YEAR": "1983",
    "NUMBER": "6",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;During negotiations over an existing lease, the landlords&#8217; solicitors wrote to the lessees proposing that the \u201ccurrent market rental value\u201d of the property should be contractually agreed to be \u00a365,000. After the lessees had agreed, the landlords stated that they had made a mistake, and had meant to propose the sum of \u00a3126,000. The lessees objected that \u00a365,000 was the contractually agreed figure. The landlords brought an action against them, seeking a declaration that there was no agreement. As part of this action, they sought summary judgment. The Court of Appeal held that summary judgment could not be obtained on these facts. Therefore, at this interlocutory stage, the lessees won.",
        "<span class=\"ud\"><span class=\"bd\">Explanation</span></span><br>&emsp;&emsp;Since the first figure proposed by the landlords was so much lower than the figure they had meant to propose, this looks like a typical snapping-up case. It is therefore difficult at first glance to understand why it goes against the landlords. The key to it is this. An application for summary judgment (ie. a quick victory) can be made where it is possible to show at a preliminary hearing that the other side can have no arguable defence to one&#8217;s claim, and therefore should not be allowed to proceed to a full trial. Here, the landlords conceded that the case would need to proceed to full trial for it to be established on the evidence whether the lessees did or did not know that a mistake was being made. That concession was fatal to their application for summary judgment. Therefore the lessees successfully defended this claim even though it may have been likely that they would lose when the matter was more closely investigated at trial.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Is there in fact any difference between the perspectives of Smith v Hughes and Rose v Pim on the one hand, and Hartog v Colin &amp; Shields and Centrovincial Estates plc v Merchant Investors on the other? At a first glance, one would think so. The first two cases seem to support an objective analysis, to which appearance rather than subjective intention matters. The second two cases seem to establish a limit to that perspective; there can be no reliance on objective appearance when it is subjectively known to be false.</span><br>&emsp;&emsp;<span class=\"it\">On closer consideration, however, the two perspectives can be shown to be one and the same. It is the second \u2013 the subjective long-stop \u2013 which needs to be examined more closely. Technically, the factor which disentitles the would-be buyers in Hartog and Digilandmall from accepting what they are mistakenly offered may not be their realisation of the mistake. Instead it may be that a reasonable person in their position would realise that a mistake had been made. The long-stop is not subjective; it is actually an extension of the basic rule itself. The status of the parties&#8217; communications is determined objectively, and that perspective may reveal an offer in law even though there was no subjective intention to make one, or negate the existence of an offer which was subjectively but mistakenly intended. Appearance governs.</span>"
    ],
    "NAME": "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
    "CATEGORY": "Offers &mdash; Objective view of Intention and Agreement",
    "CITATION": "Centrovincial Estates v Merchant Investors Assurance Company Ltd [1983] Com LR 158",
    "RELATED": [
        "Rose v Pim",
        "Smith v Hughes",
        "Hartog v Colin & Shields",
        "Harvey v Facey",
        "Gibson v Manchester City Council",
        "Thornton v Shoe Lane Parking",
        "Carlill v Carbolic Smoke Ball Company",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Chapelton v Barry Urban District Council",
        "Barry v Davies",
        "Warlow v Harrison",
        "Partridge v Crittenden"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Offers",
        "Offer Distinguished From Invitation to Treat"
    ],
    "NUMBER": "7",
    "TYPE": "Concept",
    "NAME": "Offer Distinguished From Invitation to Treat",
    "CATEGORY": "Offers &mdash; Offer Distinguished From Invitation to Treat",
    "RELATED": [
        "Objective view of Intention and Agreement",
        "Offers - Introduction",
        "The special cases",
        "The basics",
        "Transmission of Acceptance",
        "Unilateral Mistake",
        "Anticipatory Breach",
        "Reduction of the contract to writing",
        "Characteristics of Promissory Estoppel",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "Entire and severable obligations",
        "The contractual nature of the document / expectations of the parties"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Offer Distinguished From Invitation to Treat</span></span><br>&emsp;&emsp;What is the nature of an offer? To put it in preliminary and informal terms, we are looking for a proposal which indicates the maker&#8217;s willingness to be legally bound by acceptance, and one which is sufficiently clear and complete to be capable of acceptance.<br>&emsp;&emsp;An offer may be made in elaborately formal terms, or (at the opposite extreme) it may be brief, basic, and made without any preliminaries. However, very often the parties will move towards agreement, discussing the possibility of doing business together before any offer is made. These preliminary discussions are known as \u201cinvitations to treat\u201d, and may well take the form of enquiries, obviously evincing no intention to be bound. Although it is essential to be able to distinguish between invitations to treat and offers, it is not always straightforward. A considerable body of case-law exists to chart the distinction.<br>&emsp;&emsp;Before we examine the cases on the distinction, there is an important preliminary point to be made. \u201cOffer\u201d, as a common English word, carries with it certain connotations. Be careful about carrying all those connotations over into the sphere of contractual analysis. For example, in the context of a sale of goods, one might naturally think that it is the seller of the goods who is offering them for sale. Legally speaking, the seller <i>may </i>be the offeror, but not necessarily so. A legal analysis may conclude that the buyer is the offeror. It is best to approach the cases with an open mind on this point; the offeror may be the active, initiating party within the negotiation, or not. Similarly, do not be dictated to by the parties&#8217; own use of the word \u201coffer\u201d (or \u201cacceptance\u201d). Legal analysis will take account of the parties&#8217; view of what they are doing, but will not be fettered by it. The applicable analysis is objective, nor subjective."
    ]
},
{
    "CATEGORIES": [
        "Offers",
        "(A) Generally"
    ],
    "YEAR": "1968",
    "NUMBER": "8",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant had placed an advertisement in the periodical \u201cCage and Aviary Birds\u201d, reading \u201cBramblefinch cocks, Bramblefinch hens 25 s each\u201d. He was prosecuted by the RSPCA under the Protection of Birds Act 1954 which made it an offence unlawfully to offer for sale a wild live bird. The magistrates convicted him of the offence. The High Court quashed the conviction. The advertisement was merely an invitation to treat, not an offer to sell.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The High Court&#8217;s reasoning is that the Act&#8217;s reference to \u201coffering for sale\u201d must be understood within the context of contract law, and there is settled case-law to show that an advertisement of goods for sale does not normally amount to an offer in the legal sense. To this, one might object that Parliament&#8217;s intention in passing the relevant section of the Act was almost certainly to punish people who tried to sell wild birds. The defendant in this case was just such a person, but because in the eye of contract law it is the would-be purchaser here who makes an offer to buy, the seller goes unpunished."
    ],
    "NAME": "Partridge v Crittenden",
    "CATEGORY": "Offers &mdash; (A) Generally",
    "CITATION": "Partridge v Crittenden [1968] 1 WLR 1204",
    "RELATED": [
        "Fisher v Bell",
        "Chapelton v Barry Urban District Council",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "Thornton v Shoe Lane Parking",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Clifton v Palumbo",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Gibson v Manchester City Council",
        "Hartog v Colin & Shields",
        "Barry v Davies"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Offers",
        "(A) Generally"
    ],
    "YEAR": "1961",
    "NUMBER": "9",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This was a similar case, heard a few years before <i>Partridge v Crittenden</i>. A shopkeeper displayed a flick knife in the window of his shop with a ticket behind it which read \u201cEjector knife- 4s\u201d. He was charged under section 1 (1) of the Restriction of Offensive Weapons Act 1959, which made it an offence to offer such a knife for sale. It was held that he had not offered the knife for sale. The knife and the label merely constituted an invitation to treat.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;If <i>Partridge v Crittenden</i> was a difficult case to swallow, <i>Fisher v Bell</i> beggars belief. What was section 1 (1) of the Act passed by Parliament for, if not to suppress the selling of offensive weapons? By whatever reasoning could judges so thoroughly stultify its intention?<br>&emsp;&emsp;An explanation is given in the judgment of Lord Parker CJ: \u201c\u2026any statute must of course be looked at in the light of the general law of the country. Parliament in its wisdom in passing an Act must be taken to know the general law. It is perfectly clear that according to the ordinary law of contract the display of an article with a price on it in a shop window is merely an invitation to treat. It is in no sense an offer for sale the acceptance of which concludes a contract\u2026.<br>&emsp;&emsp;In those circumstances I am driven to the conclusion, though I confess reluctantly, that no offence was here committed. At first sight it sounds absurd that knives of this sort cannot be manufactured, sold, hired, lent or given, but apparently they can be displayed in shop windows; but even if this \u2013 and I am by no means saying it is \u2013 is a casus omissus, it is not for this court to supply the omission. I am mindful of the strong words of Lord Simonds in <i>Magor and St Mellons Rural District Council v Newport Corporation</i>\u2026. In that case one of the Lords Justices in the Court of Appeal\u2026had, in effect, said that the court having discovered the supposed intention of Parliament must proceed to fill in the gaps \u2013 what the Legislature has not written the court must write \u2013 and in answer to that contention Lord Simonds in his speech [in the House of Lords] said\u2026 \u201cIt appears to me to be a naked usurpation of the legislative function under the thin guise of interpretation\u201d.<br>&emsp;&emsp;The need to preserve certainty in the law of contract goes some way to explaining these surprising decisions, but why did the law tend to regard advertisements as mere invitations to treat rather than offers in the first place?"
    ],
    "NAME": "Fisher v Bell",
    "CATEGORY": "Offers &mdash; (A) Generally",
    "CITATION": "Fisher v Bell [1961] 1 QB 394",
    "RELATED": [
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "Chapelton v Barry Urban District Council",
        "Partridge v Crittenden",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Thornton v Shoe Lane Parking",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Barry v Davies",
        "Warlow v Harrison",
        "Spencer v Harding",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Clifton v Palumbo"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1896",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;For the purposes of deciding an issue of liability to tax, it was necessary to determine whether a trade was being carried on in the United Kingdom or not. This required the House of Lords to decide whether an offer was made when a price list of wines was sent out by a wine merchant. It was held that the list was merely an invitation to treat, not an offer.<br>&emsp;&emsp;Lord Herschell: \u201cThe transmission of such a price-list does not amount to an offer to supply an unlimited quantity of the wine described at the price named, so that as soon as an order is given there is a binding contract to supply that quantity. If it were so, the merchant might find himself involved in any number of contractual obligations to supply wine of a particular description which he could be quite unable to carry out, his stock of wine of that description being necessarily limited.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The value which is being upheld here is business sense, or commercial convenience. Merchants must be able to alert prospective purchasers to their presence in the market without the risk of ending up bound to perform an impossible multiplicity of contracts from a limited stock. However, convincing though that reasoning may be, does it flout any other interest? Surely that of a prospective purchaser, who receives what is effectively an inducement to buy, duly places an order, and finds himself without any remedy in contract law if the order is not supplied.<br>&emsp;&emsp;The rejoinder to such a person&#8217;s complaint would be framed in terms of the objective test of contractual intention. A reasonable individual in his position would not have imagined that the wine merchant was making an offer to sell, because he would have judged the matter contextually and envisaged the difficulties which Lord Herschell spells out.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">How satisfactory a response would this be? If the law had taken a different view of the status of advertisements, wine merchants and others would quickly have learnt that they had only to insert the words \u201csubject to availability\u201d into their price-lists to be fully protected. Trade could be accomplished more expeditiously, because there would be no need for acknowledgment of the customer&#8217;s order, and the customer would be better protected. The competing merits of the law as it stands and as it might have developed seem fairly finely balanced. <span class=\"bd\">Treitel</span> envisages that in special circumstances the general rule might be disapplied. Commenting on Grainger &amp; Sons v Gough, he suggests (footnote to para 2-010) \u201cquaere whether a price-list sent on request to a single customer could be an offer\u201d.</span><br>&emsp;&emsp;<span class=\"it\">However there is a further rationale for the usual view of advertisements as mere invitations to treat. It was memorably expressed in a nineteenth century case when counsel submitted to Parke B that \u201cif a man advertises goods at a certain price, I have a right to go into his shop and demand the article at the price marked\u201d. Parke B replied: \u201cNo; if you do, he has a right to turn you out\u201d. The merchant has an interest in being the offeree rather than the offeror, and therefore in being free to accept or reject offers made to him. By the time of the following case, however, it is the interest of the customer which drives the decision.</span>"
    ],
    "CATEGORY": "Offers &mdash; (A) Generally",
    "CITATION": "Grainger &amp; Sons v Gough (Surveyor of Taxes) [1896] AC 85",
    "CATEGORIES": [
        "Offers",
        "(A) Generally"
    ],
    "RELATED": [
        "Fisher v Bell",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "Partridge v Crittenden",
        "Chapelton v Barry Urban District Council",
        "Thornton v Shoe Lane Parking",
        "Harvey v Facey",
        "Spencer v Harding",
        "Warlow v Harrison",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Smith v Hughes",
        "Carlill v Carbolic Smoke Ball Company"
    ],
    "NUMBER": "10",
    "TYPE": "Case",
    "NAME": "Grainger & Sons v Gough (Surveyor of Taxes)",
    "FLAGS": [
        "Treitel"
    ]
},
{
    "CATEGORIES": [
        "Offers",
        "(A) Generally"
    ],
    "YEAR": "1953",
    "NUMBER": "11",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Boots, the defendants, ran a self-service shop in which certain drugs were laid out on shelves to which shoppers had access. They selected the goods they wished to buy, placed them in a wire basket, and paid for them at a till, where a registered pharmacist oversaw the transaction and was authorised to prevent a customer from buying a product. Boots was prosecuted under the Pharmacy and Poisons Act 1933, s 18 (1), which provided that it was unlawful to sell items scheduled by the Act \u201cunless the sale [was] effected by or under the supervision of, a registered pharmacist\u201d. The Court of Appeal held that the offence had not been committed, since the sale took place at the till and was therefore duly supervised.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Since the Act&#8217;s reference to \u201csale\u201d is naturally understood to mean \u201ccontract of sale\u201d (see the discussion of <i>Partridge v Crittenden</i> and <i>Fisher v Bell</i> above) the disposal of this case required the Court of Appeal to decide at what point offer and acceptance came together to constitute the contract of sale. Therefore the judgments turn upon express discussion of the nature and timing of invitation to treat, as well as offer and acceptance, in this type of shopping.<br>&emsp;&emsp;The plaintiffs contended that the goods on the shelves constituted an offer which customers accepted by selecting them and placing them in the baskets provided. The Court of Appeal held that this was incorrect; the display of goods amounted to an invitation to treat. It was therefore the customer who offered to buy by presenting selected goods at the till, and the cashier who accepted that offer by ringing up the price of the goods. The consequence of accepting the plaintiffs&#8217; argument was explained by Somervell LJ: \u201cThe Lord Chief Justice, I think, expressed one of the most formidable difficulties in the way of the plaintiffs&#8217; contention when he pointed out that, if the plaintiffs are right, once an article has been placed in the receptacle the customer himself is bound and would have no right, without paying for the first article, to substitute an article which he later saw of a similar kind and which he perhaps preferred. I can see no reason for implying from this self-service arrangement any implication other than that which the Lord Chief Justice found in it, namely, that it is a convenient method of enabling customers to see what there is and choose, and possibly put back and substitute, articles which they wish to have, and then to go up to the cashier and offer to buy what they have so far chosen. On that conclusion the case fails, because it is admitted that there was supervision in the sense required by the Act and at the appropriate moment of time\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The established case-law on the status of advertisements and displays of goods leads directly to the conclusion of the court in the Boots case. However, the judges do not confine themselves to following precedent, but go further to analyse the mechanics of self-service shopping. Although it is never expressly stated, there is a matter of great importance at stake here and it informs the analysis. This type of shopping, still fairly new at the time of the litigation, is clearly convenient (Somervell LJ&#8217;s description). Its development furthers trade. It has to be made to work in legal terms. </span><br>&emsp;&emsp;<span class=\"it\">A court which failed to make it work would be neglecting its responsibility. Had the case-law suggested that the display of goods was an offer, and that the customer would be bound the moment he took possession of an item, it would have obstructed the development of a trading model which \u2013 as it turns out \u2013 was so convenient that it was to revolutionise the retail industry. Had it been necessary, a competent court would probably have broken away from inconvenient precedents to reach a decision which enabled self-service trade to go ahead without legal hindrance.</span><br>&emsp;&emsp;<span class=\"it\">However, some interesting if minor problems do remain, and are worth considering from a legal standpoint. Poole (Casebook on Contract Law) asks \u201cWhat is the position if there is a non-self-service counter inside a supermarket? For example, I request that a joint of beef be cut to my specifications but before I reach the cash desk I change my mind. Has a contract of sale already been concluded?\u201d</span><br>&emsp;&emsp;<span class=\"it\">Not every display of goods is regarded legally as an invitation to treat, however. You will notice that the court&#8217;s analysis in the <i>Boots</i> case works because (on a very simple level) there are enough stages to the transaction to accommodate the three divisions of the invitation/offer/acceptance analysis. Where there are less than three stages, something has to give. Therefore, as the next case quite memorably establishes, vending machines cannot be categorised as invitations to treat even though they would seem remarkably like displays of goods.</span>"
    ],
    "NAME": "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
    "CATEGORY": "Offers &mdash; (A) Generally",
    "CITATION": "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd [1953] 1 QB 401",
    "RELATED": [
        "Chapelton v Barry Urban District Council",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Partridge v Crittenden",
        "Thornton v Shoe Lane Parking",
        "Fisher v Bell",
        "Harris v Nickersen",
        "Payne v Cave",
        "Hartog v Colin & Shields",
        "Clifton v Palumbo",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Carlill v Carbolic Smoke Ball Company",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1971",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This is primarily a case on the incorporation of terms into contracts, but that topic is closely linked to the analysis of contract formation. A motorist drove up to the entrance of a car-park. As he did so, a light changed from red to green, and a machine provided a ticket which the motorist took before driving on. In denying that exclusionary words printed on the ticket could be regarded as terms of the contract, Lord <span class=\"bd\">Denning MR</span> explained that the ticket came after the contract was already complete. Therefore, according to basic principles, the ticket could not modify it.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Denning gave the following account of the mechanics of contract formation in this situation: \u201cThe customer pays his money and gets a ticket. He cannot refuse it. He cannot get his money back. He may protest to the machine, even swear at it. But it will remain unmoved. He is committed beyond recall. He was committed at the very moment when he put his money into the machine. The contract was concluded at that time. It can be translated into offer and acceptance in this way: the offer is made when the proprietor of the machine holds it out as being ready to receive the money. The acceptance takes place when the customer puts his money into the slot\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">To explain this result, as I did earlier, by pointing out that there are not enough stages to allow for a three-part model of contract formation is not wrong, but it is not the most trenchant of analyses. It would be better to view the matter as follows. In the Thornton scenario, there is only one moment at which a choice is made. That choice has to be labelled the acceptance, because there can be no acceptance without conscious choosing. Any analysis, in any circumstances, which fails to match a purported acceptance to a factual choice, must be wrong as a matter of principle.</span><br>&emsp;&emsp;<span class=\"it\">Does it matter that the Thornton analysis leaves no room for an invitation to treat? No; as stated earlier, invitations to treat for most purposes have no legal status, and the process of contract formation can perfectly well begin with the making of an offer out of the blue.</span><br>&emsp;&emsp;<span class=\"it\">Treat the next case as an exercise. More than one analysis could be applied to the facts. The correct analysis is presumably the one which is best adapted to common sense, commercial convenience, and principle. That is not to say that a perfect solution will be available. A balance may have to be struck.</span>"
    ],
    "CATEGORY": "Offers &mdash; (A) Generally",
    "CITATION": "Thornton v Shoe Lane Parking [1971] 2 QB 163",
    "CATEGORIES": [
        "Offers",
        "(A) Generally"
    ],
    "RELATED": [
        "Partridge v Crittenden",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "Chapelton v Barry Urban District Council",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Fisher v Bell",
        "Hartog v Colin & Shields",
        "Barry v Davies",
        "Spencer v Harding",
        "Carlill v Carbolic Smoke Ball Company",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Payne v Cave",
        "Harvey v Facey"
    ],
    "NUMBER": "12",
    "TYPE": "Case",
    "NAME": "Thornton v Shoe Lane Parking",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Offers",
        "(A) Generally"
    ],
    "YEAR": "1940",
    "NUMBER": "13",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Again, this is a case which is chiefly concerned with the incorporation of terms into contracts, but again that is a matter very closely connected with contract formation. The Council let out deck chairs on a beach. The charge was displayed on a notice by a pile of deck chairs, together with the information that tickets could be obtained from an attendant. The plaintiff sat on a deck chair, which gave way and caused him injury. The Council sought to defend itself by reference to exclusionary words printed on the ticket available from the attendant.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The question here is whether the contract is concluded before or after the customer has the opportunity to see the ticket and its wording. The answer to that question depends on which of the following analyses is correct. (1) The pile of deck chairs is an invitation to treat. The customer makes an offer by sitting down on one of them. The deck chair attendant accepts that offer when he comes round to collect the customer&#8217;s money and provides the ticket. (2) The pile of deck chairs is an offer (there is no invitation to treat). The customer accepts by sitting down on a deck chair. The ticket, when it comes, is post-contractual, and can be regarded as a mere receipt. Its wording therefore has no legal effect.<br>&emsp;&emsp;In the first of these accounts, the pile of deck chairs is not difficult to compare with the display of goods in a shop window. There are enough stages to the transaction to match the acceptance with an act of choice by the attendant. However, the first account is not correct.<br>&emsp;&emsp;The court regarded the pile of deck chairs as the offer and the act of sitting down on one of them as the acceptance. The reason was that a customer might sit for an hour or more before the attendant came round for the money. On the first analysis, the customer would be free to get up and walk away at any point without being required to pay (his offer would not yet have been accepted). Perhaps even as the deck chair attendant approached.... Would deck chairs conveniently be provided in public places if that were the law?<br>&emsp;&emsp;You will see that there is room for a little imagination in matching the offer and acceptance analysis to new facts, even though decided cases may give a firm steer in one direction.<br>&emsp;&emsp;Before we turn to consider the way the mechanics of contract formation work in a slightly different factual context (cases involving land) there is a further important category of cases to study. They may often involve advertisements, but work differently from the authorities we have looked at so far. In fact they are regarded as a completely different type of contractual arrangement \u2013 the \u201cunilateral contract\u201d. The next decision, which is the leading authority on this category, is also one of the most famous cases in English contract law."
    ],
    "NAME": "Chapelton v Barry Urban District Council",
    "CATEGORY": "Offers &mdash; (A) Generally",
    "CITATION": "Chapelton v Barry Urban District Council [1940] 1 KB 532",
    "RELATED": [
        "Fisher v Bell",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Thornton v Shoe Lane Parking",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "Partridge v Crittenden",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Payne v Cave",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Harvey v Facey",
        "Warlow v Harrison",
        "Clifton v Palumbo",
        "Hartog v Colin & Shields"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Offers",
        "(B) In Unilateral Contracts"
    ],
    "YEAR": "1893",
    "NUMBER": "14",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendants placed an advertisement in the Pall Mall Gazette, inviting people to purchase their product, the Carbolic Smoke Ball. This was a medical preparation which, as the advertisement explained, would protect its users against contracting influenza. The advertisement also stated that a reward of \u00a3100 would be paid to any person who caught influenza despite using the smoke ball as directed, and that the company had deposited \u00a31000 with their bankers \u201cshewing our sincerity in this matter\u201d. The plaintiff duly used the smoke ball, caught influenza, claimed the reward, and was refused it. The Court of Appeal, affirming the judgment at first instance, held that the Company was contractually obliged to pay.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The aspect of this case which is chiefly relevant at the moment is the legal status of the Company&#8217;s advertisement. As we have seen, advertisements of goods for sale are generally regarded as invitations to treat rather than offers. This advertisement proved to be an offer. In fact, within the context of the unilateral contract model, advertisements are generally regarded as offers.<br>&emsp;&emsp;To put it very simply, a unilateral contract is one in which the acceptance expected is not to take the form of assent, but of a specified action. This is often referred to as the model of \u201ca promise for an act\u201d. The offer usually is to pay money (or to confer some other benefit) if that action is performed.<br>&emsp;&emsp;The difference between bilateral and unilateral contracts \u2013 a first look<br>&emsp;&emsp;We will be examining some aspects of unilateral contracts in more detail later (in particular what constitutes completed acceptance), but a concise account of the fundamental difference between bilateral and unilateral models can be given here. In the bilateral contract, the parties reach an agreement, usually through the exchange of promises which at the moment we are discussing in terms of offer and acceptance. Once the acceptance is made, the parties are legally bound; each can rely on the other&#8217;s future performance, because each will have a remedy in contract law if the other fails to perform. Bilateral contracts have occasionally been labelled \u201csynallagmatic\u201d contracts, because the parties are equally bound in law.<br>&emsp;&emsp;The legal ramifications of unilateral contracts are rather different. Since acceptance takes the form of a specified action rather than the immediate giving of a return promise, there is no reaching of agreement, and the offeror is not bound until the required action is performed (or at least a start has been made upon its performance). Still more strikingly, the offeree is never bound to the offeror, and seems to be able to desist from performance at will.<br>&emsp;&emsp;Bilateral contracts have the great advantage of promoting certainty, because they make the other party&#8217;s behaviour predictable. Unilateral contracts, by contrast, are better used to act as inducements to people to do what they might otherwise not think it worth their while to do. Unilateral contracts are sometimes known as \u201cif\u201d contracts, and tend to amount to this proposition; if you do the following specified act, I will give you a reward. In fact a good many unilateral contract cases concern the offer of rewards. In reward cases, in particular, the offeror may have no interest in who performs the specified act. The point is to provide an inducement generally so that the act is more likely to be performed. Thus offers of unilateral contracts are often \u201coffers to the whole world\u201d, advertised widely, which the person who performs the specified action will thereby accept.<br>&emsp;&emsp;However, they do not have to be offers to the whole world. There are cases in which a promise is made to one party by another while some larger transaction is afoot. Where the promise is made conditional upon the performance of an act, rather than upon the communication of acceptance, it may be interpreted as the offer of a unilateral contract. It may bind the promisor when the act is performed even while the over-arching transaction is not yet complete. For examples, see the cases at the end of this lecture.<br>&emsp;&emsp;As attention moves from cases mainly concerned with displays of goods to cases whose subject matter is land, the rules of the analysis do not change. However, the focus very subtly does begin to shift, away from the timing of the offer, and towards the certainty and completeness which the law requires of a valid offer. The reason for that is that the intention to sell is not difficult to deduce in cases involving goods, price lists and advertisements; the important enquiry is when and how that intention is legally manifested. It is otherwise where the subject-matter of a deal is land. The courts traditionally regard land as unique and not so readily traded. An intention to sell land is not lightly imputed to its owner. The rules of offer and acceptance are arguably applied with a degree of caution to promote certainty and completeness in property dealings. In some of the decided cases, it may be questioned whether they are applied correctly."
    ],
    "NAME": "Carlill v Carbolic Smoke Ball Company",
    "CATEGORY": "Offers &mdash; (B) In Unilateral Contracts",
    "CITATION": "Carlill v Carbolic Smoke Ball Company [1893] 1 QB 256",
    "RELATED": [
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Harvey v Facey",
        "Chapelton v Barry Urban District Council",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Rose v Pim",
        "Gibson v Manchester City Council",
        "Clifton v Palumbo",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Fisher v Bell",
        "Thornton v Shoe Lane Parking",
        "Warlow v Harrison",
        "Harris v Nickersen"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Offers",
        "(C) In Contracts Involving Land"
    ],
    "YEAR": "1893",
    "NUMBER": "15",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The following series of telegrams concerning an estate in Jamaica passed between the parties. From H to F: \u201cWill you sell us Bumper Hall Pen? Telegraph lowest cash price\u201d. From F to H: \u201cLowest price for Bumper Hall Pen \u00a3900\u201d. From H to F: \u201cWe agree to buy Bumper Hall Pen for the sum of nine hundred pounds asked by you. Please send us your title deed in order that we may get early possession\u201d. Facey later declined to complete the sale. The Privy Council held that he could not be compelled to do so, since no contract had arisen from the exchange of telegrams. H had asked two questions, the first concerning F&#8217;s willingness to sell, and the second as to price. F had answered only the second of those questions, and that communication could not therefore be regarded as an offer to sell. It followed that H&#8217;s reply could not be construed as an acceptance.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;It would be mildly surprising if land could be bought and sold by an exchange as laconic as this (though we should bear in mind that the mode of communication precluded elaborate draftsmanship). And yet one may still wonder at the Privy Council&#8217;s interpretation of Facey&#8217;s reply to Harvey&#8217;s first telegram. It was clear why Harvey was asking about the price. He wanted to buy. It was unclear why Facey would have stated the price in response to Harvey&#8217;s telegram, unless he was content to sell. If he didn&#8217;t want to sell, one would have expected him either not to reply, or to say \u201cBumper Hall Pen not for sale\u201d. In the circumstances, and adopting the perspective of a reasonable person in Harvey&#8217;s position, would you not have interpreted Facey&#8217;s response as an offer capable of acceptance?"
    ],
    "NAME": "Harvey v Facey",
    "CATEGORY": "Offers &mdash; (C) In Contracts Involving Land",
    "CITATION": "Harvey v Facey [1893] AC 552",
    "RELATED": [
        "Clifton v Palumbo",
        "Gibson v Manchester City Council",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Chapelton v Barry Urban District Council",
        "Warlow v Harrison",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Thornton v Shoe Lane Parking",
        "Spencer v Harding",
        "Payne v Cave",
        "Smith v Hughes",
        "Harris v Nickersen",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Offers",
        "(C) In Contracts Involving Land"
    ],
    "YEAR": "1944",
    "NUMBER": "16",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff wrote to the defendant (without legal assistance) \u201cI\u2026am prepared to offer you or your nominee my Lyneham estate for \u00a3600,000\u2026 I also agree that a reasonable and sufficient time shall be granted to you for the examination and consideration of all the data and details necessary for the preparation of the Schedule of Completion\u201d. The defendant later purported to accept this proposal. Held, by the Court of Appeal, that this was merely a preliminary statement as to price, rather than an offer capable of acceptance.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Greene MR explained the court&#8217;s view of the situation as follows: \u201cThere is nothing in the world to prevent an owner of an estate of this kind contracting to sell it to a purchaser, who is prepared to spend so large a sum of money, on terms written out on a half sheet of note paper of the most informal description and even, if he likes, on unfavourable conditions. But I think it is legitimate, when approaching the construction of a document of this kind, containing phrases and expressions of doubtful significance, to bear in mind that the probability of parties entering into so large a transaction, and finally binding themselves to a contract of this description couched in such terms, is remote. If they have done it, they have done it, however unwise and however unbusinesslike it may be. The question is, Have they done it?\u201d.<br>&emsp;&emsp;Lord Greene&#8217;s statement focuses on the construction of the purported offer, since this was the question for the court&#8217;s determination. The editor of the All England Reports, providing a comment on the decision, lays more emphasis on the context of the transaction: \u201cThe word \u201coffer\u201d when used in relation to price by one of the parties to negotiations for the sale of property is not necessarily used as indicating the intention to make a contract on acceptance by the other party. It may be only one element in protracted discussions and its precise effect will depend on the construction of the particular document in which it appears, together with a consideration of the surrounding circumstances. Here it was used by a layman in reference to a large and complicated deal in real property. The document also contained a reference to the preparation of a \u201cschedule of completion\u201d and this is construed to mean the formal contract upon which the solicitors were actually engaged. The letter containing the word \u201coffer\u201d therefore did not amount to a binding offer to sell\u201d."
    ],
    "NAME": "Clifton v Palumbo",
    "CATEGORY": "Offers &mdash; (C) In Contracts Involving Land",
    "CITATION": "Clifton v Palumbo [1944] 2 All ER 497",
    "RELATED": [
        "Harvey v Facey",
        "Gibson v Manchester City Council",
        "Harris v Nickersen",
        "Hartog v Colin & Shields",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Thornton v Shoe Lane Parking",
        "Warlow v Harrison",
        "Partridge v Crittenden",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Fisher v Bell"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1978",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Pursuant to its policy of selling its council housing to tenants, the council sent Mr Gibson a letter stating that \u201cthe corporation may be prepared to sell the house to you at the purchase price of \u00a32725\u2026\u201d. The letter provided that it was not to be regarded as a firm offer of a mortgage, and went on: \u201cIf you would like to make a formal application to buy your council house, please complete the enclosed application form and return it to me as soon as possible\u201d. Mr Gibson filled in the form but left the purchase price blank, asking that certain necessary repairs should be taken into account to diminish the price. The council replied that the state of the property had already been taken into account in the fixing of the price. Mr Gibson then wrote back on 18 March asking to proceed with the purchase in accordance with his original application. Political control of the council later changed and the new policy was that sales would be completed only where the council was legally obliged to proceed. Mr Gibson sought an order of specific performance, obtained it in the Court of Appeal, but lost on the council&#8217;s appeal to the House of Lords. No binding contract had come into existence. The council&#8217;s letter to Mr Gibson did not evince the intention to be bound by his acceptance, because of the words \u201cmay be prepared to\u2026\u201d, and its reference to a formal application to buy. It was no more than an invitation to treat.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The Court of Appeal decision in this case, which was favourable to Mr Gibson, included a significant and well-known judgment of Lord <span class=\"bd\">Denning</span>&#8216;s for which he was to be criticised in the House of Lords. The salient passage is this: \u201cWe have had much discussion as to whether Mr Gibson&#8217;s letter of 18<sup>th</sup> March was a new offer or whether it was an acceptance of the previous offer which had been made. I do not like detailed analyses on such a point. To my mind it is a mistake to think that all contracts can be analysed into the form of offer and acceptance. I know in some of the textbooks it has been the custom to do so; but, as I understand the law, there is no need to look for a strict offer and acceptance. You should look at the correspondence as a whole and at the conduct of the parties and see therefrom whether the parties have come to an agreement on everything that was material. If by their correspondence and their conduct you can see an agreement on all material terms, which was intended thenceforward to be binding, then there is a binding contract in law even though all the formalities have not been gone through. For that proposition I would refer to <i>Brogden v Metropolitan Railway Co</i>.\u201d (Note that Brogden&#8217;s case involved not land, but coal, and an arrangement on which the parties had acted for two years).<br>&emsp;&emsp;In the House of Lords, Lord <span class=\"bd\">Diplock</span> had replied to Lord Denning&#8217;s remarks in these terms: \u201cMy Lords, there may be certain types of contract, though I think they are exceptional, which do not fit easily into the normal analysis of a contract being constituted by offer and acceptance; but a contract alleged to have been made by an exchange of correspondence between the parties in which the successive communications other than the first are in reply to one another is not one of these. I can see no reason in the instant case for departing from the conventional approach of looking at the handful of documents relied on as constituting the contract sued on and seeing whether on their true construction there is to be found in them a contractual offer by the council to sell the house to Mr Gibson and an acceptance of that offer by Mr Gibson. I venture to think that it was by departing from this conventional approach that the majority of the Court of Appeal was led into error\u201d.<br>&emsp;&emsp;A tension runs through these cases, between on the one hand construing the documents (a narrow view), and on the other hand taking account of context, likelihood, and the overall look of what was going on (a broad view, of course). Linda Mulcahy and John Tillotson, in <i>Contract Law in Perspective</i>, attractively capture these competing views: \u201cDenning is looking for the presence of a cake whereas those adopting a more formalistic analysis have looked for the ingredients of the cake and whether they have been put together in a \u201ccorrect\u201d sequence\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Ideally, both perspectives should work together, and there should be no tension. On a broad view, it was apparent that the City Council and Mr Gibson both wished to bring about a sale of the council house at the stated price. One might begin from the assumption that since that was what they obviously wanted, it is more likely than not that what they said to each other achieved their aim as a matter of law. If it didn&#8217;t, there may be something wrong with the law. </span><br>&emsp;&emsp;<span class=\"it\">Lord Diplock, quite correctly looking for the \u201cingredients of the cake\u201d to see if the cake itself is present, emphasises the cautious words \u201cmay be prepared to\u201d. An arch-formalist, ingredient-seeking view would surely note that \u201cmay\u201d and \u201cprepared to\u201d are doing the same semantic job, but slightly interfere with each other in the course of it. The council manifestly is prepared to sell Mr Gibson the house; to add that it \u201cmay\u201d be prepared to do so simply gainsays the council&#8217;s then policy on the sale of council houses. This is not the best draftsmanship, so should the result of the litigation really turn on it as the key to the council&#8217;s intention? Note that it would have made no sense in the context to state that the council \u201cwill\u201d sell the house, because that would presuppose the certainty of Mr Gibson&#8217;s acceptance of the deal. No, once it appears that the parties may not have used language with scientific precision, a broader view should be taken to discover the reality of the situation.</span><br>&emsp;&emsp;<span class=\"it\">The broader view would note that the transaction was begun by the council sending Mr Gibson details of its sales scheme, and inviting him to fill in an application form if he was interested (invitations to treat, of course). Mr Gibson had done so, and the letter containing the words \u201cmay be prepared to\u201d was a response to his application. That letter included the price at which the council was willing to sell, and it was a price which already had factored into it the precise state of Mr Gibson&#8217;s house. Their Lordships&#8217; finding that the willingness of the council to sell was still in doubt at this stage is gainsaid by the broader context of the dealings between the parties. \u201cMay be prepared to\u201d is surely a mere form of words, not the happiest, which an official chose because he realised that \u201cwill\u201d wouldn&#8217;t make any sense pending Mr Gibson&#8217;s reply. </span><br>&emsp;&emsp;<span class=\"it\">It is true that the Council&#8217;s letter invited Mr Gibson to make a formal application to buy by completing a further application form, which he never did. But what missing ingredient of the contractual cake could that formal application have supplied?</span><br>&emsp;&emsp;<span class=\"it\">We are continuing to distinguish offers and invitations to treat, and more particularly to study the circumstances in which valid offers are recognised by the courts. In the area of auctions and tenders, however, there will sometimes be collateral processes of contract formation taking place at the same time as the main transaction. These are based on the unilateral contract model to which an introduction was given in discussion of <i>Carlill v Carbolic Smoke Ball Company</i>. You may want to re-read that material before you go further.</span>"
    ],
    "CATEGORY": "Offers &mdash; (C) In Contracts Involving Land",
    "CITATION": "Gibson v Manchester City Council [1978] 1 WLR 520",
    "CATEGORIES": [
        "Offers",
        "(C) In Contracts Involving Land"
    ],
    "RELATED": [
        "Clifton v Palumbo",
        "Harvey v Facey",
        "Barry v Davies",
        "Hartog v Colin & Shields",
        "Fisher v Bell",
        "Smith v Hughes",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Carlill v Carbolic Smoke Ball Company",
        "Thornton v Shoe Lane Parking",
        "Harris v Nickersen",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd"
    ],
    "NUMBER": "17",
    "TYPE": "Case",
    "NAME": "Gibson v Manchester City Council",
    "FLAGS": [
        "Denning",
        "Diplock"
    ]
},
{
    "CATEGORIES": [
        "Offers",
        "(D) In Auction Sales"
    ],
    "YEAR": "1789",
    "NUMBER": "18",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff held that the defendant had bought his property at auction by making the highest bid for it. The defendant maintained that he had withdrawn his bid before the hammer fell. It was held that the defendant succeeded. The placing of a bid at auction is the making of an offer, and the fall of the auctioneer&#8217;s hammer is the acceptance. Like any other offer, a bid at auction can be withdrawn before acceptance. This analysis is now statutorily codified by s 57 (2) of the Sale of Goods Act 1979."
    ],
    "NAME": "Payne v Cave",
    "CATEGORY": "Offers &mdash; (D) In Auction Sales",
    "CITATION": "Payne v Cave (1789) 3 Durn &amp; E 148",
    "RELATED": [
        "Harris v Nickersen",
        "Barry v Davies",
        "Warlow v Harrison",
        "Spencer v Harding",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "Hartog v Colin & Shields",
        "Chapelton v Barry Urban District Council",
        "Harvey v Facey",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Carlill v Carbolic Smoke Ball Company",
        "Clifton v Palumbo",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Offers",
        "(D) In Auction Sales"
    ],
    "YEAR": "1859",
    "NUMBER": "19",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;At an auction in Birmingham three horses were advertised as for sale \u201cwithout reserve\u201d. The plaintiff bid 60 guineas for one of the horses, but its current owner, who was present at the sale, promptly bid 61 guineas. The plaintiff refused to make any further bid. The horse was therefore \u201csold\u201d to its owner (a legal impossibility). The plaintiff claimed that the horse was his since he had been the highest bona fide bidder. Held that since the sale had been advertised as being \u201cwithout reserve\u201d, the highest bidder was able to sue the auctioneer on a contract to that effect formed by the advertisement and the highest bid.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Warlow v Harrison</i> is not the easiest of cases, because it calls for care in identifying the contract found by the court, and precision in charting the way in which that contract came into being. At the outset, notice that the plaintiff was not in a position to make good a claim that the horse had become his; his bid had not been accepted by the auctioneer. Instead, it is held (at least by a majority of the judges involved, and obiter) that the advertisement of the sale as being \u201cwithout reserve\u201d was an offer which had been accepted by the making of the highest bona fide bid. The auctioneer, by refusing to accept that bid, had breached a contract to the effect that the sale would be without reserve. The plaintiff was therefore entitled to damages for that breach, which would seem to equate to the damages he would have received if he had been able to maintain an action for breach of contract of sale. In fact he had pleaded his case on a different basis (not relevant for present purposes) on which he also succeeded.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">What kind of contract is the one envisaged by the majority, since the plaintiff never expressly accepted any offer made to him, and his offer was not accepted by the auctioneer? It is a unilateral contract \u2013 a promise made to whosoever should perform the action of making the highest bona fide bid. It can also be described as a collateral contract, in the sense that its making is intertwined with the stages by which an over-arching transaction progresses (though it was never completed) The decision shows that advertisements are by no means always without legal effect, but it should be compared with the next case.</span>"
    ],
    "NAME": "Warlow v Harrison",
    "CATEGORY": "Offers &mdash; (D) In Auction Sales",
    "CITATION": "Warlow v Harrison (1859) 1 E &amp; B 309",
    "RELATED": [
        "Barry v Davies",
        "Harris v Nickersen",
        "Payne v Cave",
        "Thornton v Shoe Lane Parking",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Hartog v Colin & Shields",
        "Partridge v Crittenden",
        "Smith v Hughes",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Clifton v Palumbo",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Offers",
        "(D) In Auction Sales"
    ],
    "YEAR": "1873",
    "NUMBER": "20",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff, a London commission broker, attended an auction in Bury St Edmunds with a commission to bid for office furniture which had been advertised as for sale. The furniture was withdrawn from the auction. The plaintiff brought an action for breach of contract claiming his expenses in attending the auction. The court held that no such contract had come into existence.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Why did the court refuse to find a contract here arising from a statement about the forthcoming auction, when it had done so in <i>Warlow v Harrison</i>? The mechanism by which a contract might arise would be precisely the same; the advertisement could be regarded as the offer of a unilateral contract which the plaintiff, by attending the auction, had accepted.<br>&emsp;&emsp;The answer is based on policy and convenience rather than logic. In <i>Warlow v Harrison</i>, it is only the highest bidder who can perform the act required to make the offer of the unilateral contract binding; there can be only one highest bidder and therefore only one action for breach of contract. In <i>Harris v Nickerson</i>, every person attending the auction would have been enabled to sue the auctioneer for damages had a contract arisen from the advertisement of the goods for sale. The reasoning resembles that in <i>Grainger &amp; Sons v Gough</i>. It is a proper object of the law to protect people in business from indeterminate liability"
    ],
    "NAME": "Harris v Nickersen",
    "CATEGORY": "Offers &mdash; (D) In Auction Sales",
    "CITATION": "Harris v Nickersen (1873) LR 8 QB 286",
    "RELATED": [
        "Payne v Cave",
        "Warlow v Harrison",
        "Barry v Davies",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "Partridge v Crittenden",
        "Smith v Hughes",
        "Spencer v Harding",
        "Chapelton v Barry Urban District Council",
        "Clifton v Palumbo",
        "Rose v Pim",
        "Carlill v Carbolic Smoke Ball Company"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Offers",
        "(D) In Auction Sales"
    ],
    "YEAR": "2000",
    "NUMBER": "21",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Two machines, obtainable from their manufacturer at a price of \u00a314,521, were put up for sale at auction without reserve by Customs and Excise. The auctioneer attempted but failed to obtain bids of \u00a35000 and \u00a33000 for them. The claimant then bid \u00a3200 for each machine, but the auctioneer refused to accept these bids and withdrew the machines from the sale. The claimant sued the auctioneer for breach of contract, arguing that the holding of an auction without reserve amounts to an offer to sell to the highest bidder which he had accepted by making his bids. The Court of Appeal, applying the obiter dictum in <i>Warlow v Harrison</i>, held that this was correct. The claimant was entitled to damages of \u00a327,600 for breach of that unilateral contract.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This case shows how close a collateral, unilateral contract can come to taking over from the main contract in a bilateral transaction, and confirms what <i>Warlow v Harrison</i> strongly suggested. The bilateral contract of sale would have been concluded at auction by the bid and the auctioneer&#8217;s acceptance of it, had the auctioneer not stopped short of making that contract. Nevertheless, its place is all but taken by the unilateral contract which arises when the sale is described as without reserve, and the bidder makes the highest bid. Damages for the breach of the unilateral contract are the same as they would be had the bilateral contract of sale been made and breached.<br>&emsp;&emsp;You will notice that for the purposes of the bilateral contract the holding of the auction is an invitation to treat, and all bids made at it are offers. For the purposes of the collateral, unilateral contract, the holding of the auction is an offer, and the making of the highest bid is its acceptance."
    ],
    "NAME": "Barry v Davies",
    "CATEGORY": "Offers &mdash; (D) In Auction Sales",
    "CITATION": "Barry v Davies [2000] 1 WLR 1962",
    "RELATED": [
        "Payne v Cave",
        "Warlow v Harrison",
        "Harris v Nickersen",
        "Hartog v Colin & Shields",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Harvey v Facey",
        "Thornton v Shoe Lane Parking",
        "Chapelton v Barry Urban District Council",
        "Clifton v Palumbo",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Gibson v Manchester City Council"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Offers",
        "(E) In Sales By Tender"
    ],
    "YEAR": "1870",
    "NUMBER": "22",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A circular advertised that a company&#8217;s stock in trade was to be offered for sale, and invited bidders to submit tenders for its purchase at a discount to a stated valuation. The tenders were to be opened together at a stated time and place. Payment was to be made in cash by the successful bidder. The plaintiffs claimed that they had put in the highest tender, and the defendants were in breach of contract in refusing to sell to them. The court held that no contract had come into existence. The circular could not be construed as an offer to sell to the highest bidder.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Counsel for the plaintiffs in this case attempted to distinguish it from tendering procedures for building contracts. There, he submitted, the price of the bid is not the sole factor by which the successful bidder is chosen, because it is always subject to the architect&#8217;s judgment as to the character and capacity of the builder. This case was different, because there was no such judgment to be exercised, and this was supported by the circular&#8217;s reference to payment in cash. Therefore this case amounted to the offer of a unilateral contract, to be compared to the reward cases. Rejecting this analysis, Willes J said that it would have been apposite if the defendants had expressly bound themselves to accept the highest bid. He went on: \u201cBut the question is, whether there is here any offer to enter into a contract at all, or whether the circular amounts to anything more than a mere proclamation that the defendants are ready to chaffer for the sale of the goods, and to receive offers for the purchase of them. In advertisements for tenders for buildings, it is not usual to say that the contract will be given to the lowest bidder, and it is not always that the contract is made with the lowest bidder. Here there is a total absence of any words to intimate that the highest bidder is to be the purchaser. It is a mere attempt to ascertain whether an offer can be obtained within such a margin as the sellers are willing to adopt\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The rule in Spencer v Harding is not open to serious doubt, but the case doesn&#8217;t seem quite as open and shut as it is often thought to be. </span><br>&emsp;&emsp;<span class=\"it\"> Had there been any implication to be drawn from the circular that the stock in trade would be sold to the highest bidder, the unilateral contract device described by counsel for giving contractual effect to that promise would have achieved it. Willes J expressly confirms this. Smith &amp; Thomas&#8217;s Casebook on Contract asks of the case \u201cWould a reasonable reader of the circular have supposed that the defendants intended to make any binding promise? Was it reasonable to suppose that the defendants intended to bind themselves to sell to the highest bidder, however low that bid might be?\u201d Well, the circular stated that the defendants were instructed to offer the stock for sale. Of course that is far from determinative. The tenders were to be opened at a stated time on a given day. That would provide a cut-off point, showing that the defendants were serious about selling the stock and were not merely \u201cready to chaffer for the sale\u201d. The stipulation for cash reinforces that view; there was to be no chaffering about payment terms by the successful bidder. These were obviously sealed bids, which gave the defendants some protection against being forced to sell at a depressed price; the bidders would each be stating their best price and hoping it would be at a (minimal) premium to what others were prepared to pay. There was no reference to any residual discretion on the part of the defendants to abort the procedure. It has every appearance of a means of achieving, without more, a sale at the best price possible.</span><br>&emsp;&emsp;<span class=\"it\">The appearance which a bidding process would have for reasonable people was one of the determining factors in the next case.</span>"
    ],
    "NAME": "Spencer v Harding",
    "CATEGORY": "Offers &mdash; (E) In Sales By Tender",
    "CITATION": "Spencer v Harding (1870) LR 5 CP 561",
    "RELATED": [
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Fisher v Bell",
        "Harvey v Facey",
        "Clifton v Palumbo",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Harris v Nickersen",
        "Thornton v Shoe Lane Parking",
        "Hartog v Colin & Shields",
        "Payne v Cave",
        "Rose v Pim",
        "Partridge v Crittenden"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1990",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff company held a concession to operate pleasure flights, granted by the borough council in 1975 and twice renewed. In 1983 the council contacted the company, amongst others, inviting the submission of tenders to operate the concession for a further period. The invitation stated: \u201cThe council do not bind themselves to accept all or any part of any tender. No tender which is received after the last date and time specified shall be admitted for consideration\u201d. The company submitted a tender before the deadline, but as a result of the council&#8217;s mistake it was recorded as arriving late and was not considered. The concession was awarded to another bidder (whose bid was lower than that of the plaintiff, but the higher of the two remaining and \u201cvalid\u201d bids). The Court of Appeal held that the invitation to submit tenders was the offer of a unilateral contract accepted by the submission of a conforming tender, and that the council was liable to the company in damages for the breach of that contract.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The council made four submissions. The first, based on <i>Spencer v Harding</i>, was that the invitation to tender was merely an invitation to treat, and not an offer. The second was that the invitation did not state that all tenders would be considered. The third was that the test for the implication of a contract could be no less rigorous than the test for the implication of a term into a contract; it needed to be necessary, and not merely reasonable. The fourth submission, resting upon the other three, was that although the parties might each have assumed that conforming tenders would be considered, they had not contracted to that effect. It would distort the principles of contract formation if the court, out of desire to remedy a perceived injustice, were to find that they had.<br>&emsp;&emsp;<span class=\"bd\">Bingham LJ</span> stated that he found great force in these arguments, and had been persuaded by them for much of the hearing, but had ultimately rejected them. He gives his reasons in the following passage:<br>&emsp;&emsp;\u201cA tendering procedure of this kind is, in many respects, heavily weighted in favour of the invitor. He can invite tenders from as many or as few parties as he chooses. He need not tell any of them who else, or how many others, he has invited. The invitee may often, although not here, be put to considerable labour and expense in preparing a tender, ordinarily without recompense if he is unsuccessful. The invitation to tender may itself, in a complex case, although again not here, involve time and expense to prepare, but the invitor does not commit himself to proceed with the project, whatever it is; he need not accept the highest tender; he need not accept any tender; he need not give reasons to justify his acceptance or rejection of any tender received. The risk to which the tenderer is exposed does not end with the risk that his tender may not be the highest (or, as the case may be, lowest). But where, as here, tenders are solicited from selected parties all of them known to the invitor, and where a local authority&#8217;s invitation prescribes a clear, orderly and familiar procedure (draft contract conditions available for inspection and plainly not open to negotiation, a prescribed form of tender, the supply of envelopes designed to protect the absolute anonymity of tenderers and clearly to identify the tender in question and an absolute deadline) the invitee is in my judgment protected at least to this extent: if he submits a confirming tender before the deadline he is entitled, not as a matter of mere expectation but of contractual right, to be sure that his tender will after the deadline be opened and considered in conjunction with all other conforming tenders or at least that his tender will be considered if others are. Had the club, before tendering, inquired of the council whether it could rely on any timely and confirming tender being considered along with others, I feel quite sure that the answer would have been \u201cof course\u201d. The law would, I think, be defective if it did not give effect to that.<br>&emsp;&emsp;It is, of course, true that the invitation to tender does not explicitly state that the council will consider timely and conforming tenders. That is why one is concerned with implication. But the council does not either say that it does not bind itself to do so, and in the context a reasonable invitee would understand the invitation to be saying, quite clearly, that if he submitted a timely and conforming tender it would be considered, at least if any other such tender were considered\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The four, forceful submissions made on behalf of the council ultimately depend on one proposition; the council&#8217;s invitation did not contain any promise. This, according to Bingham LJ, is its downfall; the argument proves too much. If it is correct, then it would leave the council at liberty to open the first tender received, before the deadline, and ignore the rest. Alternatively, the council might validly award the concession to a tender received well after the deadline had passed. Bingham LJ could not accept that the council retained the freedom to act in these ways, and said that if it did, \u201cthere would in my view be an unacceptable discrepancy between the law of contract and the confident assumptions of commercial parties\u2026\u201d.</span><br>&emsp;&emsp;<span class=\"it\">To engage more closely with a case, often one should be ready not only to attend to the details but also to take a broad view of what is going on. Yes, the council&#8217;s submissions are cogent ones, but to gain a victory in these circumstances they would have had to have been quite overwhelming. Justice was entirely on the side of the company, which had done exactly what the council invited it to, only to find that it had wasted its time because of the council&#8217;s own mistake.</span><br>&emsp;&emsp;<span class=\"it\">Before leaving Blackpool v Fylde, notice the mechanics of liability in this case. The status of the invitation sent by the council differs according to whether it is the substantive or the collateral contract which is under consideration. For the purposes of the substantive contract (the award of the concession) it is an invitation to treat, and the conforming tenders are offers. For the purposes of the collateral contract found by the Court of Appeal, the invitation to tender is an offer of a unilateral contract, which is accepted by all those who submit conforming tenders. Give thought also to the measure of damages to which the plaintiff company would be entitled for breach of the collateral contract. It could not be the total profits to be made from operating the concession, since it was not certain that the company&#8217;s bid would have been accepted even if it had been considered. It would have been a proportion of that profit representing the likelihood of its winning the concession (commonly called \u201closs of a chance\u201d), or alternatively, its expenses in putting together its bid (reliance loss).</span>"
    ],
    "CATEGORY": "Offers &mdash; (E) In Sales By Tender",
    "CITATION": "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council [1990] 1 WLR 1195",
    "CATEGORIES": [
        "Offers",
        "(E) In Sales By Tender"
    ],
    "RELATED": [
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Spencer v Harding",
        "Fisher v Bell",
        "Chapelton v Barry Urban District Council",
        "Warlow v Harrison",
        "Barry v Davies",
        "Payne v Cave",
        "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "Hartog v Colin & Shields",
        "Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "Smith v Hughes",
        "Clifton v Palumbo"
    ],
    "NUMBER": "23",
    "TYPE": "Case",
    "NAME": "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
    "FLAGS": [
        "Bingham"
    ]
},
{
    "CATEGORIES": [
        "Offers",
        "(E) In Sales By Tender"
    ],
    "YEAR": "1986",
    "NUMBER": "24",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The Royal Trust invited two parties, Harvela and Sir Leonard Outerbridge, to submit sealed bids for a parcel of shares by a fixed date. They stated that they would accept the highest bid. Harvela offered $2,175,000. Sir Leonard offered \u201c$2,100,000 or $101,000 in excess of any other offer\u2026whichever is the higher amount\u201d. The Royal Trust accepted Sir Leonard&#8217;s bid, considering that it was bound to do so. Held, by the House of Lords (reversing the Court of Appeal) that Sir Leonard&#8217;s bid was invalid, so that Harvela&#8217;s was the winner.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This case perhaps does not deserve the prominence it has in some books. Certainly, the complexities caused by Sir Leonard&#8217;s \u201creferential\u201d bid are not of much relevance for present purposes. The outcome can simply be explained by reference to the unilateral contract mechanism, once again; the Royal Trust&#8217;s invitation was the offer of a unilateral contract (to sell to the highest bidder) and was accepted by the submission of the highest bid. That being said, the case is a good opportunity to revise the role of the unilateral contract element within a bidding process.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Smith &amp; Thomas&#8217;s Casebook on Contract fastens on an interesting point, when the following question is posed: \u201cWhat does [Lord Templeman] mean when he says that referential bids are not \u201cpermissible\u201d? Are they illegal?\u201d </span><br>&emsp;&emsp;<span class=\"it\">The point may be this; to what extent can the invitation to receive bids condition the validity of the bids received? As long as the invitation is regarded as the offer of a unilateral contract, it can lay down conditions for the validity of the responses to be received, as can any offer. But in the speech of Lord Templeman, a broader view seems to be taken, on which the invitation qualifies the validity of bids simply by being the first shot in the match. There are some suggestions of this in the Blackpool case as well, introduced by references to \u201cconforming\u201d tenders. </span><br>&emsp;&emsp;<span class=\"it\">An invitation to receive bids is normally understood to be a mere invitation to treat, although for some purposes of course it can also be the offer of a unilateral contract. Where it lays down complex conditions of validity, is it still in any sense just an invitation to treat? Can an invitation to treat determine the question of whether a response to it counts as an offer or not?</span><br>&emsp;&emsp;<span class=\"it\">The problem of deciding whether controlling power belongs to the first or to subsequent shots in the match will be considered in detail in the next lecture. </span>"
    ],
    "NAME": "Harvela Investments Ltd v Royal Trust of Canada Ltd",
    "CATEGORY": "Offers &mdash; (E) In Sales By Tender",
    "CITATION": "Harvela Investments Ltd v Royal Trust of Canada Ltd [1986] AC 207",
    "RELATED": [
        "Spencer v Harding",
        "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "Hartog v Colin & Shields",
        "Payne v Cave",
        "Smith v Hughes",
        "Harris v Nickersen",
        "Gibson v Manchester City Council",
        "Partridge v Crittenden",
        "Carlill v Carbolic Smoke Ball Company",
        "Clifton v Palumbo",
        "Harvey v Facey",
        "Fisher v Bell"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Responses to Offers"
    ],
    "NUMBER": "25",
    "SUMMARY": [
        "The mere fact that an offer has been made by one party to negotiations to the other will not create binding obligations. It is possible to lose sight of this basic principle where an offer is made in emphatically promissory language. Even if an offer is worded in such a way as to suggest that the offeror will act in accordance with it, come what may, the offeror is not legally obliged to do so unless and until the offer is accepted.<br>&emsp;&emsp;_The reason for this ought to be briefly stated here; you will be looking at the underlying legal principle in greater detail soon. The offer does not bind its maker until acceptance has converted it into an agreement not only (a) because it might be said that the parties are not yet <i>ad idem</i> on the objective view which the law adopts, but also (b) because no <i>consideration</i> has yet moved from offeree to offeror. The law of consideration will be examined in detail later this term. For the timebeing, \u201cconsideration\u201d can be understood as \u201csomething of value, moving from the offeree\u201d."
    ],
    "NAME": "Responses to Offers - Intro",
    "CATEGORY": "Responses to Offers",
    "RELATED": [
        "Dickinson v Dodds",
        "Daulia Ltd v Four Millbank Nominees",
        "Hyde v Wrench",
        "Tinn v Hoffman & Co",
        "Williams v Carwardine",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "BRS v Arthur Crutchley Ltd",
        "Mountford v Scott",
        "Stevenson, Jacques & Co v MacLean",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Shuey v United States",
        "Errington v Errington and Woods"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Counter-Offer"
    ],
    "NUMBER": "26",
    "TYPE": "Concept",
    "NAME": "Counter-Offer",
    "CATEGORY": "Responses to Offers &mdash; Counter-Offer",
    "RELATED": [
        "Comments.",
        "Entire and severable obligations",
        "Mutual Mistake",
        "Classification of Terms - Introduction",
        "Section 1: treating a contract term as a misrepresentation",
        "Lord Denning's invention of common mistake in equity",
        "Warranties",
        "Interpretation and precedent",
        "Misrepresentation (1) - Introduction",
        "Misrepresentation arising from silence and/or conduct",
        "The Parol Evidence Rule",
        "\u201cProblem\u201d Cases"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Counter-Offer</span></span><br>&emsp;&emsp;Various things may happen to the offer to prevent it being accepted. It may, of course, be rejected outright, in which case it terminates. What will be the position, however, if the offeree responds in a broadly positive sense, but proposes terms which conflict with those of the offeror? This will stand as a counter-offer. It puts an end to the original offer, but it may itself be accepted by the party to which it is addressed."
    ]
},
{
    "YEAR": "1840",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This was an action for specific performance, involving negotiations for the sale of a farm. The defendant wrote to the plaintiff offering to sell him his farm for \u00a31000. The plaintiff&#8217;s agent replied saying that the plaintiff would buy it for \u00a3950. The defendant later wrote to say that he would not sell at that price. The plaintiff then wrote to say that he would buy for \u00a31000. Specific performance was refused, since there was no concluded contract of sale. The proposal to buy for \u00a3950 was a counter-offer; it had terminated the original offer so that the plaintiff&#8217;s purported acceptance of it later was no more than a fresh offer.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">You may be thinking that if one adopts Lord <span class=\"bd\">Denning</span>&#8216;s broad approach to the construction of contractual negotiations (stated by him in the Court of Appeal in Gibson&#8217;s case), it is apparent that buyer and seller are effectively in agreement here. However, the conventional analysis gives a different result. One might conclude that the conventional analysis is therefore wrong, and a victim of its own formalism. Bear in mind, though, that had the defendant still been content to sell his farm to the plaintiff for the original price once the plaintiff finally offered it, all he needed to do to close the deal on those terms was to write back to accept. He did not do so. The conventional analysis reveals that however close the parties came to agreeing, they did not agree.</span>"
    ],
    "CATEGORY": "Responses to Offers &mdash; Counter-Offer",
    "CITATION": "Hyde v Wrench (1840) 3 Beav 334",
    "CATEGORIES": [
        "Responses to Offers",
        "Counter-Offer"
    ],
    "RELATED": [
        "Stevenson, Jacques & Co v MacLean",
        "Daulia Ltd v Four Millbank Nominees",
        "Errington v Errington and Woods",
        "Shuey v United States",
        "Byrne & Co v Van Tienhoven",
        "Williams v Carwardine",
        "Routledge v Grant",
        "R v Clarke",
        "Tinn v Hoffman & Co",
        "BRS v Arthur Crutchley Ltd",
        "Mountford v Scott",
        "Dickinson v Dodds"
    ],
    "NUMBER": "27",
    "TYPE": "Case",
    "NAME": "Hyde v Wrench",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Counter-Offer"
    ],
    "YEAR": "1880",
    "NUMBER": "28",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;McLean, the defendant, wrote on Saturday to Stevenson offering to sell a large quantity of warrants for iron for 40 shillings a ton, the offer to be open until Monday [seemingly the end of Monday]. On Monday, Stevenson replied asking \u201cwhether you would accept forty for delivery over two months, or if not, longest limit you would give\u201d. On receipt of this reply, McLean sold the iron to a third party. In the ensuing minutes, and before McLean informed Stevenson that the iron was sold, Stevenson affirmed that he would pay 40 shillings a ton. McLean sought to defend an action for breach of contract by arguing that Stevenson&#8217;s enquiry about delivery times had terminated the original offer, so that it was no longer on the table when Stevenson purported to accept it. Held that Stevenson&#8217;s enquiry had not been a counter-offer. His later telegram was therefore acceptance of the original offer.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;In Lush J&#8217;s explanation of the grounds for his decision there are a couple of odd expressions for which I have suggested preferable readings: \u201cIt is apparent throughout the correspondence, that the plaintiffs did not contemplate buying the iron on speculation, but that their acceptance of the defendant&#8217;s offer depended on their finding someone to take the warrants off their hands. All parties knew that the market was in an unsettled state, and that no one could predict at the early hour when the telegram was sent how the prices would range during the day. It was reasonable that, under these circumstances, they should desire to know before business began whether they were to be at liberty in case of need to make <i>[read \u201cobtain\u201d]</i> any concession as to the time or times of delivery, which would be the times of payment, or whether the defendant was determined to adhere to the terms of his letter; and it was highly unreasonable <i>[read \u201cunlikely]</i> that the plaintiffs should have intended to close the negotiation while it was uncertain whether they could find a buyer or not, having the whole of the business hours of the day to look for one. Then, again, the form of the telegram is one of inquiry. It is not like \u201cI offer forty for delivery over two months,\u201d which would have likened the case to <i>Hyde v Wrench</i>\u2026. Here there is no counter proposal\u2026.There is nothing specific by way of offer or rejection, but a mere inquiry, which should have been answered and not treated as a rejection of the offer\u201d.<br>&emsp;&emsp;Notice the two grounds on which the decision is based \u2013 the context of the negotiation, and the form and substance of Stevenson&#8217;s response. Sometimes, in explanations of counter-offer analysis, the importance of context is not sufficiently stressed. This was a volatile market, and Stevenson, as purchaser, had the complex task of balancing the price being asked against the ease (or otherwise) with which the warrants could be sold on. In these circumstances, an understandable request for further information should have been treated as just that, and not as the proposal of a different deal.",
        "<span class=\"ud\"><span class=\"bd\">A closer look </span></span><br>&emsp;&emsp;<span class=\"it\">It will be apparent that in some circumstances it may not be easy to distinguish between a counter offer and a request for further information. When attempting to draw the distinction correctly, you may want to bear in mind the potentially drastic consequence of labelling a communication as a counter offer, and check that this is a reasonable way of describing what has occurred. Remember that a counter offer does not merely fall short of an acceptance. In law it is a rejection of the original offer, and terminates it. Does the offeree really mean to reject the original offer in all its respects, to replace it by a proposal of his own? Possibly; but the effect which the traditional analysis gives to counter offers makes a negotiation look curiously like a prize fight. Some negotiations are like that, but many are not. Always consider the context.</span><br>&emsp;&emsp;<span class=\"it\">We have already looked at a case in which there is a live issue as to whether a counter-offer is being made or not. Here are the facts of <i>Gibson</i>&#8216;s case again, in case you want to refresh your memory. If you are already familiar with them, skip to the discussion below. It is well worth forming your own view on the issue, because two senior judges were in disagreement over it.</span>"
    ],
    "NAME": "Stevenson, Jacques & Co v MacLean",
    "CATEGORY": "Responses to Offers &mdash; Counter-Offer",
    "CITATION": "Stevenson, Jacques &amp; Co v MacLean (1880) 5 QBD 346",
    "RELATED": [
        "Hyde v Wrench",
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "Tinn v Hoffman & Co",
        "Ramsgate Victoria Hotel v Montefiore",
        "Daulia Ltd v Four Millbank Nominees",
        "Shuey v United States",
        "Responses to Offers - Intro",
        "BRS v Arthur Crutchley Ltd",
        "Errington v Errington and Woods",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Mountford v Scott"
    ],
    "TYPE": "Case"
},
{
    "NUMBER": "29",
    "NAME": "Gibson v Manchester City Council.",
    "TYPE": "Case",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Pursuant to its policy of selling its council housing to tenants, the council sent Mr Gibson a letter stating that \u201cthe corporation may be prepared to sell the house to you at the purchase price of \u00a32725\u2026. The letter provided that it was not to be regarded as a firm offer of a mortgage, and went on: \u201cIf you would like to make a formal application to buy your council house, please complete the enclosed application form and return it to me as soon as possible\u201d. Mr Gibson filled in the form but left the purchase price blank, asking that certain necessary repairs should be taken into account to diminish the price. The council replied that the state of the property had already been taken into account in the fixing of the price. Mr Gibson then wrote back on 18 March asking to proceed with the purchase in accordance with his original application. Political control of the council later changed and the new policy was that sales would be completed only where the council was legally obliged to proceed. Mr Gibson sought an order of specific performance, obtained it in the Court of Appeal, but lost on the council&#8217;s appeal to the House of Lords. No binding contract had come into existence. The council&#8217;s letter to Mr Gibson did not evince the intention to be bound by his acceptance, because of the words \u201cmay be prepared to\u2026\u201d, and its reference to a formal application to buy. It was no more than an invitation to treat.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;When Mr Gibson replied to the council, proposing that the price of the house should be diminished to take account of the need for repairs, was that a counter-offer? The precise words used by him were these: \u201cBefore the transaction is finalised I would appreciate your comments on the following. [There followed a complaint that, although the council&#8217;s \u201cdirect works\u201d department had undertaken to repair Mr Gibson&#8217;s tarmac paths, nothing had been done.] I would therefore like your assurance that Direct Works will not exclude these premises when re-surfacing or re-laying starts, or alternatively would you deduct an amount of money from the purchase price and I will undertake the repairs myself. Whichever decision you arrive at I would like to make an initial cash payment of \u00a3500 \u2013 so I would be obliged if you will let me have the figures to allow for the deposit mentioned. I have left the purchase price blank on the application form until I hear from you\u201d.<br>&emsp;&emsp;In the Court of Appeal Geoffrey Lane LJ (dissenting) made this comment on Mr Gibson&#8217;s proposal: \u201cWhat he is suggesting there in short is that the price of these premises to him should not be that which the council have put forward but that an allowance should be made for his repairing the drive or alternatively there should be an obligation on the council to make recompense to him in kind by repairing his drive themselves by direct labour. That seemed to me quite plainly to be a counter-offer\u201d.<br>&emsp;&emsp;In the House of Lords Lord Edmund Davies went the other way: \u201cI am not, however, with Geoffrey Lane LJ in treating Mr Gibson&#8217;s letter of 5<sup>th</sup> March 1971 (regarding non-repair of his tarmac paths) as a counter-offer which had the effect of destroying an offer to sell, if the council had made one. On the contrary, I read it as merely exploratory of the possibility of a reduction in price in the eventuality indicated. In other words, this case is like <i>Stevenson v McLean</i> and unlike <i>Hyde v Wrench</i>\u201d.<br>&emsp;&emsp;The concept of a counter-offer, terminating the original offer but itself open for acceptance, lies at the heart of the situation known as the \u201cbattle of the forms\u201d. This occurs where parties do business together, but while appearing to go through the process of offer and acceptance, they exchange paperwork which in fact constitutes a written (and perhaps unwitting) dispute over whose terms are to govern the deal."
    ]
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Battle of Forms"
    ],
    "YEAR": "1968",
    "NUMBER": "30",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs&#8217; lorry, carrying a valuable load of whisky, was stolen while being stored overnight at the defendants&#8217; warehouse. The question arose whether the contract of bailment between the parties was made on the plaintiffs&#8217; or the defendants&#8217; conditions, since the latter included a limitation of liability to \u00a3800 per ton of goods. The contract was formed when the plaintiffs&#8217; driver brought his delivery note to the defendants&#8217; office; the note stated that \u201call goods are carried on the [plaintiffs&#8217;] conditions of carriage\u201d. The defendants gave permission for the goods to be brought into the warehouse, but stamped the delivery note with the words \u201creceived under A.V.C conditions\u201d. Held by the Court of Appeal that the defendants&#8217; conditions prevailed over those of the plaintiffs.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The legal explanation for the decision is this. The giving in of the delivery note is an offer. However, the stamping of it by the other party is not an acceptance of that offer but a counter-offer, because of the discrepancy between the two sets of terms. The acceptance of this counter-offer is made by the plaintiff&#8217;s driver when he drives the lorry into the warehouse. That is an <i>acceptance by conduct</i> \u2013 more will be said about this topic at the beginning of the next lecture.<br>&emsp;&emsp;The <i>Arthur Crutchley</i> case is not a complex one on this point. It can be seen to apply a general principle; the latest shot in a battle of the forms tends to prevail, because the doctrine of counter-offer dictates that it represents the current offer on the table between the parties and terminates earlier ones.<br>&emsp;&emsp;However, the situation becomes somewhat more difficult and open to doubt when one party&#8217;s paperwork claims to trump future inconsistent proposals prospectively."
    ],
    "NAME": "BRS v Arthur Crutchley Ltd",
    "CATEGORY": "Responses to Offers &mdash; Battle of Forms",
    "CITATION": "BRS v Arthur Crutchley Ltd [1968] 1 All ER 811",
    "RELATED": [
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "Williams v Carwardine",
        "Ramsgate Victoria Hotel v Montefiore",
        "R v Clarke",
        "Errington v Errington and Woods",
        "Stevenson, Jacques & Co v MacLean",
        "Daulia Ltd v Four Millbank Nominees",
        "Shuey v United States",
        "Tinn v Hoffman & Co",
        "Mountford v Scott",
        "Hyde v Wrench"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Battle of Forms"
    ],
    "YEAR": "1979",
    "NUMBER": "31",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The sellers of a machine tool quoted a price for its delivery in ten months&#8217; time. On the back of their quotation (regarded as the offer) were various clauses including (a) a price escalation provision which would entitle them to demand an increased price if production costs increased; and (b) the statement that \u201call orders are accepted only upon and subject to the terms set out in our quotation and the following conditions. These terms and conditions shall prevail over any terms and conditions in the buyer&#8217;s order\u201d.<br>&emsp;&emsp;The buyers placed an order which was expressed to be on their own terms and conditions, and varied the delivery date. There was a tear-off slip which was to be signed and sent back. It reiterated that the order was accepted on the buyers&#8217; own terms. The sellers signed and returned it.<br>&emsp;&emsp;Upon delivery of the machine tool, the sellers sought to increase the price by reference to their price escalation clause. Held by the Court of Appeal that the buyers&#8217; terms governed, so that the sale was at the originally quoted price. The signing and return of the buyers&#8217; tear-off slip had made the contract on the buyers&#8217; terms.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The mechanism producing this result is again a counter-offer. In the opinion of all three judges in the Court of Appeal (differing from the analysis of the judge at first instance), the buyers&#8217; order was so materially different from the sellers&#8217; offer that it could not be construed as an acceptance of it. Instead, it was a counter-offer which terminated it, and therefore also terminated the claim in that original offer that the sellers&#8217; terms should prevail over those of the buyer. By signing the tear-off slip, the sellers had (ostensibly) assented to that counter-offer.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">All three Court of Appeal judges emphasise that provisions in the buyers&#8217; order (eg. with regard to delivery date) materially differed from provisions in the sellers&#8217; quotation. As a result of that, it seems, the order is characterised as a counter-offer and therefore has the effect of terminating the sellers&#8217; offer. But is this analysis perhaps more complex than necessary? The buyers&#8217; order, by specifying that their terms would prevail, ran counter to the sellers&#8217; offer for that reason alone, and was therefore a counter-offer.</span>"
    ],
    "NAME": "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
    "CATEGORY": "Responses to Offers &mdash; Battle of Forms",
    "CITATION": "Butler Machine Tool Co Ltd v Ex-Cell-O Corp [1979] 1 WLR 401",
    "RELATED": [
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "BRS v Arthur Crutchley Ltd",
        "Dickinson v Dodds",
        "Mountford v Scott",
        "Errington v Errington and Woods",
        "Hyde v Wrench",
        "Responses to Offers - Intro",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Byrne & Co v Van Tienhoven",
        "Stevenson, Jacques & Co v MacLean",
        "Daulia Ltd v Four Millbank Nominees",
        "Routledge v Grant"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Battle of Forms"
    ],
    "YEAR": "2009",
    "NUMBER": "32",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The parties were buyers and sellers, respectively, of components destined for use in Rolls Royce aero engines, and had a business relationship of long standing. The buyers (Tekdata) claimed to have bought the components on the terms of their purchase orders, and complained that the goods were late and faulty. The sellers (Amphenol) claimed that the governing terms were their own, referred to on their acknowledgment of purchase orders, and limited or excluded their liability for breach.<br>&emsp;&emsp;Held at first instance (HHJ Simon Brown QC) that the usual battle of the forms analysis was displaced here. Throughout the parties&#8217; relationship it had always been intended that Tekdata&#8217;s terms should apply, since they contained stipulations as to time and quality without which this sophisticated manufacturing process would not have been carried on. Amphenol&#8217;s appeal was allowed by the Court of Appeal. The parties&#8217; intentions should have been deduced from what actually happened between them. It was impermissible in effect to disregard the reference to Amphenol&#8217;s terms on the acknowledgment of purchase. The fact that Amphenol had not placed any reliance on its terms in correspondence after the dispute arose was of no obvious relevance. The general rule was that ordinary offer and acceptance analysis was to be applied to battle of the forms cases.<br>&emsp;&emsp;Up until the moment at which an offer is accepted, the offeror may withdraw it."
    ],
    "NAME": "Tekdata Interconnections Ltd v Amphenol Ltd",
    "CATEGORY": "Responses to Offers &mdash; Battle of Forms",
    "CITATION": "Tekdata Interconnections Ltd v Amphenol Ltd [2009] EWCA Civ 1209",
    "RELATED": [
        "BRS v Arthur Crutchley Ltd",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "Daulia Ltd v Four Millbank Nominees",
        "R v Clarke",
        "Responses to Offers - Intro",
        "Ramsgate Victoria Hotel v Montefiore",
        "Mountford v Scott",
        "Byrne & Co v Van Tienhoven",
        "Errington v Errington and Woods",
        "Stevenson, Jacques & Co v MacLean",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Hyde v Wrench"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Withdrawal of Offer (and Lapse)"
    ],
    "YEAR": "1828",
    "NUMBER": "33",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case concerned an offer by a prospective lessee to take a lease of the plaintiff&#8217;s premises. The offer was to remain open for six weeks. Before the expiry of that period, the defendant withdrew the offer. Towards the end of the six week period, the plaintiff purported to accept the offer. Held, rejecting the plaintiff&#8217;s claim to enforce a contract, that \u201cif six weeks are given on one side to accept an offer, the other has six weeks to put an end to it\u201d (Best CJ).",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;It may seem surprising that an offeror can expressly define the length of time for which he will keep an offer open, and then withdraw the offer during that period with impunity. No doubt many an offeree on the receiving end of such behaviour would resent it and wonder how it is legally permissible; he may have relied on having the full period in which to make up his mind, or why else would he have been informed of the offer&#8217;s duration? The legally correct answer is no more than a restatement of the principle set out at the beginning of this lecture. The reason that such behaviour is permissible lies principally in the law of consideration. As a matter of legal doctrine, a promise does not bind its maker unless he requests and receives something in return for it (consideration). We will, of course, be looking in detail at the law of consideration later this term. Until that time, be sure to remember that a \u201cgratuitous promise\u201d, meaning one which is not given in exchange for anything, does not bind, however sincerely it is meant or emphatically expressed.",
        "<span class=\"ud\"><span class=\"bd\">A closer look </span></span><br>&emsp;&emsp;<span class=\"it\">If you read the judgment in this case, you will see how completely it is imbued with the understanding of contract as mutuality of obligation. Best CJ does not refer expressly to the doctrine of consideration, but puts it more broadly; \u201cone party cannot be bound without the other\u201d. It is worth noting the date of the case \u2013 1828. The unilateral contract model had not yet developed, and perhaps would have been rejected outright by Best CJ on the footing that it can (at least on one view) involve one party being bound while the other is not. This is more fully explored below: see Daulia Ltd v Four Millbank Nominees.</span><br>&emsp;&emsp;<span class=\"it\">Note also the way in which the use of terminology has altered since the time of this judgment. Best CJ says that the defendant \u201crepudiated the contract on April 9\u201d. We would now regard that expression as unfortunate, since the whole point is that no form of contractual obligation ever came into existence. </span>"
    ],
    "NAME": "Routledge v Grant",
    "CATEGORY": "Responses to Offers &mdash; Withdrawal of Offer (and Lapse)",
    "CITATION": "Routledge v Grant (1828) 4 Bing 653",
    "RELATED": [
        "Shuey v United States",
        "Dickinson v Dodds",
        "Mountford v Scott",
        "Ramsgate Victoria Hotel v Montefiore",
        "Byrne & Co v Van Tienhoven",
        "Tinn v Hoffman & Co",
        "Errington v Errington and Woods",
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "Williams v Carwardine",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "BRS v Arthur Crutchley Ltd",
        "Hyde v Wrench"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Withdrawal of Offer (and Lapse)"
    ],
    "YEAR": "1975",
    "NUMBER": "34",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The facts of this case bear comparison with those of <i>Routledge v Grant</i>. This was an offer to sell property, expressed to remain open for six months. However, the prospective purchaser paid \u00a31 in return for this promise. Held that this consideration, although nominal, converted the offer into an option (a binding contract), so that the offeror was not free to withdraw it during the six month period.<br>&emsp;&emsp;If an offer is to be effectively withdrawn, its revocation must be communicated to the offeree."
    ],
    "NAME": "Mountford v Scott",
    "CATEGORY": "Responses to Offers &mdash; Withdrawal of Offer (and Lapse)",
    "CITATION": "Mountford v Scott [1975] All ER 198",
    "RELATED": [
        "Routledge v Grant",
        "Byrne & Co v Van Tienhoven",
        "Ramsgate Victoria Hotel v Montefiore",
        "Shuey v United States",
        "Dickinson v Dodds",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "Errington v Errington and Woods",
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "R v Clarke",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Stevenson, Jacques & Co v MacLean",
        "Daulia Ltd v Four Millbank Nominees"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Withdrawal of Offer (and Lapse)"
    ],
    "YEAR": "1880",
    "NUMBER": "35",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;On 1 October the defendants wrote to the plaintiffs, offering to sell them 1000 boxes of tinplates. During the following week, the price of tinplate rose sharply, and on 8 October the defendants wrote again to withdraw their offer. This letter reached the defendants on 20 October, but they had already telegraphed their acceptance of the offer on 11 October. Held that there was a contract. The acceptance had been made before the intended withdrawal had been communicated to the plaintiffs.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lindley J held that the question whether withdrawal required communication to become effective was not covered by binding English authority. He examined various persuasive authorities (American law, academic writing and principles governing acceptance) and rejected the submission that an uncommunicated withdrawal was valid: \u201cIf the defendants&#8217; contention were to prevail no person who had received an offer by post and had accepted it would know his position until he had waited such a time as to be quite sure that a letter withdrawing the offer had not been posted before his acceptance of it. It appears to me that both legal principles, and practical convenience require that a person who has accepted an offer not know to him to have been revoked, shall be in a position safely to act upon the footing that the offer and acceptance constitute a contract binding on both parties\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look </span></span><br>&emsp;&emsp;<span class=\"it\">This decision seems so obviously in accordance with practicality and fairness that you may wonder whether there are any arguments at all in favour of the offerors&#8217; (the defendants&#8217;) contention. To the mind of an English common lawyer, perhaps not. However, this is an occasion on which the principle that the parties must be <b>ad idem</b> can be pressed into service to attempt to make the defendants&#8217; case. Of course there is no point at which they and the other side were <b>ad idem</b>. But the principle or ideal of being <b>ad idem</b> is tempered by English contract law&#8217;s concern with objective appearances. To a reasonable person in the offeree&#8217;s position, the parties appear to be <b>ad idem</b>, and it is that appearance which is determinative. </span><br>&emsp;&emsp;<span class=\"it\">Although withdrawal of offer must be communicated to the offeree, the communication need not be either formal or direct.</span>"
    ],
    "NAME": "Byrne & Co v Van Tienhoven",
    "CATEGORY": "Responses to Offers &mdash; Withdrawal of Offer (and Lapse)",
    "CITATION": "Byrne &amp; Co v Van Tienhoven (1880) 5 CPD 344",
    "RELATED": [
        "Dickinson v Dodds",
        "Mountford v Scott",
        "Shuey v United States",
        "Ramsgate Victoria Hotel v Montefiore",
        "Routledge v Grant",
        "BRS v Arthur Crutchley Ltd",
        "Stevenson, Jacques & Co v MacLean",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Tinn v Hoffman & Co",
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "Hyde v Wrench"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1876",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case concerned a written offer to sell certain houses to the plaintiff. It was expressed to be open until a stated deadline. The day before the deadline expired, the plaintiff was informed by somebody else that the offeror was now offering the property to a third party. In fact an agreement for sale was concluded with the third party on that day. The next day, the plaintiff purported to accept the offer before the deadline expired. The Court of Appeal allowed an appeal against the order for specific performance granted by the trial judge. No contract had come into being between the parties. The plaintiff had known, when he purported to accept, that the offeror was no longer minded to sell to him. In these circumstances, the offer had effectively been withdrawn.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;James LJ explained the principle on which he decided this case as follows: \u201cIt appears to me that there is neither principle or authority for the proposition that there must be an express and actual withdrawal of the offer, or what is called a retractation. It must, to constitute a contract, appear that the two minds were at one, at the same moment of time, that is, that there was an offer continuing up to the time of the acceptance. If there was not such a continuing offer, then the acceptance comes to nothing. Of course it may well be that the one man is bound in some way or other to let the other man know that his mind with regard to the offer has changed; but in this case, beyond all question, the Plaintiff knew that Dodds was no longer minded to sell the property to him as plainly and clearly as if Dodds had told him in so many words, \u201cI withdraw the offer\u201d. This is evident from the Plaintiff&#8217;s own statements in the bill\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This case slots quite neatly into place provided it is seen in the same light as the \u201csnapping up\u201d cases which were covered in the last lecture. The plaintiff here is quite as unable to accept an offer which he knows no longer tallies with its maker&#8217;s true intention as is an offeree who tries to snap up an offer which is clearly made by mistake.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">However, that is not quite the basis on which James LJ puts his judgment. Rather, the <b>ad idem</b> principle again makes an appearance; there must be at least a moment in time when the two parties are of the same mind, and here there is not. But nor was there any such moment in Byrne v Van Tienhoven, yet there a contract was found. Can the two cases be reconciled?</span><br>&emsp;&emsp;<span class=\"it\">They probably can. Certainly each seems to be rightly decided. In Byrne, the offeree accepts thinking that there is still an offer on the table. In Dickinson v Dodds, the offeree accepts thinking that there is probably not an offer on the table. Convenience and fairness justify the result in the first case. The principle lying behind the snapping up cases justifies the result in the second. They can be reconciled on the basis that both are expressions of the objective perspective on intention, limited always by the gloss that the objective view must be the one that is reasonable to take on the known facts.</span><br>&emsp;&emsp;<span class=\"it\">There is more to be said about Dickinson v Dodds. It must have appeared on the evidence that the plaintiff knew the deal with the third party was as good as done. Otherwise, it is hard to explain why the mere knowledge that the property had been <b>offered </b>elsewhere should have fixed the plaintiff with the realisation that it was no longer being offered to him (this point is correctly taken in Beale, Bishop &amp; Furmston&#8217;s Contract Cases and Materials). Offers to sell the same property might quite well be made to more than one party, although this would be a risky tactic since it could result in multiple and mutually exclusive contracts. Casebook accounts of Dickinson v Dodds seem to understate how much the court must have found the plaintiff to know about the offeror&#8217;s change of heart. For the correct account, see the final sentence in the quotation from James LJ&#8217;s judgment above.</span><br>&emsp;&emsp;<span class=\"it\">On a separate point, note the statement in Mellish LJ&#8217;s judgment that \u201cthe sale of the property to Allan [the third party] was first in point of time\u201d. This needs careful handling. One might conclude that the contract made first, where there are offers out to multiple offerees, takes precedence over later acceptances involving the same property. This is true as a matter of equity only (and Dickinson v Dodds was an action for the equitable remedy of specific performance). It is not true of common law, which takes no account of precedence. It regards mutually inconsistent contracts as equally valid, leaving up to the parties involved the choice of which to perform and which to breach. <span class=\"bd\">Treitel</span>, at para 2-033, obscures this point, citing a case (Potter v Sanders) as if it established a general principle of precedence. It does not; the case is concerned only with an equitable remedy. </span>"
    ],
    "CATEGORY": "Responses to Offers &mdash; Withdrawal of Offer (and Lapse)",
    "CITATION": "Dickinson v Dodds (1876) 2 Ch 463",
    "CATEGORIES": [
        "Responses to Offers",
        "Withdrawal of Offer (and Lapse)"
    ],
    "RELATED": [
        "Mountford v Scott",
        "Routledge v Grant",
        "Shuey v United States",
        "Byrne & Co v Van Tienhoven",
        "Ramsgate Victoria Hotel v Montefiore",
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "Stevenson, Jacques & Co v MacLean",
        "Errington v Errington and Woods",
        "Tinn v Hoffman & Co",
        "R v Clarke",
        "BRS v Arthur Crutchley Ltd",
        "Luxor (Eastbourne) Ltd v Cooper"
    ],
    "NUMBER": "36",
    "TYPE": "Case",
    "NAME": "Dickinson v Dodds",
    "FLAGS": [
        "Treitel"
    ]
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Withdrawal of Offer (and Lapse)"
    ],
    "YEAR": "1865",
    "NUMBER": "37",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The US Secretary of War published a proclamation in newspapers and elsewhere to the effect that a reward would be given for information leading to the arrest of named criminal suspects. No deadline for the receipt of the information was given. Seven months later, an order revoking the offer of reward was published. The following year, the claimant gave relevant information to the authorities. His claim for the reward failed before the US Supreme Court on the basis that it had been validly withdrawn, despite the fact that the withdrawal had not come to his notice.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The claimant&#8217;s unawareness that the offer of the reward had been withdrawn is described by Strong J as \u201can immaterial fact\u201d. To assess this assertion in its context, one should bear in mind that many offers of unilateral contracts, like the one in this case, are made generally, to \u201cthe whole world\u201d. There must be freedom to withdraw such an offer, because basic contractual principle dictates that any offer can be withdrawn provided it has not yet been accepted, and provided the offeror is not found to have contracted to keep the offer open. Since it would be impractical if not impossible to communicate the fact of withdrawal individually to every person who may have seen the offer, the rule is that a withdrawal published in the same way that the offer was originally made will be effective.<br>&emsp;&emsp;Where an offer is not limited in duration, the rule is that it lapses after the expiration of a reasonable time."
    ],
    "NAME": "Shuey v United States",
    "CATEGORY": "Responses to Offers &mdash; Withdrawal of Offer (and Lapse)",
    "CITATION": "Shuey v United States (1865) 92 US 73",
    "RELATED": [
        "Ramsgate Victoria Hotel v Montefiore",
        "Byrne & Co v Van Tienhoven",
        "Dickinson v Dodds",
        "Routledge v Grant",
        "Mountford v Scott",
        "Daulia Ltd v Four Millbank Nominees",
        "Williams v Carwardine",
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "Stevenson, Jacques & Co v MacLean",
        "Hyde v Wrench",
        "BRS v Arthur Crutchley Ltd",
        "Tinn v Hoffman & Co"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Withdrawal of Offer (and Lapse)"
    ],
    "YEAR": "1866",
    "NUMBER": "38",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant applied for shares in the plaintiff company on 8 June 1864 (the offer). He heard nothing more until 23 November 1864, when the company sent him a letter asking him to pay for the shares (this letter was putatively the acceptance). The defendant no longer wanted the shares, and argued that his offer had lapsed before acceptance was made. A very briefly reported judgment affirmed that he was correct.",
        "<span class=\"ud\"><span class=\"bd\">A closer look </span></span><br>&emsp;&emsp;<span class=\"it\">It may be of interest to see the way in which a later judge examines the underlying rationale for this rule. The rule itself is uncontroversial, and it may well be that little will turn on what ground it is put, but the following passage from Buckley J&#8217;s judgment in Manchester Diocesan Council for Education v Commercial and General Investments (1970) gives some insight into the values which inform a mid-twentieth century consideration of contract formation: \u201cThere appear to me to be two possible views on methods of approaching the problem. First, it may be said that by implication the offer is made on terms that, if it is not accepted within a reasonable time, it must be treated as withdrawn. Alternatively, it may be said that, if the offeree does not accept the offer within a reasonable time, he must be treated as having refused it. On either view the offer would cease to be a live one on the expiration of what in the circumstances of the particular case should be regarded as a reasonable time for acceptance. The first of these alternatives involves implying a term that if the offer is not accepted within a reasonable time, it shall be treated as withdrawn or lapsing at the end of that period if it has not then been accepted; the second is based on an inference to be drawn from the conduct of the offeree, that is, that having failed to accept the offer within a reasonable time he has manifested an intention to refuse it. If, in the first alternative, the time which the offeror is to be treated as having set for acceptance is to be such a time as is reasonable at the date of the offer, what is reasonable must depend on circumstances then existing and reasonably likely to arise during the continuance of the offer; but it would not be unlikely that the offeror and offeree would make different assessments of what would be reasonable even if, as might quite possibly not be the case, they based those judgments on identical known and anticipated circumstances. No doubt a court could resolve any dispute about this, but this approach clearly involves a certain degree of uncertainty about the precise terms of the offer. [\u2026] The second alternative on the other hand involves simply an objective assessment of facts and the determination of the question whether on the facts the offeree should in fairness to both parties be regarded as having refused the offer.</span><br>&emsp;&emsp;<span class=\"it\">It does not seem to me that either party is in greater need of protection by the law in this respect than the other. Until his offer has been accepted it is open to the offeror at any time to withdraw it or to put a limit on the time for acceptance. On the other hand, the offeree can at any time refuse the offer, or, unless he has been guilty of unreasonable delay, accept it. Neither party is at a disadvantage. Unless authority constrains me to do otherwise, I am strongly disposed to prefer the second alternative to the first\u201d.</span>"
    ],
    "NAME": "Ramsgate Victoria Hotel v Montefiore",
    "CATEGORY": "Responses to Offers &mdash; Withdrawal of Offer (and Lapse)",
    "CITATION": "Ramsgate Victoria Hotel v Montefiore (1866) LR 1 Ex 109",
    "RELATED": [
        "Mountford v Scott",
        "Byrne & Co v Van Tienhoven",
        "Shuey v United States",
        "Routledge v Grant",
        "Dickinson v Dodds",
        "Stevenson, Jacques & Co v MacLean",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "Williams v Carwardine",
        "Errington v Errington and Woods",
        "Daulia Ltd v Four Millbank Nominees",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Acceptance",
        "Knowledge of Offer"
    ],
    "YEAR": "1833",
    "NUMBER": "39",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A reward having been offered for information leading to the discovery of a murderer, the plaintiff gave the relevant information. She had been attacked and severely beaten by the individual in question, and believing she did not have long to live, she gave the information in order to ease her conscience. The jury found that her motive in giving it had not been the offer of a reward, but the judge at first instance nevertheless directed a verdict in her favour. Held, as far as one can tell from the report, that a panel of appeal judges decided the plaintiff&#8217;s knowledge of the offer was to be deduced from the circumstances, and that her motivation in responding to it was irrelevant.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">You may like to take a look at the extract from the report as it is given in Smith &amp; Thomas&#8217;s casebook. It consists of an exchange between the judges hearing the appeal, with a one-line contribution from counsel for the defendant (looking like an own goal, or a very candid concession, depending on one&#8217;s view). There are several points of minor interest in it. One is that not all the judges are correct in what they say. Another is that the judge who heard the case at first instance is sitting on the appeal from his own decision. This was by no means unusual at the time.</span><br>&emsp;&emsp;<span class=\"it\">The case, such as it is, gives an insight into the state of the reported law from which the principles of contract were to be extracted, largely in the course of the nineteenth century. One might almost conclude that at this fairly early date, the issue at stake in this exchange is being judicially treated as if it were a problem of evidence \u2013 specifically, a problem of relevance or irrelevance. Principle must underlie what the judges are doing, but it still appears more as judicial know-how rather than the deployment of rules of general application.</span><br>&emsp;&emsp;<span class=\"it\">The next case, decided 30 years later, provides an interesting comparison. There is no shortage of principle, but its application leads to dissent.</span>"
    ],
    "NAME": "Williams v Carwardine",
    "CATEGORY": "Responses to Offers &mdash; Acceptance &mdash; Knowledge of Offer",
    "CITATION": "Williams v Carwardine (1833) 5 C &amp; P 566",
    "RELATED": [
        "R v Clarke",
        "Tinn v Hoffman & Co",
        "Daulia Ltd v Four Millbank Nominees",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Errington v Errington and Woods",
        "Hyde v Wrench",
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "Stevenson, Jacques & Co v MacLean",
        "Shuey v United States",
        "Ramsgate Victoria Hotel v Montefiore",
        "Dickinson v Dodds"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Acceptance",
        "Knowledge of Offer"
    ],
    "YEAR": "1873",
    "NUMBER": "40",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The parties corresponded by post about the sale and purchase of 800 tons of iron. One offered to sell for 69 shillings a ton. Before that letter arrived, the other wrote offering to buy at the same price. In fact the second letter was interpreted by the majority of the court as a counter offer, because it also referred to obtaining more iron at a lower price, but the problem of identical offers crossing in the post was dealt with, obiter, by the majority. They decided that such cross-offers did not form a contract. A further communication would be needed by way of response to one of the two offers.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Blackburn J, in the majority, explained his view of the situation as follows: \u201cWhen a contract is made between two parties there is a promise by one in consideration of the promise made by the other; there are two assenting minds, the parties agreeing in opinion, and one having promised in consideration of the promise of the other \u2013 there is an exchange of promises; but I do not think exchanging offers would, upon principle, be at all the same thing\u2026. The promise or offer being made on each side in ignorance of the promise or offer made on the other side neither of them can be construed as an acceptance of the other. Either of the parties may write and say \u201cI accept your offer, and, as you perceive, I have already made a similar offer to you,\u201d and then people would know what they were about\u2026\u201d.<br>&emsp;&emsp;Honyman J, dissenting on this issue, said this: \u201cI cannot see why the fact of the letters crossing each other should not make a good contract. If I say I am willing to buy a man&#8217;s house on certain terms and he at the same moment says he is willing to sell it, and these two letters are posted so that they are irrevocable with respect to the writers, why should that not constitute a good contract? The parties are <i>ad idem</i> at one and the same moment\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Blackburn J&#8217;s opinion, requiring the exchange of promises, is strongly reliant on the principle of consideration or bargain. This is not surprising, since the account of contracts as bargains enjoyed its greatest prestige at this time. However, it is not altogether obvious why agreement must necessarily take the form of bargain; agreement is a fact, however it comes about. Grove J goes even further, requiring there to have been an opportunity for \u201cconsideration\u201d by which he clearly means \u201creflection\u201d, before an offer can be accepted. This is certainly not what \u201cconsideration\u201d usually means in a contractual context. One is left with the impression that the emerging \u201cprinciples\u201d of contract law have not yet acquired wholly stable meanings at the time of this case. Nowadays, one would simply analyse the situation in </span>Tinn v Hoffman<span class=\"it\"> in terms of the need for communication, and the need for reasonable certainty. </span><br>&emsp;&emsp;<span class=\"it\">Honyman J, dissenting, applies a well-recognised principle, but again arguably allows it to take inappropriate control of the analysis. In his view if the parties are <b>ad idem</b> that is all that is necessary; there must therefore be a contract. We have already seen that being <b>ad idem</b> works best as an ideal in contract law, explaining for instance why the courts attribute legal consequences to agreements. It words less well as an analytic tool. Here, it leads Honyman J to find the parties bound to each other when neither yet knows of it. That is not a sensible result.</span><br>&emsp;&emsp;<span class=\"it\">In the next case, it is confirmed that knowledge of an offer is required before it can be validly accepted.</span>"
    ],
    "NAME": "Tinn v Hoffman & Co",
    "CATEGORY": "Responses to Offers &mdash; Acceptance &mdash; Knowledge of Offer",
    "CITATION": "Tinn v Hoffman &amp; Co (1873) 29 LT 271",
    "RELATED": [
        "R v Clarke",
        "Williams v Carwardine",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Daulia Ltd v Four Millbank Nominees",
        "Errington v Errington and Woods",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "Mountford v Scott",
        "BRS v Arthur Crutchley Ltd",
        "Routledge v Grant",
        "Hyde v Wrench",
        "Ramsgate Victoria Hotel v Montefiore",
        "Byrne & Co v Van Tienhoven"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1927",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The Government of Western Australia offered a reward for information leading to the arrest of suspected murderers, and a pardon to an accomplice who gave the information. Clarke did give the information, but later admitted that his only reason for doing so had been to clear himself of a charge of murder. He later sued the Crown for the reward, although he conceded that he had not had the reward in mind at the time he came forward with the information.<br>&emsp;&emsp;Held that he had not validly accepted the offer of the reward. He had been unaware of the existence of the offer; to have forgotten about it was the same as never knowing of it.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This seems to be a clear case, but some commentators do not regard it as such. Bishop, Beale and Furmston (<i>Contract Cases and Materials</i>) conclude that \u201cit is not necessary that the offer is the main motivation for the offeree acting, provided he or she is aware of the offer\u201d. However<i>, R v Clarke</i> and <i>Williams v Carwardine</i> decide that motivation is irrelevant, as long as there is factual awareness of the offer. <span class=\"bd\">McKendrick</span>, quoting <i>Chitty on Contracts</i> (ed. Beale), states that: \u201c an act which is wholly motivated by factors other than the existence of the offer cannot amount to an acceptance; but if the existence of the offer plays some part, however small, in inducing a person to do the required act, there is a valid acceptance of the offer\u201d. Apart from the fact that it is unattractive to have to distinguish between the absence of a motive and its presence to a vanishingly small extent, <i>R v Clarke</i> does not support Chitty&#8217;s view. Motive is irrelevant, providing there is knowledge of the offer.<br>&emsp;&emsp;An overview of the nature of unilateral contracts has already been given. Now the subject must be revisited in somewhat greater detail, because the location of the moment of acceptance in these arrangements has proved problematic.<br>&emsp;&emsp;The offer of a unilateral contract is a promise to pay money, or to confer some other benefit, provided the offeree behaves in a certain way. The required behaviour amounts to the performance of a <i>condition</i>. The offeror is not obliged to honour his promise until the condition is fully performed \u2013 this is uncontroversial. The difficulty consists in deciding at what moment the offer of the unilateral contract is accepted, and therefore, until what point the offeror remains free to withdraw the offer. On a strict view, which receives some support from the decided cases, acceptance only takes place when the condition is fully performed. More recent authority suggests that there is acceptance as soon as the offeree embarks on performance of the condition.<br>&emsp;&emsp;The problem with the strict view is traditionally expressed in the \u201cwalk to York\u201d example. The offeror promises the offeree a sum of money if the offeree will walk to York. May the offeror really take advantage of the rules of contract formation to act on a change of mind and withdraw that offer as the offeree approaches York? If acceptance requires arrival at York, the answer seems to be yes."
    ],
    "CATEGORY": "Responses to Offers &mdash; Acceptance &mdash; Knowledge of Offer",
    "CITATION": "R v Clarke (1927) 40 CLR 227",
    "CATEGORIES": [
        "Responses to Offers",
        "Acceptance",
        "Knowledge of Offer"
    ],
    "RELATED": [
        "Williams v Carwardine",
        "Tinn v Hoffman & Co",
        "Daulia Ltd v Four Millbank Nominees",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Errington v Errington and Woods",
        "Dickinson v Dodds",
        "Shuey v United States",
        "Responses to Offers - Intro",
        "BRS v Arthur Crutchley Ltd",
        "Hyde v Wrench",
        "Routledge v Grant",
        "Stevenson, Jacques & Co v MacLean"
    ],
    "NUMBER": "41",
    "TYPE": "Case",
    "NAME": "R v Clarke",
    "FLAGS": [
        "McKendrick"
    ]
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Acceptance",
        "Acceptance In Unilateral Contracts"
    ],
    "YEAR": "1941",
    "NUMBER": "42",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The appellants owned two cinemas, which they wished to sell. They arranged with the respondent that if he introduced a purchaser who did indeed go on to purchase the cinemas, they would pay him \u00a310,000 commission. The respondent did introduce a willing purchaser, but the appellants disposed of the cinemas to another party. The respondent claimed the commission, or alternatively damages, arguing that a term should be implied into the contract that the appellants would \u201cdo nothing to prevent the satisfactory completion of the transaction so as to deprive the respondent of the agreed commission\u201d. The House of Lords found for the appellants, denying that commission was payable unless the respondent&#8217;s client bought the cinemas, and rejecting the proposed implied term.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;This case can be taken as deciding that (at least on its own facts) there was no acceptance of the offer of a unilateral contract until the condition were fully performed, so that until that time the offeror could withdraw the offer or render its acceptance impossible. However, the reasoning in the case is not predominantly along those lines. It largely turns on whether the implied term contended for by the respondent can properly be introduced into the contract. To understand the House of Lords&#8217; decision that it cannot, it is essential to realise that the test for the implying of a term into a contract is <i>necessity</i>. If it is not possible to discharge the heavy burden of demonstrating that the implication of a term is necessary, it will not be implied even though it might be thought a reasonable or attractive improvement to the contract.<br>&emsp;&emsp;It is in this light that the following passage from the speech of Lord Russell of Killowen should be read: \u201cI can find no safe ground on which to base the introduction of any such implied term. Implied terms, as we all know, can only be justified under the compulsion of some necessity. No such compulsion or necessity exists in the case under consideration. The agent is promised a commission if he introduces a purchaser at a specified or minimum price. The owner is desirous of selling. The chances are largely in favour of the deal going through, if a purchaser is introduced. [\u2026] A sum of \u00a310,000 (the equivalent of the remuneration of a year&#8217;s work by a Lord Chancellor) for work done within a period of eight or nine days is no mean reward, and is one well worth a risk. There is no lack of business efficacy in such a contract <i>[read \u201carrangement\u201d]</i>, even though the principal is free to refuse to sell to the agent&#8217;s client\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Lord Russell also deals with the contention that there ought to be a claim in quasi contract/restitution on a <b>quantum meruit</b> (\u201chow much the claimant deserved to be paid\u201d) if the offeror fails to allow the sale to go through. A <b>quantum meruit</b> action is not available here, because the offer of the unilateral contract itself fully specifies the condition on which commission will be payable, and cannot be circumvented merely because the condition has not been fulfilled.</span>"
    ],
    "NAME": "Luxor (Eastbourne) Ltd v Cooper",
    "CATEGORY": "Responses to Offers &mdash; Acceptance &mdash; Acceptance In Unilateral Contracts",
    "CITATION": "Luxor (Eastbourne) Ltd v Cooper [1941] AC 108",
    "RELATED": [
        "Daulia Ltd v Four Millbank Nominees",
        "Errington v Errington and Woods",
        "Williams v Carwardine",
        "R v Clarke",
        "Tinn v Hoffman & Co",
        "Dickinson v Dodds",
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "Stevenson, Jacques & Co v MacLean",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "Hyde v Wrench",
        "Responses to Offers - Intro",
        "Mountford v Scott"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1952",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A father bought a house for his son and daughter-in-law to live in, and promised them that he would transfer it into their names if they paid off the mortgage on it. They began to pay the mortgage in instalments, but before it was fully paid off, the father died and his widow brought an action for possession of the house against the daughter-in-law. The action failed; the offer to transfer the house was an offer of a unilateral contract which was accepted by the couple as soon as they began to pay off the mortgage. The father (later, his estate) would not be bound to transfer the house until the condition of paying off the mortgage had been fully performed, but once performance of that condition had already begun it was too late for the offer to be withdrawn.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This outcome does not follow because of some peculiarity in the law of real property (and in fact the nature of the couple&#8217;s interest in the land pending complete payment of the mortgage is none too easy to classify in terms of land law). It simply turns upon <span class=\"bd\">Denning LJ</span>&#8216;s view of when acceptance occurs on the unilateral contract model in these circumstances. A competent account of how the case is to be distinguished from <i>Luxor</i> should begin by broadly characterising what is happening in the two situations respectively \u2013 with a view to emphasising the distinctions between them.<br>&emsp;&emsp;A position of general principle is taken up in the next case, and if one wants a resolution to the problem of acceptance in unilateral contracts, it should probably be taken from here."
    ],
    "CATEGORY": "Responses to Offers &mdash; Acceptance &mdash; Acceptance In Unilateral Contracts",
    "CITATION": "Errington v Errington and Woods [1952] 1 KB 290",
    "CATEGORIES": [
        "Responses to Offers",
        "Acceptance",
        "Acceptance In Unilateral Contracts"
    ],
    "RELATED": [
        "Daulia Ltd v Four Millbank Nominees",
        "Luxor (Eastbourne) Ltd v Cooper",
        "R v Clarke",
        "Williams v Carwardine",
        "Tinn v Hoffman & Co",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "Routledge v Grant",
        "Shuey v United States",
        "BRS v Arthur Crutchley Ltd",
        "Ramsgate Victoria Hotel v Montefiore",
        "Stevenson, Jacques & Co v MacLean",
        "Responses to Offers - Intro"
    ],
    "NUMBER": "43",
    "TYPE": "Case",
    "NAME": "Errington v Errington and Woods",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Responses to Offers",
        "Acceptance",
        "Acceptance In Unilateral Contracts"
    ],
    "YEAR": "1978",
    "NUMBER": "44",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs alleged they had been promised that if they attended the defendants&#8217; offices at a given time with a deposit and their part of a contract for the sale of land duly signed, the defendants would sell them a portfolio of properties. They attended on time with the required documents, but the defendants refused to exchange contracts, asserted that exchange was part of the condition of the contract, and thus argued that they had validly withdrawn their offer before completion of its condition. Held that there was complete performance of the stated condition, so that the attempted withdrawal came too late. However, if that were wrong, the defendants were at any event not free to prevent fulfilment of the condition. There was an implied, subsidiary promise that once performance of the condition had begun, its completion would not be prevented. This implied promise was accepted by embarking on performance.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The primary resolution of the issue at stake, and the further point of principle, are explained by Goff LJ: \u201cThe concept of a unilateral or \u201cif\u201d contract is somewhat anomalous, because it is clear that, at all events, until the offeree starts to perform the condition, there is no contract at all, but merely an offer which the offeror is free to revoke. Doubts have been expressed whether the offeror becomes bound so soon as the offeree starts to perform or satisfy the condition, or only when he has fully done so. In my judgment, however, we are not concerned in this case with any such problem, because in my view the plaintiffs had fully performed or satisfied the condition when they presented themselves with a banker&#8217;s draft for the deposit and their part of the written contract for sale duly engrossed and signed, and there tendered the same, which I understand to mean proffered it for exchange. Actual exchange, which never took place, would not in my view have been part of the satisfaction of the condition but something additional which was inherently necessary to be done by the plaintiffs to enable, not to bind, the defendants to perform the unilateral contract.<br>&emsp;&emsp;Even if my reasoning so far be wrong the conclusion in my view is still the same for the following reasons. Whilst I think that the true view of a unilateral contract must in general be that the offeror is entitled to require full performance of the condition which he has imposed and short of that he is not bound, that must be subject to an important qualification, which stems from the fact that there must be an implied obligation on the part of the offeror not to prevent the condition becoming satisfied, which obligation it seems to me must arise as soon as the offeree starts to perform. Until then the offeror can revoke the whole thing, but once the offeree has embarked on performance it is too late for the offeror to revoke his offer.",
        "<span class=\"ud\"><span class=\"bd\">A closer look </span></span><br>&emsp;&emsp;<span class=\"it\">Must there be such an implied obligation? There are hints in earlier cases that Goff LJ is not alone in thinking that there must. In Offord v Davies (1962), Erle CJ said of the offer of a unilateral contract that \u201cThis promise by itself creates no obligation. It is in effect conditioned to be binding if the plaintiff acts upon it, either to the benefit of the defendants, or to the detriment of himself. But, <b>until the condition has been at least in part fulfilled</b>, the defendants have the power of revoking it\u201d. There is further discussion in that case tending the same way. In Shuey v United States (above), Strong J said of another offer of a unilateral contract: \u201cIt is not to be doubted that the offer was revocable at any time before it was accepted, <b>and before anything had been done in reliance upon it</b>\u201d. Goff LJ&#8217;s device certainly works from the technical point of view. It is a similar mechanism to the one by which <span class=\"bd\">Bingham MR</span> gave binding effect to the arrangement for dealing with tenders in Blackpool &amp; Fylde (Lecture 2).</span><br>&emsp;&emsp;<span class=\"it\">On the other hand, can Goff LJ&#8217;s principle stand with the decision of the House of Lords in Luxor v Cooper, where the need to imply such an obligation was considered and rejected? Even if it can, by virtually confining the earlier decision to its own facts, Daulia comes close to upsetting other authorities. Could it be used to generate a different outcome to the problem in Routledge v Grant (above)?</span><br>&emsp;&emsp;<span class=\"it\">Luxor v Cooper was not cited in Daulia. That may seem to weaken the case, particularly when taken in combination with the fact that Goff LJ&#8217;s principle was in his own opinion unnecessary for the disposal of the case, and therefore obiter. However, Goff LJ is most unlikely to have been personally ignorant of House of Lords authority. The very fact that he chose to make a declaration of principle in Daulia when the case did not strictly require it adds urgency to his view. If a choice has to be made between the line taken in Luxor, and that of Daulia, (leaving to one side the vital matter of context), Daulia should probably be preferred. </span><br>&emsp;&emsp;<span class=\"it\">It is worth standing back to survey the walk to York once again. Professor Maurice Wormser, in \u201cThe True Conception of Unilateral Contracts\u201d (26 Yale Law Journal 136) does just that, using the American equivalent of the Walk and the late withdrawal of the promise to remunerate it. He is still persuaded by the strict view:</span><br>&emsp;&emsp;<span class=\"it\">\u201cThe objection is made, however, that it is very \u201chard\u201d upon B that he should have walked half-way across the Brooklyn Bridge and should get no compensation. This suggestion, invariably advanced, might be dismissed with the remark that \u201chard\u201d cases should not make bad law. But going a step further, by way of reply, the pertinent inquiry at once suggests itself, \u201cWas B bound to walk across the Brooklyn Bridge?\u201d The answer to this is obvious. By hypothesis, B was not bound to walk across the Brooklyn Bridge\u2026. If B was not bound to continue to cross the bridge, if B is will-free, why should not A also be will-free? Suppose that after B has crossed half the bridge he gets tired and tells A that he refuses to continue crossing. B, concededly, would be perfectly within his rights in so speaking and acting. A would have no cause of action against B for damages. If B has a <i>locus poenitentiae</i>, so has A\u2026\u201d.</span>"
    ],
    "NAME": "Daulia Ltd v Four Millbank Nominees",
    "CATEGORY": "Responses to Offers &mdash; Acceptance &mdash; Acceptance In Unilateral Contracts",
    "CITATION": "Daulia Ltd v Four Millbank Nominees Ltd [1978] Ch 231",
    "RELATED": [
        "Luxor (Eastbourne) Ltd v Cooper",
        "Errington v Errington and Woods",
        "Williams v Carwardine",
        "Tinn v Hoffman & Co",
        "R v Clarke",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "Shuey v United States",
        "Stevenson, Jacques & Co v MacLean",
        "Dickinson v Dodds",
        "Routledge v Grant",
        "Byrne & Co v Van Tienhoven"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Communication of Acceptance"
    ],
    "NUMBER": "45",
    "TYPE": "Concept",
    "NAME": "Communication of Acceptance - Intro",
    "CATEGORY": "Communication of Acceptance",
    "RELATED": [
        "Acceptance By Silence/Inactivity",
        "Postal Rule",
        "Acceptance By Conduct",
        "Transmission of Acceptance",
        "Atiyah's Understanding of Consideration",
        "2. Terms which supplement the contract (warranties etc)",
        "Reactions to the innominate analysis",
        "Intention to Create Legal Relations - Conclusion",
        "The Consumer Rights Act 2015",
        "Performance of Existing Legal Duties as Consideration",
        "Further aspects of the remedial scheme",
        "Section 1: treating a contract term as a misrepresentation"
    ],
    "SUMMARY": [
        "_As a general rule, acceptance must be communicated to the offeror, and is deemed effective only from the moment of such communication. However, there are certain exceptions to this rule, and some of them are not entirely clear-cut.<br>&emsp;&emsp;To decide when acceptance takes effect is a matter of importance. As already seen, it will determine the time up until which a withdrawal of the offer remains an option for the offeror. It will also determine the place at which the contract is concluded, since this is deemed to be the place at which acceptance is received. The place of the contract&#8217;s making may in turn determine the national law to which it is subject, unless the parties have specifically agreed the governing law, and various procedural consequences may also follow."
    ]
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Acceptance By Conduct"
    ],
    "NUMBER": "46",
    "FLAGS": [
        "Bingham"
    ],
    "NAME": "Acceptance By Conduct",
    "CATEGORY": "Communication of Acceptance &mdash; Acceptance By Conduct",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Acceptance By Conduct</span></span><br>&emsp;&emsp;The broadest exception to the rule that communication of acceptance is required consists in the principle that the offeree&#8217;s conduct may in certain circumstances validly constitute acceptance of an offer made to him. In unilateral contracts, this exception has in fact assumed the status of a general rule itself."
    ],
    "RELATED": [
        "Postal Rule",
        "Acceptance By Silence/Inactivity",
        "Communication of Acceptance - Intro",
        "Transmission of Acceptance",
        "The temptation to go beyond the dictionary",
        "Contract and tort measures compared",
        "Reactions to the innominate analysis",
        "Law Reform (Frustrated Contracts) Act 1943",
        "Breach of Contract - Introduction",
        "Implication from custom",
        "The basis of quantification",
        "Objective view of Intention and Agreement"
    ],
    "TYPE": "Concept"
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Acceptance By Conduct"
    ],
    "YEAR": "1893",
    "NUMBER": "47",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The facts of the case were given in lecture 2. For present purposes it is enough to recall that Mrs Carlill never informed the Carbolic Smoke Ball Company that she was accepting their offer of the \u00a3100 reward. On appeal, counsel for the company took this point to argue that there had been no acceptance.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Rejecting the company&#8217;s submission that there had been no acceptance and therefore no contract, Bowen LJ stated the following: \u201cThen it was said that there was no notification of acceptance of the contract [<i>sic</i>]. One cannot doubt that, as an ordinary rule of law, an acceptance of an offer made ought to be notified to the person who makes the offer, in order that the two minds may come together. Unless this is done, the two minds may be apart, and there is not that consensus which is necessary in English law \u2013 I say nothing about the laws of other countries \u2013 to make a contract. But there is this clear gloss to be made upon that doctrine, that as notification of acceptance is required for the benefit of the person who makes the offer, the person who makes the offer may dispense with notice to himself if he thinks it desirable to do so, and I suppose there can be no doubt that where a person in an offer made by him to another person, expressly or impliedly intimates a particular mode of acceptance as sufficient to make the bargain binding, it is only necessary for the other person to whom such offer is made to follow the indicated method of acceptance; and if the person making the offer, expressly or impliedly intimates in his offer that it will be sufficient to act on the proposal without communicating acceptance of it to himself, performance of the condition is a sufficient acceptance without notification\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">A minor point \u2013 there seems to be some tension here between Bowen LJ&#8217;s appeal to the need for consensus [ad idem], and his \u201cgloss\u201d upon it. The gloss is founded upon freedom of contract; the parties can agree what they want, and one for whom the law provides a protection (communication) can waive that benefit if he sees fit. No doubt this is fair and pragmatic, but it is difficult to reconcile with some of the more schematic judicial dicta in favour of consensus ad idem. Either that consensus exists, or it does not.</span><br>&emsp;&emsp;<span class=\"it\">The nature of the typical offer of a unilateral contract (usually intended as an inducement, as discussed earlier) leads naturally to an inference that the offeror wants action in response to the offer rather than assent. In bilateral contracts this inference is not nearly so natural, but the facts of the case may nevertheless justify it. </span><br>&emsp;&emsp;<span class=\"it\">The next case is a well-known authority showing that acceptance by conduct can occur in a bilateral contract.</span>"
    ],
    "NAME": "Carlill v Carbolic Smoke Ball Co",
    "CATEGORY": "Communication of Acceptance &mdash; Acceptance By Conduct",
    "CITATION": "Carlill v Carbolic Smoke Ball Co (1893) 1 QB 256",
    "RELATED": [
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "Brogden v Metropolitan Railway",
        "Vitol v Norelf",
        "L J Korbetis v Transgrain Shipping BV",
        "Dresdner Kleinwort Ltd v Attrill",
        "The Leonidas D",
        "Felthouse v Bindley",
        "Household Fire Insurance Co v Grant",
        "Re Selectmove Ltd",
        "Henthorn v Fraser",
        "Entores v Miles Far East Corporation",
        "The Brimnes"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Acceptance By Conduct"
    ],
    "YEAR": "1876",
    "NUMBER": "48",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Brogden, a coal merchant, had supplied coal to the Metropolitan Railway Company for two years without a formal contract. In order to regularise the situation, the company sent Brogden a draft contract. Brogden filled in various gaps in the contract, added the name of an arbitrator, and returned the form (this was regarded as the making of a counter-offer). The company&#8217;s manager put the form in his desk. Coal was then ordered and supplied in accordance with the draft contract, until Brogden denied any obligation to make further supplies. The company sued for breach of contract. Held by the House of Lords that a valid contract had come into existence; Brogden&#8217;s counter-offer had been accepted by the conduct of the company in placing orders for coal on its terms.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Although the detail which is most commonly remembered from this case is the putting of the draft contract into the desk drawer, be very clear that this was not the acceptance of Brogden&#8217;s counter-offer. Lord Blackburn, in a passage quoted in most of the casebooks, makes clear that what is required is the doing of \u201can extraneous act which clenches the matter, and shews beyond all doubt that each side is bound\u2026\u201d. He adds, with reference to the draft document in this case that \u201cif both parties have acted upon that draft and treated it as binding, they will be bound by it\u201d.<br>&emsp;&emsp;There seem to be different strands within this reasoning. The first amounts to this; if the offeree&#8217;s response to the offer indicates his acceptance (in the sense that it is verifiable, certain and cannot be withdrawn), then it will stand as an acceptance in law provided the offeror can be deemed to have waived the requirement of communication. The second really consists in the notion that an incomplete negotiation can be overtaken by the parties&#8217; subsequent conduct in acting as if they had reached agreement.<br>&emsp;&emsp;The first of these analyses derogates from the communication rule where it is possible to do so without forfeiting certainty. The second derogates in the name of realism, and reflects the courts&#8217; unwillingness to undo bargains upon which the parties have acted.<br>&emsp;&emsp;As the next case shows, however, there are limits to the use of realism to \u201csuppose\u201d a contract between the parties."
    ],
    "NAME": "Brogden v Metropolitan Railway",
    "CATEGORY": "Communication of Acceptance &mdash; Acceptance By Conduct",
    "CITATION": "Brogden v Metropolitan Railway (1876) 2 App Cas 666",
    "RELATED": [
        "Carlill v Carbolic Smoke Ball Co",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "Holwell Securities Ltd v Hughes",
        "Entores v Miles Far East Corporation",
        "Household Fire Insurance Co v Grant",
        "Henthorn v Fraser",
        "The Leonidas D",
        "Re Selectmove Ltd",
        "Eliason v Henshaw",
        "The Brimnes",
        "Dresdner Kleinwort Ltd v Attrill",
        "Felthouse v Bindley"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Acceptance By Conduct"
    ],
    "YEAR": "1984",
    "NUMBER": "49",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;British Steel received a letter of intent from Cleveland which led them to believe that a contract for the manufacture of steel components would shortly be agreed between the two companies. The letter included a request that British Steel would begin to manufacture the components in the interim, which they did. The parties continued to negotiate, but failed to reach agreement on various matters including the question whose standard terms were to govern. British Steel eventually claimed that no contract had arisen, but that they were entitled to recover reasonable remuneration on a quantum meruit basis for the work which they had done. Cleveland argued that a contract had come into being, under which they counter-claimed damages for late delivery of the components (claimed to be greater than Cleveland&#8217;s expenses). It was held that there was no contract, and that the restitutionary quantum meruit claim succeeded.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Rejecting Cleveland&#8217;s submission that a formal contract had arisen from the letter of intent and the action taken by British Steel in response to it, Robert Goff J found that it was impossible to say what the terms of this purported contract were, and that British Steel was not bound to continue work merely because they had started it. Robert Goff J went on to consider whether a unilateral contract had arisen between the parties. He said that it was analytically possible to find the request and conditional promise of payment, and that the mechanism would have the advantage of importing certain statutorily implied terms into the relationship between the parties. However, he concluded that the unilateral contract solution had to be rejected, since the vital issue of whose terms were to govern was wholly dependent on the stalled negotiations for the express bilateral contract which both parties had expected to govern their relationship.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Does this case in fact set a limit to what can be done by taking a \u201crealistic\u201d view of contract formation, or does it strike a blow for realism? Professor Atiyah takes the first view, and criticizes the Cleveland Bridge decision. However, the contrary view is also arguable. The fact is that parties who choose to act as if they had a contract, when in reality they are still negotiating, take a risk. There was no departure from realism in Robert Goff J&#8217;s careful attention to the reality of the negotiation between the parties. Instead he rejected the implication of contractual solutions which would have constituted legal fictions, and upheld a claim for expenditure above Cleveland&#8217;s considerably more remote claim for consequential loss. </span>"
    ],
    "NAME": "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
    "CATEGORY": "Communication of Acceptance &mdash; Acceptance By Conduct",
    "CITATION": "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd [1984] 1 All ER 504",
    "RELATED": [
        "Brogden v Metropolitan Railway",
        "Carlill v Carbolic Smoke Ball Co",
        "Vitol v Norelf",
        "Household Fire Insurance Co v Grant",
        "Eliason v Henshaw",
        "The Leonidas D",
        "Felthouse v Bindley",
        "Henthorn v Fraser",
        "Dresdner Kleinwort Ltd v Attrill",
        "Re Selectmove Ltd",
        "Holwell Securities Ltd v Hughes",
        "The Brimnes"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Acceptance By Silence/Inactivity"
    ],
    "NUMBER": "50",
    "TYPE": "Concept",
    "NAME": "Acceptance By Silence/Inactivity",
    "CATEGORY": "Communication of Acceptance &mdash; Acceptance By Silence/Inactivity",
    "RELATED": [
        "Acceptance By Conduct",
        "Postal Rule",
        "Communication of Acceptance - Intro",
        "Transmission of Acceptance",
        "Anticipatory Breach",
        "The circumstances of frustration",
        "The effects of frustration",
        "Breach of Contract - Introduction",
        "Importance of Interpretation",
        "Offer Distinguished From Invitation to Treat",
        "Part Payment of a Debt as Consideration",
        "The doctrine of fundamental breach"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Acceptance By Silence/Inactivity</span></span><br>&emsp;&emsp;If the offeror is free to vary the usual requirement that he be notified of the offeree&#8217;s acceptance, where do the boundaries to that freedom lie? Can the offeror nominate silence as adequate acceptance?"
    ]
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Acceptance By Silence/Inactivity"
    ],
    "YEAR": "1862",
    "NUMBER": "51",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Learning that he and his uncle had been at cross-purposes over price while discussing the sale and purchase of a horse, John Felthouse wrote to his uncle to point out the misunderstanding. In reply, his uncle wrote proposing that they split the difference ( a small amount), adding \u201cIf I hear no more about him, I consider the horse mine at \u00a330 15s\u201d. Vitally, John Felthouse did not reply, and no money was paid, but he did instruct an auctioneer employed by him to sell his farming stock at auction that the horse should be kept out of the sale, since it was already sold. In spite of this the horse was sold at auction to a third party. An action in the tort of conversion was brought against the auctioneer by John&#8217;s uncle, but failed. An acceptance by John of his uncle&#8217;s offer did not appear on the facts. No title to the horse had vested in the uncle, since no contract had been concluded between him and John.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Despite the fact that this case can be and often is presented as a matter of common law, it largely turns on a statutory provision. Applying the Statute of Frauds, the court held that there had been no compliance with the requirements of the Act; the alleged bargain between John and his uncle was not in writing, nor had there been payment of the purchase price or delivery of the property. Valid acceptance by conduct could have been found in John&#8217;s instruction to the auctioneer to keep the horse out of the sale, but this would not have satisfied the Act. In fact, the Statute of Frauds has since largely been repealed, and it can be convincingly argued that this case would now be decided differently. Does it therefore constitute authority for the principle for which it tends to be cited \u2013 that silence does not constitute acceptance?<br>&emsp;&emsp;Most commentators emphasise a single expression in the judgment of Willes J; \u201cit is also clear that the uncle had no right to impose upon the nephew a sale of his horse \u2026unless he chose to comply with the condition of writing to repudiate the offer\u201d. Excepting this one remark, which in any event is not a fair reflection of what John&#8217;s uncle was trying to do, the case turns on the Statute of Frauds. The later appeal judgments in the Court of Exchequer Chamber uphold the first instance decision exclusively on an application of the Act, with no reference to the impermissibility of silence as acceptance.<br>&emsp;&emsp;However, the good sense of Willes J&#8217;s observation in general terms cannot be contested, since it amounts to a check upon the practice of \u201cinertia selling\u201d \u2013 providing goods to consumers and stipulating that if no action is taken to return them within a specified time, they will be deemed to be accepted so that the purchaser owes the price. Even so, the dictum is less apposite than it was in the mid nineteenth century. Regulations have been put in place by Parliament (replacing the <i>Unsolicited Goods and Services Act 1971</i>) to impose tight limitations on this practice, so that the common law need no longer concern itself to police the area. Every argument for regarding <i>Felthouse v Bindley</i> as a leading case on acceptance by silence suffers on a closer examination; later developments have deprived it of almost all its force.<br>&emsp;&emsp;Notwithstanding all of this, there is one very sound reason for upholding the rule thought to be established by <i>Felthouse v Bindley</i>. The offeree&#8217;s silence is almost always capable of more than one explanation (eg. forgetfulness). It is contrary to the relatively formal analysis of offer and acceptance preferred by English law to allow an inherently ambiguous type of conduct to lead to mutually binding legal obligations, because it flouts the principle of certainty. Therefore, judicial opinion is against allowing silence to constitute acceptance, though reference is often made to exceptional circumstances in which it may be possible."
    ],
    "NAME": "Felthouse v Bindley",
    "CATEGORY": "Communication of Acceptance &mdash; Acceptance By Silence/Inactivity",
    "CITATION": "Felthouse v Bindley (1862) 11 CBNS 869",
    "RELATED": [
        "Dresdner Kleinwort Ltd v Attrill",
        "The Leonidas D",
        "Vitol v Norelf",
        "Re Selectmove Ltd",
        "Brogden v Metropolitan Railway",
        "Henthorn v Fraser",
        "Entores v Miles Far East Corporation",
        "Holwell Securities Ltd v Hughes",
        "Household Fire Insurance Co v Grant",
        "L J Korbetis v Transgrain Shipping BV",
        "Carlill v Carbolic Smoke Ball Co",
        "The Brimnes"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1985",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A dispute had arisen in connection with a charterparty, and had been referred to arbitration. Following the appointment of two arbitrators, nothing happened for five and a half years. At the end of that period, the shipowners argued (inter alia) that the arbitration agreement had been mutually abandoned by an agreement to be inferred from the parties&#8217; inactivity. The Court of Appeal held that the circumstances did not permit that inference to be made.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Robert Goff LJ explained his reasons for rejecting the shipowners&#8217; submission in the following terms: \u201cWe have here to consider an appeal from a decision that a binding agreement should be inferred from silence and inaction. Silence and inaction by both parties are apparently here considered to be capable of giving rise to an offer by one, and to an acceptance by the other communicated in response to that offer. This is most surprising. We have all been brought up to believe it axiomatic that acceptance of an offer cannot be inferred from silence, save in the most exceptional circumstances (as to which see, for example, G. H. <span class=\"bd\">Treitel</span>, <i>The Law of Contract</i> (6<sup>th</sup> edn, p. 27). Yet it is here suggested that silence and inaction can give rise both to an offer and to an acceptance; and there do not appear to be any special circumstances, in the silent abandonment of this reference to arbitration, which could justify any departure from general principle. In the absence of special circumstances, silence and inaction by a party to a reference are, objectively considered, just as consistent with his having inadvertently forgotten about the matter; or with his simply hoping that the matter will die a natural death if he does not stir up the other party; or with his office staff, or his agents, or his insurers, or his solicitors, being appallingly slow\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Robert Goff LJ&#8217;s recital of potential causes of delay is persuasive, and skillfully crafted in order to persuade. However, his equally plausible reference to one party&#8217;s hoping that the matter \u201cwill die a natural death\u201d rather begs the question. This is indeed what people do. Surely there comes a time when, as a result, the matter is dead. If that is the reality, the law is quite as much at fault if it cannot give it effect as it would be if it failed to take the measure of any other reality in the business world. Or is certainty a superior value, capable of trumping realism?</span>"
    ],
    "CATEGORY": "Communication of Acceptance &mdash; Acceptance By Silence/Inactivity",
    "CITATION": "The Leonidas D [1985] 1 WLR 925",
    "CATEGORIES": [
        "Communication of Acceptance",
        "Acceptance By Silence/Inactivity"
    ],
    "RELATED": [
        "Vitol v Norelf",
        "Felthouse v Bindley",
        "Re Selectmove Ltd",
        "Dresdner Kleinwort Ltd v Attrill",
        "Eliason v Henshaw",
        "Entores v Miles Far East Corporation",
        "Brogden v Metropolitan Railway",
        "Carlill v Carbolic Smoke Ball Co",
        "Household Fire Insurance Co v Grant",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "Henthorn v Fraser",
        "L J Korbetis v Transgrain Shipping BV"
    ],
    "NUMBER": "52",
    "TYPE": "Case",
    "NAME": "The Leonidas D",
    "FLAGS": [
        "Treitel"
    ]
},
{
    "YEAR": "1996",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The intending buyers of a cargo of propane sent a telex to the sellers in which they recorded that since the vessel would complete loading outside the contractually agreed period, they were repudiating the contract. The sellers made no response to this message. An arbitrator later held that the sellers&#8217; silence and failure to take further steps to perform the contract had amounted to an acceptance of the buyers&#8217; repudiation. This decision was upheld by the House of Lords.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord <span class=\"bd\">Steyn</span> made the following comment on the inferences to be drawn from silence and inactivity: \u201cSometimes in the practical world of businessmen an omission to act may be as pregnant with meaning as a positive declaration. While the analogy of offer and acceptance is imperfect, it is not without significance that while the general principle is that there can be no acceptance of an offer by silence, our law does in exceptional cases recognize acceptance of an offer by silence. Thus in <i>Rust v Abbey Life Assurance Co Ltd</i> [1979] 2 Lloyd&#8217;s Rep 334 the Court of Appeal held that a failure by a proposed insured to reject a proffered insurance policy for seven months justified on its own an inference of acceptance. See also <span class=\"bd\">Treitel</span> The Law of Contract (9<sup>th</sup> edn, 1995)\u2026. Similarly, in the different field of repudiation, a failure to perform may sometimes be given a colour by special circumstances and may only be explicable to a reasonable person in the position of the repudiating party as an election to accept the repudiation\u201d."
    ],
    "CATEGORY": "Communication of Acceptance &mdash; Acceptance By Silence/Inactivity",
    "CITATION": "Vitol SA v Norelf Ltd [1996] AC 600",
    "CATEGORIES": [
        "Communication of Acceptance",
        "Acceptance By Silence/Inactivity"
    ],
    "RELATED": [
        "Dresdner Kleinwort Ltd v Attrill",
        "The Leonidas D",
        "Re Selectmove Ltd",
        "Felthouse v Bindley",
        "L J Korbetis v Transgrain Shipping BV",
        "Carlill v Carbolic Smoke Ball Co",
        "The Brimnes",
        "Brogden v Metropolitan Railway",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "Holwell Securities Ltd v Hughes",
        "Household Fire Insurance Co v Grant",
        "Eliason v Henshaw"
    ],
    "NUMBER": "53",
    "TYPE": "Case",
    "NAME": "Vitol v Norelf",
    "FLAGS": [
        "Treitel",
        "Steyn"
    ]
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Acceptance By Silence/Inactivity"
    ],
    "YEAR": "1995",
    "NUMBER": "54",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Selectmove owed the Inland Revenue large amounts of tax. At a meeting on 15 July, the company&#8217;s managing director proposed to the collector of taxes that the company should pay tax in future as it fell due, and pay off its arrears in instalments starting in February of the following year. The collector said that he would seek the approval of his superiors, and no more was heard until October, when the Inland Revenue threatened to wind up the company. The company, appealing against the grant of a winding-up petition at first instance, argued (inter alia) that an agreement had come into existence based on the proposal made on 15 July, and the Inland Revenue&#8217;s prolonged silence in response to it. The company lost the appeal on other grounds, but the Court of Appeal tentatively accepted that an agreement could be formed in the way suggested.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Peter Gibson LJ drew a distinction between cases where an offeror declares that silence will amount to acceptance, and cases in which the offeree proposes that this meaning should be attached to his silence: \u201cMr Charles, for the Crown, drew our attention to the general rule that silence will not normally amount to acceptance of an offer since acceptance cannot be inferred from silence alone \u201csave in the most exceptional circumstances\u201d (see [<i>The Leonidas D</i>]). But the authorities that support the general rule are cases where an offeror sought to impose on the offeree a term as to acceptance by silence. [\u2026] Where the offeree himself indicates that an offer is to be taken as accepted if he does not indicate to the contrary by an ascertainable time, he is undertaking to speak if he does not want an agreement to be concluded. I see no reason in principle why that should not be an exceptional circumstance such that the offer can be accepted by silence. But it is unnecessary to express a concluded view on this point\u201d."
    ],
    "NAME": "Re Selectmove Ltd",
    "CATEGORY": "Communication of Acceptance &mdash; Acceptance By Silence/Inactivity",
    "CITATION": "Re Selectmove Ltd [1995] 1 WLR 474",
    "RELATED": [
        "Felthouse v Bindley",
        "Vitol v Norelf",
        "The Leonidas D",
        "Dresdner Kleinwort Ltd v Attrill",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "Henthorn v Fraser",
        "The Brimnes",
        "Holwell Securities Ltd v Hughes",
        "Carlill v Carbolic Smoke Ball Co",
        "Household Fire Insurance Co v Grant",
        "Brogden v Metropolitan Railway",
        "L J Korbetis v Transgrain Shipping BV"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Acceptance By Silence/Inactivity"
    ],
    "YEAR": "2013",
    "NUMBER": "55",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The bank&#8217;s contract with its employees gave it (a) the power unilaterally to vary the terms of their employment; and (b) an absolute discretion to pay annual discretionary awards (bonuses) to them. As a result of organisational restructuring pending in response to the financial crisis of 2008, bank staff became disaffected, and measures were adopted to try to prevent their mass departure and the consequential collapse of the investment banking division. These included an announcement to staff that a bonus pool of 400 million euros had been created, and that whilst no individual guarantees were given the bonus pool would be distributed. The bank later sought to retreat from this position. The main questions of contract law arising in the subsequent dispute were whether the bank&#8217;s announcement was an offer made with the intention to create legal relations; and whether it was contractually binding in view of the fact that no acceptance of it had been sought or received from staff.<br>&emsp;&emsp;Held by the Court of Appeal that legal relations had been intended, and that the offer bound the bank despite the absence of acceptance.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;\u201cWell established contract theory requires acceptance [...] and there was none here.<br>&emsp;&emsp;In my view there are at least two related answers to this submission. First, as Lord Justice Bowen observed in the Carbolic Smoke Ball case (supra, p. 269) \u201c... as notification of acceptance is required for the benefit of the person who makes the offer, the person who makes the offer may dispense with notice to himself.\u201d In that case the mode of acceptance was held by implication to be actually performing the conditions attached to the offer. Here, in my view, it is plain that the employer has dispensed with the need for any response to the offer at all. This was a promise without any disadvantage, actual or potential, of any kind to the employees. Nobody hearing the promise made in this announcement would for one moment expect the employee to be able to benefit from it only if he or she positively accepted the offer. It would be a wholly formal and unnecessary exercise; the only sensible implication is that all employees who might potentially benefit from the promise would be deemed to have accepted it.<br>&emsp;&emsp;Second, the nature of the promise is inconsistent with the notion of individual acceptance. It would mean that if, say, a minority of the relevant staff accepted the offer, the employers would be bound to pay the whole of the bonus pool, if only to the minority\u201d."
    ],
    "NAME": "Dresdner Kleinwort Ltd v Attrill",
    "CATEGORY": "Communication of Acceptance &mdash; Acceptance By Silence/Inactivity",
    "CITATION": "Dresdner Kleinwort Ltd v Attrill [2013] EWCA Civ 394",
    "RELATED": [
        "Felthouse v Bindley",
        "Vitol v Norelf",
        "The Leonidas D",
        "Re Selectmove Ltd",
        "Entores v Miles Far East Corporation",
        "Brogden v Metropolitan Railway",
        "Household Fire Insurance Co v Grant",
        "L J Korbetis v Transgrain Shipping BV",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "The Brimnes",
        "Holwell Securities Ltd v Hughes",
        "Henthorn v Fraser"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Transmission of Acceptance"
    ],
    "NUMBER": "56",
    "TYPE": "Concept",
    "NAME": "Transmission of Acceptance",
    "CATEGORY": "Communication of Acceptance &mdash; Transmission of Acceptance",
    "RELATED": [
        "Communication of Acceptance - Intro",
        "Acceptance By Conduct",
        "Acceptance By Silence/Inactivity",
        "Postal Rule",
        "The basics",
        "Breach of Contract - Introduction",
        "The rationale for frustration",
        "Misrepresentation (1) - Introduction",
        "Enrichment by subtraction",
        "Rescission",
        "Remedies - Introduction",
        "Unfair Contract Terms Act 1977 - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Transmission of Acceptance</span></span><br>&emsp;&emsp;What in fact needs to be done by an offeree in order that his acceptance will be found to have been validly communicated to the offeror?"
    ]
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Transmission of Acceptance"
    ],
    "YEAR": "1819",
    "NUMBER": "57",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;An offer to purchase flour was made by letter. The letter was carried by a waggoner employed by the offeree to carry flour. It included a postscript: \u201cPlease write by return of wagon whether you accept our offer\u201d. The offeree instead posted a letter of acceptance to the offeror at Georgetown, which took longer to arrive than would a reply conveyed by wagon. The offeree failed in an action for damages in respect of the offeror&#8217;s refusal to accept the flour. The purported acceptance, made in this way, had not been valid and therefore no contract had come into existence.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The United States Supreme Court drew various conclusions from the request for a reply \u201cby return of wagon\u201d. The first was that a valid acceptance would have had to be directed to the place to which the wagon was bound on its return journey, and not to Georgetown. The second was that the manner of communication of acceptance was unimportant. Any means would have sufficed, provided it was as quick (or quicker) as a reply by wagon.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This case is commented on by Winfield (\u201cSome Aspects of Offer and Acceptance (1939) 55 LQR 516), and by Smith and Thomas. Winfield suggests that if the offeror had received a posted acceptance at the same time or earlier than he would have received a reply by return of wagon, he could not have denied its validity on the ground that he had required a reply to be carried by wagon. Smith and Thomas add that if he had made it clear that only a reply by wagon would do, then the position would be different; if the offeror chooses to place restrictions on what is to constitute a valid acceptance, they will be upheld. If one assumes these propositions to be correct, the situation seems to be this; the courts will analyse contract formation with the assumption that practicality and efficiency are the controlling values behind the mechanics envisaged by the offeror, but if the offeror makes it clear that only one form of communication will amount to a satisfactory response, freedom of contract demands that his stipulation be upheld.<br>&emsp;&emsp;Further values which condition legal analysis of contract formation are certainty (as we have already seen), common sense, and a judgment as to where the risks should lie."
    ],
    "NAME": "Eliason v Henshaw",
    "CATEGORY": "Communication of Acceptance &mdash; Transmission of Acceptance",
    "CITATION": "Eliason v Henshaw (1819) Wheat 225",
    "RELATED": [
        "The Brimnes",
        "Entores v Miles Far East Corporation",
        "Household Fire Insurance Co v Grant",
        "Re Selectmove Ltd",
        "Holwell Securities Ltd v Hughes",
        "The Leonidas D",
        "Carlill v Carbolic Smoke Ball Co",
        "Dresdner Kleinwort Ltd v Attrill",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "Felthouse v Bindley",
        "Brogden v Metropolitan Railway",
        "L J Korbetis v Transgrain Shipping BV"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1955",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case turned on whether a contract had been made in Holland, from where a telexed message of acceptance had been sent, or in London, where it had been received. The Court of Appeal therefore had to decide at what point the acceptance took effect. It held that acceptance occurred on receipt of the message in London, so that the contract had been made within the jurisdiction.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;<span class=\"bd\">Denning LJ</span> considered various hypothetical situations in which attempts to communicate acceptance might be disrupted. He laid down as a general rule that where the disruption is apparent to the maker of the acceptance, it will not be valid until it has been repeated. He went on: \u201cIn all the instances I have taken so far, the man who sends the message of acceptance knows that it has not been received or he has reason to know it. So he must repeat it. But, suppose that he does not know that his message did not get home. He thinks it has. This may happen if the listener on the telephone does not catch the words of acceptance, but nevertheless does not trouble to ask for them to be repeated: or the ink on the teleprinter fails at the receiving end, but the clerk does not ask for the message to be repeated: so that the man who sends an acceptance reasonably believes that his message has been received. The offeror in such cases is clearly bound, because he will be estopped from saying that he did not receive the message of acceptance. It is his own fault that he did not get it. But if there should be a case where the offeror without any fault on his part does not receive the message of acceptance \u2013 yet the sender of it reasonably believes it has got home when it has not \u2013 then I think there is no contract\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The reference here to estoppel requires explanation and a brief comment. Lord Denning, as you will come to see, was more closely associated with this rule than any other judge. Estoppel, at its inception, was a rule of evidence which prevented a party to litigation saying something in court which would admittedly be both relevant and true, but which it would be unfair to allow him to maintain since the parties conducted themselves on a different basis. In the passage above, Denning LJ is using it in a broad sense to indicate the unfairness of allowing the offeror to set up his own carelessness as a defence. Note the result; despite the fact that the offeror did not receive notice of the acceptance, he is to be treated as if he did. A commonsense account of what happened is here displaced by a legal fiction, in the name of fairness.</span><br>&emsp;&emsp;<span class=\"it\">In the next case the court again departs from a purely factual analysis of communication in order to achieve fairness.</span>"
    ],
    "CATEGORY": "Communication of Acceptance &mdash; Transmission of Acceptance",
    "CITATION": "Entores v Miles Far East Corporation [1955] 2 QB 327",
    "CATEGORIES": [
        "Communication of Acceptance",
        "Transmission of Acceptance"
    ],
    "RELATED": [
        "The Brimnes",
        "Eliason v Henshaw",
        "Dresdner Kleinwort Ltd v Attrill",
        "L J Korbetis v Transgrain Shipping BV",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "Household Fire Insurance Co v Grant",
        "Carlill v Carbolic Smoke Ball Co",
        "Felthouse v Bindley",
        "Re Selectmove Ltd",
        "Henthorn v Fraser",
        "Holwell Securities Ltd v Hughes",
        "Brogden v Metropolitan Railway"
    ],
    "NUMBER": "58",
    "TYPE": "Case",
    "AKA": "Entores v Miles",
    "NAME": "Entores v Miles Far East Corporation",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Transmission of Acceptance"
    ],
    "YEAR": "1975",
    "NUMBER": "59",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The case turned on whether a notice withdrawing a ship from service had been received before or after an instalment of hire was paid. The notice of withdrawal had been sent by telex between 17.30 and 18.00, but had not been seen by the defendants until the following morning. It was held to be the defendants&#8217; own fault that they had not seen the withdrawal at or shortly after the time it was sent, since they must either have left the office early or failed to pay attention to their telex machine. The withdrawal was therefore deemed to have been communicated between 17.30 and 18.00, since it would have been received then in the ordinary course of events. The case admittedly concerns the termination of a contract rather than its formation, but the issue in both instances is legally valid communication."
    ],
    "NAME": "The Brimnes",
    "CATEGORY": "Communication of Acceptance &mdash; Transmission of Acceptance",
    "CITATION": "The Brimnes [1975] QB 929",
    "RELATED": [
        "Entores v Miles Far East Corporation",
        "Eliason v Henshaw",
        "Felthouse v Bindley",
        "Dresdner Kleinwort Ltd v Attrill",
        "Henthorn v Fraser",
        "The Leonidas D",
        "Holwell Securities Ltd v Hughes",
        "Brogden v Metropolitan Railway",
        "L J Korbetis v Transgrain Shipping BV",
        "Household Fire Insurance Co v Grant",
        "Vitol v Norelf",
        "Re Selectmove Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Postal Rule"
    ],
    "NUMBER": "60",
    "FLAGS": [
        "Bramwell"
    ],
    "TYPE": "Concept",
    "NAME": "Postal Rule",
    "CATEGORY": "Communication of Acceptance &mdash; Postal Rule",
    "RELATED": [
        "Acceptance By Conduct",
        "Transmission of Acceptance",
        "Communication of Acceptance - Intro",
        "Acceptance By Silence/Inactivity",
        "Commercial Agreements",
        "The basics",
        "Misrepresentation arising from silence and/or conduct",
        "Development of Modern Interpretation",
        "Tender of performance",
        "Common Law Bars to Rescission",
        "Atiyah's Understanding of Consideration",
        "Section 1: treating a contract term as a misrepresentation"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Postal Rule</span></span><br>&emsp;&emsp;The concern for efficiency, practicality, certainty and common sense, balanced (if necessary) against fairness, gives way to what at first sight appears a radically different approach where a letter of acceptance has been posted. A simple but arbitrary rule is imposed; a posted letter of acceptance takes effect at the moment it is posted. On closer inspection, it will be seen that although there is an arbitrary aspect to this rule, in fact the usual legal values are present in an uneasy association with the rule itself. However, those values may sometimes be asserted to justify a departure from it.<br>&emsp;&emsp;The usual authority given for the rule is <i>Adams v Lindsell</i> (1818) 1 B &amp; Ald 681, where the rule is applied in passing, really, but the court nevertheless takes the opportunity to buttress it on the grounds of finality. The justification is this; if the normal rule requiring actual communication were to apply to acceptance by post, so that the offeror became bound only when he knew of the offeree&#8217;s acceptance, then it could equally be maintained that the offeree should only be bound when he learnt that his acceptance had reached the offeror, and so on ad infinitum.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">However, this is hardly a convincing argument. There is a marked difference between the respective burdens of the two contingencies here being compared. It is one thing to be bound without yet knowing whether the offeree wishes to accept (he may or he may not). It would be a much lesser burden for the offeree to be bound without yet knowing whether his letter of acceptance has in fact arrived (it is highly likely that it will have done so). So even at its inception, the basis for the rule is shaky. Why, then, did it find its way into English law?</span><br>&emsp;&emsp;<span class=\"it\">A fascinating answer is given in Simon Gardner&#8217;s article \u201cTrashing with Trollope: A Deconstruction of the Postal Rules in Contract\u201d (1992) 12 OJLS 170. In 1840, the penny post was introduced. It caused a communications revolution as fundamental as the development of the mobile phone or email when people realised that the delivery of a letter had become a virtually certain consequence of posting it. Gardner continues: \u201cThis contemporary perception may have played a substantial part in the decision in which the courts established the acceptance rule in the 1840s. In these terms, the basis of the rule might have been not a preference for posting over delivery as the dispositive act. It might have been an idea that delivery was self-evidently important, but that in the newly prevailing conditions posting and delivery were little different: that once posted, a letter was as good as delivered. But there is a certain weakness about this. Despite the great improvements in efficiency\u2026equating posting with delivery on purely empirical grounds would have been a little foolish: indeed, the reason why these cases came to court at all was because the equation had failed.</span><br>&emsp;&emsp;<span class=\"it\">However, some ... other innovations added a further dimension to this constructive identification of posting with delivery. One was a dramatic shift towards prepayment of postage. In March 1839, only 14% of letters sent by the London General Post were prepaid, leaving 86% for which payment had to be collected from the addressee. By February 1840 these figures had been precisely reversed. Prepayment was endorsed by none other than Queen Victoria herself, abandoning the privilege of free use of the mail. A year later still, the unpaid element had fallen further to 8%. A second was the further facilitation of prepayment by the introduction in 1840 of the self-adhesive postage stamp; another measure which entranced the public. Of the February 1841 prepaid total of 92%, 45% comprised letters for which the payment was by this means. A third important innovation was the cutting of letter-boxes in front doors of houses, so that letters no longer needed to be handed to their addressee; this too captured the public imagination.</span><br>&emsp;&emsp;<span class=\"it\">Taken together, these measures may have great significance. Until 1840, the delivery of a letter typically required that the addressee should manually receive it and pay for it. This was not, of course, a significant practical hurdle, but it sat in symbolic contrast with the new position, whereby the sender had only to affix his stamp and post the letter, and it would go through to its destination without further subvention from outside the system. So these three innovations of 1840 may be seen as predicating a radically new perception of the nature of the post: the notional equation of the posting of a letter with its delivery. There may thus have been a very powerful influence towards the courts affirming the acceptance rule in the way that they did in that decade\u201d.</span><br>&emsp;&emsp;<span class=\"it\">Gardner expresses himself with due caution, but his thesis is attractive and persuasive. If he is right, then the reason for the postal rule lies not in one of the later theories given by way of apology for it (eg. the entirely flawed notion that the Postal Service is the agent of both the parties), but rather in the enthusiasm of the moment. This was an enthusiasm which proved capable of leading the courts away from their usual insistence on consensus ad idem. After all, if two cross-offers do not make a contract, even though each party to the negotiation must become aware that the other is in perfect agreement with him, how can offer and acceptance do so when only one party knows of the acceptance? </span><br>&emsp;&emsp;<span class=\"it\">A more neutral explanation for the rule follows if one notes that in posting a letter of acceptance, the offeree (in the language of Lord Blackburn in Brogden&#8217;s case, above) has done \u201can extraneous act which clenches the matter\u201d. He cannot get his letter back. The moment of posting is therefore the point in time at which he commits himself. The postal rule gives recognition to that fact, and is in accordance with English law&#8217;s usual tendency to make the concluding of contracts as simple as it can reasonably be.</span><br>&emsp;&emsp;<span class=\"it\">One nineteenth century judge, George <span class=\"bd\">Bramwell</span>, fought a rearguard action against the postal rule. Probably he saw himself, and his predecessor the Lord Chief Justice Brian, as the few who had not lost their juristic wits. </span>"
    ]
},
{
    "YEAR": "1879",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant made an offer to buy shares in the company, and paid a deposit on the shares. The company secretary, by way of acceptance, made out a letter of allotment and posted it to the defendant in Swansea, but it never arrived. The company later went into liquidation, and the liquidator sued the defendant for the balance of the price of the shares. The Court of Appeal held that a contract had come into existence upon the posting of the share allotment, despite the fact that it never reached the defendant. Thesiger LJ suggested that this ruling would not cause great hardship, since the post generally did not fail, the offeror could choose to stipulate that acceptance would only bind him upon communication (ousting the postal rule), and if he did not hear from the offeree, he could make enquiries of him.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;This, however, was too much for <span class=\"bd\">Bramwell LJ</span>, who dissented: \u201cIf...posting a letter which does not reach is a sufficient communication of acceptance of an offer, it is equally a communication of everything else which may be communicated by post, for example, notice to quit. It is impossible to hold, if I offer my landlord to sell him some hay and he writes accepting my offer, and in the same letter gives me notice to quit, and posts his letter which, however, does not reach me, that he has communicated to me his acceptance of my offer, but not his notice to quit. Suppose a man has paid his tailor by cheque or banknote, and posts a letter containing a cheque or banknote to his tailor, which never reaches, is the tailor paid? If he is, would he be if he had never been paid before in that way? Suppose a man is in the habit of sending cheques and banknotes to his banker by post, and posts a letter containing cheques and banknotes, which never reaches. Is the banker liable? Would he be if this was the first instance of a remittance of this sort? In the cases I have supposed, the tailor and banker may have recognised this form of remittance by sending back receipts and putting the money to the credit of the remitter. Are they liable with that? Are they liable without it? The question then is, is posting a letter which is never received a communication to the person addressed, or an equivalent, or something which dispenses with it? It is for those who say it is to make good their contention. I ask why is it? My answer beforehand to any argument that may be urged is that it is not a communication, and that there is no agreement to take it as an equivalent for or to dispense with a communication. That those who affirm the contrary say the thing which is not. That if Brian C.J. had had to adjudicate on the case, he would deliver the same judgment as that reported. That because a man, who may send a communication by post or otherwise, sends it by post, he should bind the person addressed, although the communication never reaches him, while he would not so bind him if he had sent it by hand, is impossible. There is no reason in it; it is simply arbitrary. I ask whether anyone who thinks so is prepared to follow that opinion to its consequence....",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">If you wonder what lies behind Bramwell LJ&#8217;s obvious indignation, it is worth considering this passage from the judgment of Thesiger LJ (in the majority in the same case): \u201cHow then can a casualty in the post, whether resulting in delay, which in commercial transactions is often as bad as no delivery, or in non-delivery, unbind the parties or unmake the contract? To me it appears that in practice a contract complete upon the acceptance of an offer being posted, but liable to be put an end to by an accident in the post, would be more mischievous than a contract only binding upon the parties to it upon the acceptance actually reaching the offeree, and I can see no principle of law from which such an anomalous contract can be deduced\u201d. Quite; but of course this eloquently shows why the simple solution would be to apply the ordinary rule that acceptance must be communicated, and abandon the postal rule.</span><br>&emsp;&emsp;<span class=\"it\">Several of Bramwell LJ&#8217;s examples do not work, although only for a reason at which he would probably have scoffed; the operation of the postal rule is confined to acceptances of offers, and has no application to any other situation. That said, he was certainly right to remark that the rule is an arbitrary one. The cases that follow, however, tend to place conditions on its applicability. In the result, the rule may not be English contract law&#8217;s greatest ornament, but on the other hand it is difficult to envisage it causing very much harm.</span>"
    ],
    "CATEGORY": "Communication of Acceptance &mdash; Postal Rule",
    "CITATION": "Household Fire Insurance Co v Grant (1879) 4 Ex D 216",
    "CATEGORIES": [
        "Communication of Acceptance",
        "Postal Rule"
    ],
    "RELATED": [
        "Holwell Securities Ltd v Hughes",
        "L J Korbetis v Transgrain Shipping BV",
        "Henthorn v Fraser",
        "Entores v Miles Far East Corporation",
        "The Leonidas D",
        "Vitol v Norelf",
        "Carlill v Carbolic Smoke Ball Co",
        "Eliason v Henshaw",
        "Brogden v Metropolitan Railway",
        "The Brimnes",
        "Dresdner Kleinwort Ltd v Attrill",
        "Re Selectmove Ltd"
    ],
    "NUMBER": "61",
    "TYPE": "Case",
    "NAME": "Household Fire Insurance Co v Grant",
    "FLAGS": [
        "Bramwell"
    ]
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Postal Rule"
    ],
    "YEAR": "1892",
    "NUMBER": "62",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A written offer to sell some houses was handed to the plaintiff. The next day, a letter withdrawing the offer was posted to him. Before the withdrawal arrived, the plaintiff wrote a letter accepting the offer. The withdrawal reached the plaintiff&#8217;s house just over an hour later, but was not opened until the next day. The plaintiff applied for specific performance of the contract of sale; its refusal by the judge at first instance was overturned on appeal. The acceptance had bound upon posting, so creating an enforceable contract. Lord Herschell stated a general test for the applicability of the postal rule: \u201cWhere the circumstances are such that it must have been within the contemplation of the parties that, according to the ordinary usages of mankind, the post might by used as a means of communicating the acceptance of an offer, the acceptance is complete as soon as it is posted\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;In <i>Henthorn v Fraser</i>, the defendants unsuccessfully argued that the postal rule should not apply on the facts of the case, because the offer letter had been handed to the plaintiff rather than posted. Since the decision rejects that argument, it might be considered something of a boost to the fortunes of the rule, broadening its applicability. In fact the opposite is true. By making it clear that the applicability of the rule does not turn exclusively on the means used to communicate the offer, the judgments allow the conclusion that by no means every posting of an offer will apply the rule to a posted reply. Furthermore, Lord Herschell&#8217;s test may sound fairly expansive on a first reading, but later courts have easily found circumstances in which it will not be satisfied, or will not resolve the matter at issue."
    ],
    "NAME": "Henthorn v Fraser",
    "CATEGORY": "Communication of Acceptance &mdash; Postal Rule",
    "CITATION": "Henthorn v Fraser (1892) 2 Ch 27",
    "RELATED": [
        "Holwell Securities Ltd v Hughes",
        "Household Fire Insurance Co v Grant",
        "L J Korbetis v Transgrain Shipping BV",
        "Entores v Miles Far East Corporation",
        "Felthouse v Bindley",
        "Brogden v Metropolitan Railway",
        "The Brimnes",
        "Eliason v Henshaw",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "The Leonidas D",
        "Vitol v Norelf",
        "Re Selectmove Ltd"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1974",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;An option (an irrevocable offer) to purchase property was granted to the plaintiffs. It provided that \u201cthe said option shall be exercisable by notice in writing to the Intending Vendor at any time within six months from the date hereof\u201d. During that period, the plaintiffs wrote to the defendant to exercise the option, but the letter never arrived. The plaintiffs sought an order of specific performance. It was refused at first instance and on appeal. On the true construction of the offer, nothing less than actual communication of acceptance would bind the defendants to a contract of sale.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The reason for the decision on appeal is given by Russell LJ: \u201cIn the present case, the parties here contemplated that the postal service might be used to communicate acceptance of the offer (by exercise of the option); and I agree with that. But that is not and cannot be the end of the matter. In any case, before one can find that the basic principle of the need for communication of acceptance to the offeror is displaced by this artificial concept of communication by the act of posting, it is necessary that the offer is in its terms consistent with such displacement and not one which by its terms points rather in the direction of actual communication\u2026.<br>&emsp;&emsp;The relevant language here is, \u201cthe said option shall be exercisable by notice in writing to the Intending Vendor\u2026\u201d, a very common phrase in an option agreement. There is, of course, nothing in that phrase to suggest that notification to the defendant could not be made by post. But the requirement of \u201cnotice\u2026to\u201d, in my judgment is language which should be taken expressly to assert the ordinary situation in law that acceptance requires to be communicated or notified to the offeror, and is inconsistent with the theory that acceptance can be constituted by the act of posting\u2026\u201d.<br>&emsp;&emsp;In addition to establishing that the postal rule may be expressly (or impliedly) ousted by the language of the offer, <i>Holwell v Hughes</i> imposes a further limitation on its operation. The limitation is not uncontroversial, but in the following passage, Lawton LJ contrives to dovetail it quite neatly into Lord Herschell&#8217;s general test: \u201cDoes the [postal] rule apply in <i>all</i> cases where one party makes an offer which both he and the person with whom he was dealing must have expected the post to be used as a means of accepting it? In my judgment, it does not. First, it does not apply when the express terms of the offer specify that the acceptance must reach the offeror\u2026.Secondly, it probably does not operate if its application would produce manifest inconvenience and absurdity. This is the opinion set out in Cheshire and Fifoot&#8217;s <i>Law of Contract</i> (8<sup>th</sup> ed., 1972), p. 43. It was the opinion of <span class=\"bd\">Bramwell</span> B as is seen by his judgment in <i>British &amp; American Telegraph Co v Colson</i> ((1871) LR 6 Exch 108), and his opinion is worthy of consideration even though the decision in that case was overruled by this court in <i>Household Fire and Carriage Accident Insurance Co Ltd v Grant</i>. The illustrations of inconvenience and absurdity which <span class=\"bd\">Bramwell</span> B gave are as apt today as they were then\u2026. In my judgment, the factors of inconvenience and absurdity are but illustrations of a wider principle, namely, that the rule does not apply if, having regard to the subject-matter under consideration, the negotiating parties cannot have intended that there should be a binding agreement until the party accepting an offer or exercising an option had in fact communicated the acceptance or exercise to the other\u201d.<br>&emsp;&emsp;It is now established that the rule will not apply to a misaddressed letter of acceptance."
    ],
    "CATEGORY": "Communication of Acceptance &mdash; Postal Rule",
    "CITATION": "Holwell Securities Ltd v Hughes [1974] 1 WLR 155",
    "CATEGORIES": [
        "Communication of Acceptance",
        "Postal Rule"
    ],
    "RELATED": [
        "Household Fire Insurance Co v Grant",
        "L J Korbetis v Transgrain Shipping BV",
        "Henthorn v Fraser",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "Brogden v Metropolitan Railway",
        "Dresdner Kleinwort Ltd v Attrill",
        "Entores v Miles Far East Corporation",
        "The Brimnes",
        "Eliason v Henshaw",
        "Carlill v Carbolic Smoke Ball Co",
        "Vitol v Norelf",
        "The Leonidas D"
    ],
    "NUMBER": "63",
    "TYPE": "Case",
    "NAME": "Holwell Securities Ltd v Hughes",
    "FLAGS": [
        "Bramwell"
    ]
},
{
    "CATEGORIES": [
        "Communication of Acceptance",
        "Postal Rule"
    ],
    "YEAR": "2005",
    "NUMBER": "64",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In response to a fax offering to appoint one of three nominated arbitrators, a shipowner&#8217;s agent sent a fax to accept the offer, but made a mistake entering the international dialling code so that the fax never reached the intended recipient. Toulson J, distinguishing <i>Adams v Lindsell</i> and <i>Henthorn v Fraser</i>, held that those cases did not govern the misdirection of a letter (or fax) of acceptance, and that the postal rule should not apply to a misdirected communication.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Since this judgment is recent, it is worth looking at it in some detail. It would also seem to be of importance in that it assumes that the postal rule can apply to faxes; this issue was previously thought to be unresolved.</span><br>&emsp;&emsp;<span class=\"bd\">(11)</span> If the letter is wrongly addressed, very different considerations apply. Common sense dictates that it is unfair to the intended recipient that he should be bound by something which he is unlikely to receive because of the fault of the sender. Moreover, if he is to be so bound, such a rule would have the potential to give to the careless would-be acceptor an unfair advantage. Suppose that the would-be acceptor realises that the letter or fax has been sent to the wrong address or number. On the owners&#8217; argument, a contract would already have come into existence. In the practical world, the acceptor would then have an option whether to reveal the contract to the offeror, or to keep silent about it. If the market had moved, this could be a valuable option. The would-be acceptor, in that situation, would also have the opportunity to nurse his option by waiting to see how the market moved before deciding whether to reveal the existence of the contract. Even if the law crafted some form of rule of good faith to prohibit a party from acting in such a way, such a rule could in the nature of things be difficult to enforce. It is not hard to envisage circumstances in which only the would-be acceptor would know when he discovered the true position.<br>&emsp;&emsp;<span class=\"bd\">(12)</span> Mr. Lewis submitted that in such situations there should be no firm rule of law, as in the ordinary posting rule, but that it should be for the court to decide on a case by case basis what result most fairly suited the facts. I do not accept that submission. Rules about offer and acceptance ought to be clear, so that parties may know where they stand. A situation in which it is unclear whether or not a contract has been formed until a court decides in the exercise of some form of general discretion whether or not a contract has been formed would be unsatisfactory.<br>&emsp;&emsp;<span class=\"bd\">(15)</span> The topic of misdirected letters of acceptance has been considered by text book writers. Chitty, at paragraph 2-056, has the following passage:",
        "<ul><li><span class=\"nl\">&#8220;Misdirected letter of acceptance. A letter of acceptance may be lost or delayed because it bears a wrong or an incomplete address, or because it is not properly stamped. Normally such defects would be due to the carelessness of the offeree, and although there is no English authority precisely on point, it is submitted that the postal rule should not apply to such cases. Although an offeror may have to take the risk of accidents in the post, it would be unreasonable to impose on him the further risk of the acceptor&#8217;s carelessness. These arguments do not apply where the misdirection is due to the fault of the offeror, e.g. where his own address is incompletely or illegibly given in the offer itself. In such a case, the offeror shall not be allowed to rely on the fact that the acceptance was misdirected, except perhaps where his error in stating his own address was obvious to the offeree, for in such a case the offeror&#8217;s fault would not be the effective cause of the misdirection of the acceptance. It is submitted that a misdirected acceptance should take effect, if at all, at the time which is least favourable to the party responsible for the misdirection.&#8221;_<br>&emsp;&emsp;<span class=\"it\">\u201cI agree with that general approach, because it seems to me to correspond with principle and justice\u201d.</span><br>&emsp;&emsp;<span class=\"it\">It is interesting to see what appears to be express judicial approval for the last sentence of the passage above from Chitty on Contracts. The opinion expressed there is that of <span class=\"bd\">Treitel</span>, previously editor of Chitty, and it went beyond the authorities until the Korbetis case. Is it really the business of the courts to decide the moment at which acceptance takes effect with a view to doing the maximum damage to the party responsible for misaddressing an envelope? The competing view, of course, would simply be that the misdirected acceptance is no longer covered by the postal rule, and therefore binds upon communication, provided the offer is still open for acceptance. </span><br>&emsp;&emsp;<span class=\"it\">On the ordinary rule, that acceptance must be communicated in order to become binding, a written acceptance could be countermanded before the moment of communication. Technically, an attempt to do so after communication could be treated as an anticipatory breach of contract. On the postal rule, there would seem to be no opportunity to countermand once the acceptance is committed to the post.</span><br>&emsp;&emsp;<span class=\"it\">However, it is also necessary to consider the fact of the matter. Since there clearly will be a period between the posting of acceptance and its communication to the offeror, there are bound to be situations in which the offeree would wish to countermand his acceptance during that period. What is more, it will often be a simple matter to accomplish it in factual terms, for example by a phone call pre-empting the letter&#8217;s delivery.</span><br>&emsp;&emsp;<span class=\"it\">There is no clear authority on whether the postal rule prevails in this situation or not. The issue is considered at greatest length by Treitel, who favours the application of the postal rule, although for reasons of policy rather than slavish adherence to logic. His concern is the same as that canvassed by Toulson J in the <i>Korbetis</i> case above. If it were possible for the offeree to write and post a letter of acceptance, and pending its arrival be free to countermand it by some speedier means of communication, the offeree would effectively be able to speculate at the offeror&#8217;s expense (see Treitel, para 2.036). One may doubt whether this concern is realistic, given that it is unlikely that the postal rule would apply in the first place in a market sufficiently volatile to make speculation possible. In addition, as Treitel fairly points out, where the first the offeror knows of the offeree&#8217;s response to his offer is that it is rejected, it would seem odd to insist that the earlier acceptance must prevail. To do so could well be an example of the \u201cinconvenience and absurdity\u201d which Lawton LJ recognised in <i>Holwell v Hughes</i>.</span><br>&emsp;&emsp;<span class=\"it\"><span class=\"bd\">Bramwell LJ</span>, dissenting in <i>Household Fire Insurance Co v Grant</i>, took a view on this problem: \u201cIt was said, if he send [the letter] by hand, it is revocable, but not if he sends it by post, which makes the difference. But it is revocable when sent by post, not that the letter can be got back, but its arrival might be anticipated by a letter by hand or telegram, and there is no case to show that such an anticipation would not prevent the letter from biding, It would be a most alarming thing to say that it would\u201d.</span></span></li></ul>"
    ],
    "NAME": "L J Korbetis v Transgrain Shipping BV",
    "CATEGORY": "Communication of Acceptance &mdash; Postal Rule",
    "CITATION": "L J Korbetis v Transgrain Shipping BV [2005] EWHC 1345",
    "RELATED": [
        "Household Fire Insurance Co v Grant",
        "Henthorn v Fraser",
        "Holwell Securities Ltd v Hughes",
        "Dresdner Kleinwort Ltd v Attrill",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "The Brimnes",
        "The Leonidas D",
        "Entores v Miles Far East Corporation",
        "Carlill v Carbolic Smoke Ball Co",
        "Vitol v Norelf",
        "Re Selectmove Ltd",
        "Felthouse v Bindley"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incomplete and Vague Agreements"
    ],
    "NUMBER": "65",
    "TYPE": "Concept",
    "NAME": "Incomplete and Vague Agreements - Introduction",
    "CATEGORY": "Incomplete and Vague Agreements",
    "RELATED": [
        "Conditional Agreements",
        "Pre-Emptive Agreements",
        "Deferred Agreements",
        "Mistake - Introduction",
        "Importance of Interpretation",
        "Comments.",
        "Breach of contract \u2013 the basic rights",
        "Insistence on performance",
        "The rationale for frustration",
        "Misrepresentation (1) - Introduction",
        "Law Reform (Frustrated Contracts) Act 1943",
        "Beyond section 3"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;As Viscount Dunedin said in <i>Hillas v Arcos</i> (see below), \u201cto be a good contract there must be a concluded bargain, and a concluded contract is one which settles everything that is necessary to be settled between the parties and leaves nothing to be settled by agreement between the parties\u2026.As a matter of the general law of contract all the essentials have to be settled\u201d. Viscount Maugham, in <i>Scammell v Ouston</i>, expresses a similar point from a slightly different perspective: \u201cIn order to constitute a valid contract, the parties must so express themselves that their meaning can be determined with a reasonable degree of certainty. It is plain that, unless this can be done, it would be impossible to hold that the contracting parties had the same intention\u201d.<br>&emsp;&emsp;The question therefore is whether an agreement is incomplete or too vague to be enforceable. Before we go further, it may help to define what is meant by \u201cincomplete\u201d and \u201cvague\u201d in the present context. Strictly speaking, an \u201cincomplete\u201d contract is one which leaves the parties not agreed on some matter, or in disagreement over it, or still aiming to reach agreement over it in the future. A \u201cvague\u201d contract is one which raises a question of what it is that the parties have agreed.<br>&emsp;&emsp;The barrier to enforcement of an incomplete agreement is that the courts do not exist to force agreement on the parties. This is a powerful principle; if the parties in truth are not bound to each other, it would be a wrong use of judicial power to treat them as if they were. The barrier to enforcement of a vague agreement is somewhat more easily overcome. The courts will not write a contract for the parties. Against this, however, must be set the principle that the courts should give effect to bargains, and there are several means of doing so even though some details of a bargain may not have been perfectly expressed.<br>&emsp;&emsp;As is often pointed out, incompleteness and vagueness may be difficult to distinguish on the facts of a case. It is not difficult to describe a lack of specificity as a failure to agree. The best approach may be to regard the two problems as technically distinct, while acknowledging that their tendency to coalesce is a major cause of the difficulties in some of the cases in this lecture.<br>&emsp;&emsp;The attempt to extract coherent principles from at least one group of cases has been described by Professor Iain Macneil as \u201ca fool&#8217;s errand\u201d. A perfect reconciliation of the authorities may well be impossible, but it is not the purpose of this lecture to try to undertake it. Instead, the starting point is to envisage an exemplary case in which a court must decide what to do about a gap within an agreement over which the parties are now arguing. Any reasonable person could come up with proposals for how to fill it, but the court is in a special position. It is not a maker of contracts; still less will it impose solutions which the parties, when contracting, have failed to agree. Nevertheless, there are juristic mechanisms for doing something very like that, for instance the implication of terms on the ground of necessity or \u201cbusiness efficacy\u201d, solutions based on implications of reasonableness, and the power to hear evidence to resolve certain issues left outstanding between the parties. The means to fill the gap between the parties may well exist.<br>&emsp;&emsp;The issue in a case such as this is how far the court can properly go, and careful navigation is called for. The present area of contract law can&#8217;t be made plain sailing, because by definition it is not, but it is possible to chart some judicial assumptions, principles and instincts which will help to suggest the way a court may lean.<br>&emsp;&emsp;Accounts of the subject often begin by contrasting two early twentieth century House of Lords cases \u2013 <i>May &amp; Butcher v The King</i> (1929) and <i>Hillas v Arcos</i> (1932) \u2013 with a view to preferring the latter. To begin the discussion with what is effectively a stalemate on the authorities does not seem a very helpful way forward, since it tends to leave students either confused, or inclined to treat the relationship between the two cases as a brain-teaser. Here, those cases will be left to the very end of the lecture, in the hope that the comparison between them will be easier to understand with some knowledge of how the law in this area works."
    ]
},
{
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Incomplete Agreements",
        "Conditional Agreements"
    ],
    "NUMBER": "66",
    "TYPE": "Concept",
    "NAME": "Conditional Agreements",
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Incomplete Agreements &mdash; Conditional Agreements",
    "RELATED": [
        "Pre-Emptive Agreements",
        "Deferred Agreements",
        "Incomplete and Vague Agreements - Introduction",
        "Consideration Distinguished From Conditional Gifts",
        "The Law Reform (Frustrated Contracts) Act 1943",
        "Implication from custom",
        "Timing",
        "The role of foresight",
        "Implication of Terms - Introduction",
        "Innominate terms",
        "The election to terminate",
        "Comments."
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Conditional Agreements</span></span><br>&emsp;&emsp;An agreement may rightly be described as \u201cconditional\u201d, and yet be binding pending the occurrence of the condition; an example would be a contract of insurance, in which the insurer&#8217;s obligation to pay does not arise until loss is sustained by the insured, but the ongoing arrangement nevertheless binds the parties pending that eventuality. The present concern is a \u201cconditional agreement\u201d of a different type, where the operation of the entire agreement (on the true construction of the arrangement between the parties) is expressed to depend on the fulfilment of a condition. Such an agreement is not binding until the condition is fulfilled, even if the parties imagine otherwise."
    ]
},
{
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Incomplete Agreements",
        "Conditional Agreements"
    ],
    "YEAR": "1877",
    "NUMBER": "67",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The parties agreed in writing that the defendant would take a lease of a house from the plaintiff for a specified term at a specified rent \u201csubject to the preparation and approval of a formal contract\u201d. In fact no formal contract was ever concluded. The plaintiff&#8217;s action for specific performance of the agreement failed. There was no contract to be enforced.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;\u201cI am of the opinion that there is no contract. I take it the principle is clear. If in the case of a proposed sale or lease of an estate two persons agree to all the terms and say, \u201cWe will have the terms put into form,\u201d then all the terms being put into writing and agreed to, there is a contract.<br>&emsp;&emsp;If two persons agree in writing that up to a certain point the terms shall be the terms of the contract, but that the minor terms shall be submitted to a solicitor, and shall be such as are approved of by him, then there is no contract, because all the terms have not been settled.<br>&emsp;&emsp;Now with regard to the construction of letters which are relied upon as constituting a contract, I have always thought that the authorities are too favourable to specific performance. When a man agrees to buy an estate, there are a great many more stipulations wanted than a mere agreement to buy the estate and the amount of purchase-money that is to be paid. What is called an open contract is clearly a most perilous thing, and even now, notwithstanding the provisions of a recent Act of Parliament \u2013 the Vendor and Purchaser Act 1874 \u2013 no prudent man who has an estate to sell would sign a contract of that kind, but would stipulate that certain conditions should be inserted for his protection. When, therefore, you see a stipulation as to a formal agreement put into a contract, you may say that it was not put in for nothing, but to protect the vendor against that very thing...\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Sir George Jessel&#8217;s reference to an open contract (a contract which gives the names of the parties, the property to be sold and the agreed price) is an apt starting point for an examination of this decision. Here is a reminder that such a contract is possible, and so it should be, on ordinary principles of offer and acceptance. However, it is viewed as unlikely to have been intended to bind the parties (see also <i>Harvey v Facey</i>, and <i>Clifton v Palumbo</i>). The reference to the parties&#8217; intention seems to ground this attitude of the courts in the principle of freedom of contract, but that may cloak something like its opposite \u2013 paternalism.<br>&emsp;&emsp;To the critical eye, even the principle described by the Master of the Rolls as \u201cclear\u201d is far from self-evident. As a matter of standard contract formation, parties who agree all terms are bound whether or not they choose to have the detail of their agreement formally drafted. And parties who agree the majority of the terms themselves, but then appoint a solicitor to settle minor matters, surely are bound; the arrangement does not presume further negotiation.<br>&emsp;&emsp;What can one take from this case, and from the two authorities mentioned above? It has to be realised that a general account of the rules of contract formation must take into account <i>context.</i> Dealings in land, particularly, bring into play not only rules, but a willingness on the part of the courts to supply an attitude of caution that the parties themselves may not in fact have shown."
    ],
    "NAME": "Winn v Bull",
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Incomplete Agreements &mdash; Conditional Agreements",
    "CITATION": "Winn v Bull (1877) 7 ChD 29",
    "RELATED": [
        "Chillingworth v Esche",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "Alpenstow v Regalian Properties",
        "British Bank for Foreign Trade Ltd v Novinex Ltd",
        "Walford v Miles",
        "Branca v Cobarro",
        "Scammell and Nephew Ltd v Ouston",
        "Nicolene v Simmonds",
        "May & Butcher v The King",
        "Sudbrook Trading Estate Ltd v Eggleton",
        "Foley v Classique Coaches Ltd",
        "Hillas v Arcos"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Incomplete Agreements",
        "Deferred Agreements"
    ],
    "NUMBER": "68",
    "TYPE": "Concept",
    "NAME": "Deferred Agreements",
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Incomplete Agreements &mdash; Deferred Agreements",
    "RELATED": [
        "Conditional Agreements",
        "Pre-Emptive Agreements",
        "Incomplete and Vague Agreements - Introduction",
        "Timing",
        "Exclusion and limitation clauses",
        "Implication from custom",
        "Implication from presumed intention (\u201cterms implied in fact\u201d)",
        "Section 2(1)",
        "Collateral Contracts",
        "Onerous or unusual clauses",
        "Incorporation of Terms - Introduction",
        "The Parol Evidence Rule"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Deferred Agreements</span></span><br>&emsp;&emsp;The desire that an interim accord should not bind finds a ready formulation in the words \u201csubject to contract\u201d. The use of these words enables the parties to adopt the courts&#8217; presumption that binding legal relations are postponed until the conclusion of a formal agreement."
    ]
},
{
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Incomplete Agreements",
        "Deferred Agreements"
    ],
    "YEAR": "1924",
    "NUMBER": "69",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Sargant LJ: \u201cTo my mind the words \u201csubject to contract\u201d or \u201csubject to formal contract\u201d have by this time acquired a definite ascertained legal meaning \u2013 not quite so definite a meaning perhaps as such expressions as f.o.b. or c.i.f. in mercantile transactions, but approaching that degree of definiteness. The phrase is a perfectly familiar one in the mouths of estate agents and other persons accustomed to deal with land; and I can quite understand a solicitor saying to a client about to negotiate for the sale of his land: \u201cBe sure that to protect yourself you introduce into any preliminary contract you may think of making the words \u201csubject to contract\u201d.\u201d I do not say that the phrase makes the contract containing it necessarily and whatever the context a conditional contract. But they are words appropriate for introducing a condition, and it would require a very strong and exceptional case for this clear prima facie meaning to be displaced\u201d.<br>&emsp;&emsp;Although the meaning of \u201csubject to contract\u201d is generally understood, and therefore unlikely to do much harm of an obvious sort, it is strange that what may look very like a contract can be prevented from binding by being made subject to the conclusion of a further contract. There are good reasons for the law to allow a device of this kind; like the use of the words \u201cwithout prejudice\u201d, it enables a party to communicate constructively in circumstances where the risk of being bound by one&#8217;s words might otherwise make negotiation difficult. However, the device does not fit entirely happily within the mechanics of contract formation set out so far. An agreement, although \u201csubject to contract\u201d is no less of an agreement for the insertion of these words. Yet it can be disregarded by one of the parties to it in a way which may leave the other with a very natural sense of grievance and no remedy. Furthermore, the task of making the real agreement \u2013 the one which will bind the parties \u2013 will be taken over by lawyers. A failure on their part to agree will be quite capable of leaving the parties to the original negotiation (who did agree) with nothing from it. All this in order to protect them.<br>&emsp;&emsp;An agreement expressly described as \u201cprovisional\u201d pending the drawing up of a more formalised contract may nevertheless be binding."
    ],
    "NAME": "Chillingworth v Esche",
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Incomplete Agreements &mdash; Deferred Agreements",
    "CITATION": "Chillingworth v Esche [1924] 1 Ch 97",
    "RELATED": [
        "Alpenstow v Regalian Properties",
        "Branca v Cobarro",
        "Winn v Bull",
        "British Bank for Foreign Trade Ltd v Novinex Ltd",
        "Walford v Miles",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "Scammell and Nephew Ltd v Ouston",
        "Foley v Classique Coaches Ltd",
        "May & Butcher v The King",
        "Sudbrook Trading Estate Ltd v Eggleton",
        "Hillas v Arcos",
        "Nicolene v Simmonds"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1947",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;An agreement (amounting only to some five sentences) provided that Branca would buy the lease and goodwill of a mushroom farm from Cobarro. It ended with these words: \u201cThis is a provisional agreement until a fully legalised agreement drawn up by a solicitor and embodying all the conditions herewith stated is signed\u201d. The agreement was witnessed by a third party. A deposit of 10% of the purchase price was to be payable, and was paid. Branca withdrew from the purchase, and sued for the return of the deposit on the ground that the agreement was not binding. At first instance, <span class=\"bd\">Denning J</span> held that the word \u201cprovisional\u201d in the agreement deprived it of force, since it could be glossed \u201ctentative\u201d. On appeal, his decision was overturned. The ordinary meaning of \u201cprovisional\u201d was that something was going to operate unless or until something else happened. The parties had realised the desirability of a formal document, but had been determined that there should be no escape for either of them between the signing of the provisional agreement and the signing of the final contract.<br>&emsp;&emsp;Even if the words \u201csubject to contract\u201d are used, the following case shows that their usual meaning can be displaced, as envisaged by Sargant LJ (above)."
    ],
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Incomplete Agreements &mdash; Deferred Agreements",
    "CITATION": "Branca v Cobarro [1947] KB 854",
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Incomplete Agreements",
        "Deferred Agreements"
    ],
    "RELATED": [
        "Chillingworth v Esche",
        "Alpenstow v Regalian Properties",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "Winn v Bull",
        "Walford v Miles",
        "British Bank for Foreign Trade Ltd v Novinex Ltd",
        "Scammell and Nephew Ltd v Ouston",
        "Nicolene v Simmonds",
        "Hillas v Arcos",
        "Foley v Classique Coaches Ltd",
        "Sudbrook Trading Estate Ltd v Eggleton",
        "May & Butcher v The King"
    ],
    "NUMBER": "70",
    "TYPE": "Case",
    "NAME": "Branca v Cobarro",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Incomplete Agreements",
        "Deferred Agreements"
    ],
    "YEAR": "1985",
    "NUMBER": "71",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;An agreement between Alpenstow and Regalian stated that if, following a grant of planning permission, the former were willing to sell part of their interest in land to the latter, then they would serve notice to that effect. The agreement stated a price, and further established time periods for the acceptance of the notice subject to contract; subject to submission by Alpenstow of a draft contract to Regalian; approval of the draft subject to any amendment that might reasonably be required; and exchange of contracts. Alpenstow subsequently refused to provide a draft contract, relying on the words \u201csubject to contract\u201d within the agreement as authorising either party to withdraw from it up until exchange of contracts. Nourse J held that the usual meaning of \u201csubject to contract\u201d, suggesting the liberty to withdraw, was displaced on these exceptional facts. The agreement was intended to create a duty to exchange contracts."
    ],
    "NAME": "Alpenstow v Regalian Properties",
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Incomplete Agreements &mdash; Deferred Agreements",
    "CITATION": "Alpenstow v Regalian Properties [1985] 2 All ER 545",
    "RELATED": [
        "Chillingworth v Esche",
        "Branca v Cobarro",
        "British Bank for Foreign Trade Ltd v Novinex Ltd",
        "Winn v Bull",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "Walford v Miles",
        "Nicolene v Simmonds",
        "Scammell and Nephew Ltd v Ouston",
        "Foley v Classique Coaches Ltd",
        "Sudbrook Trading Estate Ltd v Eggleton",
        "May & Butcher v The King",
        "Hillas v Arcos"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Incomplete Agreements",
        "Pre-Emptive Agreements"
    ],
    "NUMBER": "72",
    "TYPE": "Concept",
    "NAME": "Pre-Emptive Agreements",
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Incomplete Agreements &mdash; Pre-Emptive Agreements",
    "RELATED": [
        "Conditional Agreements",
        "Deferred Agreements",
        "Incomplete and Vague Agreements - Introduction",
        "The assessment of delay",
        "Rebuttal of Presumption",
        "The basics",
        "Implication from presumed intention (\u201cterms implied in fact\u201d)",
        "Breach of Contract - Introduction",
        "The intention with which the statement was made",
        "Frustration - Introduction",
        "The rationale for frustration",
        "Part Payment of a Debt as Consideration"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Pre-Emptive Agreements</span></span><br>&emsp;&emsp;The next case shifts the focus of the present discussion. The authorities above show that it is open to the parties to insert words into an agreement which will postpone the point at which they are legally bound. Is it open to them to do what in effect is the mirror-image of that, and make a binding agreement that they will later agree on outstanding matters?"
    ]
},
{
    "YEAR": "1975",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview </span></span><br>&emsp;&emsp;The defendant, the owner of a site in Hertfordshire, wanted to develop it as a motel. He contacted the plaintiff, a property developer and builder. The proposal was that the developer should introduce a financial backer, and himself carry out the construction work. After a meeting between the two, the developer wrote to the owner proposing that if he could make a suitable financial arrangement, the owner \u201cwill be prepared to instruct your Quantity Surveyor to negotiate fair and reasonable contract sums in respect of each of the three projects as they arise. (These would, incidentally be based upon agreed estimates of the net cost of work and general overheads with a margin for profit of 5%) which, I am sure you will agree, is indeed reasonable\u201d. The owner agreed. Financial backing was found by the developer, but the parties were not able to agree on the pricing of the project. The owner then employed another developer, using the finance found by the plaintiff. The plaintiff sued for the profit he would have made on the project, succeeded at first instance, and lost on appeal. The agreement contained in the correspondence was no more than an agreement to negotiate, which was not a contract known to the law.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The judgment of Lord <span class=\"bd\">Denning MR</span> in this case contains a valuable insight into the normal methods for fixing the price in building contracts, and significant statements of principle as well. Therefore a substantial extract is given from it here:<br>&emsp;&emsp;\u201cI am afraid that I have come to a different view from the judge. The reason is because I can find no agreement on the price or on any method by which the price was to be calculated. The agreement was only an agreement to \u201cnegotiate\u201d fair and reasonable contract sums. The words of the letter are \u201cyour Quantity Surveyor to negotiate fair and reasonable contract sums in respect of each of the three projects as they arise\u201d. Then there are words which show that estimates had not yet been agreed, but were yet to be agreed. The words are \u201cThese [the contract sums] would, incidentally be based upon agreed estimates of the net cost of work and general overheads with a margin for profit of 5%\u201d. Those words show that there were no estimates agreed and no contract sums agreed. All was left to be agreed in the future. It was to be agreed between the parties themselves. If they had left the price to be agreed by a third person such as an arbitrator, it would have been different. But here it was to be agreed between the parties themselves.<br>&emsp;&emsp;Now the price in a building contract is of fundamental importance. It is so essential a term that there is no contract unless the price is agreed or there is an agreed method of ascertaining it, not dependent on the negotiations of the two parties themselves. In a building contract both parties must know at the outset, before the work is started, what the price is to be, or, at all events, what agreed estimates are. No builder and no employer would ever dream of entering into a building contract for over \u00a3200,000 without there being an estimate of the cost and an agreed means of ascertaining the price.<br>&emsp;&emsp;In the ordinary course of things the architects and the quantity surveyors get out the specification and the bills of quantities. They are submitted to the contractors. They work out the figures and tender for the work at a named price; and there is a specified means of altering it up or down for extras or omissions and so forth, usually by means of an architect&#8217;s certificate. In the absence of some such machinery, the only contract which you might find is a contract to do the work for a reasonable sum or for a sum to be fixed by a third party. But here there is no such contract at all. There is no machinery for ascertaining the price except by negotiation. In other words, the price is still to be agreed. Seeing that there is no agreement on so fundamental a matter as the price, there is no contract.<br>&emsp;&emsp;But then this point was raised. Even if there was not a contract actually to build, was not there a contract to negotiate? In this case Mr Tolaini did instruct his quantity surveyor to negotiate, but the negotiations broke down. It may be suggested that the quantity surveyor was to blame for the failure of the negotiations. But does that give rise to a cause of action? There is very little guidance in the books about a contract to negotiate. It was touched on by Lord Wright in <i>Hillas &amp; Co Ltd v Arcos</i> [see further below] where he said: \u201cThere is then no bargain except to negotiate, and negotiations may be fruitless and end without any contract ensuing\u201d. Then he went on:<br>&emsp;&emsp;\u201c...yet even then, in strict theory, there is a contract (if there is good consideration) to negotiate, though in the event of repudiation by one party the damages may be nominal, unless a jury think that the opportunity to negotiate was of some appreciable value to the injured party\u201d.<br>&emsp;&emsp;That tentative opinion by Lord Wright does not seem to me to be well founded. If the law does not recognise a contract to enter a contract (when there is a fundamental term yet to be agreed) it seems to me it cannot recognise a contract to negotiate. The reason is because it is too uncertain to have any binding force. No court could estimate the damages because no one can tell whether the negotiations would be successful or would fall through; or if successful, what the result would be. It seems to me that a contract to negotiate, like a contract to enter into a contract, is not a contract known to the law.... I think we must apply the general principle that when there is a fundamental matter left undecided and to be the subject of negotiation, there is no contract. So I would hold that there was not any enforceable agreement in the letters between the plaintiff and the defendants. I would allow the appeal accordingly\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">There are several strands of reasoning in this passage. All deserve comment. The first, based on construction of the correspondence between the parties, amounts to the observation that they have not reached agreement on price. Correct, but they have agreed the means by which they will later do so, the way in which the total price itself will be fixed, and the principles (fairness and reasonableness) which will govern the settlement of differences. The fact that the negotiations later broke down is nothing to the point, since the existence of a contract is not, at least in theory, affected by what happens further down the line. However, according to Lord Denning&#8217;s (wholly uncontroversial) analysis, it is as if nothing had been agreed at all. </span><br>&emsp;&emsp;<span class=\"it\">Lord Denning&#8217;s helpful resume of common practice in the pricing of building contracts again shows the importance of context in assessing cases of this type. In a case of the sale of goods, a different context, the law&#8217;s approach is wholly dissimilar. Here, by virtue of the Sale of Goods Act, silence as to the price of goods triggers the Act&#8217;s importation of a \u201creasonable\u201d price into the deal, so that the contract will be upheld. Plausible resolution of cases where agreement is incomplete depends on the type of commerce in question.</span><br>&emsp;&emsp;<span class=\"it\">Finally, Lord Denning states that the law will not recognise a contract to make a contract or a contract to negotiate. This is stated as a matter of principle, but it is better understood as one of practicality. The real reason for it is that the evidence in a case of serious incompleteness may well not be adequate to establish a given quantum of loss, or perhaps even a breach. The pressure to elevate this perception into a principle probably derives from the courts&#8217; general unwillingness to trespass upon what they see as the sole preserve of the parties themselves \u2013 the making of bargains. Agreement is sacrosanct and the courts, which assert no power to impose it or even to supervise it, will not readily assume that it lies within the parties&#8217; reach.</span><br>&emsp;&emsp;<span class=\"it\">It is somewhat surprising that apparently absolute propositions (there can be no enforceable agreement to negotiate) can co-exist in judgments with detailed attention to context and business practice. However, not only does such an absolute proposition survive the next case; it is elaborated by it.</span>"
    ],
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Incomplete Agreements &mdash; Pre-Emptive Agreements",
    "CITATION": "Courtney &amp; Fairbairn Ltd v Tolaini Bros (Hotels) Ltd [1975] 1 All ER 716",
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Incomplete Agreements",
        "Pre-Emptive Agreements"
    ],
    "RELATED": [
        "Walford v Miles",
        "Chillingworth v Esche",
        "Winn v Bull",
        "Branca v Cobarro",
        "Alpenstow v Regalian Properties",
        "British Bank for Foreign Trade Ltd v Novinex Ltd",
        "Scammell and Nephew Ltd v Ouston",
        "Hillas v Arcos",
        "Sudbrook Trading Estate Ltd v Eggleton",
        "Nicolene v Simmonds",
        "Foley v Classique Coaches Ltd",
        "May & Butcher v The King"
    ],
    "NUMBER": "73",
    "TYPE": "Case",
    "NAME": "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
    "FLAGS": [
        "Denning"
    ]
},
{
    "YEAR": "1992",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In the course of negotiations for the sale of his photographic processing business, Miles received a favourable offer from a third party, Walford. An agreement for sale was concluded between them, subject to contract. Miles then further agreed with Walford that if the latter&#8217;s bankers would provide a comfort letter confirming the financing of the deal, Miles would cease negotiations with any other party with a view to concluding a formal contract with Walford. Walford did as agreed, but Miles sold the business to the party with whom he had originally been negotiating. Walford sued for the amount by which he said the true value of the business exceeded the price he had agreed for it. He argued that a term was to be implied into the further agreement, to give it business efficacy, that Miles would continue to negotiate with him in good faith. The Court of Appeal (<span class=\"bd\">Bingham LJ</span> dissenting) held that the agreement was merely an agreement to negotiate, and as such was unenforceable. Walford&#8217;s appeal to the House of Lords failed.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Ackner pointed out in the House of Lords that the agreement to negotiate in good faith was unlimited in duration, although it had been submitted that it would govern for a reasonable period of time. He gave as his reason for rejecting it the fact of its inherent uncertainty, but in the following passage, there appears to be a further ground for his decision:<br>&emsp;&emsp;\u201cHow can a court be expected to decide whether, <i>subjectively</i>, a proper reason existed for the termination of negotiations? The answer suggested depends upon whether the negotiations have been determined \u201cin good faith\u201d. However, the concept of a duty to carry on negotiations in good faith is inherently repugnant to the adversarial position of the parties when involved in negotiations. Each party to the negotiations is entitled to pursue his (or her) own interest, so long as he avoids making misrepresentations. To advance that interest he must be entitled, if he thinks it appropriate, to threaten to withdraw from further negotiations or to withdraw in fact, in the hope that the opposite party may seek to reopen the negotiations by offering him improved terms. Mr Naughton, of course, accepts that the agreement upon which he relies does not contain a duty to complete the negotiations. But that still leaves the vital question \u2013 how is a vendor ever to know that he is entitled to withdraw from further negotiations? How is the court to police such an \u201cagreement\u201d? A duty to negotiate in good faith is as unworkable in practice as it is inherently inconsistent with the position of a negotiating party. It is here that the uncertainty lies. In my judgment, while negotiations are in existence either party is entitled to withdraw from those negotiations, at any time and for any reason. There can thus be no obligation to continue to negotiate until there is a \u201cproper reason\u201d to withdraw. Accordingly a bare agreement to negotiate has no legal content\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Walford v Miles</i> is regarded as singularly important because it all but closes the door on any move to establish a general duty of good faith in English contract law. Uncertainty is the reason for the rejection of the duty as it would have applied in this case, backed up by the notion that good faith is \u201cinherently repugnant to\u201d the adversarial position of the parties to contractual negotiation. To put aside for the moment the fact that negotiations vary, and in many there will be far more shared interests than differences, here perhaps Lord Ackner gives the nub of the law&#8217;s difficulty conceiving of a valid agreement to agree or to negotiate. The parties are seen as occupying fundamentally opposing positions. When this perception breaks through an analysis of how closely the parties have approached the creation of legal obligations based on consensus, it will almost inevitably do so to lessen the likelihood of an enforceable agreement being found. It is noteworthy that a view of negotiation which holds good only for a certain type of hard bargaining nevertheless determines the law&#8217;s approach to all agreements to try to reach agreement.<br>&emsp;&emsp;At the same time, Lord Ackner draws a distinction between such an agreement, and an agreement to use best endeavours. The latter is not uncertain, and therefore binds. But this distinction is difficult to accept. Most people surely would know a lack of good faith when they encountered it. By contrast, a failure to use best endeavours could almost always be seen in more than one light. To conclude, Lord Ackner&#8217;s position is best explained as a cultural scepticism with regard to the chances of future agreement. As such, it accords closely with the attitude of a lawyer raised in adversarial courtrooms, but is perhaps less consistent with the customs of the business world.<br>&emsp;&emsp;In the short space of time since <i>Walford v Miles</i> there has been some movement, however. In 1997, the reasoning of Lord Ackner was doubted by Lord <span class=\"bd\">Steyn</span> writing extra-judically (\u201cContract Law: Fulfilling the Reasonable Expectations of Honest Men\u201d) 113 LQR 433. In 2005, the Court of Appeal upheld an <i>express</i> agreement to negotiate in good faith: see <i>Petromec. Inc. v Petroleo Brasileiro SA Petrobas (No 3)</i> [2005] EWCA Civ 891. The duty of good faith proposed in <i>Walford v Miles</i> was not express, but had been sought to be introduced as an implied term.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Walford v Miles is not an easy case, as you will probably agree after reading the discussion above. Two further comments may possibly help.</span><br>&emsp;&emsp;<span class=\"it\">The difficulty in coming to terms with Lord Ackner&#8217;s reasoning is compounded by the way he glides between objections to the plaintiff&#8217;s case. With respect, his speech is by no means a masterpiece of legal reasoning.</span><br>&emsp;&emsp;<span class=\"it\">As <span class=\"bd\">McKendrick</span> and others point out, the plaintiff&#8217;s case was quite likely to fail for a very basic reason. Walford had chosen to sue not for his reliance loss (a modest sum), but for his expectation loss. That was the difference between the agreed sale price, and what he said was the true value of the business \u2013 one million pounds. </span><br>&emsp;&emsp;<span class=\"it\">Where an agreement has been performed, the attitude of the law is quite different.</span>"
    ],
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Incomplete Agreements &mdash; Pre-Emptive Agreements",
    "CITATION": "Walford v Miles [1992] 1 All ER 453",
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Incomplete Agreements",
        "Pre-Emptive Agreements"
    ],
    "RELATED": [
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "British Bank for Foreign Trade Ltd v Novinex Ltd",
        "Chillingworth v Esche",
        "Branca v Cobarro",
        "Winn v Bull",
        "Alpenstow v Regalian Properties",
        "Hillas v Arcos",
        "Sudbrook Trading Estate Ltd v Eggleton",
        "Foley v Classique Coaches Ltd",
        "May & Butcher v The King",
        "Nicolene v Simmonds",
        "Scammell and Nephew Ltd v Ouston"
    ],
    "NUMBER": "74",
    "TYPE": "Case",
    "NAME": "Walford v Miles",
    "FLAGS": [
        "Bingham",
        "Steyn",
        "McKendrick"
    ]
},
{
    "YEAR": "1949",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Novinex, having agreed to buy 20,000 oilskin suits from a firm which was a client of the plaintiffs, wished to be put in direct contact with that firm. They wrote to the plaintiffs as follows: \u201cWe ... undertake to cover you with an agreed commission on any other business transacted with your friends. In return for this you are to put us in direct contact with your friends\u201d. The plaintiffs did put them in contact with the firm and Novinex went on to transact further business with it, but refused to pay any commission to the plaintiffs, who sued for breach of contract. Novinex successfully argued at first instance that it had not concluded a contract with the plaintiff. The contrary view prevailed on appeal. There was a difference between the analysis of agreements which were wholly executory (falling to be performed in the future) and those which had been executed (performed).",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Cohen LJ approved the law as stated by the trial judge (<span class=\"bd\">Denning J</span>), but differed from him in applying it:<br>&emsp;&emsp;\u201cIs this an enforceable agreement? A number of authorities have been cited to us, to which I do not propose to refer in detail, because, in my view, the effect of the authorities is stated correctly in the learned judge&#8217;s judgment where he said \u201cThe principle to be deduced from the cases is that if there is an essential term which has yet to be agreed and there is no express or implied provision for its solution, the result in point of law is that there is no binding contract. In seeing whether there is an implied provision for its solution, however, there is a difference between an arrangement which is wholly executory on both sides and one which has been executed on one side or the other. In the ordinary way, if there is an arrangement to supply goods at a price \u201cto be agreed\u201d or to perform services on terms \u201cto be agreed\u201d, then although, while the matter is still executory, there may be no binding contract, nevertheless, if it is executed on one side, that is, if the one does his part without having come to an agreement as to the price or the terms, then the law will say that there is necessarily to be implied, from the conduct of the parties, a contract that, in default of agreement, a reasonable sum is to be paid\u201d. With that statement of the principle of law, I respectfully agree. My difference with the learned judge is only on the question whether he has correctly applied that statement of principle to the facts of this case.<br>&emsp;&emsp;Then the judge continued on what, I think, is the principal issue: \u201cAnd what is the amount of commission to be? If there is no usual or customary commission, how can anyone say what is a reasonable commission for a follow-up transaction or a repeat transaction...?\u201d But the agreement had said in terms, instead of by implication: \u201cwe also undertake to cover you with a reasonable commission on any other business transacted with your friends\u201d. Denning J seems to have regarded that condition as being too vague to be enforceable. I cannot agree with this view. I think that a court should take the view that a jury properly directed would be able to arrive at a proper conclusion as to what in the circumstances of this case is a reasonable commission\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;At a first glance it may seem remarkable that so much should hang on whether the contract has been performed or not. After all, it remains the same contract. The question as to its completeness remains in the first place a question of construction, and then of how far a judge is willing to go outside the contract to resolve the questions raised by it.<br>&emsp;&emsp;A careful reading of the passage from Denning J&#8217;s first instance judgment quoted by Cohen LJ above will show that a different analysis takes over once the parties have acted upon their agreement. Performance does not magically clarify the contract or supply what is missing from it. Instead, an independent agreement arises from the fact of performance; \u201cthe law will say that there is necessarily implied from the conduct of the parties a contract that, in default of agreement, a reasonable sum is to be paid\u201d. This is not the original contract, remedied by the fact of performance, but a new contract carrying within it reference to reasonableness as a measure for resolving the lacuna in the express agreement. As for the \u201cnecessity\u201d of this implication, its basis is obvious. The alternative to imposing this solution is that one party will have been unjustly enriched at the expense of the other. It is therefore justice that demands this greater readiness to intervene.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">You may have noticed that the final sentence of Cohen LJ&#8217;s judgment is the second time in this lecture that reference has been made to what a jury could find (the first was the short quotation from Lord Wright&#8217;s speech in Hillas v Arcos, disapproved by Lord Denning MR in Courtney &amp; Fairbairn v Tolaini). The point is a minor one, but it may be worth remembering that there was a time when judges could still leave matters of fact to a jury for decision in contract cases. There must be a distinction of breadth between the range of issues capable of resolution by a jury in privacy, and those which can be resolved by a judge who must give reasons for the decision, and is subject to appeal. References to the broad ability of the jury to decide can be a way of keeping a matter nominally within the jurisdiction of the court even as the mechanism for deciding it remains vague.</span><br>&emsp;&emsp;<span class=\"it\">The rule that an executory contract will less readily be patched up by the courts than a partly or wholly executed one needs to be carefully understood, because in the next case it appears to have been misapplied in the Court of Appeal. The misunderstanding is explained in the excerpt from Lord <span class=\"bd\">Diplock</span>&#8216;s speech below (foot of page 13).</span>"
    ],
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Incomplete Agreements &mdash; Executed Agreements",
    "CITATION": "British Bank for Foreign Trade Ltd v Novinex Ltd [1949] 1 All ER 155",
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Incomplete Agreements",
        "Executed Agreements"
    ],
    "RELATED": [
        "Alpenstow v Regalian Properties",
        "Chillingworth v Esche",
        "Winn v Bull",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "Walford v Miles",
        "Branca v Cobarro",
        "Scammell and Nephew Ltd v Ouston",
        "Foley v Classique Coaches Ltd",
        "Sudbrook Trading Estate Ltd v Eggleton",
        "Hillas v Arcos",
        "Nicolene v Simmonds",
        "May & Butcher v The King"
    ],
    "NUMBER": "75",
    "TYPE": "Case",
    "NAME": "British Bank for Foreign Trade Ltd v Novinex Ltd",
    "FLAGS": [
        "Denning",
        "Diplock"
    ]
},
{
    "YEAR": "1982",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Four leases gave the lessees an option to purchase the freehold reversion. The price was to be agreed upon by two valuers, one appointed by the lessor and the other by the lessees, or if they failed to agree, by an \u201cumpire\u201d to be appointed by the valuers. The lessors declined to appoint a valuer, and submitted that the agreement was void for uncertainty since it did not specify a price. The House of Lords, by a majority, rejected the contention that this was no more than an agreement to agree. The machinery devised by the parties for ascertaining price, even though it had broken down, indicated that a fair price was intended to be fixed. The court itself could decide a fair price on the evidence.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The inference that the price was to be a fair one arose from the nature of the machinery envisaged by the agreement. \u201cValuers\u201d, in a generic sense, were to be appointed, and this suggested that the parties had meant to deal at a fair valuation. According to Lord Fraser, the position might have been different if a named valuer had been intended to act, or if the price had been intended to be fixed by an individual with special knowledge. Here, however, the process of valuation was subsidiary to the main purpose of the agreement, so that the court could vary it in order to uphold the agreement<br>&emsp;&emsp;Lord Fraser&#8217;s assumption that the parties intended to deal at a fair value is buttressed by the perspective of the law in various areas of contract. Thus, terms may be implied by a court into a contract on the ground of \u201cbusiness efficacy\u201d, which has as its rationale the presumption that the parties as reasonable people in business would have intended their agreement to work rather than fail. Similarly, the very measure by which courts assess the parties&#8217; intentions and behaviour makes reference to reasonableness, and basically imputes it to the parties. Lord Russell, however, in a dissenting speech, made a broadside attack on the assumption that the parties to a contract mean to be fair and reasonable:<br>&emsp;&emsp;\u201cMy Lords, it appears to be generally accepted that the law as previously understood since at least the early nineteenth century is in favour of the respondents (the lessors) and of the decision of the Court of Appeal. It is proposed by a majority of your Lordships to assert that the previous understanding was erroneous. I cannot agree.<br>&emsp;&emsp;Basically the assumption is made that the parties intended that the exercise of the option should involve payment of a \u201cfair price\u201d or a \u201cfair value\u201d. Of course parties to such a contract could in terms so agree, and I am not concerned to deny that in such a case the court could enforce the contract by ascertainment of a fair price or fair value, treating specific provisions in the contract for methods (which proved to be unworkable) of ascertaining that fair price or valuation as being inessential. But that is not this case. Why should it be thought that potential vendor and purchaser intended the price to be \u201cfair\u201d? The former would intend the price to be high, even though \u201cunfairly\u201d so. And the latter vice versa. Vendors and purchasers are normally greedy\u201d.<br>&emsp;&emsp;There may well be no way of reconciling the perspectives of Lord Fraser and Lord Russell. Perhaps the lesson to be learned from their difference is this. Whether one imputes fairness or unfairness to contracting parties, one is dealing in presumptions in default of evidence. However familiar and plausible the presumption applied by the majority in <i>Sudbrook</i>, it is not very strongly founded upon facts, and therefore it is easily shaken. It does not seem entirely far-fetched to suggest that the dominant policy of the law \u2013 to uphold bargains \u2013 is stalked by a more cynical awareness of what a bargain often is in fact; a good bargain for one because it is a bad bargain for the other. To put it in less colourful terms, a relational approach to contracting which attributes value to the parties being (and staying) in business together may be at odds with belief in freedom of contract.<br>&emsp;&emsp;Whether that is right or not, it is a fact that <i>Sudbrook v Eggleton</i> has been more often distinguished than applied. Given the later caselaw, which creates some fine distinctions, the problem addressed by <i>Sudbrook v Eggleton</i> should be regarded as one of considerable difficulty.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The subject of the following, which you may well wish to skip, is Lord <span class=\"bd\">Diplock</span>&#8216;s explanation of why the agreement in Sudbrook v Eggleton was not merely an agreement to make an agreement. It is a good example of the way in which Lord <span class=\"bd\">Diplock</span>&#8216;s technical contract analyses sometimes generate consequentialist solutions to problems which other judges are content to treat in broader terms:</span><br>&emsp;&emsp;<span class=\"it\">\u201cThe option clause cannot be classified as a mere \u201cagreement to make an agreement\u201d. There are not any terms left to be agreed between the parties. In modern terminology, it is to be classified as a unilateral or \u201cif\u201d contract. Although it creates from the outset a right on the part of the lessees, which they will be entitled, but not bound, to exercise against the lessors at a future date, it does not give rise to any legal obligations on the part of either party unless and until the lessees give notice in writing to the lessors, within the stipulated period, of their desire to purchase the freehold reversion to the lease. The giving of such notice, however, converts the \u201cif\u201d contract into a synallagmatic or bilateral contract, which creates mutual legal rights and obligations on the part of both lessors and lessees.</span><br>&emsp;&emsp;<span class=\"it\">The first obligation on each of them, once the contract has become synallagmatic, is to appoint their respective valuers to fix what is the fair and reasonable price for the reversion.</span><br>&emsp;&emsp;<span class=\"it\">The obligation of both lessors and lessees on appointing their respective valuers is to instruct them to carry out the functions for which the option clause requires that they should be appointed, viz. to try to reach agreement with one another on a price for the reversion that is fair and reasonable as between the lessors and the lessees and, failing such agreement, to agree on and appoint a suitably qualified impartial person to fix such price.</span><br>&emsp;&emsp;<span class=\"it\">So, if both lessors and lessees carry out their primary contractual obligations to one another, under the option clause, the result will be a conveyance by the lessors to the lessees of the reversion in fee simple\u2026at a price to be agreed on between valuers appointed by each party or failing such agreement determined by an umpire appointed jointly by the valuers. Until such conveyance and payment the contract remains executory; but so does any other contract for the sale of land. What Templeman LJ [in the Court of Appeal in this case] refers to in his summary of the effect of the authorities as the one central proposition from which all three principles that he states all stem, viz. until the price has been fixed by the method provided for in the contract \u201cthere is no complete agreement to enforce\u201d\u2026involves a fundamental fallacy\u201d. </span><br>&emsp;&emsp;<span class=\"it\">The fact that a contract had been acted upon, in combination with the presence of machinery within the contract for resolving differences (an arbitration clause), enabled the Court of Appeal to uphold an agreement in the next case:</span>"
    ],
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Resolution of Incompleteness &mdash; Contractual Machinery For Agreement",
    "CITATION": "Sudbrook Trading Estate Ltd v Eggleton [1982] 3 All ER 1",
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Resolution of Incompleteness",
        "Contractual Machinery For Agreement"
    ],
    "RELATED": [
        "Foley v Classique Coaches Ltd",
        "Nicolene v Simmonds",
        "Walford v Miles",
        "Winn v Bull",
        "Chillingworth v Esche",
        "Scammell and Nephew Ltd v Ouston",
        "May & Butcher v The King",
        "Hillas v Arcos",
        "Alpenstow v Regalian Properties",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "Branca v Cobarro",
        "British Bank for Foreign Trade Ltd v Novinex Ltd"
    ],
    "NUMBER": "76",
    "TYPE": "Case",
    "NAME": "Sudbrook Trading Estate Ltd v Eggleton",
    "FLAGS": [
        "Diplock"
    ]
},
{
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Resolution of Incompleteness",
        "Contractual Machinery For Agreement"
    ],
    "YEAR": "1934",
    "NUMBER": "77",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In return for a deal involving the sale of land, the defendants agreed to buy all the petrol they required for their business from the plaintiff. The agreement provided that the petrol was to be supplied \u201cat a price to be agreed by the parties in writing and from time to time\u201d, and included an arbitration clause relating to \u201cany dispute or difference\u201d. The land was conveyed, and petrol supplied for three years before the defendants repudiated the supply contract, asserting (inter alia) that it was not binding because it depended upon future agreement. The Court of Appeal rejected this argument. Scrutton LJ explained the grounds for the decision by reference to the arbitration clause, which in his view applied to any failure to agree the price for the petrol supply, and by reference to the fact that \u201cthe parties obviously believed they had a contract and they acted for three years as if they had\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This is a broad and liberal decision. To gauge the judicial state of mind which led to it, it is worth noticing that Scrutton LJ had dissented when the problem case of <i>May &amp; Butcher v The King</i> (see below) had reached the Court of Appeal five years previously. He commented on what lay behind his dissent in that case when again differing from the majority in <i>Hillas v Arcos</i> (see below):<br>&emsp;&emsp;\u201cI am afraid I remain quite impenitent. I think it was right and that nine out of ten business men would agree with me. But of course I recognise that as a judge I am bound to follow the principles laid down by the House of Lords. But I regret that in many commercial matters the English law and the practice of commercial men are getting wider apart, with the result that commercial business is leaving the courts and is being decided by commercial arbitrators with infrequent reference to the courts\u2026.The commercial man does not think there can be no contract to make a contract when every day he finds a policy \u201cpremium to be agreed\u201d treated by the law as a contract\u201d."
    ],
    "NAME": "Foley v Classique Coaches Ltd",
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Resolution of Incompleteness &mdash; Contractual Machinery For Agreement",
    "CITATION": "Foley v Classique Coaches Ltd [1934] 2 KB 1",
    "RELATED": [
        "Sudbrook Trading Estate Ltd v Eggleton",
        "Nicolene v Simmonds",
        "Scammell and Nephew Ltd v Ouston",
        "British Bank for Foreign Trade Ltd v Novinex Ltd",
        "May & Butcher v The King",
        "Walford v Miles",
        "Alpenstow v Regalian Properties",
        "Winn v Bull",
        "Hillas v Arcos",
        "Branca v Cobarro",
        "Chillingworth v Esche",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1953",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;An agreement for the sale and purchase of 3,000 tons of steel reinforcing bars was concluded by correspondence which included a letter from the seller containing these words: \u201cAs you have made the order direct to me, I am unable to confirm on my usual printed form which would have the usual force majeure and war clauses, but I assume that we are in agreement and that the usual conditions of acceptance apply\u201d. The seller failed to deliver the goods, and defended the buyers&#8217; claim for damages by arguing that because the words quoted above were unclear (there were no usual conditions of acceptance), so the contract was void for uncertainty. The Court of Appeal rejected this argument, drawing a distinction between a clause, such as this, which was meaningless and could be severed from the contract, and a clause which required further agreement between the parties in order to be resolved.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;<span class=\"bd\">Denning LJ</span> explained his view of the situation as follows: \u201cIn the present case there was nothing yet to be agreed. There was nothing left to further negotiation. All that happened was that the parties agreed that \u201cthe usual conditions of acceptance apply\u201d. That clause was so vague and uncertain as to be incapable of any precise meaning. It is clearly severable from the rest of the contract. It can be rejected without impairing the sense or reasonableness of the contract as a whole, and it should be so rejected. The contract should be held good and the clause ignored. The parties themselves treated the contract as subsisting. They regarded it as creating binding obligations between them; and it would be most unfortunate if the law should say otherwise. You would find defaulters scanning their contracts to find some meaningless clause on which to ride free\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">In this welter of cases, Nicolene v Simmonds is best characterised as a long-stop, and a useful one. If the effect of permitting an uncertainty to defeat a contract would be to allow a general way out of contracts, then the problem posed by such uncertainties is highly likely to be overcome by some means. Denning LJ&#8217;s task in this case was somewhat the easier because the context of the reference to the \u201cusual conditions of acceptance\u201d made it clear that some kind of exempting clause in favour of the seller was meant. Traditionally, courts have used interpretive flexibility to construe exempting clauses against those who insert them into contracts. The disposal of this case demonstrates a comparable policy.</span>"
    ],
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Resolution of Incompleteness &mdash; Severance of Uncertainties",
    "CITATION": "Nicolene v Simmonds [1953] 1 QB 543",
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Resolution of Incompleteness",
        "Severance of Uncertainties"
    ],
    "RELATED": [
        "Sudbrook Trading Estate Ltd v Eggleton",
        "Foley v Classique Coaches Ltd",
        "Alpenstow v Regalian Properties",
        "Walford v Miles",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "Hillas v Arcos",
        "British Bank for Foreign Trade Ltd v Novinex Ltd",
        "Winn v Bull",
        "Scammell and Nephew Ltd v Ouston",
        "Chillingworth v Esche",
        "May & Butcher v The King",
        "Branca v Cobarro"
    ],
    "NUMBER": "78",
    "TYPE": "Case",
    "NAME": "Nicolene v Simmonds",
    "FLAGS": [
        "Denning"
    ]
},
{
    "YEAR": "1941",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The parties reached agreement for the sale and purchase of a Commer van, and for the part-exchange of a Bedford van to be traded in against it. They then attempted to formalise their agreement through correspondence, in the course of which Scammell (who had the balance to pay on the Commer van) wrote that \u201cthis order is given on the understanding that the balance of the purchase price can be had on hire-purchase terms over a period of 2 years\u201d. The agreement went unperformed because of an argument about the condition of the Bedford van, and Scammell sued for breach of it. The House of Lords held, overturning the Court of Appeal, that there was no contract. The words quoted above were fundamentally problematic when found in what appeared to be a contract of sale, and admitted of so many mutually exclusive interpretations that they could not safely be given any one meaning.",
        "<span class=\"ud\"><span class=\"bd\">Discussion </span></span><br>&emsp;&emsp;The way in which this conclusion is reached is instructive. The fundamental problem in deducing agreement from informal correspondence, according to Viscount Maugham, is that \u201claymen unassisted by persons with a legal training are not always accustomed to use words or phrases with a precise or definite meaning\u201d. He goes on to observe the range of interpretations which were put upon the agreement by the judges in the courts below, and deduces from that the impossibility of concluding that a binding agreement has been established. Lord Russell sums up the same conclusion: \u201cAn alleged contract which appeals for its meaning to so many skilled minds in so many different ways is undoubtedly open to suspicion. For myself I feel no doubt that no contract between the parties existed at all; notwithstanding that they may have thought otherwise\u201d.<br>&emsp;&emsp;The proper conclusion is therefore that the parties had failed to agree, and the circumstances of the deal were not such as to enable the court to make inferences from trade practice to salvage it. However, it is worth noticing, as an indication of another judicial attitude of mind which surfaces here and can therefore surface again in the future, how the problem presents itself to the House of Lords. The parties, as laymen, had not expressed themselves with precision. The skilled minds of those with a legal training were able between them to find so many accounts of what the parties might have meant that they ended up obliged to conclude that they could not have agreed.<br>&emsp;&emsp;Cases of serious uncertainty must occur, but the treatment of this case by Viscount Maugham alerts one to a risk not unlike the mischief scotched by Lord <span class=\"bd\">Denning</span> in <i>Nicolene v Simmonds</i>. One cannot have a contract defeated by the ingenuity of a would-be defaulter in finding meaningless detail within it. Nor should a contract be defeated by the subtlety of lawyers, if it might have been upheld on a slightly less sophisticated view.<br>&emsp;&emsp;It is now time to turn to the two early twentieth century House of Lords cases, separated by only a few years but rather further apart in their ethos."
    ],
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Vague Agreements &mdash; Uncertainties Incapable of Resolution",
    "CITATION": "Scammell and Nephew Ltd v Ouston [1941] AC 251",
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Vague Agreements",
        "Uncertainties Incapable of Resolution"
    ],
    "RELATED": [
        "Hillas v Arcos",
        "May & Butcher v The King",
        "Chillingworth v Esche",
        "Branca v Cobarro",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "Alpenstow v Regalian Properties",
        "Sudbrook Trading Estate Ltd v Eggleton",
        "Winn v Bull",
        "British Bank for Foreign Trade Ltd v Novinex Ltd",
        "Foley v Classique Coaches Ltd",
        "Nicolene v Simmonds",
        "Walford v Miles"
    ],
    "NUMBER": "79",
    "TYPE": "Case",
    "NAME": "Scammell and Nephew Ltd v Ouston",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Vague Agreements",
        "Uncertainties Incapable of Resolution"
    ],
    "YEAR": "1932",
    "NUMBER": "80",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Hillas, a timber merchant, concluded an agreement with Arcos, a business representative of the Russian government, for the purchase of \u201c22,000 standards of software goods of fair specification over the season 1930\u201d, the buyers to arrange shipping dates. This transaction was effected without any difficulty. Clause 9 of the same agreement gave Hillas an option to enter into a contract for the purchase of \u201c100,000 standards for delivery in 1931\u201d. The price was to constitute a 5% discount from the officially listed price. When Hillas attempted to exercise this option, he discovered that Arcos had already sold its entire production. He sued for breach of contract. With a degree of hesitancy, the House of Lords held that the agreement did amount to a contract. The words \u201csoftwood goods of fair specification\u201d had to be imported into the option clause as a necessary implication. The expression was not incapable of being given a meaning. The parties had considered that they had a contract, and had already acted on it. It was not for the court to be astute in finding defects in it which would destroy it.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;One key to an understanding of this case is to concentrate on what their Lordships took the expression \u201cfair specification\u201d to mean, and what turned upon its interpretation. Two possibilities were canvassed. It might mean \u201cjust, as a balance of the two parties&#8217; interests\u201d, or it might mean \u201crepresentative of what was on offer\u201d. This is explained by Lord Thankerton: \u201cDoes the phrase mean a specification which is fair as between the interests, on the one hand, of the seller in respect of the stock of wood, comprising various kinds of wood and various qualities and sizes, available for sale in the season of 1931, and, on the other hand, the interests of the buyer in respect of the requirements of his trade during that season? Or does the phrase mean a fair selection from the seller&#8217;s stock of wood available for sale in that season? If the former construction be the proper one, I would be of opinion that the Court would not be entitled to adjudicate between the opposing interests of the two parties. If the latter construction be the proper one, the ascertainment of a fair selection from the seller&#8217;s available stock is within the province of the Court; in that the Court is applying a standard which is provided by the contract, and is thereby merely identifying the subject-matter of the contract\u201d. Lord Thankerton held, despite \u201cconsiderable doubt\u201d, that the second construction was the correct one.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;So what does turn on this? If the reference to fairness was to what was equitable, then it was for the parties further to agree it, for the court could not agree for them. If \u201cfair\u201d had the sense of \u201crepresentative\u201d, however, the Court could (if it had come to it) have examined the evidence to see if the timber provided was or was not representative of the seller&#8217;s stocks in 1931. There would not be any agreement lacking at the stage of contract formation.<br>&emsp;&emsp;Bearing this in mind, it may be somewhat easier to understand an otherwise very difficult sentence in the speech of Lord Tomlin. He has just set out the second of the available understandings of what fairness means in this context, stating that he considers it to be the correct interpretation, and then he says: \u201cThat is something which if the parties fail to agree can be ascertained just as much as the fair value of a property\u201d. This is not an assertion that the parties&#8217; failure to agree can be patched up by a court. It refers to a later disagreement, occurring during the performance of the contract, as to whether one side&#8217;s performance is adequate or alternatively amounts to a breach. This, the court can investigate and decide, just as the court can decide on evidence what a house is worth. What a court cannot do \u2013 and <i>Hillas v Arcos</i> does not suggest otherwise \u2013 is to decide the price of a house when that issue was at large in negotiations and was not resolved by the parties.<br>&emsp;&emsp;It would be wrong to leave <i>Hillas v Arcos</i> without noting the broader propositions which the case contains. They are most clearly expressed in the speech of Lord Wright, but a paraphrase will get his meaning across briefly. The agreement between the parties was not well expressed, but they thought they had a contract and acted on it. Businessmen often record even the most important agreements in crude and summary form, particularly where they are in the same trade; they know what they mean, and it is the duty of a court to try to uphold their agreements."
    ],
    "NAME": "Hillas v Arcos",
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Vague Agreements &mdash; Uncertainties Incapable of Resolution",
    "CITATION": "Hillas v Arcos (1932) 38 Comm Cas 23",
    "RELATED": [
        "Scammell and Nephew Ltd v Ouston",
        "May & Butcher v The King",
        "Branca v Cobarro",
        "Walford v Miles",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "Alpenstow v Regalian Properties",
        "British Bank for Foreign Trade Ltd v Novinex Ltd",
        "Sudbrook Trading Estate Ltd v Eggleton",
        "Foley v Classique Coaches Ltd",
        "Chillingworth v Esche",
        "Nicolene v Simmonds",
        "Winn v Bull"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incomplete and Vague Agreements",
        "Vague Agreements",
        "Uncertainties Incapable of Resolution"
    ],
    "YEAR": "1934",
    "NUMBER": "81",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs (properly the \u201csuppliants\u201d), proceeding against the Crown by a petition of right, asserted that the Controller of the Disposals Board had breached a contract with them to sell to them the Government&#8217;s excess stock of tentage. The agreement arose from a letter containing these clauses:<br>&emsp;&emsp;(1) The Commission agrees to sell and [the suppliants] agree to purchase the total stock of old tentage\u2026.<br>&emsp;&emsp;(3) The price or prices to be paid, and the date or dates on which payment is to be made by the purchasers to the Commission for such old tentage shall be agreed upon from time to time between the Commission and the purchasers as the quantities of the said old tentage become available for disposal, and are offered to the purchasers by the Commission\u2026.<br>&emsp;&emsp;(10) It is understood that all disputes with reference to or arising out of this agreement will be submitted to arbitration in accordance with the provisions of the Arbitration Act 1889.<br>&emsp;&emsp;The suppliants&#8217; claim for damages, an account and an injunction was refused by the House of Lords. The agreement between the parties was incapable of enforcement because it provided that price was to be agreed, and the parties&#8217; attempts to agree prices had in fact failed. In the face of that the court was not free to infer that the tentage was to be sold at a reasonable price. The arbitration clause applied to disputes arising out of the arrangement between the parties. The present problem, however, was a failure to agree, which Viscount Dunedin described as \u201ca very different thing from a dispute\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;In <i>Fletcher Challenge Energy Ltd v Electricity Corporation of New Zealand Ltd</i> [2002] 2 NZLR 433, Blanchard J had the following to say about <i>May &amp; Butcher</i>:<br>&emsp;&emsp;\u201cSomething should be said about the place that the controversial decision of the House of Lords in <i>May and Butcher Ltd v The King</i>[1934] 2 KB 17n has in the modern law of contract. We take the view that this case is no longer to be regarded as authority for any wider proposition than that an &#8220;agreement&#8221; which omits an essential term (or, as Lord Buckmaster called it, &#8220;a critical part&#8221;), or a means of determining such a term, does not amount to a contract. No longer should it be said, on the basis of that case, that <i>prima facie</i>, if something essential is left to be agreed upon by the parties at a later time, there is no binding agreement. The intention of the parties, as discerned by the Court, to be bound or not to be bound should be paramount. If the Court is satisfied that the parties intended to be bound, it will strive to find a means of giving effect to that intention by filling the gap. On the other hand, if the Court takes the view that the parties did not intend to be bound unless they themselves filled the gap (that they were not content to leave that task to the Court or a third party), then the agreement will not be binding.<br>&emsp;&emsp;On its own facts we respectfully doubt that <i>May and Butcher</i> would be decided by their Lordships in the same way today. We are now perhaps more accustomed to resort to arbitration in order to settle even matters of considerable importance to the contracting parties. We find curious the notion that, in a commercial contract where price is left to be agreed, a reasonable price cannot be fixed and that, even where there is an arbitration clause, that clause cannot be used to determine the price because &#8220;unless the price has been fixed, the agreement is not there&#8221;.<br>&emsp;&emsp;We agree with Professor McLauchlan (Rethinking Agreements to Agree (1998) 18 NZULR 77, 85) that &#8220;an agreement to agree will not be held void for uncertainty if the parties have provided a workable formula or objective standard or a machinery (such as arbitration) for determining the matter which has been left open&#8221;. We also agree with him that the court can step in and apply the formula or standard if the parties fail to agree or can substitute other machinery if the designated machinery breaks down\u201d.<br>&emsp;&emsp;It would be quixotic to claim that <i>May &amp; Butcher</i> can be fully rehabilitated and made to stand as the current approach of the law to inchoate agreements. However, by the use of casuistry, at least something can be done to make the decision less puzzling. How similar to <i>Hillas v Arcos</i> is <i>May &amp; Butcher</i>, in fact?<br>&emsp;&emsp;In <i>Hillas v Arcos</i>, an agreement is acted upon until the point at which the seller puts it out of his power to continue performance, having chosen to dispose of the goods elsewhere. The buyer sues for damages, presumably the discount to market value constituted by the deal. The seller defends himself by reference to the vagueness of the original agreement. It would have seemed unfair to the buyer if this defence had prevailed on any but the strongest facts.<br>&emsp;&emsp;In <i>May &amp; Butcher</i>, attempts were made to agree on the price of the tentage, but they failed. The suppliants&#8217; claim for damages, however formulated, would have to take as its main point of reference the price at which the goods would have been acquired if the contract had been performed. But this was the very thing which the parties had been unable to agree. And not only did the suppliants sue for damages \u2013 they also sought an injunction against the Controller of Disposals to prevent him selling the tentage elsewhere. It is difficult enough to get a court to order the performance of a public duty. The injunction sought in this case would have amounted to an order <i>restraining</i> the performance of a public duty. The suppliants&#8217; case actually looks quite as speculative now as it did when it came before the House of Lords in 1929.<br>&emsp;&emsp;If you have found this part of contract difficult, bear in mind the following.<br>&emsp;&emsp;You can consider that you have engaged with the subject and acquired at least a functioning grasp of it if you can assemble a brief set of principles something like those below, and can apply them to facts. Here, I give a range of suggestions by way of example, without intending it to be exhaustive.<br>&emsp;&emsp;- The words \u201csubject to contract\u201d usually prevent an agreement from binding;<br>&emsp;&emsp;- An agreement for exclusive negotiations will bind if expressly limited in duration;<br>&emsp;&emsp;- Problems of incompleteness or vagueness are more easily overcome if the contract has been acted upon;<br>&emsp;&emsp;- Commercial context and contractual interpretation are also vital determinants of the court&#8217;s willingness to fill gaps, or sever difficulties;<br>&emsp;&emsp;- There are fault lines running through the decided cases; judges do not all share the same view of good faith or adversarial negotiation;<br>&emsp;&emsp;- Casuistry also plays a part in outcomes; principles can and will be bent to refuse speculative claims."
    ],
    "NAME": "May & Butcher v The King",
    "CATEGORY": "Incomplete and Vague Agreements &mdash; Vague Agreements &mdash; Uncertainties Incapable of Resolution",
    "CITATION": "May &amp; Butcher v The King [1934] 2 KB 17n (1929)",
    "RELATED": [
        "Scammell and Nephew Ltd v Ouston",
        "Hillas v Arcos",
        "Winn v Bull",
        "British Bank for Foreign Trade Ltd v Novinex Ltd",
        "Walford v Miles",
        "Branca v Cobarro",
        "Alpenstow v Regalian Properties",
        "Sudbrook Trading Estate Ltd v Eggleton",
        "Nicolene v Simmonds",
        "Chillingworth v Esche",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "Foley v Classique Coaches Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Consideration"
    ],
    "NUMBER": "82",
    "FLAGS": [
        "Denning"
    ],
    "TYPE": "Concept",
    "NAME": "Consideration - Introduction",
    "CATEGORY": "Consideration",
    "RELATED": [
        "Consideration Distinguished From Conditional Gifts",
        "Rules of Sufficiency",
        "Consideration Must Not Be Past",
        "\u201cProblem\u201d Cases",
        "Consideration Must Be Requested",
        "Atiyah's Understanding of Consideration",
        "Doctrine of Implied Assumpsit",
        "Performance of Existing Legal Duties as Consideration",
        "Self-induced frustration",
        "The circumstances of frustration",
        "Warranties",
        "Frustration of common purpose"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;For a promise to be legally binding, it must not only be accepted, but must also be shown to have been given in return for consideration. You will immediately see from this use of the word \u201cconsideration\u201d that it does not have its ordinary English meaning here. In this context it is a legal term of art. A working definition of consideration (but no more than a working definition) would be \u201cthe price of the promise\u201d - what the promisor requests in return for the promise made.<br>&emsp;&emsp;Practitioners sometimes observe that cases on consideration are infrequent, and wonder why it is given such emphasis in academic courses on contract law. Lord <span class=\"bd\">Denning</span> is on record as saying that he could not recall a case on consideration ever coming before him (though several in fact did). It is true to say that in the majority of dealings, consideration will be clear. After all, it is unusual for contractual performance, or the promise of it, to be offered gratuitously. Furthermore, the view of the law is that a promise made in response to a promise (ie. by way of acceptance) will itself constitute consideration.<br>&emsp;&emsp;Problem cases do arise, but beyond that, the doctrine of consideration is a subtle and interesting one which richly deserves academic attention. The fact is that consideration has almost certainly meant different things at different times. This lecture will not attempt to give a systematic historical account of consideration&#8217;s development in the law, but it does assume from the outset that most definitions of consideration give only a partial view of what the doctrine is, and what it means.<br>&emsp;&emsp;At several points during the lecture, and with increasing frequency, there will be hints that a case is not quite as it seems, and reference to the topic which will be tackled at the end \u2013 Professor Atiyah&#8217;s understanding of consideration. If, as you encounter these indications, you find them mystifying or irritating, you can go straight to the end to resolve the problem. However, there would be far more to be gained from the lecture by working through the cases, giving some preliminary thought to what kind of a doctrine consideration is, and focusing on the indications that another understanding of it is available just beneath the surface.<br>&emsp;&emsp;With that in mind, it is time to examine the traditional definitions. They give necessary insights into the working of consideration.<br>&emsp;&emsp;A well-known one comes from the nineteenth century case of <i>Currie v Misa</i> (1875). There, Lush J said that \u201cA valuable consideration, in the sense of the law, may consist either in some right, interest, profit, or benefit accruing to the one party, or some forbearance, detriment, loss or responsibility, given, suffered, or undertaken by the other\u201d. To make sense of this, add into it the notion that it is the promisor who needs to be gaining the benefit, or the promisee who needs to be sustaining the detriment.<br>&emsp;&emsp;If it should be asked <i>why</i> there should be benefit to the promisor or, still more pertinently, detriment to the promisee, the working answer lies in the concept of bargain. One view of consideration, highly influential in the nineteenth and twentieth centuries, coupled it with the principle that the courts would not enforce gratuitous promises or gifts, but only bargains, accords, exchanges. The character of these enforceable arrangements was that each party could be seen to gain something, but also to give something up in order to realise the gain. Hence, benefit to the party who is to give, or detriment to the party who is to receive.<br>&emsp;&emsp;A cogent exposition of the relationship between consideration and bargain, viewing it as a necessary relationship, is given by C.J.Hamson, writing in 1938:<br>&emsp;&emsp;\u201cWhat is today the significance of consideration in the law of simple contract? So far from being an additional and unnecessary mystery, an accidental tom-tit in an otherwise rational theory of contract, consideration in its essential nature is an aspect merely of the fundamental notion of bargain, other aspects of which, no less but no more important, are offer and acceptance. Consideration, offer and acceptance are an indivisible trinity, facets of one identical notion which is that of bargain. Indeed, consideration may conveniently be explained as merely the acceptance viewed from the offeror&#8217;s side. Acceptance is defined to be the doing of that act (which may be the giving of a promise or the rendering of a performance) which is <i>requested</i> by the offeror in return for his promise; it is the <i>response</i> to the offer. An act done at the request of the offeror in response to his promise is consideration; and consideration in its essence is nothing else but response to such a request. To a gratuitous promise the common law notion of offer and acceptance does not apply. We can no doubt separate offer, acceptance and consideration for our convenience in treating of them: but they are logical and interdependent entities abstracted from the one entire reality which is bargain. We can no more abolish one without destroying the others than we can think of a circle without a circumference...\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;For the time being there is no reason to take issue with this account; it works well enough to explain the majority of the cases. Just to sow a seed of doubt, or record a reservation which will be expanded later, it is worth remarking that Hamson&#8217;s indivisible trinity of offer, acceptance and consideration tells one nothing about why the word \u201cconsideration\u201d is an appropriate one in this context."
    ]
},
{
    "CATEGORIES": [
        "Consideration",
        "Definitions of Consideration"
    ],
    "YEAR": "1842",
    "NUMBER": "83",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A written agreement made between the plaintiff (the widow of John Thomas) and the deceased&#8217;s executors provided that a cottage forming part of his estate was to be conveyed to her. The agreement further stated that by his will John Thomas had left all his property to his executors, but that since they were convinced it was his desire that his widow should have the cottage for life or as long as she remained unmarried, \u201cin consideration of such desire\u201d the cottage was to be hers. The agreement also required the plaintiff to make an annual payment of \u00a31 towards the ground rent to the executors. The agreement was not carried out. A jury awarded the plaintiff \u00a3100 in damages for its breach, and it was held on appeal that she was entitled to recover. The agreement was binding, being supported by consideration in the form of the contribution towards the ground rent.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Patteson J distinguished between the named \u201cconsideration\u201d for the promise to convey the cottage, and the consideration in law: \u201cThe cause for the gift was unquestionably respect for the memory of the testator, but we must not confound motive with consideration. A consideration, such as is recognised and known to our law, means a consideration of some value, moving from the plaintiff. Mere respect for the memory and wishes of a testator cannot be in any way construed as such. It is then argued, that, this being so, there is no consideration for the agreement at all, and that it is an agreement for a voluntary gift on certain conditions; but, looking at the agreement, we find, not a mere proviso, but an express agreement by the plaintiff to pay \u00a31 towards a certain ground-rent...\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;There are two points to note here. The first is the distinction drawn between motive and consideration. If we ask why a promise is given, there will tend to be two answers. There will be the promisor&#8217;s reasons for giving it; these may well not amount to consideration. Consideration must be something asked of the promisee. The second point is that what is asked of the promisee, and found here by the court to amount to consideration, is a mere <i>contribution </i>toward a ground-rent, and there is no concern to measure its worth against the benefit which is being provided to her in return. From this, an essential principle of the law of consideration can be deduced; the law pays no regard to the adequacy of consideration. No equation is set up to measure the consideration against what it is acquiring. This will be discussed in more detail very shortly.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The passage above includes the notion that consideration must move from the plaintiff. Hamson wrote in terms of offeror and offeree, and this lecture earlier used the expressions \u201cpromisor/promisee\u201d. Here is potential for confusion. What is the correct terminology?</span><br>&emsp;&emsp;<span class=\"it\">All these terms are in a sense correct. Consideration received in return for a promise makes that promise legally binding, and therefore it is appropriate to speak of consideration moving from the promisee. The promise may be that of the offeror (but one might equally be focusing on the offeree&#8217;s promise, made binding by consideration received from the offeror). The notion that consideration must move from the plaintiff makes sense in the context of a trial; it is the plaintiff who is likely to be suing on the basis that the defendant has breached a contractual promise, and to show that the promise was a binding one, it will be for the plaintiff to establish that he gave consideration for it.</span><br>&emsp;&emsp;<span class=\"it\">Another formulation which it is best to avoid is one which in fact springs rather readily to mind in this area, namely that consideration makes a contract binding. In a sense this not wrong, but it may be misleading if it leads one to look at a contract to find something that can be called \u201cconsideration\u201d, and then to conclude that this is what gives the contract its legal force. More accurately, consideration makes a promise binding. Since bilateral contracts (the majority) will comprise two promises, the one being exchanged against the other, there will be two bits of consideration within the arrangement, not one. In the context of litigation, the consideration pleaded (proved before the court) will be the consideration provided in return for the promise which allegedly has been breached. </span><br>&emsp;&emsp;<span class=\"it\">All the rules regarding consideration and set out in the remainder of this lecture can be summed up in one well-known proposition; consideration must be sufficient, but need not be adequate. A moment&#8217;s thought will be sufficient to suggest that this principle is ineptly phrased, since \u201cadequate\u201d and \u201csufficient\u201d are regarded by the dictionary as synonyms. However, English contract law traditionally takes a different view. \u201cAdequacy\u201d is taken to mean \u201cequal in value to the performance (or promise of it) in exchange for which the consideration is given. \u201cSufficient\u201d means \u201cconsistent with the legal rules which the courts have developed in this area\u201d.</span><br>&emsp;&emsp;<span class=\"it\">By drawing on what you already know of the outlook of the courts, you may well be able to suggest why consideration need not be adequate or, as it is often put, why the courts will not investigate the adequacy of consideration. If it were otherwise, the courts would be obliged to value the performances of both parties to ensure that they equalled each other in value. This would be to place an intolerably inconvenient hurdle in the way of proving a contract, and would produce serious uncertainty. More fundamentally, such a rule would fly in the face of freedom of contract. A disadvantageous exchange, by which one party forfeits value, is no less a contract than an advantageous one. Indeed, the one party&#8217;s disadvantage will very probably be the other&#8217;s advantage. The business of the courts is to uphold contracts, not to pass judgment on the parties&#8217; wisdom in making them.</span>"
    ],
    "NAME": "Thomas v Thomas",
    "CATEGORY": "Consideration &mdash; Definitions of Consideration",
    "CITATION": "Thomas v Thomas [1842] 2 QB 851",
    "RELATED": [
        "Cook v Wright",
        "Roscorla v Thomas",
        "New Zealand Shipping v Satterthwaite",
        "Dickinson v Abel",
        "Wade v Simeon",
        "Glasbrook v Glamorgan CC",
        "Lampleigh v Brathwait",
        "White v Bluett",
        "Combe v Combe",
        "Re Casey's Patents",
        "Chappell & Co v Nestle Co Ltd",
        "Lipkin Gorman v Karpnale Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Consideration",
        "Rules of Sufficiency"
    ],
    "NUMBER": "84",
    "FLAGS": [
        "Treitel"
    ],
    "TYPE": "Concept",
    "NAME": "Rules of Sufficiency",
    "CATEGORY": "Consideration &mdash; Rules of Sufficiency",
    "RELATED": [
        "Consideration - Introduction",
        "\u201cProblem\u201d Cases",
        "Doctrine of Implied Assumpsit",
        "Consideration Must Not Be Past",
        "Consideration Must Be Requested",
        "Consideration Distinguished From Conditional Gifts",
        "Atiyah's Understanding of Consideration",
        "Performance of Existing Legal Duties as Consideration",
        "Entire and severable obligations",
        "Effect of Promissory Estoppel",
        "Timing",
        "Implication from custom"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Rules of Sufficiency</span></span><br>&emsp;&emsp;In <i>Thomas v Thomas</i> (above), Patteson J states that \u201cConsideration means something which is of some value in the eye of the law, moving from the plaintiff\u2026\u201d. What is \u201cvalue in the eye of the law\u201d? Presumably something other than mere \u201cvalue\u201d.<br>&emsp;&emsp;<span class=\"bd\">Treitel</span> considers that economic value is meant. Paragraph 3-027 of <i>The Law of Contract</i>, below the heading \u201cMust be of economic value\u201d proposes that \u201cAn act, forbearance or promise will amount to consideration only if the law recognises that it has some economic value. It may have such value even though the value cannot be precisely quantified. But \u201cnatural affection of itself is not a sufficient consideration\u201d, and the same is true of other merely sentimental motives for promising. This is the reason why in <i>Thomas v Thomas</i> the desire of the testator that his widow should live in his house was not part of the consideration for the executors&#8217; promise that she might do so\u201d.<br>&emsp;&emsp;Is economic value required, as Treitel suggests? He cites no authority to establish that, and it does not follow from the ratio decidendi of <i>Thomas v Thomas</i>. The issue came to a head in the next case."
    ]
},
{
    "YEAR": "1960",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Nestle, the chocolate manufacturer, advertised that it would supply a recording of a piece of music called \u201cRockin&#8217; Shoes\u201d to anyone who sent in 1s 6d together with 3 wrappers from Nestle chocolates. The copyright of the music was vested in Chappell &amp; Co. By statute, a royalty was payable to the holder of the copyright on the \u201cordinary retail selling price\u201d of the copies made. Chappell sought an injunction against Nestle to prevent a breach of copyright on the basis that 1s 6d was not the ordinary retail selling price. The value of the wrappers also needed to be taken into account. The competing view was that the sending in of the wrappers constituted a mere qualification enabling a purchaser to take advantage of the offer. The House of Lords held, by a bare majority, that Chappell&#8217;s contention was correct. The wrappers were part of the requested consideration, even though they were thrown away on receipt by Nestle. It follows that the wrappers would have been capable of constituting the entire consideration.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Reid, in the majority, was of opinion that although the receipt of the wrappers might confer no direct benefit on Nestle in some cases, there must have been many more in which it did. The whole point of the offer of \u201cRockin&#8217; Shoes\u201d was to induce people to buy more of Nestle&#8217;s chocolate, and some certainly would have done so. Furthermore, \u201cthere may have been an indirect benefit by way of advertisement\u201d.<br>&emsp;&emsp;Lord Somervell of Harrow, also in the majority, goes much further than this in his speech: \u201cIt is said that when received the wrappers are of no value to Nestle&#8217;s. This I would have thought irrelevant. A contracting party can stipulate for what consideration he chooses. A peppercorn does not cease to be good consideration if it is established that the promisee [sic] does not like pepper and will throw away the corn. As the whole object of selling the record, if it was a sale, was to increase the sales of chocolate, it seems to me wrong not to treat the stipulated evidence of such sales as part of the consideration. For these reasons I would allow the appeal\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Professor J.C. Smith, writing in 1979, notices just how radical a view this is: \u201cThe language of benefit and detriment is, and I believe long has been, out of date. So is the idea that consideration must be an economic benefit of some kind. All that is necessary is that the defendant should, expressly or impliedly, ask for something in return for his promise. If he gets what he asked for, then the promise is given for good consideration unless there is some vitiating factor. Though lip-service has been paid to the notions of benefit and detriment, they have no substantial meaning, in light of the principle that the court will not enquire into the adequacy of the consideration. If I make a promise to you in return for your supplying me with three, quite useless, chocolate wrappers, which I will instantly throw away, there is a perfectly good contract provided that the promise was seriously intended. I have got what I asked for and that is a sufficient \u201cbenefit\u201d. You have parted with something that you might have kept and that is a sufficient \u201cdetriment\u201d. But the wrappers are of no value to me, and you are perhaps glad to be rid of them. As for economic value, the judges have recognised, for over a century, the validity of the contract to pay \u00a3100 if the promisee will walk to York; and no one has ever demonstrated what economic value there is in walking to York\u201d.<br>&emsp;&emsp;Professor Smith&#8217;s \u201cmere stipulation\u201d theory of consideration is attractive; consideration is <i>anything</i> (provided it is not vitiated by illegality etc.) which the promisor requests of the promisee. That said, the language of benefit and detriment may be out of date, but it would be unwise to discard it completely; it provides a ready and fairly reliable way of scanning for consideration on the facts of the average case, and of avoiding getting the roles of promisor and promisee mixed up. It also explains how his knock-down answer to <span class=\"bd\">Treitel</span>&#8216;s requirement of value in fact works. There may be no economic value in walking to York, or using the carbolic smoke-ball for two weeks, but these activities certainly involve a detriment to the promisee sustained at the request of the promisor.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">If Professor Smith is right (and his view is worthy of very great respect), then how is one to reconcile the notion that consideration can be anything at all with Patteson J&#8217;s requirement in Thomas v Thomas that it should be \u201cof value in the eye of the law\u201d? It can be done. Patteson J&#8217;s formulation does impose a limit on Smith&#8217;s proposition, but it is one which the latter would have accepted. \u201cValue\u201d, here, is subjectively assessed. Reference to \u201cthe eye of the law\u201d can be understood to import the requirement that the consideration, whatever it is, should at least be capable of being objectively shown to have moved from the promisee. All that is excluded from Smith&#8217;s \u201canything\u201d are purported considerations which cannot be ascertained to be present or absent by the ordinary adduction of evidence before a court. So, for example, a promise coupled with the request \u201cthat you treat me more as you used to\u201d, would probably not be given for consideration. It is too uncertain to stand up to proof or challenge.</span><br>&emsp;&emsp;<span class=\"it\">Before leaving <i>Chappell v Nestle</i>, and perhaps recalling it through Professor Smith&#8217;s eyes, you should note that it provides a very narrow basis for his theory. The passage from Lord Somervell&#8217;s speech quoted above is the only statement of such radicality in the case. The other members of the majority in the House of Lords are intent on finding some actual though derivative benefit to Nestle through the request for the wrappers (or their provision). What is more, Lord Somervell&#8217;s statement, read in its immediate context, is no more than a rebuttal of the objection that the wrappers cannot be of value to Nestle since the company throws them away on receipt. His whole speech occupies a bare half page of the law report. Firmer ground for Professor Smith&#8217;s view could perhaps be found in cases which minimise the importance of consideration itself as a necessary constituent of a binding agreement. The most striking example, <i>The Eurymedon</i>, is set out later in this lecture.</span><br>&emsp;&emsp;<span class=\"it\">The question of what is of value in the eye of the law has been discussed in a line of cases involving something which the courts have strong views \u2013 disputed legal claims.</span>"
    ],
    "CATEGORY": "Consideration &mdash; Consideration Must Be of Some value In Eye of Law",
    "CITATION": "Chappell &amp; Co v Nestle Co Ltd [1960] AC 87",
    "CATEGORIES": [
        "Consideration",
        "Consideration Must Be of Some value In Eye of Law"
    ],
    "RELATED": [
        "Scotson v Pegg",
        "Combe v Combe",
        "Wade v Simeon",
        "Shadwell v Shadwell",
        "Collins v Godefroy",
        "Roscorla v Thomas",
        "Cook v Wright",
        "Thomas v Thomas",
        "New Zealand Shipping v Satterthwaite",
        "Pao On v Lau Yiu Long",
        "Lampleigh v Brathwait",
        "Glasbrook v Glamorgan CC"
    ],
    "NUMBER": "85",
    "TYPE": "Case",
    "NAME": "Chappell & Co v Nestle Co Ltd",
    "FLAGS": [
        "Treitel"
    ]
},
{
    "YEAR": "1861",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A claim was made against the defendant for a contribution to works carried out under a local property improvement Act. The Commissioners, bringing the claim, assumed that the defendant was liable to pay as an owner of houses in the district affected. In fact he was not, since he was merely the agent for the owner, but on being threatened with legal action he promised to pay a sum of money in three instalments to compromise the claim. He failed to pay the third instalment. He defended the present proceedings by arguing that the plaintiffs had given no consideration in return for his promise to pay, since the action for the contribution did not lie against him. He had therefore compromised a claim which, if pursued, could not have succeeded against him. The court held that he had received consideration; he had been spared the expense and trouble of legal proceedings.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The defendant was strictly correct in asserting that the claim brought against him, if pursued, must have failed and was therefore worthless. Various factors seem in combination to prevent the court reaching the conclusion that he therefore received something which was of no value in the eye of the law. Express notice was taken of the fact that he had avoided being sued (as at the time the deal was struck, at least). It is also suggested by various commentators that there is a public policy interest in upholding agreements to compromise disputed claims, and there are judicial dicta to the effect that a claim can hardly be declared valueless unless it has been tried; this happens to correspond with the basic principle that the court will not judge the adequacy of consideration. Furthermore, to argue that a promise may be breached because it is technically unsupported by consideration is never an attractive one. <span class=\"bd\">McKendrick</span> goes further, and suggests that the plaintiff commissioners had sustained a detriment by being induced not to take action against the actual owner of the house.<br>&emsp;&emsp;The point to take away from this is that alongside a requested consideration which itself seems valueless, there may be alternative advantages to the promisor or concomitant disadvantages to the promise which can rank as consideration themselves. There may also be <i>good reasons</i> for upholding the deal, and they may draw the court&#8217;s attention away from the technical absence of consideration. This last notion, which may well seem surprisingly sub-legal, is explored at the end of the lecture."
    ],
    "CATEGORY": "Consideration &mdash; Consideration In Compromises of Legal Claims",
    "CITATION": "Cook v Wright (1861)",
    "CATEGORIES": [
        "Consideration",
        "Consideration In Compromises of Legal Claims"
    ],
    "RELATED": [
        "Wade v Simeon",
        "White v Bluett",
        "Re Casey's Patents",
        "Shadwell v Shadwell",
        "Thomas v Thomas",
        "Scotson v Pegg",
        "New Zealand Shipping v Satterthwaite",
        "Lipkin Gorman v Karpnale Ltd",
        "Ward v Byham",
        "Roscorla v Thomas",
        "Combe v Combe",
        "Pao On v Lau Yiu Long"
    ],
    "NUMBER": "86",
    "TYPE": "Case",
    "NAME": "Cook v Wright",
    "FLAGS": [
        "McKendrick"
    ]
},
{
    "YEAR": "1846",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff had claimed two sums, totalling \u00a32000, from the defendant, who had promised to pay them if the plaintiff would forbear from pursuing his legal action. The defendant then failed to pay, arguing that the plaintiff had no cause of action against him, and the plaintiff sued. The court found as fact that there was no cause of action, and that the plaintiff knew as much. The giving up of a claim brought in bad faith did not amount to consideration.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;<span class=\"bd\">McKendrick</span> finds it curious that the law attributes such importance to the state of mind of the claimant: \u201cOne might expect the law to conclude either that a promise to give up a worthless claim is not good consideration (on the basis that nothing of value is given in promising to give up a worthless claim) or that it is good consideration (on the basis that the defendant is freed from the nuisance of having to defend the claim. Instead the law has adopted an uneasy compromise that rests on the knowledge of the claimant\u201d. He attributes this balance to the need, on the one hand, to encourage the settlement of claims, and on the other hand, to discourage parties from knowingly bringing bad claims in order to extort settlement on terms.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">This is probably right, but the situation bears comparison with what has already been seen of the snapping up cases. There, the judicial focus seemed to stray onto the offeree&#8217;s actual knowledge that the offer was mistakenly being made to him, whereas the principled test was whether a reasonable person in the offeree&#8217;s position would have realised the mistake. The fact is that guilty knowledge and bad faith are very hard to overlook, whether they are germane to a principled legal analysis or not. A bargain flawed by bad faith is not going to be upheld by a court, whether or not it is supported by consideration. To put it another way, it may be that the definition of consideration excludes dealings vitiated by bad faith, together with all other dealings that courts do not wish to support. This will be the subject of the final part of the lecture.</span>"
    ],
    "CATEGORY": "Consideration &mdash; Consideration In Compromises of Legal Claims",
    "CITATION": "Wade v Simeon (1846) 2 CB 548",
    "CATEGORIES": [
        "Consideration",
        "Consideration In Compromises of Legal Claims"
    ],
    "RELATED": [
        "Cook v Wright",
        "Glasbrook v Glamorgan CC",
        "Dickinson v Abel",
        "Lampleigh v Brathwait",
        "Roscorla v Thomas",
        "Combe v Combe",
        "Scotson v Pegg",
        "White v Bluett",
        "Pao On v Lau Yiu Long",
        "New Zealand Shipping v Satterthwaite",
        "Collins v Godefroy",
        "Thomas v Thomas"
    ],
    "NUMBER": "87",
    "TYPE": "Case",
    "NAME": "Wade v Simeon",
    "FLAGS": [
        "McKendrick"
    ]
},
{
    "CATEGORIES": [
        "Consideration",
        "Consideration Must Be Requested"
    ],
    "NUMBER": "88",
    "TYPE": "Concept",
    "NAME": "Consideration Must Be Requested",
    "CATEGORY": "Consideration &mdash; Consideration Must Be Requested",
    "RELATED": [
        "Consideration Distinguished From Conditional Gifts",
        "Performance of Existing Legal Duties as Consideration",
        "Doctrine of Implied Assumpsit",
        "\u201cProblem\u201d Cases",
        "Consideration - Introduction",
        "Rules of Sufficiency",
        "Consideration Must Not Be Past",
        "Atiyah's Understanding of Consideration",
        "The contractual nature of the document / expectations of the parties",
        "Transmission of Acceptance",
        "Tender of performance",
        "Communication of Acceptance - Intro"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Consideration Must Be Requested</span></span><br>&emsp;&emsp;A promise is not exchanged against consideration merely because its maker derives a benefit from making it, or its recipient sustains a detriment. Consideration in bilateral contracts (not in unilateral ones) must be <i>requested</i> of the promisee. That said, it is not at all difficult to find dicta and decisions in which this principle is not rigorously followed, so that consideration appears to inhere in the consequences of acting upon the deal. The next case, however, is one in which the requirement of a request is taken seriously."
    ]
},
{
    "CATEGORIES": [
        "Consideration",
        "Consideration Must Be Requested"
    ],
    "YEAR": "1951",
    "NUMBER": "89",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;At the time of their divorce, a husband promised his wife that he would make annual maintenance payments to her. He never did so. She had a right to apply to the Divorce Court for an order for maintenance but did not do so (in fact her income was larger than that of her husband). She sued for arrears of payment, arguing (inter alia) that she had given consideration for her husband&#8217;s promise to pay by promising not to apply to the court for a maintenance order. The Court of Appeal held that this could not amount to consideration. Her husband had not asked her not to apply to court. Furthermore, had she made such a promise it would have been worthless, since it could not stand against her statutory right to apply.<br>&emsp;&emsp;The next case indicates that the requirement for consideration to be requested (whether expressly or impliedly) has sometimes been overlooked."
    ],
    "NAME": "Combe v Combe",
    "CATEGORY": "Consideration &mdash; Consideration Must Be Requested",
    "CITATION": "Combe v Combe [1951] 2 KB 215",
    "RELATED": [
        "Shadwell v Shadwell",
        "Glasbrook v Glamorgan CC",
        "Roscorla v Thomas",
        "Lampleigh v Brathwait",
        "Thomas v Thomas",
        "Chappell & Co v Nestle Co Ltd",
        "Cook v Wright",
        "Wade v Simeon",
        "Re Casey's Patents",
        "Pao On v Lau Yiu Long",
        "Dickinson v Abel",
        "Lipkin Gorman v Karpnale Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Consideration",
        "Consideration Must Be Requested"
    ],
    "YEAR": "1860",
    "NUMBER": "90",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A young man (the plaintiff), who had become engaged and who intended to make a career as a Chancery barrister, received a letter from his uncle which stated the following: \u201cI am glad to hear of your intended marriage with Ellen Nicholl, and, as I promised to assist you at starting, I am happy to tell you that I will pay to you one hundred and fifty pounds yearly during my life, and until your annual income derived from your profession as a Chancery barrister shall amount to six hundred guineas...\u201d. The plaintiff married, and practised as a barrister, but his income never reached 600 guineas. His uncle made 12 annual payments to him but then stopped, and the plaintiff sued his uncle&#8217;s executors for further instalments which had fallen due during his uncle&#8217;s lifetime. The court held by a majority that the nephew had provided consideration by marrying. Byles J, dissenting, was of opinion that the uncle&#8217;s letter contained no request to his nephew to marry; the words \u201cat starting\u201d referred to the beginning of his career at the Bar. The dissenting judgment is clearly to be preferred. Nothing was requested of the nephew.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The following passage from the majority judgment of Erle CJ is flawed for a still more fundamental reason:</span><br>&emsp;&emsp;<span class=\"it\">\u201cFirst, do these facts show a loss sustained by the plaintiff at the uncle&#8217;s request? When I answer this in the affirmative, I am aware that a man&#8217;s marriage with the woman of his choice is in one sense a boon, and in that sense the reverse of a loss; yet, as between the plaintiff and the party promising an income to support the marriage, it may be a loss. The plaintiff may have made the most material changes in his position, and have induced the object of his affections to do the same, and have incurred pecuniary liabilities resulting in embarrassments, which would be in every sense a loss, if the income which had been promised should be withheld...\u201d.</span><br>&emsp;&emsp;<span class=\"it\">First, the detriment found here by way of consideration is speculative. However, the majority of the House of Lords in Chappell v Nestle was content with largely speculative advantage to Nestle, so this objection is not fatal. The real problem is the way in which Erle CJ envisages the detriment crystallising to become \u201cin every sense a loss\u201d. The trigger is a breach of the promise which the consideration is to support. If qualifying detriment can be found in a breach of contract, then every promise comes accompanied by automatic consideration simply in so far as it may be broken. </span><br>&emsp;&emsp;<span class=\"it\"> A kinder interpretation would be that Erle CJ regards the jeopardy of the nephew&#8217;s (putative) financial commitments as sufficient detriment to amount to consideration, referring to the possibility of breach merely to indicate the nature of that jeopardy. But even on this view, would these commitments, whether putative or demonstrated, be sufficiently linked to the uncle&#8217;s promise? In reality, what Erle CJ bases himself on here is reliance rather than consideration. </span>"
    ],
    "NAME": "Shadwell v Shadwell",
    "CATEGORY": "Consideration &mdash; Consideration Must Be Requested",
    "CITATION": "Shadwell v Shadwell (1860) CB (NS) 159",
    "RELATED": [
        "Combe v Combe",
        "Lampleigh v Brathwait",
        "Cook v Wright",
        "White v Bluett",
        "Roscorla v Thomas",
        "Pao On v Lau Yiu Long",
        "Glasbrook v Glamorgan CC",
        "Lipkin Gorman v Karpnale Ltd",
        "Scotson v Pegg",
        "Wade v Simeon",
        "Thomas v Thomas",
        "Chappell & Co v Nestle Co Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Consideration",
        "Consideration Distinguished From Conditional Gifts"
    ],
    "NUMBER": "91",
    "TYPE": "Concept",
    "NAME": "Consideration Distinguished From Conditional Gifts",
    "CATEGORY": "Consideration &mdash; Consideration Distinguished From Conditional Gifts",
    "RELATED": [
        "Atiyah's Understanding of Consideration",
        "Doctrine of Implied Assumpsit",
        "Consideration - Introduction",
        "\u201cProblem\u201d Cases",
        "Performance of Existing Legal Duties as Consideration",
        "Consideration Must Be Requested",
        "Rules of Sufficiency",
        "Consideration Must Not Be Past",
        "Rescission",
        "Communication of Acceptance - Intro",
        "Acceptance By Conduct",
        "Self-induced frustration"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Consideration Distinguished From Conditional Gifts</span></span><br>&emsp;&emsp;Cases in which sufficient consideration is found in some consequential and perhaps even speculative detriment to the promisee shade into the next category: cases in which there is no deal at all, because the arrangement gives the promisee nothing to do except receive performance of the promise. If that is how matters stand, the promisor is making a gift, which will not be enforceable.<br>&emsp;&emsp;The gift may be conditional upon something happening. To decide whether that amounts to consideration, it should be enough to ask whether it is to move from the promisee. If it is not, then it is not consideration, however beneficial it may be to the promisor (or detrimental to the person who is to provide it)."
    ]
},
{
    "CATEGORIES": [
        "Consideration",
        "Consideration Distinguished From Conditional Gifts"
    ],
    "YEAR": "1969",
    "NUMBER": "92",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case raised the question whether \u00a310,000 paid to Abel was taxable as having been paid pursuant to an enforceable contract. W had told Abel that he hoped to buy a farm for \u00a3100,000 or less. Abel, who had transmitted earlier offers from W to the farm&#8217;s owners, asked what he would receive if the sale was achieved within that price limit. W said that he would pay Abel \u00a310,000. It was held that this was a gift; Abel had not been asked to do anything in return for the promise of payment.<br>&emsp;&emsp;On the facts of this case, you may wonder whether it might not have been shown that the promised sum of money was in some way linked to Abel&#8217;s actions on W&#8217;s behalf in the past (it was obviously not in Abel&#8217;s interest to argue this). The question whether sufficient consideration may be found in what has been done before a promise is made must now be addressed."
    ],
    "NAME": "Dickinson v Abel",
    "CATEGORY": "Consideration &mdash; Consideration Distinguished From Conditional Gifts",
    "CITATION": "Dickinson v Abel [1969] 1 WLR 295",
    "RELATED": [
        "Shadwell v Shadwell",
        "Wade v Simeon",
        "Lipkin Gorman v Karpnale Ltd",
        "Combe v Combe",
        "White v Bluett",
        "Chappell & Co v Nestle Co Ltd",
        "Scotson v Pegg",
        "Roscorla v Thomas",
        "Collins v Godefroy",
        "Glasbrook v Glamorgan CC",
        "Re Casey's Patents",
        "Lampleigh v Brathwait"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Consideration",
        "Consideration Must Not Be Past"
    ],
    "NUMBER": "93",
    "TYPE": "Concept",
    "NAME": "Consideration Must Not Be Past",
    "CATEGORY": "Consideration &mdash; Consideration Must Not Be Past",
    "RELATED": [
        "Rules of Sufficiency",
        "Consideration - Introduction",
        "Performance of Existing Legal Duties as Consideration",
        "Atiyah's Understanding of Consideration",
        "Doctrine of Implied Assumpsit",
        "\u201cProblem\u201d Cases",
        "Consideration Distinguished From Conditional Gifts",
        "Consideration Must Be Requested",
        "Postal Rule",
        "The contractual nature of the document / expectations of the parties",
        "Going beyond \u201cmistakes\u201d in the contract",
        "Artificially limiting the matrix of fact"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Consideration Must Not Be Past</span></span><br>&emsp;&emsp;One of the main rules of sufficiency of consideration is that it must not be \u201cpast\u201d. That is to say, the making of the promise, and the provision of the consideration which is to support it, must constitute a single transaction."
    ]
},
{
    "CATEGORIES": [
        "Consideration",
        "Consideration Must Not Be Past"
    ],
    "YEAR": "1842",
    "NUMBER": "94",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff had bought a horse from the defendant. After the transaction was complete, the defendant promised the defendant that the horse was sound and free from vice. This was not so. The plaintiff sued for breach of this promise, pleading as consideration his purchase of the horse. The action failed. It was held that since the promise came after the sale, the sale price could not be consideration for it."
    ],
    "NAME": "Roscorla v Thomas",
    "CATEGORY": "Consideration &mdash; Consideration Must Not Be Past",
    "CITATION": "Roscorla v Thomas (1842) 3 QB 234",
    "RELATED": [
        "Cook v Wright",
        "Thomas v Thomas",
        "Ward v Byham",
        "Lipkin Gorman v Karpnale Ltd",
        "Shadwell v Shadwell",
        "Dickinson v Abel",
        "Chappell & Co v Nestle Co Ltd",
        "White v Bluett",
        "New Zealand Shipping v Satterthwaite",
        "Wade v Simeon",
        "Re Casey's Patents",
        "Pao On v Lau Yiu Long"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Consideration",
        "Doctrine of Implied Assumpsit"
    ],
    "NUMBER": "95",
    "TYPE": "Concept",
    "NAME": "Doctrine of Implied Assumpsit",
    "CATEGORY": "Consideration &mdash; Doctrine of Implied Assumpsit",
    "RELATED": [
        "Consideration Distinguished From Conditional Gifts",
        "Consideration Must Not Be Past",
        "Consideration - Introduction",
        "Consideration Must Be Requested",
        "Rules of Sufficiency",
        "\u201cProblem\u201d Cases",
        "Performance of Existing Legal Duties as Consideration",
        "Atiyah's Understanding of Consideration",
        "Exclusion and limitation clauses",
        "Going beyond \u201cmistakes\u201d in the contract",
        "Moving on from Bell",
        "Law Reform (Frustrated Contracts) Act 1943"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Doctrine of Implied Assumpsit</span></span><br>&emsp;&emsp;The rule stated in <i>Roscorla v Thomas</i> is subject to an important exception. By a species of legal fiction, known as the doctrine of implied assumpsit, it will sometimes be possible to argue that something done before a promise is made can make that promise bind despite the timing. The fiction consists in finding an earlier request for performance, into which a promise to pay for the performance is implied. The second promise (the real one) is then treated as fixing the amount which it to be payable pursuant to the original, implied promise. \u201cAssumpsit\u201d, meaning \u201che undertook\u201d, is the old legal term for a legally binding promise."
    ]
},
{
    "CATEGORIES": [
        "Consideration",
        "Doctrine of Implied Assumpsit"
    ],
    "YEAR": "1615",
    "NUMBER": "96",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Brathwait, who had killed a man, asked Lampleigh to attend upon the King at Royston in order to procure a pardon. Lampleigh successfully did so, and Brathwait then promised him \u00a3100 for his services. The court, upholding this arrangement as a binding contract, stated that the precedent request for performance coupled itself with the later promise of payment to constitute a single transaction."
    ],
    "NAME": "Lampleigh v Brathwait",
    "CATEGORY": "Consideration &mdash; Doctrine of Implied Assumpsit",
    "CITATION": "Lampleigh v Brathwait (1615) Hob 105",
    "RELATED": [
        "Pao On v Lau Yiu Long",
        "Re Casey's Patents",
        "Wade v Simeon",
        "Roscorla v Thomas",
        "Thomas v Thomas",
        "Combe v Combe",
        "Cook v Wright",
        "Ward v Byham",
        "Collins v Godefroy",
        "New Zealand Shipping v Satterthwaite",
        "Shadwell v Shadwell",
        "Chappell & Co v Nestle Co Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Consideration",
        "Doctrine of Implied Assumpsit"
    ],
    "YEAR": "1892",
    "NUMBER": "97",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The business of which Casey was a manager wrote to him promising him a one third share in certain patents \u201cin consideration of your services as the practical manager in working both our patents...\u201d. He was later asked to return the letters patent, and the present action was brought against him when he refused. It was held by the Court of Appeal that the action against him failed. The share in the patents had been granted for valid consideration.",
        "<span class=\"ud\"><span class=\"bd\">Detail </span></span><br>&emsp;&emsp;Counsel for the plaintiffs submitted (inter alia) that the purported consideration for the grant of the share was past. Bowen LJ denied that this was so: \u201cEven if it were true, as some scientific students of the law believe, that a past service cannot support a future promise, you must look at the document and see if the promise cannot receive a proper effect in some other way. Now, the fact of a past service raises an implication that at the time it was rendered it was to be paid for, and, if it was a service which was to be paid for, when you get in the subsequent document a promise to pay, that promise may be treated either as an admission which evidences or as a positive bargain which fixes the amount of that reasonable remuneration on the faith of which the service was originally rendered. So that here for past services there is ample justification for the promise to give the third share\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">It&#8217;s worth noticing the way in which Bowen LJ introduces his analysis \u2013 that \u201cyou must look at the document and see if the promise cannot receive a proper effect...\u201d. It is clear which way he means to decide the case, and he is not prepared to let technical (\u201cscientific\u201d) argument stand in the way. It might be remarked that if the principles of consideration are to be manipulated or over-ridden by devices such as implied assumpsit, there is a risk that they will be distorted. However, it will be proposed in due course that it could be wrong to try to defend so-called principles of consideration against manipulation. Maybe consideration is not an area of principles, but a space for manoeuvre to produce a just result. </span>"
    ],
    "NAME": "Re Casey's Patents",
    "CATEGORY": "Consideration &mdash; Doctrine of Implied Assumpsit",
    "CITATION": "Re Casey&#8217;s Patents (1892) 1 Ch 104",
    "RELATED": [
        "Lampleigh v Brathwait",
        "Pao On v Lau Yiu Long",
        "Cook v Wright",
        "Dickinson v Abel",
        "White v Bluett",
        "Wade v Simeon",
        "Shadwell v Shadwell",
        "Roscorla v Thomas",
        "Glasbrook v Glamorgan CC",
        "Lipkin Gorman v Karpnale Ltd",
        "Thomas v Thomas",
        "Combe v Combe"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Consideration",
        "Doctrine of Implied Assumpsit"
    ],
    "YEAR": "1980",
    "NUMBER": "98",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;As part of a complex deal between two companies (the main agreement), the plaintiffs were to receive shares from the defendants. Since they agreed not to dispose of the shares for a stated period, they negotiated an undertaking from the defendants to buy the shares back at a stated value in order to lessen their exposure to a possible fall in the share price. When the plaintiffs later realised that this undertaking left them vulnerable to give up the shares at the same value even if they had risen above it on the open market, they insisted on the defendants granting them a guarantee that would protect them if the share price fell, but leave them free to profit if the price rose. The stated consideration was the plaintiffs&#8217; performance of the main agreement. In fact the share price slumped, and the defendants later maintained that they received no consideration for the guarantee they had given, since it was past (and they argued that the guarantee had been procured by economic duress). The Privy Council held that the main agreement was not fully executed at the time the guarantee was given, so that sufficient consideration was given by the plaintiffs&#8217; promise to perform it. It was not voidable for duress.<br>&emsp;&emsp;Lord Scarman (obiter) stated three factors which would be required for technically past consideration to be regarded as sufficient on the doctrine of implied assumpsit:<br>&emsp;&emsp;\u201cAn act done before the giving of a promise to make a payment or to confer some other benefit can sometimes be consideration for the promise. The act must have been done at the promisors&#8217; request: the parties must have understood that the act was to be remunerated either by a payment or by the conferment of some other benefit: and payment, or the conferment of a benefit, must have been legally enforceable had it been promised in advance. All three features are present in this case...\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The third of Lord Scarman&#8217;s criteria amounts only to this \u2013 that if the timing had been the \u201ccorrect\u201d way round, there would have been nothing to deny the requested act the status of sufficient consideration (eg. illegality, duress, etc).<br>&emsp;&emsp;The <i>Pao On</i> case also deals with another aspect of the sufficiency of consideration. The stated consideration was the performance of an existing agreement. Will the law find \u201cbenefit\u201dto the promisor in a performance which the promisee is already bound to provide? This is the subject of the next line of cases."
    ],
    "NAME": "Pao On v Lau Yiu Long",
    "CATEGORY": "Consideration &mdash; Doctrine of Implied Assumpsit",
    "CITATION": "Pao On v Lau Yiu Long [1980] AC 614",
    "RELATED": [
        "Lampleigh v Brathwait",
        "Re Casey's Patents",
        "Chappell & Co v Nestle Co Ltd",
        "White v Bluett",
        "Combe v Combe",
        "Ward v Byham",
        "New Zealand Shipping v Satterthwaite",
        "Thomas v Thomas",
        "Roscorla v Thomas",
        "Glasbrook v Glamorgan CC",
        "Collins v Godefroy",
        "Shadwell v Shadwell"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Consideration",
        "Performance of Existing Legal Duties as Consideration"
    ],
    "NUMBER": "99",
    "TYPE": "Concept",
    "NAME": "Performance of Existing Legal Duties as Consideration",
    "CATEGORY": "Consideration &mdash; Performance of Existing Legal Duties as Consideration",
    "RELATED": [
        "Consideration Must Not Be Past",
        "Consideration - Introduction",
        "Consideration Distinguished From Conditional Gifts",
        "Atiyah's Understanding of Consideration",
        "Rules of Sufficiency",
        "Consideration Must Be Requested",
        "\u201cProblem\u201d Cases",
        "Doctrine of Implied Assumpsit",
        "Making the election to affirm or terminate",
        "Implication from custom",
        "A new basis for deciding questions of remoteness?",
        "Offer Distinguished From Invitation to Treat"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Performance of Existing Legal Duties as Consideration</span></span><br>&emsp;&emsp;If the existing duty is one which the promise is bound by general law (not contract) to carry out, the usual view is that its performance will not amount to consideration."
    ]
},
{
    "CATEGORIES": [
        "Consideration",
        "Performance of Existing Legal Duties as Consideration"
    ],
    "YEAR": "1831",
    "NUMBER": "100",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff attended a trial to give evidence on a subpoena (a mandatory order to testify). He sued for breach of a promise by the defendant to pay him one guinea a day for his time and trouble. His action failed on the basis that the duty to attend and testify was imposed by law. A promise to pay for carrying out this legally imposed duty was unsupported by consideration.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Observe the language used by Lord Tenterden CJ in this case: \u201cIf it be a duty imposed by law upon a party regularly subpoenaed to attend from time to time to give his evidence then a promise to give him any remuneration for loss of time incurred in such attendance is a promise without consideration. We think that such a duty is imposed by law; and on consideration of the Statute of Elizabeth, and of the cases which have been decided on this subject, we are all of the opinion that a party cannot maintain an action for compensation for loss of time in attending a trial as a witness. We are aware of the practice which has prevailed in certain cases, of allowing, as costs between party and party, so much per day for the attendance of professional men, but that practice cannot alter the law. What the effect of our decision may be, is not for our consideration. We think, on principle, that an action does not lie for compensation to a witness for loss of time in attendance under a subpoena\u201d.</span><br>&emsp;&emsp;<span class=\"it\">This extract does establish that the case is authority for the principle for which it is usually cited, but Lord Tenterden CJ does not limit himself to saying that performance of an existing legal duty is not consideration. He goes on to state, twice, that an action cannot be maintained for compensation for loss of time in attending a trial as a witness. The relation between this statement and the consideration point is disputable. It could be read as merely a broad or general way of saying why the plaintiff fails. Alternatively, it may be that the apparently principled position on the insufficiency of performance of an existing legal duty as consideration is no more than an abstract way of stating that witnesses are not to be allowed to sue for contractual remuneration (for reasons of policy). To examine this distinction may seem a singularly pointless enquiry. It is not. The question it poses is this; are such cases resolved by the application of principles of consideration, or are they resolved on more specific grounds even though the outcome may be put in terms of consideration? This is the theme which will be addressed directly at the end of the lecture. </span><br>&emsp;&emsp;<span class=\"it\">Where the activity of the promisee involves the performance of a duty imposed by general law, a court will still be able to find consideration if it appears that the promisee is in fact doing more than his duty requires. The next case shows that this may well be difficult to determine on the facts.</span>"
    ],
    "NAME": "Collins v Godefroy",
    "CATEGORY": "Consideration &mdash; Performance of Existing Legal Duties as Consideration",
    "CITATION": "Collins v Godefroy (1831) 1 B &amp; Ad 950",
    "RELATED": [
        "Ward v Byham",
        "Glasbrook v Glamorgan CC",
        "Chappell & Co v Nestle Co Ltd",
        "Wade v Simeon",
        "Thomas v Thomas",
        "Lipkin Gorman v Karpnale Ltd",
        "Re Casey's Patents",
        "Pao On v Lau Yiu Long",
        "White v Bluett",
        "Lampleigh v Brathwait",
        "Cook v Wright",
        "Combe v Combe"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1925",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;During industrial unrest at a South Wales colliery, the colliery manager became aware that there was to be an attempt to stop the \u201csafety men\u201d from working. If that happened, the mine would flood. The manager asked the local police superintendent to install a force of 100 men at the colliery in case of trouble. The superintendent considered that billeting a force on site was not necessary, but nevertheless agreed to provide 70 men in return for payment as well as food and accommodation. The force was provided, but the colliery refused to pay. The police authority sued for the promised payment. The colliery argued that no consideration had been received for the promise to pay since the police were doing no more than their legal duty to keep the peace. There was also a counterclaim for the cost of feeding and accommodating the 70 men. It was decided at first instance, then in the Court of Appeal and finally in the House of Lords, that the action on behalf of the police succeeded, and the counterclaim failed. However, both appellate decisions were those of bare majorities.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The case which needed to be made on behalf of the police here was a tricky one. If, on the one hand, they were doing what was reasonably necessary to keep the peace, they would lose; this was no more than their legal duty. If on the other hand they were doing more than was necessary to keep the peace, they would need to explain why. In the Court of Appeal, <span class=\"bd\">Atkin LJ</span> (dissenting) saw this in stark terms, suggesting that if more was being done than necessary, the contract would be contrary to public policy, illegal and void. In the House of Lords the majority considered that between the extremes of necessary and unnecessary involvement lay a middle ground in which the police could properly exercise the discretion to provide special services. This is what had been done on the facts of the case, and since it went beyond the mere duty of keeping the peace, it was regarded as consideration.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">You may wonder if the question whether the police should be able to charge for their services is most conveniently debated in terms of consideration. It is a broad and crucial issue of public policy. The Smith &amp; Thomas Casebook on Contract puts this issue pointedly, in the form of a question inspired by the facts of a similar case, Harris v Sheffield Football Club (1987): \u201c1. The Rovers&#8217; F.C. secretary telephones the Chief Constable \u2013 \u201cThe crowd is fighting \u2013 police are overwhelmed \u2013 send help\u201d. The Chief Constable replies, \u201cOnly if you agree to pay\u201d. The secretary agrees. Does the Club have to pay the bill? If not, why not? \u2013 is it a question of consideration?\u201d</span><br>&emsp;&emsp;<span class=\"it\">Smith &amp; Thomas, with their usual skill, are prompting their readers to realise that there are a good many factors in addition to consideration which may condition the validity of a contract; here duress, public policy, illegality and bad faith spring to mind. If one asks why the performance of an existing legal duty does not amount to sufficient consideration, it will be all but impossible to avoid giving an answer in terms of factors which seem at first to lie beyond the principles of consideration. It all depends, of course, on how widely one draws the boundaries of consideration; perhaps it is not a tight package of rules about bargain, but a broader space in which all manner of factors may interact. </span><br>&emsp;&emsp;<span class=\"it\">Lord <span class=\"bd\">Denning</span> cut through these difficulties by taking the simple view that performance of a general legal duty could amount to consideration, as the next case shows.</span>"
    ],
    "CATEGORY": "Consideration &mdash; Performance of Existing Legal Duties as Consideration",
    "CITATION": "Glasbrook Bros Ltd v Glamorgan County Council [1925] AC 270",
    "CATEGORIES": [
        "Consideration",
        "Performance of Existing Legal Duties as Consideration"
    ],
    "RELATED": [
        "Ward v Byham",
        "Collins v Godefroy",
        "Dickinson v Abel",
        "Scotson v Pegg",
        "Cook v Wright",
        "Pao On v Lau Yiu Long",
        "White v Bluett",
        "Roscorla v Thomas",
        "Thomas v Thomas",
        "Chappell & Co v Nestle Co Ltd",
        "Lipkin Gorman v Karpnale Ltd",
        "Combe v Combe"
    ],
    "NUMBER": "101",
    "TYPE": "Case",
    "NAME": "Glasbrook v Glamorgan CC",
    "FLAGS": [
        "Atkin",
        "Denning"
    ]
},
{
    "YEAR": "1956",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A child&#8217;s mother and father separated, and the father paid a neighbour one pound a week to look after her. The mother later wrote, proposing that she should look after her daughter for the same weekly allowance. The father said that he agreed \u201cproviding you can prove that she will be well looked after and happy and also that she is allowed to decide for herself whether or not she wishes to come and live with you\u201d. The father stopped the payments when the mother married. She brought an action against him, and he took the point that since the child was illegitimate, the then law (s. 42 of the National Assistance Act 1948) cast the burden of providing for her upon the mother as an existing duty. The Court of Appeal upheld the mother&#8217;s claim.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;<span class=\"bd\">Denning LJ</span> gave this explanation of his view of the relevant law: \u201cI approach the case, therefore, on the footing that, in looking after the child, the mother is only doing what she is legally bound to do. Even so, I think there was sufficient consideration to support the promise. I have always thought that a promise to perform an existing duty, or the performance of it, should be regarded as good consideration, because it is a benefit to the person to whom it is given. Take this very case. It is as much a benefit for the father to have the child looked after by the mother as by a neighbour. If he gets the benefit for which he stipulated, he ought to honour his promise, and he ought not to avoid it by saying that the mother was herself under a duty to maintain the child\u201d.<br>&emsp;&emsp;Morris LJ preferred a more conventional way of deciding in favour of the mother: \u201cIt seems to me, therefore, that the father was saying, in effect: Irrespective of what may be the strict legal position, what I am asking is that you shall prove that the child will be well looked after and happy, and also that you must agree that the child is to be allowed to decide for herself whether or not she wishes to come and live with you. If those conditions were fulfilled, the father was agreeable to pay. On those terms, which in fact became operative, the father agreed to pay \u00a31 a week. In my judgment, there was ample consideration there to be bound for his promise, which I think was binding\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Denning LJ&#8217;s approach to the law in this case is cavalier, as it often was, but quite hard to dispute. Why should the fact of the existing legal duty not simply drop away as a wholly unnecessary impediment to finding consideration, given that the father requested a benefit of the mother and received it? </span><br>&emsp;&emsp;<span class=\"it\">The difficulty with this approach is that it includes a disconcerting echo of an eighteenth century notion which was only briefly accepted as good law. Lord Mansfield, Chief Justice of the King&#8217;s Bench in the latter part of that century, made several attempts to establish his view that a promise should bind simply as a matter of \u201chonesty and rectitude\u201d. In the long run he was not successful. Denning LJ goes nearly that far, because he is saying that it does not matter from what quarter the father receives the benefit of having his child looked after. The real point is that a promise should be honoured and not avoided on a technicality. This comes close to dispensing with the requirement of consideration altogether.</span><br>&emsp;&emsp;<span class=\"it\">Lord Mansfield himself had tried to outflank that objection by arguing (in Hawkes v Saunders (1782)) not that honesty and rectitude made consideration unnecessary, but that they were capable of being consideration: \u201cThe ties of conscience upon an upright mind are a sufficient consideration\u201d. This is not the law; but if such factors as bad faith, duress and intention to create legal relations can operate alongside consideration \u2013 and maybe even coalesce with it \u2013 why should rectitude not also have a part to play?</span><br>&emsp;&emsp;<span class=\"it\">(b) Performance of contractual duties already owed to a third party as consideration</span>"
    ],
    "CATEGORY": "Consideration &mdash; Performance of Existing Legal Duties as Consideration",
    "CITATION": "Ward v Byham [1956] 1 WLR 496",
    "CATEGORIES": [
        "Consideration",
        "Performance of Existing Legal Duties as Consideration"
    ],
    "RELATED": [
        "Glasbrook v Glamorgan CC",
        "Collins v Godefroy",
        "Lampleigh v Brathwait",
        "Combe v Combe",
        "Roscorla v Thomas",
        "White v Bluett",
        "Re Casey's Patents",
        "Chappell & Co v Nestle Co Ltd",
        "New Zealand Shipping v Satterthwaite",
        "Lipkin Gorman v Karpnale Ltd",
        "Wade v Simeon",
        "Scotson v Pegg"
    ],
    "NUMBER": "102",
    "TYPE": "Case",
    "NAME": "Ward v Byham",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Consideration",
        "Performance of Contractual Duties Owed to a Third Party as Consideration"
    ],
    "YEAR": "1861",
    "NUMBER": "103",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs sued the defendant for breach of a promise to unload a cargo of coal at a stated rate. The promise had been made \u201cin consideration that the plaintiffs, at the request of the defendant, would deliver to the defendant\u201d the coal. The defendant argued that the delivery of the coal was in fact no consideration, since the plaintiffs were already bound to a third party to deliver the coal either to them, or to their order. The third party had sold the coal to the defendant. The plaintiffs succeeded. The court&#8217;s reasoning with regard to consideration is not altogether easy to follow, but it seems that it was simply regarded as beneficial to the defendant to receive the coal. Furthermore, it is posited that the plaintiffs might have wished to breach their contract with the third party, and had therefore sustained the detriment of a further liability to the defendant if they were to do so.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This reasoning seems inadequate and somewhat strained. If the defendant was to receive the coal anyway, it was no added benefit to him to receive it pursuant to a direct contractual nexus with the plaintiffs. The point is similar to the one raised by <i>Ward v Byham</i> above, and again tends towards the conclusion that the defendant should simply do what he promised. As for the detriment sustained by the plaintiffs through the limitation of their freedom to breach a contract, this is not quite as unacceptable as the judgment of Erle CJ in <i>Shadwell v Shadwell</i> cited above, but it is contrived almost to the point of breakdown.<br>&emsp;&emsp;In the next case, the House of Lords approves <i>Scotson v Pegg</i> as good law. Although there is no analysis of the earlier case, the motivation for finding consideration in tripartite commercial cases is made quite clear."
    ],
    "NAME": "Scotson v Pegg",
    "CATEGORY": "Consideration &mdash; Performance of Contractual Duties Owed to a Third Party as Consideration",
    "CITATION": "Scotson v Pegg (1861)",
    "RELATED": [
        "New Zealand Shipping v Satterthwaite",
        "Lampleigh v Brathwait",
        "Dickinson v Abel",
        "Collins v Godefroy",
        "White v Bluett",
        "Cook v Wright",
        "Wade v Simeon",
        "Lipkin Gorman v Karpnale Ltd",
        "Shadwell v Shadwell",
        "Glasbrook v Glamorgan CC",
        "Chappell & Co v Nestle Co Ltd",
        "Pao On v Lau Yiu Long"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1956",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A bill of lading (a contract between the consignor and the carrier of goods) provided an exclusion of liability for the carrier unless action in respect of loss was brought within one year from the date of delivery of the goods. It expressly extended this protection to the carrier&#8217;s servants or agents. The carrier engaged stevedores to unload the cargo (a drilling machine), which was damaged in the process. The stevedores claimed the benefit of the exclusion clause in the bill of lading. One of the questions arising was whether the stevedores had provided any consideration which would make the \u201cpromise\u201d in the bill of lading binding. They had unloaded the goods, but they were already contracted to the carrier to do so. The Privy Council held, by a bare majority, that the stevedores were protected by the exclusion clause.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Wilberforce made the following comment on the search for consideration in this case: \u201cIf the choice, and the antithesis, is between a gratuitous promise and a promise for consideration, as it must be, in the absence of a tertium quid, there can be little doubt which, in commercial reality, this is. The whole contract is of a commercial character, involving service on one side, rates of payment on the other, and qualifying stipulations as to both. The relations of all parties to each other are commercial relations entered into for business reasons of ultimate profit. To describe one set of promises, in this context, as gratuitous, or <i>nudum pactum</i>, seems paradoxical and is prima facie implausible. It is only the precise analysis of this complex of relations into the classical offer and acceptance, with identifiable consideration, that seems to present difficulty, but this same difficulty exists in many situations of daily life, for example, sales at auction; supermarket purchases; boarding an omnibus; purchasing a train ticket; tenders for the supply of goods; offers of reward; acceptance by post; warranties of authority by agents; manufacturers&#8217; guarantees; gratuitous bailments; bankers&#8217; commercial credits. These are all examples which show that English law, having committed itself to a rather technical and schematic doctrine of contract, in application takes a practical approach, often at the cost of forcing the facts to fit uneasily into the marked slots of offer, acceptance and consideration\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;By now it should be possible to see what is going on here. This is a complex commercial situation, in which to ask whether the parties have struck a bargain or alternatively are making gifts of their services to each other is daft. Their business is the making of bargains. If consideration in a narrow sense cannot be found, then it will be found in a broad sense. The law, as far as Lord Wilberforce is concerned, cannot refuse to handle a commercial relationship of this type because of a lack of consideration. Therefore, there is consideration. If this analysis should seem to turn upon a poor sleight of hand, revisit it once you have read the extract from Atiyah&#8217;s essay on consideration below."
    ],
    "CATEGORY": "Consideration &mdash; Performance of Contractual Duties Owed to a Third Party as Consideration",
    "CITATION": "New Zealand Shipping Co Ltd v Satterthwaite (The Eurymedon) [1956] 1 WLR 496",
    "CATEGORIES": [
        "Consideration",
        "Performance of Contractual Duties Owed to a Third Party as Consideration"
    ],
    "RELATED": [
        "Scotson v Pegg",
        "Shadwell v Shadwell",
        "White v Bluett",
        "Roscorla v Thomas",
        "Pao On v Lau Yiu Long",
        "Lampleigh v Brathwait",
        "Glasbrook v Glamorgan CC",
        "Collins v Godefroy",
        "Cook v Wright",
        "Combe v Combe",
        "Re Casey's Patents",
        "Thomas v Thomas"
    ],
    "NUMBER": "104",
    "TYPE": "Case",
    "AKA": "The Eurymedon",
    "NAME": "New Zealand Shipping v Satterthwaite"
},
{
    "CATEGORIES": [
        "Consideration",
        "\u201cProblem\u201d Cases"
    ],
    "NUMBER": "105",
    "TYPE": "Concept",
    "NAME": "\u201cProblem\u201d Cases",
    "CATEGORY": "Consideration &mdash; \u201cProblem\u201d Cases",
    "RELATED": [
        "Performance of Existing Legal Duties as Consideration",
        "Atiyah's Understanding of Consideration",
        "Rules of Sufficiency",
        "Consideration Distinguished From Conditional Gifts",
        "Consideration - Introduction",
        "Doctrine of Implied Assumpsit",
        "Consideration Must Not Be Past",
        "Consideration Must Be Requested",
        "Comments.",
        "The temptation to go beyond the dictionary",
        "Lord Denning's invention of common mistake in equity",
        "Offers - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">\u201cProblem\u201d Cases</span></span><br>&emsp;&emsp;Two cases which can seem surprising if encountered at an early stage during the study of consideration can now be set out. The first is comparatively trivial, although instructive. The second, a House of Lords authority, is a more serious matter."
    ]
},
{
    "CATEGORIES": [
        "Consideration",
        "\u201cProblem\u201d Cases"
    ],
    "YEAR": "1853",
    "NUMBER": "106",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;William Bluett had received a loan from his father, John. Rather than repaying the debt, William gave his father a promissory note for the sum owing. After John&#8217;s death, his executor brought an action against William on the promissory note, and in debt. William&#8217;s defence to this action was to plead a contract with his father to the effect that repayment would not be required, and that there would be no liability on the note. This contract was said to have arisen through William making complaints to his father that he had not been treated as favourably as his father&#8217;s other children; his father admitting that this was so; and the two then agreeing that in consideration of William ceasing to bore his father with complaints, repayment of the loan would not be required. The court held that William was liable. There was no contract, since there was no consideration. Consideration could not be found in promising to do what one had no right to do in the first place.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Had it been so minded, the court could easily have taken a different view. The judgment appears to rest on the footing that William had no right to complain. Whether or not he had a good reason to complain is immaterial; in terms of legal rights, he was free to complain if he wished, because there was no law to make his complaining illegal. If he chose to limit his freedom in return for a promise when he was not otherwise bound to do so, he gave consideration. Why, then, was the court not prepared to adopt this view?<br>&emsp;&emsp;The answer leads beneath the surface of the doctrine of consideration, following in a direction already suggested in commentary on previous cases. The court in <i>White v Bluett</i> did not want William&#8217;s defence to succeed. Quite possibly they thought it a pack of lies devised to get out of a paying a debt (though it is sufficiently abject to have a slight ring of the truth). The notion of consideration is pressed into service in order to cut the legal ground from under the defence, but what is really being said is that there is <i>no good reason</i> for giving legal effect to the promise pleaded by William.<br>&emsp;&emsp;A modern court might reach the same result by finding no intention to create legal relations, or by invoking the doctrine of undue influence, or by coming straight out with it and holding that William&#8217;s evidence is not credible. Does the court of 1853 distort the doctrine of consideration by pressing it into use on these facts? In a sense of course it does. But the better answer may be that it does not, provided one accepts that \u201cconsideration\u201d actually means the presence of a sufficient reason to enforce a promise. Here there is no such reason; ergo, there is no consideration.<br>&emsp;&emsp;It is one thing to find a mid-nineteenth century court using the doctrine of consideration to gloss over the use of what is effectively a discretion to take a case seriously or not. It is more striking when arguably the same thing is done by the House of Lords at the end of the twentieth century:"
    ],
    "NAME": "White v Bluett",
    "CATEGORY": "Consideration &mdash; \u201cProblem\u201d Cases",
    "CITATION": "White v Bluett (1853) 23 LJ Ex 36",
    "RELATED": [
        "Lipkin Gorman v Karpnale Ltd",
        "Scotson v Pegg",
        "Glasbrook v Glamorgan CC",
        "New Zealand Shipping v Satterthwaite",
        "Thomas v Thomas",
        "Re Casey's Patents",
        "Lampleigh v Brathwait",
        "Dickinson v Abel",
        "Wade v Simeon",
        "Cook v Wright",
        "Combe v Combe",
        "Pao On v Lau Yiu Long"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Consideration",
        "\u201cProblem\u201d Cases"
    ],
    "YEAR": "1992",
    "NUMBER": "107",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A dishonest solicitor stole some \u00a3200,000 from his firm&#8217;s client account, and used it to gamble at the Playboy Club. The system in operation at the club was that a client would pay over money in advance of gambling, and receive in return plastic gambling chips, which could also be used to purchase refreshments. The firm of solicitors sought to recover the money from the club through the restitutionary action of unjust enrichment. The club&#8217;s defence was that it had not been unjustly enriched, since it had given consideration in return for the money. The Court of Appeal held by a majority that this defence succeeded, so that the money was not recoverable. The House of Lords unanimously allowed the firm&#8217;s appeal. The obtaining of the chips, and gambling with them, was a single transaction which was void by reason of s.18 of the Gaming Act 1845. Furthermore, the chips could not be regarded as consideration for the money handed over by the solicitor.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;After <i>Chappell v Nestle</i>, in which worthless chocolate wrappers were held to be consideration for recordings, it may initially be hard to accept that plastic chips cannot be consideration when given in exchange for money, and the principle that consideration need not be adequate technically blocks the objection that the sum paid for the chips was astronomical. However, the reality of the transaction at the Playboy Club was not that the client was buying chips. He was buying the opportunity to gamble, which to him was substantial; otherwise he would not have paid such very large sums of money to secure it. This was the argument which impressed Parker LJ, who was in the majority in the Court of Appeal. It was set out by Lord Goff in the House of Lords in the course of his rejection of it:<br>&emsp;&emsp;\u201cI have to say at once that I am unable to accept the alternative basis upon which Parker LJ held that consideration was given for the money, viz. that each time Cass [the solicitor] placed a bet at the casino, he obtained in exchange the chance of winning and thus of being paid. In my opinion, when Cass placed a bet, he received nothing in return which constituted valuable consideration. The contract of gaming was void; in other words, it was binding in honour only. Cass knew, of course, that, if he won his bet, the club would pay him his winnings. But he had no legal right to claim them. He simply had a confident expectation that, in fact, the club would pay; indeed, if the club did not fulfil its obligations binding in honour upon it, it would very soon go out of business. But it does not follow that, when Cass placed the bet, he received anything that the law recognises as valuable consideration. In my<br",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Why is it not valuable consideration in the eye of the law to gain the opportunity to gamble, and the chance of winning very large sums of money as a result? It is true that, at the time of this case, gambling contracts were void pursuant to legislation, but the gambling was not illegal. Had this been a commercial case, in which one party was prepared to expend a great deal of money to enter into a very highly speculative transaction, would the court have held that he received no consideration for his outlay?<br>&emsp;&emsp;A court which found consideration moving from the Playboy Club here would have prevented the operation of restitution to restore the stolen money to the firm which had lost it. It is not far-fetched to suggest that the House of Lords found sufficient flexibility in the doctrine of consideration to avoid this inconvenient outcome. Maybe it is very proper that consideration retains the flexibility which can enable it to be used to lever a case towards a just conclusion."
    ],
    "NAME": "Lipkin Gorman v Karpnale Ltd",
    "CATEGORY": "Consideration &mdash; \u201cProblem\u201d Cases",
    "CITATION": "Lipkin Gorman v Karpnale Ltd [1992] 4 All ER 512",
    "RELATED": [
        "White v Bluett",
        "Thomas v Thomas",
        "Wade v Simeon",
        "Cook v Wright",
        "Pao On v Lau Yiu Long",
        "Scotson v Pegg",
        "Lampleigh v Brathwait",
        "Roscorla v Thomas",
        "New Zealand Shipping v Satterthwaite",
        "Glasbrook v Glamorgan CC",
        "Ward v Byham",
        "Re Casey's Patents"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Consideration",
        "Atiyah's Understanding of Consideration"
    ],
    "NUMBER": "108",
    "TYPE": "Concept",
    "NAME": "Atiyah's Understanding of Consideration",
    "CATEGORY": "Consideration &mdash; Atiyah's Understanding of Consideration",
    "RELATED": [
        "Consideration Must Be Requested",
        "Rules of Sufficiency",
        "Doctrine of Implied Assumpsit",
        "Consideration Must Not Be Past",
        "\u201cProblem\u201d Cases",
        "Consideration - Introduction",
        "Performance of Existing Legal Duties as Consideration",
        "Consideration Distinguished From Conditional Gifts",
        "Fact, as opposed to opinion, belief, intention, or (formerly) law",
        "Misrepresentation arising from silence and/or conduct",
        "Moving on from Bell",
        "The fraud cases"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Atiyah&#8217;s Understanding of Consideration</span></span><br>&emsp;&emsp;It is time now to examine what \u201cconsideration\u201d actually means in the light of the authorities discussed above. As pointed out earlier, it is a legal term of art, but its legal meaning is not remote from one of its meanings in ordinary English. \u201cConsideration\u201d means, simply, a reason \u2013 the court&#8217;s reason for enforcing a promise. The rules of sufficiency of consideration are accretions around what, at base, is a judicial discretion, and sometimes the discretionary element shows through.<br>&emsp;&emsp;This was argued at length by Professor Atiyah in a seminal essay (\u201cConsideration: A Restatement\u201d in <i>Essays in Contract</i> (1986)) which deserves to be quoted at length:<br>&emsp;&emsp;\u201cIt is my purpose to suggest that the conventional account of the law is unsatisfactory.... The truth is that the courts have never set out to create a doctrine of consideration. They have been concerned with the much more practical problem of deciding in the course of litigation whether a particular promise in a particular case should be enforced. Since it is unthinkable that any legal system could enforce <i>all</i> promises it has always been necessary for the courts to decide which promises they would enforce. When the courts found a sufficient reason for enforcing a promise they enforced it; and when they found that for one reason or another it was undesirable to enforce a promise, they did not enforce it. It seems highly probable that when the courts first used the word \u201cconsideration\u201d they meant no more than that there was good \u201creason\u201d for the enforcement of a promise. If the consideration was \u201cgood\u201d, this meant that the court found sufficient reason for enforcing the promise. All this is not to suggest that the law was ever unprincipled, or that judges ever decided cases according to personal or idiosyncratic views of what promises it was desirable to enforce. As always with the common law, it was the collective view of the judges, based largely on the conditions and moral values of the community, which prevailed over a period of time....<br>&emsp;&emsp;At a relatively early date it was established that the courts would enforce a promise if another promise or an act was given in return for it; and also that they would not normally enforce a promise if it was merely intended as a gift with no return of any kind. In the first class of case it came therefore to be said that there was good consideration; there were good reasons for enforcing the promise. In the second class there was no such reason, and therefore no consideration. But it also became clear from a very early time that the whole law could not be reduced to such very simple terms. There were some cases in which a promise was given in return for another promise or act, in which for one reason or another it was felt unjust or inexpedient that the promise should be enforced. Such cases could be, and sometimes were explained by saying that there was no consideration for the promise; but as the nineteenth century wore on, an alternative approach began to manifest itself. This was to say that there was good consideration (though perhaps the word \u201cgood\u201d would more usually be omitted) but that nevertheless the promise was unenforceable for other reasons, for example, because it had been extorted by duress, or fraud, or because it was illegal. The last type of case was often dealt with by saying that the consideration was unlawful; a judge who formulated his reasons in this way would perhaps, if pressed, have said that there was no \u201cgood\u201d consideration.<br>&emsp;&emsp;More recently still, this alternative approach has hardened so that courts now find nothing inconsistent in holding that there is consideration for a promise, but nevertheless refusing to enforce it because the transaction is illegal. This approach also manifests itself in the relatively modern device of refusing to enforce a promise on the ground that the promisor did not \u201cintend\u201d to create legal relations by his promise. Where this is done (as it usually is) in a case where there is no express disavowal of the intent to create legal relations, it appears to be merely a legal justification for refusing to enforce a promise which the courts think, for one reason or another, it is unjust or impolitic to enforce. There seems to be no doubt that a hundred years ago the courts would have dealt with these problems in terms of consideration.<br>&emsp;&emsp;This change of approach is symptomatic of the change which has developed in the way lawyers think about consideration. It is no longer thought that consideration is a compendious word simply indicating whether there are good reasons for enforcing a promise; it is widely assumed that consideration is a technical requirement of the law which has little or nothing to do with the justice or desirability of enforcing a promise. Modern lawyers thus see nothing incongruous in asserting that a promise made for good consideration should nevertheless not be enforced.<br>&emsp;&emsp;As we shall see below, the restatement of the law which the actual decisions compel us to adopt, differs from the conventional view principally in recognising the importance of the untypical and marginal cases. It is not, however, merely a question of recognising that there are exceptions to the ordinary rules to which adequate attention has not always been paid. If that were all, there would be little need, or justification, for a fundamental restatement of the law. A restatement will require rather more than that; it will require in particular that lawyers start to think of consideration once again in terms of reasons for enforcing promises; it will require lawyers to recognise that the presence of factors like benefit, detriment, and bargain is taken into account not because they fit some preconceived plan or definition, but because they are often very material factors in determining whether it is just or desirable to enforce a promise; and this necessarily involves recognition that these are not the only factors to which attention must be, and is in practice paid by the Courts\u201d."
    ]
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel"
    ],
    "NUMBER": "109",
    "TYPE": "Concept",
    "NAME": "Towards Promissory Estoppel - Introduction",
    "CATEGORY": "Towards Promissory Estoppel",
    "RELATED": [
        "Characteristics of Promissory Estoppel",
        "Effect of Promissory Estoppel",
        "Part Payment of a Debt as Consideration",
        "Pre-Emptive Agreements",
        "Contract and tort measures compared",
        "Contractual quantum meruit",
        "Warranties",
        "Collateral Contracts",
        "Other tests",
        "The effects of frustration",
        "\u201cProblem\u201d Cases",
        "Consideration Must Be Requested"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;This is the second of two lectures on the doctrine of consideration. It begins by examining the third of three pre-existing duty situations \u2013 the problem of regarding as consideration the performance of an existing contractual duty owed directly to the promisor (the first two duty situations were covered in the last lecture). The second part of the lecture is an exploration of equity&#8217;s solution to this difficulty \u2013 the doctrine of promissory estoppel which accords limited effect to promises which are not supported by consideration.<br>&emsp;&emsp;Parts of the lecture, unavoidably, are complex. There are various reasons for this, and they deserve to be recognised from the outset. The first is that the law in this area has developed in an extremely narrow space, confined by the decisions in <i>Stilk v Myrick</i> and <i>Foakes v Beer</i> (approving the rule in <i>Pinnel&#8217;s Case</i>). The mapping of this space and the decisions reached within it requires care. The second reason for complexity is that a large part of the modern law in this area arises from the relationship between common law and equity. Thirdly, a fault line runs through the whole area of part payment of debt; principles derived from debt and from assumpsit (contract) as a means of relinquishing a debt strain against each other.<br>&emsp;&emsp;Discussion of this lecture&#8217;s topics is therefore quite demanding, but application of the principles to the facts of problem questions need not be. A fairly basic grasp of what the main authorities decide will tend to lead to plausible answers."
    ]
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Existing Contractual Obligations to Promisor as Consideration"
    ],
    "YEAR": "1809",
    "NUMBER": "110",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In the course of a voyage to the Baltic two sailors deserted. The captain attempted to recruit replacements, but failed to do so. He then promised the remainder of the crew that he would divide the wages of the two deserters between them in return for their promise to work the ship home short-handed. Upon the ship&#8217;s return the claim for the extra wages was not honoured. The question was whether the sailors had given consideration for the captain&#8217;s promise of the extra wages, given that they were already contractually bound to serve for the duration of the voyage. It was held that they had not.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;This was one of a number of cases arising out of similar situations. In an earlier one, <i>Harris v Watson</i> (1791), the claim for extra wages failed on public policy grounds because the court was unwilling to create a precedent that might tempt sailors to extort promises of further payment from masters by duress. There are two reports of <i>Stilk v Myrick</i>. In that of the notoriously unreliable law reporter Espinasse, Lord Ellenborough is said to have approved the policy basis of the earlier decision. In the other (Campbell&#8217;s report), Lord Ellenborough is quoted as expressly distancing himself from reasoning based on duress. The agreement to pay extra was unenforceable simply because the sailors had done no more than they were already bound to do: \u201cThey had sold all their services till the voyage should be completed. If they had been at liberty to quit the vessel at Cronstadt, the case would have been quite different; or if the captain had capriciously discharged the two men who were wanting, the others might not have been compellable to take the whole duty upon themselves, and their agreeing to do so might have been a sufficient consideration for the promise of an advance of wages. But the desertion of a part of the crew is to be considered an emergency of the voyage as much as their death, and those who remain are bound by the terms of their original contract to exert themselves to the utmost to bring the ship in safety to her destined port\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;<i>Stilk v Myrick</i>, despite its age, sets the scene for continuing debate within this area of law. If a promise made in return for the performance of existing duties is not to be upheld, which of the two competing rationales (duress and lack of consideration) best explains why that is? To reject such arrangements for duress is not the most transparent way of dealing with them. There was no duress on the facts in <i>Stilk v Myrick</i>, so in reality the objection is based merely on fear of future duress. Such a policy-based concern is not self-evidently an improper ground for decision, but it may be preferable to judge cases on their own facts, reserving the right to reject a claim for duress where in fact it can be shown to have been applied. As for the alternative of finding no consideration in these circumstances, it should by now be apparent that this really amounts to stating an outcome rather than showing why it is a correct or necessary outcome. There is no sufficient reason to uphold the deal \u2013 but why not? Must the theory of bargain dictate the same conclusion in every case in which more is offered in return for the performance of an existing duty? Another way forward would be to acknowledge that claims of this sort may sometimes not be worthy of support, but that sometimes they <i>will</i> be based on promises which have been made for good reason. As <i>Williams v Roffey</i> shows (below), this is the way that English law has tentatively gone, but it is a controversial development."
    ],
    "NAME": "Stilk v Myrick",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Existing Contractual Obligations to Promisor as Consideration",
    "CITATION": "Stilk v Myrick (1809) 2 Camp 317; 6 Esp 129",
    "RELATED": [
        "Pinnel's Case",
        "Central London Property Trust v High Trees House",
        "Hughes v Metropolitan Railway Co",
        "Hartley v Ponsonby",
        "Hirachand Punamchand v Temple",
        "Foakes v Beer",
        "Birmingham and District Land Co v LNWR",
        "Tool Metal v Tungsten Electric",
        "Musumeci v Winadell Pty Ltd",
        "Re Selectmove Ltd - Promissory Estoppel",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "The Post Chaser"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Existing Contractual Obligations to Promisor as Consideration"
    ],
    "YEAR": "1857",
    "NUMBER": "111",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A crew of 36 was engaged for a voyage from Liverpool to Australia. When the ship reached Australia, 17 of the men were imprisoned for refusing to work. The ship&#8217;s master, who had failed to find replacements at a reasonable price, promised some of the remaining men extra money to take the ship as far as Bombay \u201cwith a crew of 19 hands\u201d. The extra money was not paid. It was held that the promise to pay it was enforceable. The passage to Bombay was so short-handed as to be dangerous, and therefore it was unreasonable to expect the remaining men to undertake it as part of their original contractual duties. The deal done in Australia amounted to a new contract."
    ],
    "NAME": "Hartley v Ponsonby",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Existing Contractual Obligations to Promisor as Consideration",
    "CITATION": "Hartley v Ponsonby (1857) 7 E&amp;B 872",
    "RELATED": [
        "Stilk v Myrick",
        "Birmingham and District Land Co v LNWR",
        "Hughes v Metropolitan Railway Co",
        "Central London Property Trust v High Trees House",
        "Hirachand Punamchand v Temple",
        "Foakes v Beer",
        "Pinnel's Case",
        "Williams v Roffey",
        "Combe v Combe - Promissory Estoppel",
        "Musumeci v Winadell Pty Ltd",
        "D&C Builders v Rees",
        "The Post Chaser"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Evasion of the Rule in Stik v Myrick"
    ],
    "YEAR": "1991",
    "NUMBER": "112",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendants were contractors refurbishing a block of flats, and the plaintiffs were sub-contracted to them to carry out carpentry work. The plaintiffs ran into financial difficulties while working for the defendants, partly because the parties had agreed an unusually low price for the work, and partly because the plaintiffs failed to supervise their workers properly. The defendants would be liable to penalties if the work were not done on time. They therefore agreed to pay more money in return for the plaintiffs finishing their work by the contractual deadline. The defendants failed to pay, and argued that the plaintiffs had given no consideration for the promise to pay more, since they were to do nothing other than what they were already bound by contract to do anyway. The Court of Appeal held that the promise to pay more was enforceable. The principle of <i>Stilk v Myrick</i> remained good law, so that a gratuitous promise was not enforceable (unless made in a deed). Where, however, the promise conferred a practical advantage on the promisor, the court would find that it was supported by consideration. Here the defendants benefited from their promise in that they avoided liability to a penalty for late completion. They also obtained a more formalised relationship with the plaintiffs, and therefore more control over their work.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;(i) If A has entered into a contract with B to do work for, or to supply goods or services to B in return for payment by B, and<br>&emsp;&emsp;(ii) at some stage before A has completely performed his obligations under the contract B has reason to doubt whether A will, or will be able to, complete his side of the bargain, and<br>&emsp;&emsp;(iii) B thereupon promises A an additional payment in return for A&#8217;s promise to perform his contractual obligations on time and<br>&emsp;&emsp;(iv) as a result of giving his promise B obtains in practice a benefit, or obviates a disbenefit, and<br>&emsp;&emsp;(v) B&#8217;s promise is not given as a result of economic duress or fraud on the part of A, then<br>&emsp;&emsp;(vi) the benefit to B is capable of being consideration for B&#8217;s promise, so that the promise will be legally binding.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Williams v Roffey</i> is a controversial case because it allows a promisee to enforce a promise even though he is doing nothing more in return for it than he was already obliged to do. Whether this is a proper legal development must depend on the view one takes of what consideration is, and the role that it plays or ought to play in the law.<br>&emsp;&emsp;If consideration is a body of technical rules, this case appears to breach them. This is the view of Professor Coote, who argues that the case purports to abolish the need for consideration to support the variation of contracts. If, as Russell LJ says in <i>Williams v Roffey</i>, the assessment of consideration should reflect the parties&#8217; intentions, then there is certainly consideration on these facts \u2013 but the doctrine now seems virtually to have merged with the parallel analysis of intention to create legal relations (the subject of the next lecture).<br>&emsp;&emsp;In the first condition of his six-part statement of principle in <i>Williams v Roffey</i>, Glidewell LJ carefully limits its application to cases in which the promisee has undertaken to do work for, or to supply good or services to the promisor. The ratio of the case therefore does not cover an undertaking to pay money to the promisor. An attempt to extend <i>Williams v Roffey</i> to cases involving obligations of debt was made and rejected in <i>Re Selectmove</i> (already cited in an earlier lecture, on the issue of acceptance by silence). Part payment of debt is governed by the House of Lords&#8217; decision in <i>Foakes v Beer</i>, and that prevents extension of the reasoning in <i>Williams v Roffey</i> into this area. <i>Foakes v Beer</i> will be examined in its own right very shortly."
    ],
    "NAME": "Williams v Roffey",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Evasion of the Rule in Stik v Myrick",
    "CITATION": "Williams v Roffey Bros [1991] 1 QB 1",
    "RELATED": [
        "Re Selectmove Ltd - Promissory Estoppel",
        "Foakes v Beer",
        "Tool Metal v Tungsten Electric",
        "D&C Builders v Rees",
        "Collier v Wright",
        "Stilk v Myrick",
        "Hartley v Ponsonby",
        "Waltons Stores v Maher",
        "Pinnel's Case",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "Hirachand Punamchand v Temple",
        "Musumeci v Winadell Pty Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Evasion of the Rule in Stik v Myrick"
    ],
    "YEAR": "1995",
    "NUMBER": "113",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Here the question was whether there was a binding contract between a company and the Inland Revenue that the Revenue would not seek to put the company into liquidation. The company argued that it had given consideration for this alleged agreement by agreeing to pay its debt to the Revenue in instalments. In the Court of Appeal Peter Gibson LJ held that this could not be regarded as consideration for the alleged promise, since the company was doing no more than it was already obliged to do. \u201cThe difficulty that I feel with [the argument that <i>Williams v Roffey</i> should apply] is that if the principle of <i>Williams</i>&#8216; case is to be extended to an obligation to make payment, it would in effect leave the principle in <i>Foakes v Beer</i> without any application. Where a creditor and a debtor who are at arm&#8217;s length reach agreement on the payment of the debt by instalments to accommodate the debtor, the creditor will no doubt always see a practical benefit to himself in so doing. In the absence of authority there would be much to be said for the enforceability of such a contract. But that was a matter expressly considered in <i>Foakes v Beer</i> yet held not to constitute good consideration in law. <i>Foakes v Beer</i> was not even referred to in <i>Williams&#8217;</i> case, and it is in my judgment impossible, consistently with the doctrine of precedent, for this court to extend the principle of <i>Williams</i>&#8216; case to any circumstances governed by the principle of <i>Foakes v Beer</i>. If that extension is to be made, it must be by the House of Lords or, perhaps even more appropriately, by Parliament after consideration by the Law Commission\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The language used by Peter Gibson LJ deserves careful scrutiny. The ratio of the case is clear; Foakes v Beer is not to be undermined. However, this conclusion is reached without relish, and solely because of the doctrine of precedent and the necessity of deference to the House of Lords. </span>"
    ],
    "NAME": "Re Selectmove Ltd - Promissory Estoppel",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Evasion of the Rule in Stik v Myrick",
    "CITATION": "Re Selectmove Ltd [1995] 2 All ER 531",
    "RELATED": [
        "Williams v Roffey",
        "Hartley v Ponsonby",
        "Combe v Combe - Promissory Estoppel",
        "Tool Metal v Tungsten Electric",
        "Pinnel's Case",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "Foakes v Beer",
        "Hirachand Punamchand v Temple",
        "Waltons Stores v Maher",
        "Musumeci v Winadell Pty Ltd",
        "D&C Builders v Rees",
        "Birmingham and District Land Co v LNWR"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Existing Contractual Obligations to Promisor as Consideration",
        "Part Payment of a Debt as Consideration"
    ],
    "NUMBER": "114",
    "TYPE": "Concept",
    "NAME": "Part Payment of a Debt as Consideration",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Existing Contractual Obligations to Promisor as Consideration &mdash; Part Payment of a Debt as Consideration",
    "RELATED": [
        "Towards Promissory Estoppel - Introduction",
        "Effect of Promissory Estoppel",
        "Characteristics of Promissory Estoppel",
        "Intention to Create Legal Relations - Introduction",
        "Communication of Acceptance - Intro",
        "Reactions to the innominate analysis",
        "The role of foresight",
        "Incomplete and Vague Agreements - Introduction",
        "Assumption of responsibility / advice to verify",
        "Over-extending the \u201cmatrix of fact\u201d",
        "Onerous or unusual clauses",
        "Penalties/Agreed sums payable on breach"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Part Payment of a Debt as Consideration</span></span><br>&emsp;&emsp;The cases examined so far, as remarked above, concern original promises to perform services pursuant to contract, in return for which further payment is later promised. The focus now shifts to the situation in which the original undertaking is to pay a sum of money, in other words a debt. This is not merely a repeat of the previous type of arrangement this time with different facts. In the debt cases, the debtor is not fulfilling the original obligation in return for the creditor promising something extra \u2013 these are simply not the facts. Instead, the debtor is proposing to make part payment of what is owed in return for the creditor receiving such performance in full satisfaction of the whole debt. The difference is sometimes described as being between an increasing pact (the service cases) and a decreasing pact (the debt cases). Nevertheless, the nub of the problem, as before, consists in whether a new agreement can be considered contractually binding even though it is not supported by consideration in the conventional sense. It might be thought that there would be much to be said for a single solution to both types of case. After all, they do not appear logically to be that different.<br>&emsp;&emsp;The mechanics of the debt cases need to be explained. To pay a debt is a duty, and upon payment the debt is discharged. However, even if payment is not made to discharge the debt, the parties may enter into a contract to terminate the duty otherwise than by payment in full. This contract consists of agreement (here referred to as \u201caccord\u201d), and consideration moving from the debtor (here called \u201csatisfaction\u201d).<br>&emsp;&emsp;The basic proposition within this area is that part payment is not of itself capable of being satisfaction, even if the accord makes it quite clear that the creditor receives it as such. This is referred to as the rule in <i>Pinnel&#8217;s Case</i>."
    ]
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Existing Contractual Obligations to Promisor as Consideration",
        "Part Payment of a Debt as Consideration"
    ],
    "YEAR": "1602",
    "NUMBER": "115",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant pleaded that he had tendered part payment of a debt before the due date and the creditor had received it as satisfaction for the whole. It was held that his defence failed, since he should additionally have pleaded that he tendered it in full satisfaction. Had he done so, it would have been good satisfaction for the whole debt because of the early payment. Coke CJ said, obiter: \u201cthat payment of a lesser sum on the day in satisfaction of a greater cannot be any satisfaction for the whole, because it appears to the judges that by no possibility a lesser sum can be satisfaction to the plaintiff for a greater sum: but the gift of a horse, hawk or robe etc., in satisfaction is good for it shall be intended that a horse, hawk or robe etc, might be more beneficial to the plaintiff than the money, in respect of some circumstances, or otherwise the plaintiff would not have accepted it in satisfaction\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This remarkable case needs more than a little explanation. It is of relevance only for the obiter statement above which was entirely unnecessary to the decision but has steered English law within this area for four centuries.<br>&emsp;&emsp;The words \u201cit appears to the judges\u201d indicate a conclusion which is based not upon evidence but upon the judges&#8217; common experience; the idea is akin to the principle of \u201cjudicial notice\u201d being taken of a fact which has not been subject to formal proof. \u201cIt shall be intended\u201d is the seventeenth century legal English term for an irrebuttable presumption of law. The presumption in question arises when the creditor requests (the need for a request is stated later by Coke CJ) and accepts a \u201chorse, hawk or robe etc\u201d in full satisfaction for a debt on the due date, either in addition to part payment or instead of any payment at all. A \u201chorse, hawk or robe etc\u201d seems to be a way of referring to anything whatsoever that the debtor was not bound by the original agreement to provide. The reason this works as satisfaction is because of the irrebuttable legal presumption of the possibility of benefit to the creditor, and because of the standard proposition that the law will not judge the adequacy of consideration.<br>&emsp;&emsp;Pinnel&#8217;s Case</i> also makes it clear that part payment requested and accepted before the due day will function in the same way as a \u201chorse, hawk or robe etc\u201d. The court will presume from its acceptability to the creditor it that could have been more beneficial than a later payment in full.<br>&emsp;&emsp;The \u201cRule in <i>Pinnel&#8217;s Case</i>\u201d is not difficult to understand, but it is intellectually troubling. Why should the law take a point on the inadequacy of part payment, when the general rule is that consideration need not be adequate? And how can the law maintain the fiction that any thing will do as substituted performance, when its inadequacy may be quite as obvious as that of part payment?<br>&emsp;&emsp;If one asks why part payment on the day cannot function like a horse, hawk, robe, peppercorn or chocolate wrapper, the answer normally given is that the creditor is receiving nothing new or additional by way of consideration for his promise to set aside the debt. Another reason, which perhaps goes further into the minds of the judges at the time of <i>Pinnel&#8217;s Case</i>, is a little more nuanced. The provision of some new thing suggests the making of a new agreement to terminate the original debt. The making of part payment suggests nothing more than a payment on account towards the discharge of the debt. It will readily be seen why the judges are ready to value that part payment to find it wanting, and thereby seem to ignore the rule that consideration need not be adequate. They do not assess it as consideration at all, but as an attempt to discharge a duty. It appears to them, correctly, that a duty is either discharged or not discharged.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">A somewhat different answer now follows \u2013 you may well not want to spend time on it. Pinnel&#8217;s Case concerned a penal bond with conditional defeasance. This type of arrangement, extremely common at the time, amounted to an agreement that one party would be subject (in debt) to a draconian penalty subject only to the condition that if they did something else first (the envisaged performance), they would be entitled not to pay the penalty. The envisaged performance could consist in conduct, or in the payment of a sum of money, much less than the penalty. Pinnel&#8217;s Case was of course an arrangement of the latter type, envisaging payment.</span><br>&emsp;&emsp;<span class=\"it\">Under the penal bond with conditional defeasance, the sum which is envisaged to be paid is not a debt, and therefore a case like Pinnel is not actually about the part payment of debt. The sum envisaged to be paid is a condition, and fulfilment of the condition will entitle the debtor not to pay the true debt owed under such a bond \u2013 the penal sum which is the technical subject of the agreement between the parties. Pinnel&#8217;s Case therefore decides what can validly be imported as a replacement condition into the agreement, and not what will discharge a debt. This refinement of perspective is slight, but nevertheless helpful. Where one party requests and accepts a chattel instead of the envisaged payment, the court&#8217;s conclusion will be that the condition must have been varied; a different thing is being done. Where, however, part payment is made on the day, nothing is being done to suggest that the original condition has been replaced by a different one. The part payment will be taken to be referable to the original condition. If one asks (with the early seventeenth century&#8217;s liking for formalism) whether part payment amounts to performance of that condition or not, only one answer is possible. It is the answer given by Coke CJ. </span><br>&emsp;&emsp;<span class=\"it\">In 1884 the House of Lords had to decide whether part payment of a debt could be satisfaction for the full amount owing. The dictum in <i>Pinnel&#8217;s Case</i> was upheld as good law.</span>"
    ],
    "NAME": "Pinnel's Case",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Existing Contractual Obligations to Promisor as Consideration &mdash; Part Payment of a Debt as Consideration",
    "CITATION": "Pinnel&#8217;s Case (1602) 5 Rep 117a",
    "RELATED": [
        "Foakes v Beer",
        "Hughes v Metropolitan Railway Co",
        "Birmingham and District Land Co v LNWR",
        "Hartley v Ponsonby",
        "Central London Property Trust v High Trees House",
        "Stilk v Myrick",
        "Hirachand Punamchand v Temple",
        "Williams v Roffey",
        "Collier v Wright",
        "Musumeci v Winadell Pty Ltd",
        "Re Selectmove Ltd - Promissory Estoppel",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Existing Contractual Obligations to Promisor as Consideration",
        "Part Payment of a Debt as Consideration"
    ],
    "NUMBER": "116",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;As a result of a court case brought to recover a debt, Dr Foakes owed Mrs Beer \u00a32090 19s. He asked for time to pay. She agreed that if he made a down payment of \u00a3500 and then paid the remaining sum in instalments she would take no further action upon the judgment. Dr Foakes duly made all the stipulated repayments, but Mrs Beer then claimed that he was bound to pay interest on the debt as well. The House of Lords had to resolve two linked questions: (a) had Mrs Beer promised not to claim the interest, and if she had, (b) was her promise supported by consideration and therefore binding? Their Lordships differed as to whether Mrs Beer had promised not to claim interest, but all agreed that if she had, then her promise was not binding, because she had received nothing extra in return for that promise. The rule in <i>Pinnel&#8217;s Case</i> was approved, though without much enthusiasm.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The issue on which <i>Foakes v Beer</i> seems to have turned was whether any benefit accrued or might accrue to the creditor through the acceptance of part payment of a debt on the due day. The sense in which the House considered this question is explained by the Earl of Selborne LC:<br>&emsp;&emsp;\u201cWhat is called \u201cany benefit, or even any legal possibility of benefit,\u201d in Mr Smith&#8217;s notes to <i>Cumber v Wane</i> [a case following <i>Pinnel&#8217;s Case</i>] is not (as I conceive) that sort of benefit which a creditor might derive from getting payment of part of the money due to him from a debtor who might otherwise keep him at arm&#8217;s length, or possibly become insolvent, but is some independent benefit, actual or contingent, of a kind which might in law be a good and valuable consideration for any other sort of agreement not under seal\u201d.<br>&emsp;&emsp;The most noteworthy speech in the case is that of Lord Blackburn. He stated that he thought the rule in <i>Pinnel&#8217;s Case</i> to be wrong, because Lord Coke in that case was factually mistaken when he said that it could never be a benefit to the creditor to receive only part of what he was owed. On that basis, Lord Blackburn said that he had intended to dissent, and urge that <i>Pinnel&#8217;s Case</i> be overruled, and had even written his speech, but had changed his mind:<br>&emsp;&emsp;\u201cWhat principally weighs with me in thinking that Lord Coke made a mistake of fact is my conviction that all men of business, whether merchants or tradesmen, do every day recognise and act on the ground that prompt payment of a part of their demand may be more beneficial to them than it would be to insist on their rights and enforce payment of the whole. Even where the debtor is perfectly solvent, and sure to pay at last, this is often so. Where the credit of the debtor is doubtful is must be more so. I had persuaded myself that there was no such long-continued action on this dictum [in <i>Pinnel&#8217;s case</i>] as to render it improper in this House to re-consider the question. I had written my reasons for so thinking; but as they were not satisfactory to the other noble and learned Lords who heard the case, I do not now repeat them nor persist in them.<br>&emsp;&emsp;I assent to the judgment proposed, though it is not that which I had originally thought proper\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The following discussion raises three separate points. You do not need to linger over any of them unless you find them helpful.</span><br>&emsp;&emsp;<span class=\"it\">1. It is possible to come away from Foakes v Beer regarding the decision as a paradox. What would have given binding force to Mrs Beer&#8217;s promise not to require the interest? Nothing short of payment of the interest in full (or some substituted performance). The reason that Mrs Beer&#8217;s promise didn&#8217;t bind her is that Dr Foakes took her at her word. It can seem very odd that the doctrine of consideration leads to this result.</span><br>&emsp;&emsp;<span class=\"it\">The best route away from the paradox is to recall the policy which lies behind the rule in Pinnel&#8217;s case. The law does not readily presume that a creditor intends to forgo a debt, but is alive to the risk that an unscrupulous debtor may try to trick a creditor into doing just that. In <span class=\"bd\">Treitel</span>&#8216;s view (Some Landmarks of Twentieth Century Contract Law) that is exactly what Dr Foakes&#8217; solicitor had tried to do here. The rule in Pinnel&#8217;s case stops it happening. If the creditor genuinely wishes to release the part-paying debtor, the use of a deed will achieve the intended result.</span><br>&emsp;&emsp;<span class=\"it\">2. The difference between the Earl of Selborne LC&#8217;s view and the near-dissent of Lord Blackburn is a narrow one. The crucial concept in the former&#8217;s discussion of the law is \u201csome independent benefit\u201d; Lord Blackburn, by contrast, had been sufficiently impressed by the real if not the independent benefit of a creditor&#8217;s getting at least some payment that he would have found consideration in that. (In fact they are still closer, because the Earl of Selborne LC stated that he would have regarded the adoption of Lord Blackburn&#8217;s preferred view as an improvement in the law, had he not thought the doctrine of precedent stood in the way of it). If the matter is to come down to the nature of the structural relation between an admitted benefit and the promise which it is to support, it is hard not to conclude that the analysis is too technical. Do the principles of consideration really require this, and if so, can their demand be justified? </span><br>&emsp;&emsp;<span class=\"it\">3. On a wholly unrelated point, you may wonder whether there was not another way in which Foakes v Beer could have been decided. Mrs Beer was (or may have been) content to take somewhat less than the full sum which she was owed by giving up the interest on the money due to her. Dr Foakes was willing to and did pay this agreed sum. Were the parties not compromising a claim? Not surprisingly, this does not work. The compromised claim cases involve disputed or unliquidated claims. Mrs Beer&#8217;s claim was for a debt which was not subject to dispute; it was backed by a High Court judgment. </span><br>&emsp;&emsp;<span class=\"it\">h3>Two of the exceptions to the rule in <i>Pinnel&#8217;s Case</i> do not so much confine it as apply it, and are in fact both alluded to in Coke CJ&#8217;s note of what the case decided. The first, already mentioned, is that part payment of a debt is good satisfaction for a promise to relinquish the whole provided it is requested and accepted in full satisfaction before the due date. These were the facts of <i>Pinnel&#8217;s Case</i> itself, and would have given the defendant a good defence had it not been for the error of pleading on which the decision in fact turned. </h3</span><br>&emsp;&emsp;<span class=\"it\">h3>The second exception is where the part payment is requested and accepted in full satisfaction at a place other than the one originally fixed for payment. On the extraordinarily technical perspective of the early seventeenth century, either of these arrangements can be regarded not merely as payment on account towards the discharge of the full debt, but as satisfaction for an independent accord to relinquish the full debt.</h3</span><br>&emsp;&emsp;<span class=\"it\">h3>Payment at a different place seems, however, to count as substituted performance only if it is genuinely beneficial to the creditor, as the next case shows.</h3</span>",
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff, who was indebted to the defendants, had allegedly been promised that they would not serve a bankruptcy notice on him if he paid the debt on 7 July. On 6 July, the plaintiff informed the defendants that he could not pay on the following day, but that he could borrow the money in Eastbourne on 8 July. The plaintiffs asked him to pay it in at a bank in Eastbourne to the credit of their solicitor&#8217;s account in London. The plaintiff did so, but his letter informing the defendants&#8217; solicitor of this was not delivered. The bankruptcy notice was therefore served on him. He sued for breach of the promise not to serve the notice. His action failed since it was held on appeal that the request to pay the money in Eastbourne had been a mere \u201cvoluntary indulgence\u201d to the plaintiff from which the defendants derived no actual benefit. The agreement was unsupported by consideration.<br>&emsp;&emsp;A third exception to the rule in <i>Pinnel&#8217;s Case</i> exists where the part payment is made to the creditor <b>by someone other than the debtor.</b"
    ],
    "NAME": "Foakes v Beer",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Existing Contractual Obligations to Promisor as Consideration &mdash; Part Payment of a Debt as Consideration",
    "TYPE": "Case",
    "RELATED": [
        "Pinnel's Case",
        "Hartley v Ponsonby",
        "Central London Property Trust v High Trees House",
        "Birmingham and District Land Co v LNWR",
        "Hirachand Punamchand v Temple",
        "Stilk v Myrick",
        "Hughes v Metropolitan Railway Co",
        "The Post Chaser",
        "Collier v Wright",
        "Tool Metal v Tungsten Electric",
        "Re Selectmove Ltd - Promissory Estoppel",
        "Williams v Roffey"
    ],
    "FLAGS": [
        "Treitel"
    ]
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Existing Contractual Obligations to Promisor as Consideration",
        "Evasion of Rule In Pinnel's Case"
    ],
    "NUMBER": "117",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Hirachand Punamchand v Temple</span></span>",
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant, Lieutenant Temple, had borrowed money from moneylenders (the plaintiffs) in India while serving there with the British Army. He had given a bond and a promissory note in return for the loan. He was unable to pay it back, and the plaintiffs wrote to his father, Sir Richard Temple. Sir Richard sent a banker&#8217;s draft for a sum less than the full debt, making it clear that he intended it to be in full and final settlement. The plaintiffs wrote back saying that they required payment in full, and that they would cash the draft and hold the money on account. They then sued the defendant for the remainder of the debt. It was held that they must be deemed to have accepted the money on the terms on which it was offered, and thus in full and final settlement. Their right to the remainder had been extinguished.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;A number of reasons are given by the court to support this outcome. Some are far-fetched. Perhaps the most convincing \u2013 regardless of whether it is well supported by the facts of the case \u2013 is that the third party is concluding a new contract for the release of the debtor. On this view it at least cannot be said that the promisee (the third party) is doing no more than he was already bound to do, because he was not previously bound to do anything at all. There is therefore no reason to compare what is paid with what was originally owed.<br>&emsp;&emsp;The objection to this reasoning is that it merely provides a technical solution to a technically conceived problem of consideration that has little to do with the facts of the case. There was no agreement along the lines that the court&#8217;s analysis supposes. The plaintiffs were not content to conclude a new contract for the discharge of the defendant by which they lost money, and surely supposed that by cashing the banker&#8217;s draft they were merely doing what any other creditor would be entitled to do on receiving part payment of a debt. It is another flaw in the rule in <i>Pinnel&#8217;s Case</i> that it can be manipulated to do the precise opposite of what it should \u2013 that is, to protect the rights of a creditor and distinguish genuine accords from bogus ones.<br>&emsp;&emsp;Another exception to the rule in <i>Pinnel&#8217;s Case</i> is now defunct. It was formally held that the making of part payment <b>other than by cash</b> (for example by giving a negotiable instrument such as a cheque) amounted to substituted performance. In <i>D &amp; C Builders Ltd v Rees</i> (1965) the Court of Appeal held that the authorities on which this rule was based would be either distinguished or overruled for the reason that the distinction had come to appear wholly fictitious (and incidentally would have produced an unjust result in the instant case). The decision is discussed further in a different context below.<br>&emsp;&emsp;The question whether one may retract a concession has fortunately not been altogether left in the sclerotic grip of <i>Pinnel&#8217;s Case</i>. In another line of cases, decided in the courts&#8217; equitable jurisdiction, a far more reasonable approach is adopted; should the promisor in fairness be allowed to retract a concession on which the promisee has relied? This approach does not exactly contradict the common law&#8217;s insistence that consideration must be found before the promisor will be contractually bound by his promise. Instead, it gives such limited effect to the promise as is necessary to avoid inequity."
    ],
    "NAME": "Hirachand Punamchand v Temple",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Existing Contractual Obligations to Promisor as Consideration &mdash; Evasion of Rule In Pinnel's Case",
    "RELATED": [
        "Stilk v Myrick",
        "Hartley v Ponsonby",
        "Foakes v Beer",
        "Central London Property Trust v High Trees House",
        "Pinnel's Case",
        "Hughes v Metropolitan Railway Co",
        "Birmingham and District Land Co v LNWR",
        "D&C Builders v Rees",
        "Waltons Stores v Maher",
        "Musumeci v Winadell Pty Ltd",
        "The Post Chaser",
        "Tool Metal v Tungsten Electric"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Existing Contractual Obligations to Promisor as Consideration",
        "Equity's Evasion of Pinnel's Case"
    ],
    "YEAR": "1877",
    "NUMBER": "118",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The tenants of certain houses were given notice by their landlord in October 1874 to carry out repairs to the property within six months. The penalty for non-compliance was forfeiture of the lease. The tenants agreed to do the repairs, but suggested that the landlord might wish to buy the remaining term of the lease from them. They made it clear that the repairs would be deferred pending negotiations. Negotiations duly took place but were unsuccessful, and the landlord brought proceedings for possession at the expiry of six months from service of the original notice to repair. The House of Lords held that the six month period for repairs to take place did not run while negotiations were ongoing, but only from the point at which they had broken down. On that view the tenants had in fact completed the repairs within the period allowed, and were protected from forfeiture.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Cairns LC made the following statement: \u201cIt is the first principle upon which all courts of equity proceed, that if parties who have entered into definite and distinct terms involving certain legal results \u2013 certain penalties or legal forfeiture \u2013 afterwards by their own act or with their own consent enter upon a course of negotiation which has the effect of leading one of the parties to suppose that the strict rights arising under the contract will not be enforced, or will be kept in suspense, or held in abeyance, the person who otherwise might have enforced those rights will not be allowed to enforce them where it would be inequitable having regard to the dealings which have thus taken place between the parties\u201d.<br>&emsp;&emsp;The apparent limitations in Lord Cairns&#8217; statement of this principle above were doubted in the next case."
    ],
    "NAME": "Hughes v Metropolitan Railway Co",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Existing Contractual Obligations to Promisor as Consideration &mdash; Equity's Evasion of Pinnel's Case",
    "CITATION": "Hughes v Metropolitan Railway Co (1877) 2 App Cas 439",
    "RELATED": [
        "Central London Property Trust v High Trees House",
        "Birmingham and District Land Co v LNWR",
        "Foakes v Beer",
        "Stilk v Myrick",
        "Hartley v Ponsonby",
        "Hirachand Punamchand v Temple",
        "Pinnel's Case",
        "Musumeci v Winadell Pty Ltd",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "The Post Chaser",
        "Williams v Roffey",
        "D&C Builders v Rees"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Existing Contractual Obligations to Promisor as Consideration",
        "Equity's Evasion of Pinnel's Case"
    ],
    "YEAR": "1888",
    "NUMBER": "119",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Per Bowen LJ: \u201cNow, it was suggested ...that that proposition only applied to cases where penal rights in the nature of forfeiture, or analogous to those of forfeiture, were sought to be enforced. I entirely fail to see any such possible distinction. The principle has nothing to do with forfeiture... It was applied in <i>Hughes v Metropolitan Railway</i> in a case in which equity could not relieve against forfeiture upon the mere ground that it was a forfeiture, but could interfere only because there had been something in the nature of acquiescence, or negotiations between the parties, which made it inequitable to allow the forfeiture to be enforced. The truth is that the proposition is wider than cases of forfeiture. It seems to me to amount to this, that if persons who have contractual rights against others induce by their conduct those against whom they have such rights to believe that such rights either will not be enforced or will be kept in suspense or abeyance for some particular time, those persons will not be allowed by a court of equity to enforce the rights until such time has elapsed, without at all events placing the parties in the same position as they were before. That is the principle to be applied. I will not say that it is not a principle that was recognised by courts of law as well as of equity. It is not necessary to consider how far it was always a principle of common law\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;If one takes these two cases together, it will be seen that what is envisaged as triggering reliance is an \u201cact\u201d or \u201cconsent\u201d or \u201cconduct\u201d. It is one party&#8217;s behaviour, leading the other to infer that a contractual right will be suspended and to rely on that inference. As long as the doctrine amounts to no more than this, it is not obviously at odds with the common law, but can merely be understood as supplementing it, or \u2013 at most \u2013 mitigating the effects of the common law&#8217;s limited respect for reliance. However, the next case, which is one of the most famous in English contract law, goes somewhat further. It proposes that certain promises, once relied upon, have legal effect despite the absence of consideration."
    ],
    "NAME": "Birmingham and District Land Co v LNWR",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Existing Contractual Obligations to Promisor as Consideration &mdash; Equity's Evasion of Pinnel's Case",
    "CITATION": "Birmingham and District Land Co v LNWR (1888) 40 Ch D 268",
    "RELATED": [
        "Hughes v Metropolitan Railway Co",
        "Central London Property Trust v High Trees House",
        "Pinnel's Case",
        "Stilk v Myrick",
        "Foakes v Beer",
        "Hartley v Ponsonby",
        "Hirachand Punamchand v Temple",
        "Tool Metal v Tungsten Electric",
        "Musumeci v Winadell Pty Ltd",
        "Williams v Roffey",
        "Re Selectmove Ltd - Promissory Estoppel",
        "Combe v Combe - Promissory Estoppel"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1947",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In 1937 the plaintiffs granted the defendants (who were their wholly owned subsidiary) the lease under seal of a block of flats in Clapham in return for payment of a ground rent. During the war years, it became difficult to let the flats because tenants feared for their safety. As a result the defendants were unable to pay the ground rent. The plaintiffs therefore promised that they would accept half the ground rent, and the defendants paid that reduced sum as it fell due from time to time. By 1945 the flats were fully let again, and a receiver who was now managing the plaintiffs&#8217; affairs brought the present action to establish what rent was owed to the plaintiffs. The claim was for the last two quarterly instalments of full ground rent which had fallen due after the flats were once again fully let. <span class=\"bd\">Denning J</span> held that those sums were recoverable, since the concessionary reduction of the ground rent had been intended to last only as long as wartime conditions made it difficult for the defendants to pay the full ground rent. However, he said <i>obiter </i>that if the plaintiffs had sued for all the ground rent held back during the period, they would have been prevented from doing so by the rule in <i>Hughes</i>&#8216;s case. The principle was this: if a promise was made, which was intended to be relied upon, and was relied upon, then in equity the promisor would not be allowed to go back on the promise even though there were no consideration for it.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;\u201cIf I were to consider this matter without regard to recent developments in the law, there is no doubt that, had the plaintiffs claimed it, they would have been entitled to recover ground rent at the rate of \u00a32,500 a year from the beginning of the term...<br>&emsp;&emsp;But what is the position in view of developments in the law in recent years? ... There has been a series of decisions over the past 50 years which, although they are said to be cases of estoppel are not really such. They are cases in which a promise was made which was intended to create legal relations and which, to the knowledge of the person making the promise, was going to be acted on by the person to whom it was made, and which was in fact so acted on. In such cases the courts have said that the promise must be honoured. The cases to which I desire to refer are: <i>Fenner v Blake</i> [1900] 1 QB 426; <i>Re Wickham</i> (1917) 34 TLR 158; <i>Re William Porter &amp; Co Ltd</i> [1937] 2 All ER 361 and <i>Buttery v Pickard</i> [1946] WN 25. As I have said they are not really cases of estoppel in the strict sense. They are really promises \u2013 promises intended to be binding, intended to be acted on, and in fact acted on. <i>Jorden v Money</i> can be distinguished, because there the promisor made it clear that she did not intend to be legally bound, whereas in the cases to which I refer the proper inference was that the promisor did intend to be bound. In each case the court held the promise to be binding on the party making it, even though under the old common law it might be difficult to find any consideration for it. The courts have not gone so far as to give a cause of action in damages for the breach of such a promise, but they have refused to allow the party making it to act inconsistently with it. It is in that sense, and that sense only, that such a promise gives rise to an estoppel. The decisions are a natural result of the fusion of law and equity: for the cases of <i>Hughes v Metropolitan Railway Co</i> (1877) 2 App Cas 439, 448; <i>Birmingham and District Land Co v London &amp; North Western Railway Co</i> (1888) 40 Ch D 268, 286; and <i>Salisbury (Marquess) v Gilmore</i> [1942] 2 KB 38, 51 afford a sufficient basis for saying that a party would not be allowed in equity to go back on such a promise. In my opinion, the time has now come for the validity of such a promise to be recognised. The logical consequence, no doubt, is that a promise to accept a smaller sum in discharge of a larger sum, if acted upon, is binding notwithstanding the absence of consideration: and if the fusion of law and equity leads to this result, so much the better. That aspect was not considered in <i>Foakes v Beer</i> (1884) 9 App Cas 605. At this time of day, however, when law and equity have been joined together for over 70 years, principles must be reconsidered in the light of their combined effect....<br>&emsp;&emsp;If the case had been one of estoppel, it might be said that in any event the estoppel would cease when the conditions to which the representation applied came to an end, or it also might be said that it would only come to an end upon notice. In either case it is only a way of ascertaining what is the scope of the representation. I prefer to apply the principle that a promise intended to be binding, intended to be acted on and in fact acted on, is binding so far as its terms properly apply. Here it was binding as covering the period down to the early part of 1945, and as from that time full rent is payable\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;A great deal has been written about the obiter part of <i>High Trees</i> \u2013 without a doubt it is Lord Denning&#8217;s most famous contract judgment. It requires study, preferably across a range of commentaries. It would be quite impossible here to give an academically exhaustive account, but it may be helpful to give a rough and ready checklist of the main issues.<br>&emsp;&emsp;First, since Lord Denning&#8217;s principle has become known as \u201cpromissory estoppel\u201d (even though he initially seemed disinclined to adopt that label for it himself), it is appropriate to say what an estoppel is. Professor Birks explains that the word has its roots in the Norman French verb which denotes the stopping up of a container, such as a bottle, but he goes on to deduce from this the sense that \u201cin short, one is bound\u201d. This seems misleading. The core notion is not that somebody is bound, but that something is stopped up, and the thing that is stopped up is the mouth of a witness. Estoppel is essentially a rule of evidence which prevents a witness giving evidence which would be relevant if adduced, but which for reasons of fairness ought not to be adduced. Various estoppels are known to the law, and several labels are applied to them, but the key concept in all is that once the parties have conducted their business on a certain footing (eg. an assumption as to a particular fact), neither is permitted to deny that assumed fact even if it subsequently could be shown to be false. Justice here demands that consistency should prevail over truth.<br>&emsp;&emsp;Estoppel is known to the common law. One version of it appears in <i>Jorden v Money</i>, the case which Denning J carefully treads around in <i>High Trees</i>. That House of Lords case states that common law estoppel must be based on a statement of fact, not a promise. For a promise with regard to future conduct to give rise to any rights, it must of course be supported by consideration. Denning J acknowledges this, but finds two ways around the problem which it creates for him. The first is to distinguish <i>Jorden v Money</i> by reinterpreting it as a case in which there was no intention to create legal relations. The second is to avoid describing his own principle as an estoppel. The modern perspective simply consists in accepting that common law estoppel does require a statement of fact (a representation), but that there is also a second form of equitable or promissory estoppel which can be founded on a promise.<br>&emsp;&emsp;Since Denning J found some difficulty in appropriating the term \u201cestoppel\u201d to his use, he relies on a variety of cases to which several labels have been applied; the taxonomy is not agreed, but the word \u201cwaiver\u201d is most used in connection with them. <i>Hughes v Metropolitan Railway</i>, as extended by the <i>Birmingham</i> case, is the chief of them for Denning J&#8217;s purposes, because it is a House of Lords authority, and because it derives the court&#8217;s ability to intervene from its equitable jurisdiction. As a result of <i>Hughes</i>, a promise, even though unsupported by consideration, can be set up as a defence to an action for breach of contract. In <i>Foakes v Beer</i>, a promise unsupported by consideration was of no effect. Because <i>Hughes</i> is decided in equity, Denning J is able to explain <i>Foakes v Beer</i> as a decision in which the (then recent) fusion of law and equity was overlooked.<br>&emsp;&emsp;Plainly, Denning J would have decided <i>Foakes v Beer</i> differently. Nevertheless, his proposal that \u201ca promise to accept a smaller sum in discharge of a larger sum \u2026 is binding\u201d is mischievous. His own statement of the effect of promissory estoppel stops short of that. Such a promise is given limited effect as a defence if equity requires it.<br>&emsp;&emsp;<span class=\"bd\">Treitel</span> argues that the House of Lords in <i>Foakes v Beer</i> was not likely to have been unaware of <i>Hughes&#8217; Case</i>, since it had been decided only seven years earlier and involved two of the judges who also sat in <i>Foakes v Beer</i>. He suggests that the two authorities are not at variance because rights were merely suspended in <i>Hughes</i>, whereas Dr Foakes maintained that Mrs Beer&#8217;s right to payment should be permanently extinguished. Much analysis of the cases in this area takes the distinction between suspension and extinction of rights to be fundamental, but in practice the distinction is not altogether clear-cut and needs to be regarded with a little caution. At first glance it does seem that the right of the landlord in <i>Hughes</i> to have the premises repaired was merely suspended. However, his right to the repairs within the original six months was permanently lost.<br>&emsp;&emsp;Professor Smith makes a different distinction between <i>Hughes</i> and <i>Foakes v Beer</i>. He says that the result of <i>Hughes</i> (and of other cases on waiver) is that a claimant cannot sue for a breach of contract which has been induced by his own behaviour. <i>Foakes v Beer</i>, on the other hand, does not involve a breach of contract. The claim is for performance of a duty \u2013 the payment of a debt in full. The debt remains payable because of the rule in <i>Pinnel&#8217;s Case</i> even though the creditor has promised to forgo part of it. The express distinction, which is between induced non-performance and induced breach, hardly seems to work since the two will often amount to the same thing. The deeper distinction may be between obligated performance arising from debt, and promised performance arising from assumpsit (contract), but it is uncomfortably technical and this is not the place to pursue it.<br>&emsp;&emsp;Where in all this does the obiter principle in <i>High Trees</i> stand? On a broad view (not a technical one), it can permanently prevent the recovery of money due, and it therefore goes beyond <i>Hughes</i>. The judgment, both in appearance and expression, seems to come into conflict with <i>Foakes v Beer</i> even though it does not flatly contradict it.<br>&emsp;&emsp;Can Denning J&#8217;s obiter doctrine stand? It is too firmly entrenched both here and in other common law jurisdictions to be overthrown. <i>Foakes v Beer</i> has been outflanked, and the two authorities co-exist in an uneasy tension. The factors which permit <i>High Trees</i> to maintain its position rather than simply falling before the decision of the superior court are these. First, it does not make a promise unsupported by consideration binding for all purposes. Such a promise is enforceable only as a defence, and not as a cause of action in its own right (which would still require it to be embodied in a contract and supported by consideration). Secondly, there must be some measure of reliance by the promisee on the promise. Thirdly, the promisor may be able to withdraw the promise by giving notice. Fourthly, the doctrine of <i>High Trees</i> is expressed to be derived from equity, and this allows it to claim the status of equity&#8217;s answer to the common law problem of <i>Foakes v Beer</i>. These factors, in combination, allow the conclusion that promissory estoppel has a place of its own and is not simply an impermissible negation of <i>Foakes v Beer."
    ],
    "CATEGORY": "Towards Promissory Estoppel &mdash; Existing Contractual Obligations to Promisor as Consideration &mdash; Equity's Evasion of Pinnel's Case",
    "CITATION": "Central London Property Trust v High Trees House Ltd [1947] KB 130",
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Existing Contractual Obligations to Promisor as Consideration",
        "Equity's Evasion of Pinnel's Case"
    ],
    "RELATED": [
        "Birmingham and District Land Co v LNWR",
        "Hughes v Metropolitan Railway Co",
        "Foakes v Beer",
        "Stilk v Myrick",
        "Pinnel's Case",
        "Hirachand Punamchand v Temple",
        "Hartley v Ponsonby",
        "Musumeci v Winadell Pty Ltd",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "Re Selectmove Ltd - Promissory Estoppel",
        "Waltons Stores v Maher",
        "Tool Metal v Tungsten Electric"
    ],
    "NUMBER": "120",
    "TYPE": "Case",
    "NAME": "Central London Property Trust v High Trees House",
    "FLAGS": [
        "Denning",
        "Treitel"
    ]
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel"
    ],
    "NUMBER": "121",
    "FLAGS": [
        "Denning"
    ],
    "TYPE": "Concept",
    "NAME": "Characteristics of Promissory Estoppel",
    "CATEGORY": "Towards Promissory Estoppel",
    "RELATED": [
        "Effect of Promissory Estoppel",
        "Towards Promissory Estoppel - Introduction",
        "Part Payment of a Debt as Consideration",
        "The construction of exemption clauses",
        "Further aspects of the remedial scheme",
        "Special types of loss",
        "Deferred Agreements",
        "Communication of Acceptance - Intro",
        "Penalties/Agreed sums payable on breach",
        "The old principles of \u201clegal\u201d interpretation",
        "Warranties",
        "Assumption of responsibility / advice to verify"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Characteristics of Promissory Estoppel</span></span><br>&emsp;&emsp;These and other aspects of promissory estoppel, and developments in them since <i>High Trees</i>, will now be examined separately. In fact a strictly systematic examination is difficult because the \u201cingredients\u201d of promissory estoppel are closely interrelated and most of the cases therefore raise more than one of them.<br>&emsp;&emsp;High Trees</i> itself makes it clear that the doctrine requires a distinct promise not to enforce full contractual rights, and the accompanying intention to affect the legal relations between the parties.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">However, this is a curiously complicated topic. Hughes and the Birmingham case say nothing at all about promises; the equitable doctrine in those decisions refers only to conduct, as already noted. One possible reason for that has already been suggested above in the discussion immediately before the citation of High Trees \u2013 the likely awareness of the judges in those cases that an estoppel could not be based on a promise because of Jorden v Money. Therefore it seems correct for largely historical reasons to say that a clear promise (express or implied ) is required to support Lord <span class=\"bd\">Denning</span>&#8216;s doctrine, but that some less unequivocal form of behaviour, for example acquiescence, may be sufficient to support a waiver of rights. Adams and Brownsword (Key Issues in Contract), in a lengthy discussion of waiver, suggest its effect is to prevent exercise of a remedial option as though no such waiver had occurred. For present purposes the best conclusion may be that a waiver, which stops short of an express inducement of a breach of contract, could well have a more limited effect than a full-blown promissory estoppel.</span><br>&emsp;&emsp;<span class=\"it\">The promise must have been relied on by the promisee before it will found an estoppel.</span>"
    ]
},
{
    "YEAR": "1964",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant had hired lorries from the plaintiff on hire purchase terms and was paying the purchase price in instalments. Some of the lorries were withdrawn from service because they needed repairs. The defendant asked the plaintiff to do the repairs, and said that this would be paid for once the lorries were back in service. The plaintiff replied that full hire purchase payments did not need to be made while the lorries were out of service, but later claimed full payment. The defendant argued that the plaintiff was estopped from claiming full payment because the defendant had made changes to the organisation of his business on the basis that he would not have to pay in full. It was held that the evidence did not establish this, so that the estoppel argument failed. The promise had not been acted upon in the sense that the defendant had altered his position.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The extent to which reliance is adequately protected by contract law is a large and current topic of debate. To focus on the immediate issue, however, it makes perfect sense that the promisee should demonstrate reliance before any effect will be given to the promise by estoppel. If it were otherwise, the argument that the promise made no difference to anything would apply with its full and withering force. The requirement of reliance is a threshold qualification in other areas of contract law. In misrepresentation, for instance, an action cannot be maintained if a false statement in no way affected the claimant&#8217;s judgment.<br>&emsp;&emsp;In the context of promissory estoppel, there has been debate whether the promisee&#8217;s reliance need be detrimental. A moment&#8217;s thought should be enough to suggest the correct answer. The facts of <i>High Trees</i> itself can stand as a guide; the locus classicus of promissory estoppel is itself a case of a merely concessionary promise which occasioned no detriment to the promisee and no benefit to the promisor. In a later case (<i>Alan v El Nasr</i> (1972)), Lord <span class=\"bd\">Denning</span> expressly denied that detrimental reliance was necessary. The true position is best explained in the following case, confirming Lord <span class=\"bd\">Denning</span>&#8216;s view:"
    ],
    "CATEGORY": "Towards Promissory Estoppel &mdash; Characteristics of Promissory Estoppel &mdash; Reliance and Inequity",
    "CITATION": "Ajayi (EA) v Briscoe (Nigeria) Ltd [1964] 3 All ER 556",
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Characteristics of Promissory Estoppel",
        "Reliance and Inequity"
    ],
    "RELATED": [
        "Musumeci v Winadell Pty Ltd",
        "The Post Chaser",
        "Collier v Wright",
        "D&C Builders v Rees",
        "Combe v Combe - Promissory Estoppel",
        "Waltons Stores v Maher",
        "Tool Metal v Tungsten Electric",
        "Hughes v Metropolitan Railway Co",
        "Central London Property Trust v High Trees House",
        "Williams v Roffey",
        "Re Selectmove Ltd - Promissory Estoppel",
        "Foakes v Beer"
    ],
    "NUMBER": "122",
    "TYPE": "Case",
    "NAME": "Ajayi (EA) v Briscoe (Nigeria) Ltd",
    "FLAGS": [
        "Denning"
    ]
},
{
    "YEAR": "1982",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The facts of this case (the sale of a consignment of palm oil by a lengthy chain of inter-related transactions) are complex and do not add to the following statement of Robert Goff J.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;\u201cI approach the matter as follows. The fundamental principle is that stated by Lord Cairns [in <i>Hughes v Metropolitan Railway</i>], viz. that the representor will not be allowed to enforce his rights \u201cwhere it would be inequitable having regard to the dealings which have thus taken place between the parties\u201d. To establish such inequity, it is not necessary to show detriment; indeed, the representee may have benefited from the representation, and yet it may be inequitable, at least without reasonable notice, for the representor to enforce his legal rights. Take the facts of <i>Central London Property Trust Ltd v High Trees House Ltd</i> [1947] 1 KB 130, the case in which <span class=\"bd\">Denning J</span> breathed new life into the doctrine of equitable estoppel. The representation was by a lessor to the effect that he would be content to accept a reduced rent. In such a case, although the lessee has benefited from the reduction in rent, it may well be inequitable for the lessor to insist upon his legal right to the unpaid rent, because the lessee has conducted his affairs on the basis that he would only have to pay rent at the lower rate; and a court might well think it right to conclude that only after reasonable notice could the lessor return to charging rent at the higher rate specified in the lease. Furthermore it would be open to the Court, in any particular case, to infer from the circumstances of the case that the representee must have conducted his affairs in such a way that it would be inequitable for the representor to enforce his rights, or to do so without reasonable notice. But it does not follow that in every case in which the representee has acted, or failed to act, in reliance on the representation, it will be inequitable for the representor to enforce his rights for the nature of the action, or inaction, may be sufficient to give rise to the equity, in which event a necessary requirement stated by Lord Cairns LC for the application for the doctrine would not have been fulfilled\u201d.<br>&emsp;&emsp;If the promisee&#8217;s reliance on the promise can be characterised as detrimental (detriment being found beyond the mere fact that he may face an action for breach of contract absent the defence of promissory estoppel), then the case may need careful handling. Consider the following decision of the Supreme Court of New South Wales."
    ],
    "CATEGORY": "Towards Promissory Estoppel &mdash; Characteristics of Promissory Estoppel &mdash; Reliance and Inequity",
    "CITATION": "Societe Italo-Belge v Palm and Vegetable Oils, Malaysia (The Post Chaser) [1982] All ER 19",
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Characteristics of Promissory Estoppel",
        "Reliance and Inequity"
    ],
    "RELATED": [
        "Musumeci v Winadell Pty Ltd",
        "Collier v Wright",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "D&C Builders v Rees",
        "Waltons Stores v Maher",
        "Tool Metal v Tungsten Electric",
        "Combe v Combe - Promissory Estoppel",
        "Williams v Roffey",
        "Hughes v Metropolitan Railway Co",
        "Birmingham and District Land Co v LNWR",
        "Re Selectmove Ltd - Promissory Estoppel",
        "Stilk v Myrick"
    ],
    "NUMBER": "123",
    "TYPE": "Case",
    "NAME": "The Post Chaser",
    "FLAGS": [
        "Denning"
    ]
},
{
    "YEAR": "1994",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs were tenants of a shop in a shopping centre owned by the defendants. When the defendants leased another shop in the same centre to a similar business (a fruiterer), the plaintiffs experienced a drop in their turnover. They therefore sought and received a reduction in their rent from the defendants. The reduced rent was paid and accepted even after the defendants had required a return to full rent. At a certain point the defendants changed the locks on the plaintiffs&#8217; shop. The plaintiffs sued for damages and succeeded on the basis that the rent had been varied for good consideration. The court held that the promise to reduce the rent had given the defendants the benefit of keeping the shop occupied without having to look for an alternative tenant. It had cost the plaintiffs a detriment in the form of the risk they undertook by continuing to trade against a stronger competitor instead of leaving and cutting their potential losses. Although the plaintiffs were doing no more than what they were originally obliged to do by their lease, <i>Williams v Roffey</i> would be extended to cover this case (here protecting a decreasing rather than an increasing pact).",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Since this is an Australian case, it is merely persuasive authority in the courts of this country. What is more, it appears to go directly against the limitation of <i>Williams v Roffey</i> by <i>Re Selectmove</i> (see above). That aside, there are English cases in which a promisee&#8217;s reliance on a promise has led judges of the same court to go different ways; on more than one occasion Lord <span class=\"bd\">Denning</span> applied the <i>High Trees</i> doctrine, while others found a binding variation of contract on the basis of detriment or potential detriment.<br>&emsp;&emsp;The passage from the judgment of Robert Goff J in <i>The Post Chaser</i> above stands as a complete account in principle of the place of inequity in promissory estoppel. Little more needs to be said on a conceptual level, except to remark that there is a ready means of distinguishing between the detriment which might make a promise binding as a variation of the contract, and the inequity which promissory estoppel would remedy. Detriment, whatever form it takes, arises from the acceptance of the promise. Inequity, in an estoppel case, is found at a point later in time \u2013 upon the retraction of the promise.<br>&emsp;&emsp;Two cases add examples of courts&#8217; reasoning about inequity in the context of estoppel:"
    ],
    "CATEGORY": "Towards Promissory Estoppel &mdash; Characteristics of Promissory Estoppel &mdash; Reliance and Inequity",
    "CITATION": "Musumeci v Winadell Pty Ltd (1994) 34 NSWLR 723",
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Characteristics of Promissory Estoppel",
        "Reliance and Inequity"
    ],
    "RELATED": [
        "D&C Builders v Rees",
        "The Post Chaser",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "Collier v Wright",
        "Tool Metal v Tungsten Electric",
        "Waltons Stores v Maher",
        "Combe v Combe - Promissory Estoppel",
        "Re Selectmove Ltd - Promissory Estoppel",
        "Hirachand Punamchand v Temple",
        "Foakes v Beer",
        "Hartley v Ponsonby",
        "Hughes v Metropolitan Railway Co"
    ],
    "NUMBER": "124",
    "TYPE": "Case",
    "NAME": "Musumeci v Winadell Pty Ltd",
    "FLAGS": [
        "Denning"
    ]
},
{
    "YEAR": "1966",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs, a two-man building firm, did work for Mr and Mrs Rees. When the time came for settlement of the account, the plaintiffs were owed \u00a3483. They were in serious financial difficulty, as the defendants knew. Mrs Rees offered \u00a3300 in full and final settlement, making it clear that she would pay not a penny more, and that the alternative to acceptance on her terms was nothing. The plaintiffs accepted the sum offered since their circumstances gave them no realistic choice. They later brought an action for the balance. The Court of Appeal held that they succeeded. The majority of the court simply applied <i>Foakes v Beer</i>; on the rule in <i>Pinnel&#8217;s Case</i> there was no consideration for the plaintiffs&#8217; promise to Mrs Rees. Lord <span class=\"bd\">Denning MR</span> treated the case as one of promissory estoppel, but ruled that the doctrine only applied when necessary to prevent inequity. Since the plaintiffs&#8217; promise had been extracted from them by pressure, there was no inequity in allowing them to resile from it and sue for the remainder as the common law allowed them to do.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;D &amp; C Builders</i>, seen through the eyes of Lord Denning, offers a helpful insight into the way in which the <i>High Trees</i> principle can co-exist (just) with <i>Foakes v Beer</i>. <i>Foakes v Beer</i> is good law, as it must be until set aside by the House of Lords itself. However, it yields to the requirements of equity when these dictate a different result."
    ],
    "CATEGORY": "Towards Promissory Estoppel &mdash; Characteristics of Promissory Estoppel &mdash; Reliance and Inequity",
    "CITATION": "D &amp; C Builders Ltd v Rees [1966] 2 QB 617",
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Characteristics of Promissory Estoppel",
        "Reliance and Inequity"
    ],
    "RELATED": [
        "Musumeci v Winadell Pty Ltd",
        "Collier v Wright",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "The Post Chaser",
        "Combe v Combe - Promissory Estoppel",
        "Waltons Stores v Maher",
        "Tool Metal v Tungsten Electric",
        "Pinnel's Case",
        "Hughes v Metropolitan Railway Co",
        "Foakes v Beer",
        "Birmingham and District Land Co v LNWR",
        "Hirachand Punamchand v Temple"
    ],
    "NUMBER": "125",
    "TYPE": "Case",
    "NAME": "D&C Builders v Rees",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Characteristics of Promissory Estoppel",
        "Reliance and Inequity"
    ],
    "YEAR": "2007",
    "NUMBER": "126",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Pursuant to a county court order, the claimant was bound, together with his two partners, to repay a debt at the rate of \u00a3600 a month. The claimant paid \u00a3200 a month, initially from the partnership&#8217;s bank account and later from his own resources. The claimant&#8217;s two partners were already bankrupt, and the defendant served a statutory demand on him for the full amount of the debt jointly owed. In an application to set aside the statutory demand, the claimant argued (a) that he had agreed with the defendant to give up his status as a joint debtor and to take on the status of a sole debtor for \u00a3200 a month, and that this amounted to consideration for a promise that he owed only the lesser sum; and (b) that the defendant was estopped from denying that only the lesser sum was owed. The Court of Appeal held that the first submission failed, but that the second submission raised a \u201cgenuine triable issue\u201d sufficient to justify setting aside the statutory demand. In the judgment of <span class=\"bd\">Arden LJ</span>, the effect of promissory estoppel on the promise to accept the lesser payment was to extinguish the creditor&#8217;s right to the balance of the debt.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Arden LJ formulated the following proposition as an application of the dicta in <i>High Trees</i> to the present dispute: \u201cThe facts of this case demonstrate that, if (1) a debtor offers to pay part only of the amount he owes; (2) the creditor voluntarily accepts that offer, and (3) in reliance on the creditor&#8217;s acceptance the debtor pays that part of the amount he owes in full, the creditor will, by virtue of the doctrine of promissory estoppel, be bound to accept that sum in full and final satisfaction of the whole debt. For him to resile will of itself be inequitable. In addition, in these circumstances, the promissory estoppel has the effect of extinguishing the creditor&#8217;s right to the balance of the debt. This part of our law originated in the brilliant obiter dictum of <span class=\"bd\">Denning J</span> in the High Trees case [1947] KB 130\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Longmore LJ, in the same case, was doubtful whether it was inequitable for the defendant to resile from the promise to accept part payment, but accepted that the facts did at least raise a triable issue. Two linked points should be made about Arden LJ&#8217;s notion of automatic inequity. The first is to emphasise that it applies only to part payment of debt, and not to other settings in which promissory estoppel may come into play. The second is a call for caution. An orthodox understanding of promissory estoppel requires the presence or absence of inequity to be assessed in every case on the facts. It would be strange if one application of promissory estoppel differed from all the others in this respect. What is more, the case by case assessment of what equity may demand has already been proposed above as one of the means by which the <i>High Trees</i> doctrine can claim to co-exist with <i>Foakes v Beer</i> and <i>Pinnel&#8217;s Case</i>. If promissory estoppel <i>automatically</i> applies to cases of part payment of debt, then <i>Foakes v Beer</i> is left without any application. There is already the authority of <i>Re Selectmove</i> to suggest that this is not consistent with the doctrine of binding precedent."
    ],
    "NAME": "Collier v Wright",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Characteristics of Promissory Estoppel &mdash; Reliance and Inequity",
    "CITATION": "Collier v Wright (Holdings) Ltd [2007] EWCA Civ 1329",
    "RELATED": [
        "D&C Builders v Rees",
        "Musumeci v Winadell Pty Ltd",
        "The Post Chaser",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "Waltons Stores v Maher",
        "Tool Metal v Tungsten Electric",
        "Combe v Combe - Promissory Estoppel",
        "Foakes v Beer",
        "Stilk v Myrick",
        "Hirachand Punamchand v Temple",
        "Williams v Roffey",
        "Birmingham and District Land Co v LNWR"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Characteristics of Promissory Estoppel",
        "Effect of Promissory Estoppel"
    ],
    "NUMBER": "127",
    "TYPE": "Concept",
    "NAME": "Effect of Promissory Estoppel",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Characteristics of Promissory Estoppel &mdash; Effect of Promissory Estoppel",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Effect of Promissory Estoppel</span></span><br>&emsp;&emsp;The actual decision in <i>High Trees</i> deprived the plaintiffs of nothing. The arrears of rent which were in fact owing were not the subject of the claim, and therefore Denning J&#8217;s assertion that they could not be recovered was merely obiter. In the next case, however, the conclusion that contractually due payments may be irrecoverable as a result of promissory estoppel can be taken to have the backing of the House of Lords."
    ],
    "RELATED": [
        "Characteristics of Promissory Estoppel",
        "Part Payment of a Debt as Consideration",
        "Towards Promissory Estoppel - Introduction",
        "Rebuttal of Presumption",
        "Materiality and reliance",
        "Mistake - Introduction",
        "Misrepresentation (2) - Introduction",
        "The construction of exemption clauses",
        "Atiyah's Understanding of Consideration",
        "Artificially limiting the matrix of fact",
        "Development of Modern Interpretation",
        "Enrichment by subtraction"
    ],
    "FLAGS": [
        "Arden",
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Characteristics of Promissory Estoppel",
        "Effect of Promissory Estoppel"
    ],
    "YEAR": "1955",
    "NUMBER": "128",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;By a contract between the plaintiff (TMMC) and the defendant (TECO), TECO was permitted to deal in alloys subject to TMMC patents subject to a duty to make \u201ccompensation\u201d payments to TMMC if more than a certain quota were sold in any month. In 1942 TECO stopped making the payments, and TMMC agreed that they would not claim for them pending negotiation of a new contract. The negotiations failed, and in 1946 TMMC counterclaimed for the payments in an action brought by TECO. The counterclaim was successfully resisted by promissory estoppel, and by the Court of Appeal&#8217;s finding that rights to the payments could only be revived by the giving of notice. The compensation payments withheld were therefore irrecoverable. In 1950 TMMC brought a fresh action claiming payments due since 1947. This claim succeeded in the House of Lords, which held that notice reviving the right to the payments had been given by the making of the counterclaim in the earlier action. The House of Lords decision contains no criticism of the Court of Appeal judgment in the earlier action which deprived TMMC of its accrued rights to payment.",
        "<span class=\"ud\"><span class=\"bd\">Detail </span></span><br>&emsp;&emsp;In the House of Lords, Lord Tucker helpfully gave guidance as to when notice would and would not be required in equity before a promise might be terminated and future contractual rights revived:<br>&emsp;&emsp;\u201cIt has been said more than once that every case involving the application of this equitable doctrine [in <i>Hughes v Metropolitan Railway</i>] must depend on its own particular circumstances. It is, of course, clear ... that there are some cases where the period of suspension clearly terminates on the happening of a certain event or the cessation of a previously existing state of affairs or on the lapse of a reasonable period thereafter. In such cases no intimation or notice of any kind may be necessary. But in other cases where there is nothing to fix the end of the period which may be dependent upon the will of the person who has given or made the concession, equity will no doubt require some notice or intimation together with a reasonable period for readjustment before the grantor is allowed to enforce his strict rights. No authority has been cited which binds your Lordships to hold that in all such cases the notice must take any particular form or specify a date for the termination of the suspensory period. This is not surprising having regard to the infinite variety of circumstances which may give rise to this principle which was stated in broad terms and must now be regarded as of general application. It should, I think, be applied with great caution to purely creditor and debtor relationships which involve no question of forfeiture or cancellation, and it would be unfortunate if the law were to introduce into this field technical requirements with regard to notice and the like which might tend to penalise or discourage the making of reasonable concessions\u201d.<br>&emsp;&emsp;One further potential consequence of promissory estoppel which has not been mentioned so far relates to the situation in which notice of a resumption of rights is given, but the promisee has so altered his position in reliance on the promise as to be unable to resume the obligations of the contract. There is only one solution. If it would be inequitable to allow the resumption of rights in all the circumstances, then equity will extinguish them permanently.",
        "This is stated by Lord Hodson in <span class=\"bd\">Ajayi (EA) v Briscoe</span><br>&emsp;&emsp;\u201cTheir Lordships are of opinion that the principle of law as defined by Bowen LJ [in the <i>Birmingham</i> case] has been confirmed by the House of Lords in the case of <i>Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd</i> where the authorities were reviewed and no encouragement was given to the view that the principle was capable of extension so as to create rights in the promisee for which he had given no consideration. The principle, which has been described as quasi-estoppel and perhaps more aptly as promissory estoppel, is that when one party to a contract in the absence of fresh consideration agrees not to enforce his rights an equity will be raised in favour of the other party. The equity is, however, subject to the qualifications (1) that the other party has altered his position, (2) that the promisor can resile from his promise on giving reasonable notice, which need not be a formal notice, giving the promisee reasonable opportunity of resuming his position, (3) the promise only becomes final and irrevocable if the promisee cannot resume his position\u201d.<br>&emsp;&emsp;Promissory estoppel is an inherently defensive device. It gives effect to a promise unsupported by consideration in the sense that it allows that promise to be set up by its recipient as a defence to a claim that he has not performed in accordance with a contract. This is all is does. Certain conclusions logically follow. The most obvious is that promissory estoppel cannot be used as a cause of action, permitting the promisee to sue for breach of a promise. That can only be done if consideration has been given for the promise (or if it is made under seal, in a deed). A further conclusion, very closely related to the first, is that promissory estoppel can only operate within the context of a pre-existing contract. That, at least, remains the position in this jurisdiction."
    ],
    "NAME": "Tool Metal v Tungsten Electric",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Characteristics of Promissory Estoppel &mdash; Effect of Promissory Estoppel",
    "CITATION": "Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd [1955] 2 All ER 657",
    "RELATED": [
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "The Post Chaser",
        "Musumeci v Winadell Pty Ltd",
        "Waltons Stores v Maher",
        "D&C Builders v Rees",
        "Combe v Combe - Promissory Estoppel",
        "Collier v Wright",
        "Central London Property Trust v High Trees House",
        "Birmingham and District Land Co v LNWR",
        "Hartley v Ponsonby",
        "Foakes v Beer",
        "Hughes v Metropolitan Railway Co"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1951",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case has already been cited in the preceding lecture, but the facts are given again here for ease of reference.<br>&emsp;&emsp;At the time of their divorce, a husband promised his wife that he would make annual maintenance payments to her. He never did so. She had a right to apply to the Divorce Court for an order for maintenance but did not (in fact her income was larger than that of her husband). She sued for arrears of payment, arguing (inter alia) that she had given consideration for her husband&#8217;s promise to pay by promising not to apply to the court for a maintenance order. The judge at first instance (Byrne J) held that there was no consideration, but that the principle of promissory estoppel applied; the husband&#8217;s promise was intended to be acted upon and was in fact acted upon. The Court of Appeal held that this was not a case of promissory estoppel. Lord <span class=\"bd\">Denning</span> candidly observed that much as he was inclined to favour the principle stated in <i>High Trees</i>, it was important that it should not be stretched too far, lest it be endangered. It might be part of a cause of action, but it could not stand as a cause of action alone. Birkett LJ adopted the expression of counsel for the husband in these proceedings; promissory estoppel was \u201ca shield, and not a sword\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The notion that promissory estoppel can be deployed as part of a cause of action, but not as a cause of action itself, may need some explanation. What is envisaged is that the claimant may base an action on some accepted cause, such as breach of contract, and defeat the other side&#8217;s defence to it, or their counterclaim, by pleading a promissory estoppel. The <i>Tool Metal </i>case (above) in the Court of Appeal is an example of this.<br>&emsp;&emsp;In certain other common law jurisdictions (notably the United States) promissory estoppel has outgrown this limitation. The best-known example is the following case, decided by the High Court of Australia. It is principally of academic interest, since English law on this point appears to be settled."
    ],
    "CATEGORY": "Towards Promissory Estoppel &mdash; Characteristics of Promissory Estoppel &mdash; Limit on Use of Promissory Estoppel",
    "CITATION": "Combe v Combe [1951] 2 KB 215",
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Characteristics of Promissory Estoppel",
        "Limit on Use of Promissory Estoppel"
    ],
    "RELATED": [
        "Waltons Stores v Maher",
        "The Post Chaser",
        "Tool Metal v Tungsten Electric",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "Collier v Wright",
        "D&C Builders v Rees",
        "Musumeci v Winadell Pty Ltd",
        "Re Selectmove Ltd - Promissory Estoppel",
        "Hirachand Punamchand v Temple",
        "Hartley v Ponsonby",
        "Pinnel's Case",
        "Williams v Roffey"
    ],
    "NUMBER": "129",
    "TYPE": "Case",
    "NAME": "Combe v Combe - Promissory Estoppel",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Towards Promissory Estoppel",
        "Characteristics of Promissory Estoppel",
        "Limit on Use of Promissory Estoppel"
    ],
    "YEAR": "1988",
    "NUMBER": "130",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Maher owned a building and had been negotiating with Waltons for a deal whereby Maher would demolish the building, build a new one, and lease it to Waltons. Maher signed his part of the proposed lease, sent it to Waltons for exchange to take place, and began to demolish the building. Meanwhile, Waltons had second thoughts about the whole deal. They nevertheless waited until 40% of the demolition and construction work had been done, and then informed Maher that they were not going ahead. Maher sought a declaration, arguing that Waltons were estopped from breaking an implied promise to complete the lease agreement. The court held that this was correct. The conduct of Waltons amounted to a clear inducement to Maher to suffer detriment by acting on an assumption which Waltons knew to be incorrect, and as such, it was unconscionable. Waltons would be estopped from retreating from its implied promise to complete the contract. Alternatively (and still more radically) the court would apply estoppel to prevent Waltons from denying that a contract had come into existence.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Brennan J in the above case suggests that \u201c\u2026there is a logical difficulty in limiting the principle [of promissory estoppel] so that it applies only to promises to suspend or extinguish existing rights. If a promise by A not to enforce an existing right against B is to confer an equitable right on B to compel fulfilment of the promise, why should B be denied the same protection in similar circumstances if the promise is intended to create in B a new legal right against A? There is no logical distinction to be drawn between a change in legal relationships effected by a promise which extinguishes a right and a change in legal relationships effected by a promise which creates one. Why should an equity of the kind to which Combe v Combe refers be regarded as a shield but not a sword?\u201d</span><br>&emsp;&emsp;<span class=\"it\">Brennan J is right, but there is a way of explaining why estoppel might normally be only a defence while in exceptional circumstances (though not yet in England) it might be used as an attack. Promissory estoppel, as an equitable doctrine, could be said to concern itself not only with the protection of B, the promise, but in a proper case also with the behaviour of A, and indeed the conscience of A. That follows from the origins of equity, and the facts of the present case demand this additional perspective; the behaviour of Waltons was unconscionable. It would not be an unreasonable state of affairs if equity normally afforded only a defence to protect B, but exceptionally went further to give B a cause of action to meet the additional element of A&#8217;s unconscionable conduct. </span>"
    ],
    "NAME": "Waltons Stores v Maher",
    "CATEGORY": "Towards Promissory Estoppel &mdash; Characteristics of Promissory Estoppel &mdash; Limit on Use of Promissory Estoppel",
    "CITATION": "Waltons Stores (Interstate) Ltd v Maher (1988) 76 ALR 513",
    "RELATED": [
        "Combe v Combe - Promissory Estoppel",
        "Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "The Post Chaser",
        "Tool Metal v Tungsten Electric",
        "Collier v Wright",
        "D&C Builders v Rees",
        "Musumeci v Winadell Pty Ltd",
        "Williams v Roffey",
        "Stilk v Myrick",
        "Re Selectmove Ltd - Promissory Estoppel",
        "Pinnel's Case",
        "Central London Property Trust v High Trees House"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Intention to Create Legal Relations"
    ],
    "NUMBER": "131",
    "TYPE": "Concept",
    "NAME": "Intention to Create Legal Relations - Introduction",
    "CATEGORY": "Intention to Create Legal Relations",
    "RELATED": [
        "Commercial Agreements",
        "Rebuttal of Presumption",
        "Intention to Create Legal Relations - Conclusion",
        "Implication of Terms - Introduction",
        "The rule in Hadley v Baxendale",
        "2. Terms which supplement the contract (warranties etc)",
        "Consideration Distinguished From Conditional Gifts",
        "The special cases",
        "Using the Unfair Contract Terms Act 1977",
        "Exclusion and limitation clauses",
        "Mistake - Introduction",
        "Going beyond \u201cmistakes\u201d in the contract"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;A simple explanation of the doctrine of intention to create legal relations can be given very briefly. As a matter of principle the enforceability of a contract depends not only on the facts of agreement and consideration, but also on the parties&#8217; intention to create legal relations. This intention is normally presumed to be absent from agreements made in the domestic and social spheres. It is strongly presumed to be present in the making of commercial agreements. However, each of these presumptions can be rebutted on the evidence.<br>&emsp;&emsp;As consideration came to appear to nineteenth and early twentieth century lawyers to be a body of definable rules (as opposed to a judicial discretion to enforce some contracts but not others), it was natural that a few cases should arise in which an application of those rules suggested enforceability while legal instinct suggested otherwise. The doctrine of intention to create legal relations can be understood as a means of giving a principled and limited basis to the use of discretion once it could no longer so easily be exercised under cover of finding or not finding \u201cconsideration\u201d.<br>&emsp;&emsp;Whether the doctrine necessarily means what its title suggests \u2013 that the parties should have meant their agreement to be legally enforceable \u2013 is open to doubt. The time when the doctrine first appears in English law is also the age of the ascendancy of freedom of contract, when any action of a court upon a contract tended to be explained in terms of what the parties could be taken to have intended when they made their agreement. The reference to \u201cintention\u201d reflects that preoccupation. Actual decisions, however, tend to be driven by a broader range of considerations than the parties&#8217; intentions. In fact it would be strange if the parties&#8217; actual intentions were determinative, given that the law does not usually concern itself with subjective intention. This perception is reinforced by a speech in the House of Lords in the following case."
    ]
},
{
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Intention to Create Legal Relations"
    ],
    "YEAR": "1972",
    "NUMBER": "132",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;An accident occurred while men were sharing a car to work; the deceased had been the passenger, and had been carried for payment. The driver was not insured for the purpose, and a claim was brought on behalf of the deceased against the Motor Insurers&#8217; Bureau. The question which determined the Board&#8217;s liability to pay was whether the vehicle was being used to carry passengers for reward. Although on the evidence the payment terms had been flexible, the majority of the House of Lords found that the arrangement went beyond a matter of social kindness even if it was not strictly contractual, and was sufficient to render the Board liable. Lord Cross, differing from the majority, held that a contract was necessary, and that it could be found at least in relation to completed journeys.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Cross explained his view as follows: \u201cI think that the judge was wrong in holding that the facts which he found warranted the inference that there were no legally binding agreements between Mr Quirk and any of his passengers. It is not necessary in order that a legally binding contract should arise that the parties should direct their minds to the question and decide in favour of the creation of a legally binding relationship. If I get into a taxi and ask the driver to drive me to Victoria Station it is extremely unlikely that either of us directs his mind to the question whether we are entering into a contract. We enter into a contract not because we form any intention to enter into one but because if our minds were directed to the point we should as reasonable people both agree that we were in fact entering into one. When one passes from the field of transactions of an obviously business character between strangers to arrangements between friends or acquaintances for the payment by the passenger of a contribution towards expenses the fact that the arrangement is not made purely as a matter of business and that if the anticipated payment is not made it would probably never enter into the head of the driver to sue for it disposes one to say that there is no contract, but in fact the answer to the question \u201ccontract\u201d or \u201cno contract\u201d does not depend on the likelihood of an action being brought to enforce it in case of default\u201d.<br>&emsp;&emsp;This being so, the question is upon what the finding of intention to create legal relations in fact depends. The dominant consideration in the leading case on the subject, <i>Balfour v Balfour</i>, seems to be the relationship between the parties. The proposition to be taken from it is that agreements between people in a domestic relationship are presumed not to be binding."
    ],
    "NAME": "Albert v Motor Insurers' Bureau",
    "CATEGORY": "Intention to Create Legal Relations &mdash; Intention to Create Legal Relations",
    "CITATION": "Albert v Motor Insurers&#8217; Bureau [1972] AC 301",
    "RELATED": [
        "Balfour v Balfour",
        "Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "Edwards v Skyways",
        "Parker v Clark",
        "Merritt v Merritt",
        "Rose and Frank Co v Crompton and Brothers",
        "Pettitt v Pettitt",
        "Edmonds v Lawson",
        "Jones v Padavatton",
        "Simpkins v Pays",
        "Dickinson v Dodds",
        "Felthouse v Bindley"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1919",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant and plaintiff were husband and wife. In 1916 the husband went to Ceylon, but the wife, on the advice of her doctor, stayed in England. She alleged that he made an agreement at this time to pay her \u00a330 a month until she joined him in Ceylon. They later decided to live separately. The wife sued for the payments. The Court of Appeal held that there was no contract on which she could sue. It was not reasonable to maintain that the husband had made a binding promise which was to regulate his allowance to her whatever his or her circumstances. Furthermore, if this were a contract, then the same could be said of many promises between husband and wife which were manifestly not meant to be nor were suitable to be litigated in court.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The judgments in the Court of Appeal all concur in refusing to uphold the Balfours&#8217; arrangement as a contract, but the reasoning is various. Warrington LJ denied that Mrs Balfour made any response to her husband&#8217;s promise which would permit the Court to see the arrangement as a bargain. Duke LJ was doubtful whether a bare exchange of promises, when made between husband and wife, amounted to an enforceable contract. The best-known judgment, however, is that of <span class=\"bd\">Atkin LJ</span>, who most specifically put his decision on the ground that the arrangement was simply outside the scope of contract law:<br>&emsp;&emsp;\u201c...it is necessary to remember that there are agreements between parties which do not result in contracts within the meaning of that term in our law. The ordinary example is where two parties agree to take a walk together, or where there is an offer and an acceptance of hospitality. Nobody would suggest in ordinary circumstances that those agreements result in what we know as a contract, and one of the most usual forms of agreement which does not constitute a contract appears to me to be the arrangements which are made between husband and wife. It is quite common, and it is the natural and inevitable result of the relationship between husband and wife, that the two spouses should make arrangements between themselves \u2013 agreements such as are in dispute in this action \u2013 agreements for allowances, by which the husband agrees that he will pay to his wife a certain sum of money, per week, or per month, or per year, to cover either her own expenses or the necessary expenses of the household and of the children of the marriage, and in which the wife promises either expressly or impliedly to apply the allowance of the purpose for which it is given. To my mind those agreements, or many of them, do not result in contracts at all, and they do not result in contracts even though there may be what as between other parties would constitute consideration for the agreement. The consideration, as we know, may consist either in some forbearance, detriment, loss or responsibility given, suffered or undertaken by the other. That is a well-known definition, and it constantly happens, I think, that such arrangements made between husband and wife are arrangements in which there are mutual promises, or in which there is consideration in form within the definition that I have mentioned. Nevertheless, they are not contracts, and they are not contracts because the parties did not intend that they should be attended by legal consequences. To my mind it would be of the worst possible example to hold that agreements such as this resulted in legal obligations which could be enforced in the courts....All I can say is that the small courts of this country would have to be multiplied one hundredfold if these arrangements were held to result in legal obligations. They are not sued upon, not because the parties are reluctant to enforce their legal rights when the agreement is broken, but because the parties, in the inception of the agreement, never intended that they should be sued upon. Agreements such as these are outside the realm of contracts altogether. The common law does not regulate the form of agreements between spouses. The consideration that really obtains for them is that natural love and affection which counts for so little in these cold courts. The terms may be repudiated, varied or renewed as performance proceeds or as disagreements develop, and the principles of the common law as to exoneration and discharge and accord and satisfaction are such as find no place in the domestic code\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;In his book <i>Contract Theory</i> Stephen Smith considers how it is to be explained on a principled level that a domestic agreement such as that of Mr and Mrs Balfour is presumed not to be enforceable:<br>&emsp;&emsp;\u201cThe most compelling justification, I suggest, is that the special value associated with such agreements would be diminished if they were legally enforceable. Let me explain. Domestic agreements are different from ordinary commercial agreements. Specifically, they are not bargains in the ordinary sense of the term; the parties do not enter them to gain personal advantage. Rather, domestic agreements are made in order to promote the parties&#8217; <i>shared</i> interests. This shared interest lies both in the subject matter of the agreement (children, housework, etc.) and in the goal of strengthening the relationship itself. Domestic agreements are therefore both expressive of, and a constitutive feature of, the parties&#8217; relationship. Making (and performing) such agreements is an integral part of what it means to be in a relationship, and part of the reason they are valuable.<br>&emsp;&emsp;The significance of this for the law is that legally enforcing domestic agreements will arguably diminish this aspect of their value....To the extent that the law provides an external reason, grounded in self-interest, for complying with the terms of a domestic agreement, such agreements may come to be viewed in a different way. It will become less clear that they are performed because this is part of what the relationship entails as opposed to reasons of self-interest. The argument concludes that to ensure that the character \u2013 and thus the special value \u2013 of domestic agreements remains intact, the law should normally refuse to give them legal backing\u201d.<br>&emsp;&emsp;Where the relationship between the parties has broken down, this reasoning obviously has no application, as the next case shows."
    ],
    "CATEGORY": "Intention to Create Legal Relations &mdash; Domestic and Social Agreements",
    "CITATION": "Balfour v Balfour [1919] 2 KB 571",
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Domestic and Social Agreements"
    ],
    "RELATED": [
        "Merritt v Merritt",
        "Jones v Padavatton",
        "Pettitt v Pettitt",
        "Edmonds v Lawson",
        "Albert v Motor Insurers' Bureau",
        "Parker v Clark",
        "Rose and Frank Co v Crompton and Brothers",
        "Edwards v Skyways",
        "Simpkins v Pays",
        "Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "Doyle v Olby (Ironmngers) Ltd",
        "Shuey v United States"
    ],
    "NUMBER": "133",
    "TYPE": "Case",
    "NAME": "Balfour v Balfour",
    "FLAGS": [
        "Atkin"
    ]
},
{
    "YEAR": "1970",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A husband promised his wife, after the couple had separated, that he would pay her \u00a340 a month provided that she would pay mortgage instalments on their house. He also promised that he would convey the house to her once the mortgage was fully paid off. He broke the second of these promises, and the wife successfully obtained a declaration that she was the sole beneficial owner of the property. The husband argued on appeal that there was no intention to create legal relations in an agreement made between spouses. The Court of Appeal held that <i>Balfour v Balfour</i> had no application to the present case, since there the parties had been living in amity at the time the agreement was made.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord <span class=\"bd\">Denning MR</span> stated that \u201cthe first point taken by counsel for the husband was that the agreement was not intended to create legal relations. It was, he says, a family arrangement such as was considered by the court in <i>Balfour v Balfour</i> and in <i>Jones v Padavatton </i>[below]. So the wife could not sue on it. I do not think that those cases have any application here. The parties there were living together in amity. In such cases their domestic arrangements are ordinarily not intended to create legal relations. It is altogether different when the parties are not living in amity but are separated, or about to separate. They then bargain keenly. They do not rely on honourable understandings. They want everything cut and dried. It may safely be presumed that they intend to create legal relations...\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;It may be wondered whether <i>Merritt v Merritt</i> is really a case in which the presumption against finding legal relations in the domestic context was rebutted. In reality the presumption did not apply, since the situation was not domestic; the parties were already at arm&#8217;s length. This understanding is already suggested by the last sentence in the passage from Lord Denning&#8217;s judgment quoted above; there is a positive presumption of legal relations here, not the rebuttal of the contrary presumption.<br>&emsp;&emsp;The inapplicability of the doctrine of <i>Balfour v Balfour</i> to cases of marital breakdown is not the only limit on its operation. There is a distinction to be made between executory and executed arrangements between spouses, as the next case shows."
    ],
    "CATEGORY": "Intention to Create Legal Relations &mdash; Domestic and Social Agreements",
    "CITATION": "Merritt v Merritt [1970] 1 WLR 1211",
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Domestic and Social Agreements"
    ],
    "RELATED": [
        "Pettitt v Pettitt",
        "Jones v Padavatton",
        "Balfour v Balfour",
        "Parker v Clark",
        "Albert v Motor Insurers' Bureau",
        "Simpkins v Pays",
        "Rose and Frank Co v Crompton and Brothers",
        "Edmonds v Lawson",
        "Edwards v Skyways",
        "Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "Tinn v Hoffman & Co",
        "Harvey v Facey"
    ],
    "NUMBER": "134",
    "TYPE": "Case",
    "NAME": "Merritt v Merritt",
    "FLAGS": [
        "Denning"
    ]
},
{
    "YEAR": "1970",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A husband claimed a beneficial interest in the matrimonial home, which was in his wife&#8217;s ownership. He asserted that it had arisen from work carried out by him in the form of gardening and redecorating. The House of Lords denied his claim, requiring an express agreement to underpin a change in the beneficial ownership of property. Lord <span class=\"bd\">Diplock</span>, in the course of a dissenting speech, observed that the principle in <i>Balfour v Balfour</i> did not deprive arrangements between spouses of all legal effect.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Diplock: \u201cWhere the acquisition or improvement is made as a result of contributions in money or money&#8217;s worth by both spouses acting in concert the proprietary interests in the family asset resulting from their respective contributions depend upon their common intention as to what those interests should be.<br>&emsp;&emsp;I have used the neutral expression \u201cacting in concert\u201d because many of the ordinary domestic arrangements between man and wife do not possess the legal characteristics of a contract. So long as they are executory they do not give rise to any chose in action, for neither party intended that non-performance of their mutual promises should be the subject of sanctions in any court (see <i>Balfour v Balfour</i>). But this is relevant to non-performance only. If spouses do perform their mutual promises the fact that they could not have been compelled to do so while the promises were executory cannot deprive the acts done by them of all legal consequences upon proprietary rights; for these are within the field of the law of property rather than the law of contract. It would, in my view, be erroneous to extend the presumption accepted in <i>Balfour v Balfour</i> that mutual promises between man and wife in relation to their domestic arrangements are prima facie not intended by either to be legally enforceable to a presumption of common intention of both spouses that <i>no</i> legal consequences should flow from acts done by them in performance of mutual promises with respect to the acquisition, improvement or addition to real or personal property \u2013 for this would be to intend what is impossible in law\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Although Lord Diplock was in a minority in this case as far as the means by which a beneficial interest in the marital home might arise, his observation that the presumption against legal relations varies in force according to whether the arrangement is executory or executed cannot be controversial. It has already been seen that the same distinction has a major impact on the readiness of courts to uphold vague agreements. In the context again of legal relations, Stephen Hedley makes the point that much will depend on the reason for which the enforceability of an agreement is being considered (\u201cKeeping Contract in its Place\u201d (1985)): \u201cTake a variation of the classic academic conundrum in this area: Jack and Jill agree to go out to dinner and to split the bill. By asking the academic question \u201cIs there a contract?\u201d we are immediately in the realm of the abstract. If, however, we approach the matter from a practical standpoint, we must know what claim is being made. If Jill is suing Jack because Jack has refused to go to dinner at all, the arguments against liability are compelling. Surely, Jack cannot be taken as giving an outright commitment to go to dinner \u2013 what if he is ill, or they cannot agree on a suitable restaurant? But imagine that the two already had their dinner, for convenience Jill pays the bill in full, but Jack subsequently refuses to pay his half. The perspective changes. It is no longer so obvious that the contract cannot be enforced.... Jack&#8217;s contention that there was no intention to form a binding contract is likely to receive little sympathy. Blanket statements in cases that there is no \u201cintention to contract\u201d on the facts before the court should therefore be treated with suspicion; it is vital to note whether this was being said in relation to an executed or an executory contract\u201d.<br>&emsp;&emsp;The broad principle that legal relations are presumed not to be intended in domestic settings naturally applies not only as between spouses or other cohabitees, but to other dealings between relatives, as the next case demonstrates."
    ],
    "CATEGORY": "Intention to Create Legal Relations &mdash; Domestic and Social Agreements",
    "CITATION": "Pettitt v Pettitt [1970] AC 777",
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Domestic and Social Agreements"
    ],
    "RELATED": [
        "Jones v Padavatton",
        "Merritt v Merritt",
        "Balfour v Balfour",
        "Edwards v Skyways",
        "Rose and Frank Co v Crompton and Brothers",
        "Edmonds v Lawson",
        "Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "Albert v Motor Insurers' Bureau",
        "Parker v Clark",
        "Simpkins v Pays",
        "Hyde v Wrench",
        "Gibson v Manchester City Council"
    ],
    "NUMBER": "135",
    "TYPE": "Case",
    "NAME": "Pettitt v Pettitt",
    "FLAGS": [
        "Diplock"
    ]
},
{
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Domestic and Social Agreements"
    ],
    "YEAR": "1969",
    "NUMBER": "136",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Mrs Jones agreed to provide a monthly allowance to her daughter. In return, the daughter was to leave her job in Washington to read for the English Bar with a view to practising in Trinidad. The daughter did so. Later, the agreement was altered, in that Mrs Jones bought a house for her daughter and allowed her to live there without paying rent and to support herself by taking in paying lodgers. After six years of studies, the daughter had still not managed to pass her Bar exams (perhaps largely because she had a young son to look after). Relations between the two broke down, and Mrs Jones sought a possession order. Her daughter resisted it on the ground that she had a contractual right to continue living in the house. The County Court judge held in favour of the daughter. The Court of Appeal allowed Mrs Jones&#8217;s appeal. In the view of two members of the court there had never been an enforceable contract since the situation was a domestic one. It was vaguely expressed, and intended to be flexible. It was therefore deemed binding in honour only. Salmon LJ considered that there had been a contract, but that it required the daughter to complete her studies (whether by being called to the Bar or by \u201cgiving up the unequal struggle against the examiners\u201d) within a reasonable time. This had not happened, and the agreement had therefore terminated.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This is an appropriate point at which to gather together the features in the cases above which lead to the presumption against legal relations in the domestic sphere being applied. They seem to be these: the intimate connection between the parties; the improbability that they intended legal consequences when they made their agreement; the superior claims of conscience and affection over legal enforceability to underwrite performance in the domestic sphere; and, as it may be, the fact that agreements may have been intended to be flexible, may have been vaguely expressed, may have involved comparatively trivial arrangements, and may be merely executory."
    ],
    "NAME": "Jones v Padavatton",
    "CATEGORY": "Intention to Create Legal Relations &mdash; Domestic and Social Agreements",
    "CITATION": "Jones v Padavatton [1969] 1 WLR 328",
    "RELATED": [
        "Balfour v Balfour",
        "Pettitt v Pettitt",
        "Merritt v Merritt",
        "Albert v Motor Insurers' Bureau",
        "Simpkins v Pays",
        "Parker v Clark",
        "Edmonds v Lawson",
        "Edwards v Skyways",
        "Rose and Frank Co v Crompton and Brothers",
        "Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "Ecay v Godfrey"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Rebuttal of Presumption"
    ],
    "NUMBER": "137",
    "TYPE": "Concept",
    "NAME": "Rebuttal of Presumption",
    "CATEGORY": "Intention to Create Legal Relations &mdash; Rebuttal of Presumption",
    "RELATED": [
        "Intention to Create Legal Relations - Conclusion",
        "Commercial Agreements",
        "Intention to Create Legal Relations - Introduction",
        "The Consumer Rights Act 2015",
        "Section 2(1)",
        "The intention with which the statement was made",
        "Common Mistake",
        "Anticipatory Breach",
        "Misrepresentation arising from silence and/or conduct",
        "Offer Distinguished From Invitation to Treat",
        "The Parol Evidence Rule",
        "Frustration - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Rebuttal of Presumption</span></span><br>&emsp;&emsp;To rebut the presumption against legal relations, it is enough that the agreement appears on the evidence to contrast with the characterisation given above even though it is made in a domestic setting. Relevant factors will therefore be the likelihood that the parties did mean it to be brought before a court if necessary; corroborative reasons for supposing that; indications that the agreement was meant as an enduring and not merely a makeshift allocations of rights and burdens; the formal and accurate drafting to enable that inference to be made; the serious nature of the agreement&#8217;s subject matter, and the fact that it was relied upon, perhaps at length or regularly, and perhaps to the marked detriment of one of the parties to it. Where some but not all of these factors are present, it may be difficult to predict with assurance which way a case may go."
    ]
},
{
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Rebuttal of Presumption"
    ],
    "YEAR": "1960",
    "NUMBER": "138",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs, a married couple, concluded an agreement with the defendants, an older couple to whom they were related and for whom they had already provided some care. The plaintiffs were to leave their own home and move in with the defendants, sharing household expenses. In return, the defendants promised to leave their house to the plaintiffs. In reliance on the agreement, the plaintiffs sold their home and lent part of the proceeds to their daughter to enable her to buy a flat. The relationship between the two couples deteriorated; the plaintiffs moved out and brought an action for damages against the defendants. The court held that it was unrealistic for the defendants to argue that the agreement had given rise to no legal relations. The factor leading to this conclusion was the drastic and irreversible character of the plaintiffs&#8217; reliance on the agreement. In the circumstances both sides must have envisaged that a legal remedy would be available if the agreement were breached.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">This result in this case makes good sense, but it is worth wondering about the detail of how it is reached. Is it permissible to take account of a putative breach of contract to find the intention to create legal relations made out? Earlier, in connection with the judgment of Erle CJ in Shadwell v Shadwell, it was suggested that consideration should not have been found in contemplation of the detriment to which the plaintiff might be subjected were the promised payments to be withheld (a breach of contract). Can the two analyses be distinguished?</span><br>&emsp;&emsp;<span class=\"it\">They can. Consideration must be found in the agreement itself, or in its performance. Detriment occasioned by a subsequent breach of contract is not consideration; quite apart from the fact that it comes too late in point of time, it cannot conceivably have been requested by the promisor. The intention to create legal relations must also be located within a defined period of time. Clearly, the attitudes of the parties once performance of the contract has begun are not relevant. The relevant intention, whatever the reason for inferring it, must exist at the time the agreement is made. However, it may be found in the parties&#8217; expectation as to the future, and specifically, as to the future performance or non-performance of the agreement. The horizon of contemplation can include the possibility of breach and the harm which would arise in consequence of it were the parties to find themselves without legal remedy. </span>"
    ],
    "NAME": "Parker v Clark",
    "CATEGORY": "Intention to Create Legal Relations &mdash; Rebuttal of Presumption",
    "CITATION": "Parker v Clark [1960] 1 WLR 286",
    "RELATED": [
        "Simpkins v Pays",
        "Rose and Frank Co v Crompton and Brothers",
        "Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "Edwards v Skyways",
        "Pettitt v Pettitt",
        "Merritt v Merritt",
        "Albert v Motor Insurers' Bureau",
        "Jones v Padavatton",
        "Balfour v Balfour",
        "Edmonds v Lawson",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Grogan v Robin Meredith Plant Hire"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1955",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant and her grand-daughter took part every week in a newspaper fashion competition. She was helped by her lodger, the plaintiff. The plaintiff filled out the competition entry form in the defendant&#8217;s name, filling in the individual predictions made by each of the three. The entry fee and the cost of postage were shared between the three. At length one of their entries (the grand-daughter&#8217;s) won the competition, and the defendant received the prize of \u00a3750. The defendant refused to pay the plaintiff the one-third share that she claimed. Sellers J held that the plaintiff succeeded. The true basis of the arrangement between the parties had been that they would go shares if any of them won.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The judgment of Sellers J in this case does not contain very much discussion of principle. The best account of the ratio of the case is normally taken to be this passage: \u201cI think there was a mutuality in the arrangement between the parties. It was not very formal, but certainly in effect it was agreed that every week the forecast should go in in the name of the defendant, and that if there was success, no matter who won, all should share equally. That seems to be the implication from or the interpretation of what was said, that this was in the nature of a very informal syndicate so that they should all get the benefit of success\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;As several commentators have observed, Sellers J&#8217;s reference to \u201cmutuality\u201d (clearly the key notion in his judgment) rather begs the question. It is difficult to analyse it other than in terms of consideration. The parties had struck a bargain. The problem is this; if that is enough to show that legal relations were intended, then consideration would seem to be all that is needed and the principle of intention to create legal relations obviously appears otiose.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\"><span class=\"bd\">McKendrick</span> suggests that \u201cthe reasons for the rebuttal of the presumption [against legal relations]are probably to be found in the fact that the parties had acted in reliance upon the agreement in relation to the sharing of the expenses of entering into the competition and the agreement was not one made in connection with the running of the household (had the dispute been about whose turn it was to do the ironing, the court may well have concluded that there was no intention to create legal relations)\u201d. </span><br>&emsp;&emsp;<span class=\"it\">With respect, this seems somewhat beside the point. The shared expense of entering the competition was a fairly trivial amount and, more importantly, Sellers J stated in terms that it was not a vital matter. In addition, it could be understood as part of the consideration moving between the parties in the same way that \u201cmutuality\u201d can be related to the giving of consideration (the exchange of promises to go shares). An agreement relating to the running of the household could be a matter of quite as much moment as participation in a newspaper competition which was unlikely to result in success. The factor probably driving Sellers J&#8217;s decision was the large sum of money at stake; was the law to allow the defendant to keep \u00a3500 when she had promised it to others?</span><br>&emsp;&emsp;<span class=\"it\">To find the legal justification for the decision, one should look again at \u201cmutuality\u201d. It does suggest an exchange of promises, but beyond that, it is quite an apt way of indicating the quality of a certain type of agreement. The parties are equally bound, for better or worse, whatever the future may hold. Mutuality can be understood as a proposition about the parties&#8217; relationship in time. No need for renegotiation or abandonment of the deal is anticipated. It does not need to have the flexibility that could reasonably be implied into an agreement about who is to do the ironing. It is meant to provide assurance, which is to say that it is meant to do the job of a contract.</span>"
    ],
    "CATEGORY": "Intention to Create Legal Relations &mdash; Rebuttal of Presumption",
    "CITATION": "Simpkins v Pays [1955] 1 WLR 975",
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Rebuttal of Presumption"
    ],
    "RELATED": [
        "Parker v Clark",
        "Rose and Frank Co v Crompton and Brothers",
        "Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "Edmonds v Lawson",
        "Merritt v Merritt",
        "Edwards v Skyways",
        "Pettitt v Pettitt",
        "Jones v Padavatton",
        "Balfour v Balfour",
        "Albert v Motor Insurers' Bureau",
        "Koufos v Czarnikow Ltd (The Heron II)",
        "Holwell Securities Ltd v Hughes"
    ],
    "NUMBER": "139",
    "TYPE": "Case",
    "NAME": "Simpkins v Pays",
    "FLAGS": [
        "McKendrick"
    ]
},
{
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Commercial Agreements"
    ],
    "NUMBER": "140",
    "TYPE": "Concept",
    "NAME": "Commercial Agreements",
    "CATEGORY": "Intention to Create Legal Relations &mdash; Commercial Agreements",
    "RELATED": [
        "Intention to Create Legal Relations - Introduction",
        "Rebuttal of Presumption",
        "Intention to Create Legal Relations - Conclusion",
        "Deferred Agreements",
        "Going beyond \u201cmistakes\u201d in the contract",
        "Further aspects of the remedial scheme",
        "Making the election to affirm or terminate",
        "Entire and severable obligations",
        "Anticipatory Breach",
        "Section 1: treating a contract term as a misrepresentation",
        "Beyond section 3",
        "Assumption of responsibility / advice to verify"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Commercial Agreements</span></span><br>&emsp;&emsp;In commercial agreements there is a strong presumption that the parties do intend to create legal relations."
    ]
},
{
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Commercial Agreements"
    ],
    "YEAR": "1964",
    "NUMBER": "141",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A company promised to make an \u201cex gratia\u201d payment to an employee (an aircraft pilot) who was accepting voluntary redundancy. The company got into financial difficulties and declined to pay, asserting that it was not legally bound to do so. The arguments in the company&#8217;s defence were that the agreement was too vague to be enforced, and that there was no intention to create legal relations. It was admitted that the employee had given consideration by electing to abandon certain pension rights in favour of the ex gratia payment. Megaw J held that it was for the company to bring evidence to show why the presumption that legal relations were intended should not apply, and that the onus of rebutting it was a heavy one. It was not enough to say that the payments were to be \u201cex gratia\u201d. That could mean several things \u2013 for example, that the company admitted no pre-existing liability to pay. It did not mean that the promise, when accepted, should have no binding effect in law."
    ],
    "NAME": "Edwards v Skyways",
    "CATEGORY": "Intention to Create Legal Relations &mdash; Commercial Agreements",
    "CITATION": "Edwards v Skyways [1964] 1 WLR 349",
    "RELATED": [
        "Edmonds v Lawson",
        "Simpkins v Pays",
        "Balfour v Balfour",
        "Albert v Motor Insurers' Bureau",
        "Pettitt v Pettitt",
        "Merritt v Merritt",
        "Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "Parker v Clark",
        "Rose and Frank Co v Crompton and Brothers",
        "Jones v Padavatton",
        "L J Korbetis v Transgrain Shipping BV",
        "Couchman v Hill"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "2000",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The claimant, a pupil barrister and former GDL student, sued the head of chambers and her two pupil masters at 23 Essex Street, claiming that she was entitled to be paid the minimum wage during the pupillage year. Her pupillage was otherwise unfunded. To succeed, she needed to bring herself within the provisions of the National Minimum Wage Act 1998, which required that she had a contract with the set of chambers, and that she was a \u201cworker\u201d. In answer to the first point, the defendants argued that there was no intention to create legal relations, and that no consideration moved from the claimant. The Court of Appeal dismissed those arguments, holding that the relationship between the claimant and the defendants was contractual. However, she was not a \u201cworker\u201d within the sense of the Act.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;In view of the subject-matter of this decision it seems justifiable to quote from the judgment of Lord <span class=\"bd\">Bingham</span> LCJ at some length:<br>&emsp;&emsp;\u201c21. Whether the parties intended to enter into legally binding relations is an issue to be determined objectively and not by enquiring into their respective states of mind. The context is all-important. From the defendants&#8217; point of view the written offer of pupillage to the claimant came at the end of a long, time-consuming and expensive process. It was also a process of great long-term consequence to them since, although barristers in practice are independent self-employed practitioners, it is of benefit to all, at every level, that chambers as a whole consist of talented and hardworking members, and the defendants, like other chambers, recruit most of their tenants from the pool of those recruited as pupils. So, quite apart from considerations of professional duty and the public interest, it is of direct practical consequence to chambers to attract and select the ablest pupils. That is why, in part at least, many chambers including the defendants&#8217; fund pupillages for a proportion of their pupils, sometimes very generously. From the pupil&#8217;s point of view, obtaining a pupillage in a flourishing set of chambers practising in the pupil&#8217;s chosen field is a step with potentially immense consequences, both professional and financial, in both the short and the long term. Obtaining a pupillage does not of course guarantee a tenancy, but it guarantees the pupil an opportunity to show his quality and thereby seek a tenancy. When, as the culmination of a long process of application, short-listing and interview an offer is formally made and formally accepted it would in our judgment be surprising to infer that the parties intended to bind themselves in honour only.<br>&emsp;&emsp;22. In arguing that there was no intent to create legal relations Mr Goudie QC for the defendants relied on the educational nature of the arrangement, suggesting that it lacked the characteristics of a commercial contract and involved no payment by the pupil. It was a voluntary and gratuitous offer by the chambers to provide education and training. He also relied on the doubt which, he said, existed as to who entered into the arrangement on the chambers&#8217; side. There was, he suggested, no need for a contract because the relationship was already regulated by the documents to which reference has been made above, and if chambers should resile from an undertaking to provide pupillage the pupil would have ample redress through the Bar disciplinary machinery, which would in practice preclude such dishonourable behaviour. The absence of written terms and conditions, he argued, pointed strongly against any intention to contract.<br>&emsp;&emsp;23. Neither singularly nor cumulatively do we find these points in any way persuasive on the question of intent. It is true that the content of the arrangement was educational, but as already pointed out the practical implications of the arrangement for both parties were potentially very significant and, subject to the point on consideration discussed below, there is no reason why a binding contract cannot be made for the provision of education and training. Whereas once the arrangement of pupillage was a one-to-one engagement between pupil and pupil-master, that has ceased to be so, as evidenced by the responsibility imposed on and accepted by heads of chambers, by the procedure in practice adopted by chambers and by the management of pupillage as a chambers responsibility. The claimant was not interviewed, nor was the offer of pupillage made, by either of those who became her successive pupil masters, and when the offer was made and accepted she did not know who they would be. The regulatory materials governing pupillage (only a small part of which we have quoted) were impliedly incorporated by reference into the arrangement made between the parties, and to that extent the terms of the arrangement were recorded in writing; but the functions and obligations of the parties were so clearly specified in these materials that any detailed negotiation of terms and conditions to be recorded in a written agreement between the parties was rendered unnecessary. It is of course unlikely that any chambers, certainly any reputable chambers, having made an offer of pupillage which has been accepted, would resile from that arrangement without very good reason, but the existence of a disciplinary sanction does not in our view point against the existence of a contract. To our mind this arrangement had all the characteristics of a binding contract. It makes no difference that, if the pupil defaulted, the chambers would be most unlikely to sue; the same is true if an employer engages a junior employee under an employment contract which is undoubtedly binding, and the employee fails to turn up on the appointed day\u201d."
    ],
    "CATEGORY": "Intention to Create Legal Relations &mdash; Commercial Agreements",
    "CITATION": "Edmonds v Lawson [2000] QB 501",
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Commercial Agreements"
    ],
    "RELATED": [
        "Edwards v Skyways",
        "Pettitt v Pettitt",
        "Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "Parker v Clark",
        "Albert v Motor Insurers' Bureau",
        "Balfour v Balfour",
        "Merritt v Merritt",
        "Jones v Padavatton",
        "Rose and Frank Co v Crompton and Brothers",
        "Simpkins v Pays",
        "Partridge v Crittenden",
        "Henderson v Merrett Syndicates"
    ],
    "NUMBER": "142",
    "TYPE": "Case",
    "NAME": "Edmonds v Lawson",
    "FLAGS": [
        "Bingham"
    ]
},
{
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Rebuttal of Presumption"
    ],
    "YEAR": "1923",
    "NUMBER": "143",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In 1913 two firms, an English and an American company, entered into an agency agreement whereby the American company was to sell the other company&#8217;s products in the USA for a period of years. The document contained the following clause, described as the \u201cHonourable Pledge Clause\u201d: \u201cThis arrangement is not entered into, nor is this memorandum written, as a formal or legal agreement, and shall not be subject to legal jurisdiction in the law courts either of the United States or England, but it is only a definite expression and record of the purpose and intention of the three parties concerned to which they honourably pledge themselves with the fullest confidence, based on past business with each other, that it will be carried through by each of the three parties with mutual loyalty and friendly co-operation\u201d. Some years later the defendant terminated the agreement without notice, and the plaintiff sued for breach of contract. The House of Lords held that the Clause was sufficient to prevent legal relations arising from the agreement of 1913, which was not contrary to public policy as an attempt to oust the jurisdiction of the courts. However, legal relations were created by the placing and acceptance of specific orders under the agreement from time to time.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;In the Court of Appeal, Scrutton LJ stated his understanding of the law as follows: \u201cIt is quite possible for parties to come to an agreement by accepting a proposal with the result that the agreement concluded does not give rise to legal relations. The reason of this is that the parties do not intend that their agreement shall give rise to legal relations. This intention may be implied from the subject-matter of the agreement, but it may also be expressed by the parties. In social and family relations such an intention is readily implied, while in business matters the opposite result would ordinarily follow. But I can see no reason why, even in business matters, the parties should not intend to rely on each other&#8217;s good faith and honour, and to exclude all idea of settling disputes by any outside intervention with the accompanying necessity of expressing themselves so precisely that outsiders may have no difficulty in understanding what they mean. If they clearly express such an intention I can see no reason in public policy why effect should not be given to their intention\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The decision in <i>Rose and Frank v Crompton</i> clearly gives the effect to the \u201cHonourable Pledge Clause\u201d which the parties meant it to have at the time it was drawn up. However, it also raises the question whether one party to a commercial agreement could escape being bound by careful drafting (avoiding the use of promissory words) when the other has no intention of going without legal remedies in the event of breach. The next case makes this a real possibility."
    ],
    "NAME": "Rose and Frank Co v Crompton and Brothers",
    "CATEGORY": "Intention to Create Legal Relations &mdash; Rebuttal of Presumption",
    "CITATION": "Rose and Frank Co v Crompton and Brothers [1923] 2 KB 261",
    "RELATED": [
        "Parker v Clark",
        "Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "Simpkins v Pays",
        "Edwards v Skyways",
        "Merritt v Merritt",
        "Balfour v Balfour",
        "Jones v Padavatton",
        "Edmonds v Lawson",
        "Pettitt v Pettitt",
        "Albert v Motor Insurers' Bureau",
        "May & Butcher v The King",
        "Thompson v London, Midland and Scottish Railway Co Ltd"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1989",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff merchant bank had made a loan of \u00a310 million to the defendants&#8217; subsidiary (\u201cMetals\u201d), and had sought security for it, ie. a guarantee. The defendants had refused to give a guarantee, but instead provided a \u201ccomfort letter\u201d, stating \u201cIt is our policy to ensure that the business of Metals is at all times in a position to meet its liabilities to you under the above arrangements\u201d. Metals went into liquidation, and the plaintiffs sought repayment of the loan from the defendants. The defendants denied any contractual liability. At first instance, Hirst J held that the comfort letter was \u201ccontractual in status\u201d, applying the presumption of legal relations recognised in <i>Edwards v Skyways</i>. The Court of Appeal reversed this decision, distinguishing <i>Edwards v Skyways</i> on the ground that it involved a promise, whereas this case did not. The defendants had stated what their policy was. They had not promised what it would be in the future.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Ralph Gibson LJ explained the court&#8217;s view in these terms: \u201cThe comfort letter was drafted in terms which ... do not express any contractual promise and which are consistent with being no more than a representation of fact. If they are treated as no more than a representation of fact, they are in that meaning consistent with the comfort letter containing no more than the assumption of moral responsibility by the defendants in respect of the debts of Metals. There is nothing in the evidence to show that, as a matter of commercial probability or common sense, the parties must have intended paragraph 3 to be a contractual promise, which is not expressly stated, rather than a mere representation of fact, which is so stated\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">In an Australian case (Banque Brussels Lambert SA v Australian National Industries Ltd (1989)) the decision above was bitterly criticised by Rogers CJ. He considered that Ralph Gibson LJ&#8217;s semantic exercise was \u201cinimical to the effective administration of justice in commercial disputes\u201d, and that this approach would render the courts irrelevant in the resolution of commercial disputes.</span><br>&emsp;&emsp;<span class=\"it\">It is easy to feel some sympathy for Rogers CJ&#8217;s view. Even a strictly semantic approach would seem to raise the question whether there is not some element of futurity in a statement of policy which covers \u201call times\u201d. Is this not as good as a promise, or does it mean that the policy can be changed overnight? The question, of course, is how the context requires the relevant clause to be read. <span class=\"bd\">McKendrick</span> provides a helpful insight: \u201cGiven the significance of the letter of comfort to the parties we can be certain that the lawyers fought hard over its precise wording. The letter bears the hallmarks of a carefully drawn document. It sets out the current policy of the parent company but refrains from making any commitment as regards the future\u201d. </span>"
    ],
    "CATEGORY": "Intention to Create Legal Relations &mdash; Rebuttal of Presumption",
    "CITATION": "Kleinwort Benson Ltd v Malaysia Mining Corporation [1989] 1 WLR 379",
    "CATEGORIES": [
        "Intention to Create Legal Relations",
        "Rebuttal of Presumption"
    ],
    "RELATED": [
        "Parker v Clark",
        "Simpkins v Pays",
        "Rose and Frank Co v Crompton and Brothers",
        "Albert v Motor Insurers' Bureau",
        "Edwards v Skyways",
        "Edmonds v Lawson",
        "Pettitt v Pettitt",
        "Balfour v Balfour",
        "Jones v Padavatton",
        "Merritt v Merritt",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "British Bank for Foreign Trade Ltd v Novinex Ltd"
    ],
    "NUMBER": "144",
    "TYPE": "Case",
    "NAME": "Kleinwort Benson Ltd v Malaysia Mining Corporation",
    "FLAGS": [
        "McKendrick"
    ]
},
{
    "CATEGORIES": [
        "Intention to Create Legal Relations"
    ],
    "NUMBER": "145",
    "TYPE": "Concept",
    "NAME": "Intention to Create Legal Relations - Conclusion",
    "CATEGORY": "Intention to Create Legal Relations",
    "RELATED": [
        "Intention to Create Legal Relations - Introduction",
        "Commercial Agreements",
        "Rebuttal of Presumption",
        "Offer Distinguished From Invitation to Treat",
        "Misrepresentation arising from silence and/or conduct",
        "Implication from presumed intention (\u201cterms implied in fact\u201d)",
        "Part Payment of a Debt as Consideration",
        "Consideration Distinguished From Conditional Gifts",
        "Other tests",
        "Doctrine of Implied Assumpsit",
        "The rationale for frustration",
        "A new basis for deciding questions of remoteness?"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Conclusion</span></span><br>&emsp;&emsp;It is often pointed out that the doctrine of intention to create legal relations serves no obvious purpose. If an offer, or an acceptance, is not meant seriously, then it is not an offer or an acceptance. To judge it by whether it evinces an intention to create legal relations is revisit an issue which is already largely resolved by more basic principles of contract formation. What is more, since the doctrine requires an assessment of the objective appearance of intention, rather than the subjective fact, it is draws very close to requiring the court to decide whether or not it is reasonable to support a contract. Viewed in that way, it hardly seems distinct from the doctrine of consideration.<br>&emsp;&emsp;At the same time there are calls for the ossified doctrine of consideration to be done away with in favour of the analysis of intention to create legal relations (see dicta in <i>Williams v Roffey</i> and <i>Chwee Kin Keong v Digilandmall.com Pte</i>, set out at the end of <span class=\"bd\">McKendrick</span>&#8216;s chapter on intention to create legal relations). Such calls tend to overlook the fact that the search for intention to create legal relations is not an enquiry into the subjective intentions of the parties, but a quest for reasons from which to infer the binding character of their agreement.<br>&emsp;&emsp;These approaches seems to suggest a single and inescapable analysis. The name by which it is to be known is a matter of secondary importance. In some cases it can most clearly be put in terms of offer and acceptance. In others the language of consideration will serve better, and in others, the best explanation of the court&#8217;s assessment may be given in terms of intention to create legal relations. In every case, however, the objective must be to decide whether the parties&#8217; dealings are such as to justify legal consequences. In the words of Lord Blackburn in <i>Brogden v Directors of the Metropolitan Railway</i>, the question is whether they have done \u201can extraneous act which clenches the matter, and shows beyond all doubt that each side is bound\u201d."
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "NUMBER": "146",
    "TYPE": "Concept",
    "NAME": "Incorporation of Terms - Introduction",
    "CATEGORY": "Incorporation of Terms",
    "RELATED": [
        "Assumption of responsibility / advice to verify",
        "2. Terms which supplement the contract (warranties etc)",
        "Other tests",
        "Timing.",
        "Timing",
        "Reduction of the contract to writing",
        "The contractual nature of the document / expectations of the parties",
        "The intention with which the statement was made",
        "Collateral Contracts",
        "Onerous or unusual clauses",
        "The Parol Evidence Rule",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;Incorporation poses the question whether a stipulation before or at the time of contracting has become a formal term of the contract or not.<br>&emsp;&emsp;In this presentation the subject has been divided into two principal sections. The first almost exclusively concerns the incorporation of written clauses. Most of the cases in the second section concern oral statements. However, despite first appearances, the true distinction is not between what is written and what is oral. Rather, the first line of cases deals with the incorporation of provisions tending to diminish one party&#8217;s responsibilities under the contract, providing them with an answer to what would otherwise be a breach of contract. Typically these are exclusion or limitation clauses. The second line of cases deals with provisions which would add to one party&#8217;s contractual undertakings. These tend to be assurances or guarantees. Only a little imagination is needed to work out why the first class tends to be written, and the second oral.<br>&emsp;&emsp;Most authors allocate these two lines of cases to different chapters, which is understandable since different tests and policy considerations apply within the two fields. Nevertheless, the effect of that arrangement can be to obscure the fact that the common consideration across both fields is whether a stipulation has become contractual or not."
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation By Signature"
    ],
    "YEAR": "1934",
    "NUMBER": "147",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff, the owner of a cafe, agreed to buy a cigarette vending machine from the defendants. They asked her to sign a document entitled \u201cSales Agreement\u201d, which she did, without reading it. The document included a general exclusion of all express or implied terms relating to the machine. When delivered, it failed to work properly and soon jammed. The plaintiff claimed damages for breach of an implied term that the machine would be fit for the purpose for which it was bought.<br>&emsp;&emsp;The Divisional Court held that the exclusions in the contract had been legally incorporated into it by Miss L&#8217;Estrange&#8217;s signature, so that her action failed. The trial judge had been mistaken in finding that she had received insufficient notice of the exclusions. No question of notice arose, since the plaintiff&#8217;s signature was conclusive of her agreement to all the terms of the document.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Various objections could be made against this decision, although it cannot be doubted that it is correct in law. Miss L&#8217;Estrange had not read the document, and was therefore unaware of the effect of what she was signing. This point was summarily dismissed \u2013 the risk was hers. She said it had been misrepresented to her that the document was no more than an order form. On this point the evidence seemed insufficient to support her assertion, but it was recognised by the court that had her signature been procured by misrepresentation or fraud, or through her complete misapprehension as to the nature of the transaction (the very limited doctrine of \u201c<i>non est factum</i>\u201d), the exclusion would be invalid. The exclusion clauses had been in small print on brown paper, so that they were likely to be overlooked, but while this was regrettable it could not displace the legal effect of signature.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">This well-known case provides a further example of a limitation to the \u201cad idem\u201d ideal of English contract law. It may seem superficially persuasive to submit that the plaintiff intended to make her purchase with the benefit of the law&#8217;s usual protections, while the defendants intended to sell to her on the basis that all those protections were ousted by the small print. In a sense the parties were therefore not in agreement. However, the value of certainty trumps the weaker \u201cad idem\u201d principle. Signature proves assent, and it would be very unfortunate if one party&#8217;s ostensible assent could not be relied upon by the other. </span><br>&emsp;&emsp;<span class=\"it\">The law&#8217;s concern to protect those who rely on another&#8217;s apparent assent, as evidenced by their signature, has no logical application where it should have been obvious that the assent was given on a mistaken basis. Here, the rationale of the snapping-up cases ought to apply to prevent the one party taking advantage of the other&#8217;s obvious mistake. Canadian law has gone this way, as the next case shows.</span>"
    ],
    "NAME": "L'Estrange v Graucob",
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation By Signature",
    "CITATION": "L&#8217;Estrange v Graucob [1934] 2 KB 394",
    "RELATED": [
        "Grogan v Robin Meredith Plant Hire",
        "Curtis v Chemical Cleaning & Dyeing Co",
        "Couchman v Hill",
        "Heilbut , Symons & Co v Buckleton",
        "Schawel v Reade",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Oscar Chess v Williams",
        "Tilden Rent-A-Car Co v Clendinning",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "Olley v Marlborough Court Hotel",
        "McCutcheon v David MacBrayne Ltd",
        "Thompson v London, Midland and Scottish Railway Co Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "YEAR": "1978",
    "NUMBER": "148",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant rented a car at Vancouver Airport. He was asked whether he wanted to purchase additional insurance cover, and said that he did. He was asked to sign a form and did so without reading it, as was apparent to the employee of the car rental company. On the back of the form were clauses in very small type which purported to make the defendant liable for damage done to the car.<br>&emsp;&emsp;The Court of Appeal of Ontario held that the signature rule did not apply where it was or should have been clear that the customer had not read the contract and was not aware of the burdens it imposed. Reliance on signature was only justified where it was reasonable.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This broad Canadian exception to the rule in <i>L&#8217;Estrange v Graucob</i> is actually nothing more than the obverse of the rationale for the rule. Justifiable reliance on one party&#8217;s assent to the terms of the contract must be protected. Where, on the other hand, the reliance is not justified because it is apparent that the assent is not real, it should not be protected. That was the position here, where the parties&#8217; transaction had been relatively informal and hurried (in fact the speed with which car rental could be arranged was held out by the company as an attraction).<br>&emsp;&emsp;In favour of the rule in <i>L&#8217;Estrange v Graucob</i>, it at least has the virtues of being simple, clear, and widely known. One result of permitting the broad exception to it which appealed to the Canadian Court would presumably be to open the way to numerous cases in which the facts would not be clear-cut, but it could at least be argued that an exclusion clause had not been fully or properly understood. Beyond that, it seems odd that one party should effectively have the job of tutoring the other in the effects of the contract before being able to rely on its contents."
    ],
    "NAME": "Tilden Rent-A-Car Co v Clendinning",
    "CATEGORY": "Incorporation of Terms",
    "CITATION": "Tilden Rent-A-Car Co v Clendinning (1978) 88 DLR (3d) 400",
    "RELATED": [
        "Parker v South Eastern Railway Co",
        "L'Estrange v Graucob",
        "Schawel v Reade",
        "AEG (UK( Ltd v Logic Resource",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "Inntrepreneur Pub Co v East Crown Ltd",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "McCutcheon v David MacBrayne Ltd",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "Bannerman v White",
        "Ecay v Godfrey",
        "City and Westminster Properties v Mudd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation By Signature"
    ],
    "YEAR": "1996",
    "NUMBER": "149",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case concerned how damages should be apportioned between two companies for injuries caused to a third party, Mr Grogan. An oral contract had been made between Meredith and the other company, Triact, amounting to an agreement for the hire of heavy machinery, a driver, and the rate of hire to be paid. No other terms were included. At weekly intervals Meredith&#8217;s driver presented Triact with a time sheet detailing the hours he had worked, for Triact to check and sign. The time sheets included the words \u201call hire undertaken on [Contractors&#8217; Plant Association] rules, copies available on request\u201d. The effect of these rules, if they were incorporated, would be to require Triact as hirer to indemnify Meredith in respect of loss caused to third parties.<br>&emsp;&emsp;The Court of Appeal held that contract had not been varied by signature to incorporate the rules. The test was whether a timesheet would be regarded by a reasonable person as a document likely to contain contractual terms. It would not, being a merely administrative device for recording performance under a pre-existing contract."
    ],
    "NAME": "Grogan v Robin Meredith Plant Hire",
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation By Signature",
    "CITATION": "Grogan v Robin Meredith Plant Hire [1996] CLC 1127",
    "RELATED": [
        "Curtis v Chemical Cleaning & Dyeing Co",
        "L'Estrange v Graucob",
        "City and Westminster Properties v Mudd",
        "Esso Petroleum Co Ltd v Mardon",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "Parker v South Eastern Railway Co",
        "Heilbut , Symons & Co v Buckleton",
        "Oscar Chess v Williams",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "Inntrepreneur Pub Co v East Crown Ltd",
        "Olley v Marlborough Court Hotel",
        "Couchman v Hill"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1951",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff took a white satin dress to the defendants&#8217; shop to be cleaned. She was asked to sign a document headed \u201cReceipt\u201d. She signed, but before doing so, asked why her signature was needed. The shop assistant explained that it was because the business wished to exempt itself from liability for damage to the beads and sequins with which the dress was trimmed. The plaintiff signed. In fact the document contained a clause excluding all liability for any damage to the dress. When the dress was returned stained, the defendants denied liability on the basis of the clause.<br>&emsp;&emsp;<span class=\"bd\">Denning LJ</span> in the Court of Appeal held that the defendants were not entitled to rely on the clause. It operated only to the extent which they had represented.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This case might be thought to be no more than an application of one of the exceptions to the rule in <i>L&#8217;Estrange v Graucob</i> \u2013 signature does not have its usual effect if it has been procured by misrepresentation. There is a little more to it than that, consisting of three fairly minor points. The first is that <i>Curtis v Chemical Cleaning</i> expressly recognises that even an innocent misrepresentation constitutes an exception to the <i>L&#8217;Estrange</i> rule (this was not entirely clear from <i>L&#8217;Estrange</i> itself). The second is that the creation of any false impression as to the existence or extent of an exclusion will fall within the ratio of this case. It does not have to amount to a misrepresentation in accordance with all the technicalities which govern that subject as ordinarily understood. The third is that Denning LJ&#8217;s handling of the clause is somewhat unorthodox. One would more naturally think that the clause is either effective or that it is not. The idea that it is effective but only to the represented extent resembles an estoppel."
    ],
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation By Signature",
    "CITATION": "Curtis v Chemical Cleaning &amp; Dyeing Co [1951] 1 KB 805",
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation By Signature"
    ],
    "RELATED": [
        "Grogan v Robin Meredith Plant Hire",
        "L'Estrange v Graucob",
        "McCutcheon v David MacBrayne Ltd",
        "Esso Petroleum Co Ltd v Mardon",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "City and Westminster Properties v Mudd",
        "Heilbut , Symons & Co v Buckleton",
        "Schawel v Reade",
        "Thompson v London, Midland and Scottish Railway Co Ltd",
        "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "Couchman v Hill",
        "Tilden Rent-A-Car Co v Clendinning"
    ],
    "NUMBER": "150",
    "TYPE": "Case",
    "NAME": "Curtis v Chemical Cleaning & Dyeing Co",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation By Notice",
        "Timing"
    ],
    "NUMBER": "151",
    "TYPE": "Concept",
    "NAME": "Timing",
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation By Notice &mdash; Timing",
    "RELATED": [
        "Assumption of responsibility / advice to verify",
        "Timing.",
        "2. Terms which supplement the contract (warranties etc)",
        "Collateral Contracts",
        "The contractual nature of the document / expectations of the parties",
        "The intention with which the statement was made",
        "Incorporation of Terms - Introduction",
        "Onerous or unusual clauses",
        "The Parol Evidence Rule",
        "Reduction of the contract to writing",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "Other tests"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Timing</span></span><br>&emsp;&emsp;Where a stipulation is not contained in a document signed by the party who is to take the burden of it, it may nonetheless be held to have been validly incorporated in the contract by the following means. As an alternative to the fact of signature, it may be possible to show that reasonable notice of the stipulation has been given. If so, the position once more is that the party introducing it must be able to rely on it, since the other has ostensibly agreed to it.<br>&emsp;&emsp;The most basic point about reasonableness of notice is that it must be given before or at the time the contract is formed. If it is given only after the moment of contracting, then it is invalid. The next case is the one usually cited on this point."
    ]
},
{
    "YEAR": "1949",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff and her husband, who intended to stay at the defendants&#8217; hotel for an indeterminate period, paid one week&#8217;s board and lodging at the reception desk before going to their room. After they had been staying in the hotel for six months, valuables belonging to the plaintiff were stolen from the room. She sued the hotel for negligence in contract and in tort. By way of defence, the hotel denied negligence and, in the alternative, relied upon a notice on the door of the plaintiff&#8217;s room excluding liability for loss or theft of valuables.<br>&emsp;&emsp;In the Court of Appeal, Singleton and <span class=\"bd\">Denning LJ</span>J held the notice was not incorporated into the contract which had been made upon the plaintiff&#8217;s arrival at the hotel, since it could not have been seen by her until after the contract was concluded (Bucknill LJ did not consider this point). All three of their Lordships also decided that the notice was in any event insufficient to protect the hotel from liability for its own negligence.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;In argument during the appeal hearing, Singleton LJ asked counsel for the defendant hotel to explain when and how the notice became part of the contract, as he submitted it did. The answer was that it might have been incorporated when the plaintiff and her husband made their second payment at the end of their first week&#8217;s stay. Singleton LJ rejected this possibility, however, since he was persuaded that a single contract for an indeterminate stay and periodic payments had been made on the couple&#8217;s arrival at the hotel, rather than a contract renewable at intervals.<br>&emsp;&emsp;Denning LJ helpfully summed up the ways in which one party could demonstrate the other&#8217;s assent to being bound by a stipulation. \u201cThe best way of proving it is by a written document signed by the party to be bound. Another way is by handing him before or at the time of the contract a written notice specifying its terms and making it clear to him that the contract is on those terms. A prominent public notice which is plain for all to see when he makes the contract or an express oral stipulation would, no doubt, have the same effect. But nothing short of one of these three ways will suffice\u201d."
    ],
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation By Notice &mdash; Timing",
    "CITATION": "Olley v Marlborough Court Hotel [1949] 1 KB 532",
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation By Notice",
        "Timing"
    ],
    "RELATED": [
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "AEG (UK( Ltd v Logic Resource",
        "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "Thompson v London, Midland and Scottish Railway Co Ltd",
        "Parker v South Eastern Railway Co",
        "Heilbut , Symons & Co v Buckleton",
        "City and Westminster Properties v Mudd",
        "Esso Petroleum Co Ltd v Mardon",
        "Grogan v Robin Meredith Plant Hire",
        "Schawel v Reade",
        "Curtis v Chemical Cleaning & Dyeing Co",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd"
    ],
    "NUMBER": "152",
    "TYPE": "Case",
    "NAME": "Olley v Marlborough Court Hotel",
    "FLAGS": [
        "Denning"
    ]
},
{
    "NUMBER": "153",
    "FLAGS": [
        "Denning"
    ],
    "NAME": "Thornton v Shoe Lane Parking.",
    "TYPE": "Case",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case has already been cited on the distinction between offers and invitations to treat. The facts are now given in greater detail.<br>&emsp;&emsp;The plaintiff drove up to the entrance of a multi-storey car-park at which he had not left his car before. At the entrance was a notice which read \u201cAll cars parked at owner&#8217;s risk\u201d. As he proceeded, a light changed from red to green, and a machine provided a ticket which the plaintiff took before driving on. The ticket stated that it was issued \u201csubject to the conditions of issue as displayed on the premises\u201d. The plaintiff later returned to pay the parking charge and to collect his car. At this point an accident occurred, partly as a result of the defendants&#8217; negligence, in which the plaintiff was badly injured. The defendants disclaimed responsibility by reference to a notice within the garage which purported to exempt them from liability for injury howsoever caused.<br>&emsp;&emsp;The Court of Appeal held that the defendants were liable, since they had not done what would have been necessary fairly to bring the exempting stipulation to the plaintiff&#8217;s attention at the time the contract was made.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The notice displayed at the entrance to the car-park could not assist the defendants because it made no reference to personal injury to customers. The live question in the case was whether the wording on the ticket was sufficient to incorporate the notice displayed inside the car-park. The members of the Court gave two responses to this. One, favoured by <span class=\"bd\">Denning LJ</span> and Sir Gordon Willmer, was that the contract had been concluded before the ticket was issued. Megaw LJ did not reject the analysis based on timing, but said that he would reserve a final view on the mechanics of contracting in this situation. In common with the other members of the Court, he held that the words on the ticket were in no way adequate as reasonable notice of the extremely broad and destructive exclusion posted within the car-park. He placed particular emphasis on the fact that the clause in this case was one which would have deprived the plaintiff of protection provided by statute (the Occupiers&#8217; Liability Act 1957)."
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "NUMBER": "154",
    "TYPE": "Concept",
    "NAME": "The contractual nature of the document / expectations of the parties",
    "CATEGORY": "Incorporation of Terms",
    "RELATED": [
        "The intention with which the statement was made",
        "Collateral Contracts",
        "Assumption of responsibility / advice to verify",
        "2. Terms which supplement the contract (warranties etc)",
        "Incorporation of Terms - Introduction",
        "Timing",
        "Timing.",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "Reduction of the contract to writing",
        "Other tests",
        "Onerous or unusual clauses",
        "The Parol Evidence Rule"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The contractual nature of the document / expectations of the parties</span></span><br>&emsp;&emsp;Allied to the issue of timing is the requirement that the stipulation, if it is to be validly incorporated, must be contained in a document which could reasonably be expected to contain contractual terms. This requirement has already been seen in connection with incorporation by signature (see <i>Grogan</i>&#8216;s case above); it is imposed <i>a fortiori</i> on incorporation by notice which is an inherently less secure method of introducing terms into a contract."
    ]
},
{
    "NUMBER": "155",
    "NAME": "Chapelton v Barry Urban District Council.",
    "TYPE": "Case",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case was cited earlier on the subject of contract formation. The Council let out deck chairs on a beach. The charge was displayed on a notice by a pile of deck chairs, together with the information that tickets could be obtained from an attendant. The plaintiff sat on a deck chair, which gave way and caused him injury. The Council sought to defend itself by reference to exclusionary words printed on the ticket available from the attendant.<br>&emsp;&emsp;The Court of Appeal held that the words on the ticket were not incorporated, since the ticket was not a contractual document. The plaintiff would have been reasonably entitled to regard it as a mere receipt to show that he had paid, and to state how for how long he could use the chair. The court regarded the pile of deck chairs as the offer and the act of sitting down on one of them as the acceptance. The ticket came after the contract was concluded.<br>&emsp;&emsp;As a matter of strict principle, the timing point illustrated by the three preceding cases ought to be decisive. If a stipulation is made only after the contract is concluded, it would seem that it cannot be part of that contract unless it is later made so by the varying of the contract for good consideration. In reality, matters may not be quite so clear-cut, as the next case shows."
    ]
},
{
    "YEAR": "1975",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The parties were in the same line of business \u2013 the hiring out of heavy earth-moving plant \u2013 and they had done business together on two previous occasions. The defendants, Ipswich, urgently required a crane. Their manager agreed hire and transport charges with the plaintiffs by telephone. The plaintiffs later sent on a printed form by post. This would normally have been signed by Ipswich, but on this occasion it was not. Meanwhile, the crane sank in marshy ground, and was recovered at substantial expense to the plaintiffs. On the basis of clauses in the printed form, the plaintiffs claimed to be indemnified by Ipswich against their outlay. Ipswich contended that the relevant clauses were not incorporated into the contract which had been made earlier by telephone.<br>&emsp;&emsp;The Court of Appeal held that the indemnity clause was validly incorporated. The defendants knew that plant hire was carried out on conditions, and in fact both they and the plaintiffs used versions of the common form known as \u201cthe Contractors&#8217; Plant Association form\u201d (as in <i>Grogan</i>&#8216;s case above). Responding to the defendants&#8217; urgent need, the plaintiffs had been entitled to assume that the contract was being made on the normal conditions, even if in the event that was only specified post-contractually.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The fact that the parties had done business in the past was not regarded as a vital aspect of this case, even though (as will be seen) it is actually an independent basis on which incorporation of stipulations may sometimes be proven. The crucial facts are that the parties were in the same line of business, knew on what terms that business was usually conducted, and that the urgency with which the defendants required the crane had displaced the usual formalities. Lord <span class=\"bd\">Denning MR</span> cited a far-reaching test of application in this and various other contractual circumstances:<br>&emsp;&emsp;\u201cAs Lord Reid said in <i>McCutcheon v David MacBrayne Ltd</i> [below] quoting from the Scottish textbook <i>Gloag on Contract</i>, 2<sup>nd</sup> ed (1929), p. 7: \u201cThe judicial task is not to discover the actual intentions of each party; it is to decide what each was reasonably entitled to assume from the attitude of the other\u201d. It seems to me that, in view of the relationship between the parties, when the defendants requested this crane urgently and it was supplied at once \u2013 before the usual form was received \u2013 the plaintiffs were entitled to conclude that the defendants were accepting it on the terms of the plaintiff&#8217;s own printed conditions \u2013 which would follow in a day or two. It is just as if the plaintiffs had said \u201cWe will supply it on our usual conditions,\u201d and the defendants said \u201cOf course, that is quite understood\u201d\u201d.<br>&emsp;&emsp;There is therefore a degree of flexibility in the rules regarding incorporation by notice, even on the point of timing which might have been thought to be clear-cut. Further aspects of that flexibility will be seen in due course. First, however, we must approach the heart of the subject. What actually constitutes \u201creasonable notice\u201d of an unsigned stipulation?"
    ],
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation By Notice &mdash; Contractual Nature of Document / Expectations of Parties",
    "CITATION": "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd [1975] QB 303",
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation By Notice",
        "Contractual Nature of Document / Expectations of Parties"
    ],
    "RELATED": [
        "Olley v Marlborough Court Hotel",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "Parker v South Eastern Railway Co",
        "AEG (UK( Ltd v Logic Resource",
        "Thompson v London, Midland and Scottish Railway Co Ltd",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "Esso Petroleum Co Ltd v Mardon",
        "Grogan v Robin Meredith Plant Hire",
        "Inntrepreneur Pub Co v East Crown Ltd",
        "Curtis v Chemical Cleaning & Dyeing Co",
        "Couchman v Hill",
        "Tilden Rent-A-Car Co v Clendinning"
    ],
    "NUMBER": "156",
    "TYPE": "Case",
    "NAME": "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "NUMBER": "157",
    "TYPE": "Concept",
    "NAME": "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
    "CATEGORY": "Incorporation of Terms",
    "RELATED": [
        "Other tests",
        "The Parol Evidence Rule",
        "The contractual nature of the document / expectations of the parties",
        "Timing.",
        "2. Terms which supplement the contract (warranties etc)",
        "Reduction of the contract to writing",
        "The intention with which the statement was made",
        "Incorporation of Terms - Introduction",
        "Assumption of responsibility / advice to verify",
        "Onerous or unusual clauses",
        "Collateral Contracts",
        "Timing"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d</span></span>"
    ]
},
{
    "YEAR": "1877",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff deposited a bag at a cloakroom in a railway station. He paid the attendant 2d, and in return received a ticket. On the front of the ticket were written a number, opening hours, and the words \u201cSee back\u201d. On the reverse there were various clauses, including one which limited the company&#8217;s liability for baggage left at the cloakroom to \u00a310. The plaintiff&#8217;s bag was lost, and he claimed its value as \u00a324 10s. The company relied on its limitation clause. At trial the judge directed the jury to consider whether the plaintiff had known of the special condition on which the bag was deposited; and (presumably if the answer to the first question were negative) whether he had been under any obligation to read or make himself aware of the condition. The jury returned negative answers to both questions. The judge directed judgment for the plaintiff.<br>&emsp;&emsp;The Court of Appeal held that the second question had amounted to a misdirection, and ordered a new trial. The correct question was whether the company had done what was necessary to give reasonable notice of the clause.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Mellish LJ set out the grounds for his decision, and his account of the situation, as follows:<br>&emsp;&emsp;\u201cThe railway company, as it seems to me, must be entitled to make some assumptions respecting the person who deposits luggage with them: I think they are entitled to assume that he can read, and that he understands the English language, and that he pays such attention to what he is about as may be reasonably expected from a person in such a transaction as that of depositing luggage in a cloak-room. The railway company must, however, take mankind as they find them, and if what they do is sufficient to inform people in general that the ticket contains conditions, I think that a particular plaintiff ought not to be in a better position than other persons on account of his exceptional ignorance or stupidity or carelessness. But if what the railway company do is not sufficient to convey to the minds of people in general that the ticket contains conditions, then they have received goods on deposit without obtaining the consent of the persons depositing them to the conditions limiting their liability. I am of opinion, therefore, that the proper direction to leave to the jury in these cases is, that if the person receiving the ticket did not see or know that there was any writing on the ticket, he is not bound by the conditions; that if he knew that there was writing, and knew or believed that the writing contained conditions, then he is bound by the conditions; that if he knew that there was writing, but did not know or believe that the writing contained conditions, nevertheless he would be bound, if the delivering of the ticket to him in such a manner that he could see there was writing upon it, was, in the opinion of the jury, reasonable notice that the writing contained conditions\u201d.<br>&emsp;&emsp;The trial judge&#8217;s reference to the plaintiff&#8217;s putative obligation was beside the point and a misdirection, since the plaintiff was at perfect liberty to leave the ticket unread if he pleased.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The rhetoric in this judgment shows the strain of adapting norms derived from the formation of contracts between individuals to the impersonal mode which arose after the industrial revolution. That is not surprising, since a model formed from the bargaining towards agreement by individuals is having to adapt here to circumstances in which one side to the deal (the company) has no means of accommodating the other, while the customer has no means of influencing the company. The strain is apparent in the second sentence of the passage quoted above, which appears at its outset to announce a stricture upon the company, but turns out to be a general liberty to the company to suppose that it is contracting with generic man. Since this seems a long way from the ideal of agreement which has formed the English contractual jurisdiction, the judgment concludes with a placatory gesture towards the residual liberties of the individual (paraphrased above). The consumer is under no duty to read the writing, in the sense that he cannot be compelled to do so or criticised in law for his failure. He nevertheless takes the consequences of it.</span><br>&emsp;&emsp;<span class=\"it\">The notion that the customer is not bound if he was unaware that there was writing on the ticket needs careful handling. It appears oddly favourable to the individual in the context of a judgment which otherwise aims to keep the trains running and the cloakrooms open on economically feasible terms. The circumstances of the case should be borne in mind. The plaintiff had admitted that he knew there was writing on the ticket, so Mellish LJ could afford to be indulgent \u2013 the issue was no longer in point.</span><br>&emsp;&emsp;<span class=\"it\">Even in terms of contract formation and timing this case, like others of the same sort, is not unproblematic. One would naturally think of the customer&#8217;s request or at least his tendering of money as the offer, and the issue of the ticket as the company&#8217;s acceptance. On that view the incorporation of terms seems to come too late. In fact the ticket cases proceed on the basis that the issue of the ticket is an offer which the customer is free to accept or reject once he has had the opportunity to inform himself of the legal burden he is taking on. This, however, is make-believe, as Lord <span class=\"bd\">Denning MR</span> candidly acknowledges in the Shoe Lane Parking case. There is no true \u201clocus poenitentiae\u201d here. With the issue of the ticket, the deal is done. Nevertheless, the logical objection based on the timings within the transaction yields to the superior practical interest of enabling service industry to run on its own terms.</span><br>&emsp;&emsp;<span class=\"it\">The extent to which \u201creasonable notice\u201d can be reduced to a fiction is notoriously shown by the next case.</span>"
    ],
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation By Notice &mdash; Reasonableness of Notice",
    "CITATION": "Parker v South Eastern Railway Co (1877) 2 CPD 416",
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation By Notice",
        "Reasonableness of Notice"
    ],
    "RELATED": [
        "Thompson v London, Midland and Scottish Railway Co Ltd",
        "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "Olley v Marlborough Court Hotel",
        "AEG (UK( Ltd v Logic Resource",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "Oscar Chess v Williams",
        "Esso Petroleum Co Ltd v Mardon",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Inntrepreneur Pub Co v East Crown Ltd",
        "City and Westminster Properties v Mudd",
        "McCutcheon v David MacBrayne Ltd",
        "Heilbut , Symons & Co v Buckleton"
    ],
    "NUMBER": "158",
    "TYPE": "Case",
    "NAME": "Parker v South Eastern Railway Co",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation By Notice",
        "Reasonableness of Notice"
    ],
    "YEAR": "1930",
    "NUMBER": "159",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff was injured when a train run by the defendants stopped at the very end of a platform. The defendants denied liability by reference to a clause which exempted them from responsibility for injury to excursion ticket holders howsoever caused. The plaintiff, who could not read, had booked the excursion through her niece. The front of the ticket read \u201cExcursion, For Conditions see back\u201d. The back of the ticket referred to conditions to be found in the Company&#8217;s timetables, notices and excursion and other bills. The relevant clause was to be found in the timetable, of which there was one copy at the booking office. It cost 6d to buy.<br>&emsp;&emsp;The jury found that the company had not taken reasonable steps to bring the existence of the clause to the notice of the plaintiff, but the trial judge nevertheless entered judgment for the defendants. The Court of Appeal upheld the judge, holding that there had been no evidence on which the jury could have made their finding. The company had offered the excursion at a reduced price and on ascertainable terms. The plaintiff had accepted, and was bound by the terms.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The key mischief within this result is not that the court preferred a particularly vacuous fiction to the good sense of the jury&#8217;s finding. It is that a company was able to insert a clause in the small print which enabled it to cause injury to its customers with impunity. That was eventually prevented by Parliament through the Unfair Contract Terms Act 1977 which would have rendered the clause in this case of no effect. We will look more closely at the Act before long, but the present focus is on the rules of incorporation rather than the validity of exclusion clauses as such."
    ],
    "NAME": "Thompson v London, Midland and Scottish Railway Co Ltd",
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation By Notice &mdash; Reasonableness of Notice",
    "CITATION": "Thompson v London, Midland and Scottish Railway Co Ltd [1930] 1 KB 41",
    "RELATED": [
        "Parker v South Eastern Railway Co",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "AEG (UK( Ltd v Logic Resource",
        "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "Olley v Marlborough Court Hotel",
        "Grogan v Robin Meredith Plant Hire",
        "Bannerman v White",
        "Esso Petroleum Co Ltd v Mardon",
        "Schawel v Reade",
        "Curtis v Chemical Cleaning & Dyeing Co",
        "Ecay v Godfrey",
        "City and Westminster Properties v Mudd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "NUMBER": "160",
    "FLAGS": [
        "Denning"
    ],
    "TYPE": "Concept",
    "NAME": "Onerous or unusual clauses",
    "CATEGORY": "Incorporation of Terms",
    "RELATED": [
        "Assumption of responsibility / advice to verify",
        "Collateral Contracts",
        "Other tests",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "The Parol Evidence Rule",
        "Incorporation of Terms - Introduction",
        "Timing.",
        "Timing",
        "Reduction of the contract to writing",
        "The intention with which the statement was made",
        "The contractual nature of the document / expectations of the parties",
        "2. Terms which supplement the contract (warranties etc)"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Onerous or unusual clauses</span></span><br>&emsp;&emsp;There have already been strong hints in the cases cited above that courts concern themselves not only with the mechanics of incorporation, strictly understood, but also with the content and character of the stipulation sought to be incorporated. For instance in the <i>Shoe Lane Parking</i> case the court took notice of how completely the clause in question purported to shift risk to the plaintiff. In the <i>British Crane Hire</i> case, by contrast, the court was satisfied that the indemnity clause was entirely usual in a contract of a given type. In fact it is a recognised feature of the rules on incorporation by reasonable notice that the more onerous or unusual a stipulation is, the more that must be done before the court will be satisfied that reasonable notice of it has been given.<br>&emsp;&emsp;This principle was most famously expressed by <span class=\"bd\">Denning LJ</span> in <i>Spurling v Bradshaw</i> (1956), where he said that \u201cSome clauses which I have seen would need to be printed in red ink on the face of the document with a red hand pointing to it before the notice could be held to be sufficient\u201d.<br>&emsp;&emsp;It is nevertheless a somewhat counter-intuitive state of affairs. One might imagine that the means by which stipulations are incorporated into contracts would be solely a matter of the mechanics of contract formation rather than of the consequences of being bound. Nonetheless, English contract law takes the view that the proffering of a page of clauses may result in some being incorporated and others not, according to their potential effect."
    ]
},
{
    "YEAR": "1989",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendants required photographs on the theme of the 1950s for a client. They contacted the plaintiffs, who ran a library of photographic transparencies, to ask whether they had anything suitable. The plaintiffs sent 47 transparencies the same day, together with a delivery note containing conditions. The defendants telephoned the plaintiffs to say that one or two of the transparencies could be of interest. One of the clauses on the delivery note stated that all transparencies should be returned within 14 days of the date of delivery, and that a holding fee of \u00a35 per transparency plus VAT would be charged for each day that a transparency was retained beyond the 14 day period. The defendants forgot that they had the transparencies, and returned them some 15 days late. The plaintiffs sent them an invoice for \u00a33783.50, calculated in accordance with their clause.<br>&emsp;&emsp;The Court of Appeal, overruling the judgment at first instance, held that the clause had not been incorporated into the contract. Although the clause was so unreasonable that it could perhaps be viewed as a disguised penalty (and therefore unenforceable), <span class=\"bd\">Bingham LJ</span> was prepared to assume that it would have been valid if it had been fully and fairly drawn to the defendants&#8217; attention. However, insufficient had been done, given the clause&#8217;s unreasonable and punitive character.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Bingham LJ remarked that while English law had committed itself to no overriding principle of good faith, which here might have required actual notice of the clause to be given, it had nevertheless developed individual solutions to perceived problems of unfairness. In his Lordship&#8217;s judgment, the cases on sufficiency of notice were to be read in that context. He continued:<br>&emsp;&emsp;\u201cOn one level they are concerned with a question of pure contractual analysis, whether one party has done enough to give the other notice of the incorporation of a term in the contract. At another level they are concerned with a somewhat different question, whether it would in all the circumstances of the case be fair (or reasonable) to hold a party bound by any conditions or by a particular condition of an unusual and stringent nature\u201d.<br>&emsp;&emsp;On a reading of the authorities, Bingham LJ found support for his view that the question of incorporation by notice went beyond merely technical analysis to the fairness of competing outcomes. On the facts of the instant case, he said that the clause would have been effectively incorporated if it had been of a usual sort. However, since (in his words) it imposed an inordinate liability for a venial period of delay it could not be said that sufficient notice had been given.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;With the worthy and predictable exception of Lord <span class=\"bd\">Denning</span> and his \u201cred hand\u201d, it seems that judges shy away from indicating exactly what would constitute reasonable notice in a given case, limiting themselves to confirming or denying that it has been provided. Closer examination does suggest at least two very broad guidelines. On average facts, the case of <i>Parker v South Eastern Railway</i> seems to equate reasonable notice simply with the clause in question being ascertainable from the contractual documents. On the facts of <i>Interfoto,</i> which the court clearly found repugnant, Dillon LJ observes that nothing had been done to <i>differentiate</i> the clause in question from the other eight on the delivery note (though perhaps this should be taken as the absolute minimum which might have been required). The test which <i>Chitty on Contracts</i> derives from the <i>Interfoto</i> case is that a particularly onerous or unusual clause must be shown to have been fairly and reasonably drawn to the other&#8217;s attention. Could this mean that the other&#8217;s actual knowledge and understanding of the clause must be shown? There does not appear to be a case which has required one party to obtain the other&#8217;s specific agreement to a clause as the condition of its enforceability. Presumably a clause requiring that degree of special handling would be one of such extreme effect as to fall foul of unfair contract terms legislation in any event."
    ],
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation By Notice &mdash; Onerous Or Unusual Terms",
    "CITATION": "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd [1989] QB 433",
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation By Notice",
        "Onerous Or Unusual Terms"
    ],
    "RELATED": [
        "AEG (UK( Ltd v Logic Resource",
        "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "Thompson v London, Midland and Scottish Railway Co Ltd",
        "Parker v South Eastern Railway Co",
        "Olley v Marlborough Court Hotel",
        "Ecay v Godfrey",
        "Inntrepreneur Pub Co v East Crown Ltd",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "Schawel v Reade",
        "Bannerman v White",
        "Heilbut , Symons & Co v Buckleton",
        "McCutcheon v David MacBrayne Ltd"
    ],
    "NUMBER": "161",
    "TYPE": "Case",
    "NAME": "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
    "FLAGS": [
        "Bingham",
        "Denning"
    ]
},
{
    "YEAR": "1996",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendants had ordered cathode ray tubes from the plaintiffs for export to customers in Iran. The goods proved to be defective, and the defendants instructed their customers to return the goods, at very considerable expense, and deducted those costs from the price payable for the tubes. The plaintiffs disputed the deduction on the basis that their conditions of sale placed the cost of returning faulty goods on the buyers. These conditions had been referred to in an order confirmation note, which was clearly a contractual document.<br>&emsp;&emsp;The Court of Appeal held unanimously that the plaintiffs could not rely on their clause, but gave different reasons. The majority (Hirst and Waite LJJ) considered that the clause was an extremely onerous and unusual condition when judged in the context of the contract as a whole, which deprived the defendants of all the usual rights and protections of the Sale of Goods Act. It had not been validly incorporated. Hobhouse LJ agreed that the clause was ineffective as a result of the Unfair Contract Terms Act 1977, but distinguished the <i>Interfoto</i> case. If a clause was not unusual (and he considered that this one was not, since it dealt with matters often the subject of contracts of sale), it would rarely be appropriate to take a point on incorporation. The proper solution was provided by the Act.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;\u201cThe problem in the present case arises from the fact that these clauses have been unreasonably drafted. As is almost inevitable in printed standard terms, they are not related to the particular circumstances of the case and, furthermore, they stipulate for a greater protection of the seller than is reasonable, or anyway is reasonable without some special justification. In my judgment, and this is where I part company with my Lords, it is necessary before excluding the incorporation of a clause <i>in limine</i> to consider the type of clause it is. Is it a clause of the type which you would expect to find in the printed conditions? If it is, then it is only in the most exceptional circumstances that a party will be able to say that it was not adequately brought to his notice by standard words of incorporation. If a party wishes to find out precisely how a clause of a normal sort has been worded, he should ask for the actual text of the clause. This case is not analogous to either of the two cases upon which the appellant founds. The <i>Interfoto</i> case involved an extortionate clause which did not relate directly to the expected rights and obligations of the parties. In the <i>Shoe Lane Parking</i> case, it related to personal injuries and the state of the premises and not to the subject matter of the car parking contract, which would, in the view of the Court of Appeal, have been concerned with damage to property.<br>&emsp;&emsp;In my judgment, it is desirable as a matter of principle to keep what was said in the <i>Interfoto </i>case within its proper bounds. A wide range of clauses are commonly incorporated into contracts by general words. If it is to be the policy of English law that in every case those clauses are to be gone through with, in effect, a toothcomb to see whether they were entirely usual and entirely desirable in the particular contract, then one is completely distorting the contractual relationship between the parties and the ordinary mechanisms of making contracts. It will introduce uncertainty into the law of contract\u201d.<br>&emsp;&emsp;There is one further means of incorporating stipulations into contracts which should be added to <span class=\"bd\">Denning LJ</span>&#8216;s list in <i>Olley v Marlborough Court</i>. If the parties have consistently dealt with each other in the past on the basis of contracts into which a certain stipulation has been incorporated, then it may be possible to conclude that a later deal not including that stipulation is to be understood as if the stipulation were nonetheless present.<br>&emsp;&emsp;Clearly, much will turn on the facts of individual cases. The most plausible situation for the application of the rule would be a case in which the omission of the stipulation seems to have a mere oversight."
    ],
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation By Notice &mdash; Onerous Or Unusual Terms",
    "CITATION": "AEG (UK( Ltd v Logic Resource [1996] CLC 265",
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation By Notice",
        "Onerous Or Unusual Terms"
    ],
    "RELATED": [
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "Olley v Marlborough Court Hotel",
        "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "Parker v South Eastern Railway Co",
        "Thompson v London, Midland and Scottish Railway Co Ltd",
        "Curtis v Chemical Cleaning & Dyeing Co",
        "Schawel v Reade",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "L'Estrange v Graucob",
        "Bannerman v White",
        "Couchman v Hill",
        "Grogan v Robin Meredith Plant Hire"
    ],
    "NUMBER": "162",
    "TYPE": "Case",
    "NAME": "AEG (UK( Ltd v Logic Resource",
    "FLAGS": [
        "Denning"
    ]
},
{
    "YEAR": "1964",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In the course of sailing from Islay to the Scottish mainland, the defendants&#8217; ferry sank as a result of their employees&#8217; negligence. It was carrying the plaintiff&#8217;s car, which was lost. The defendants relied on a clause in their conditions of carriage against the plaintiff&#8217;s action in negligence. The shipping of the car had been arranged by the plaintiff&#8217;s brother-in-law, Mr McSporran, as his agent. Although it was the defendants&#8217; usual practice to require customers to sign a risk note which incorporated the relevant conditions, Mr McSporran had not been asked to do so on this occasion. The plaintiff himself had shipped goods with the defendants on four previous occasions, and had always been required to sign the risk note. His agent similarly had previous experience of dealing with the defendants, and his evidence was that he had sometimes been required to sign the note and sometimes not.<br>&emsp;&emsp;The House of Lords held that the defendants could not rely on the clause, which had not been incorporated into the oral contract concluded on this occasion. There was not the consistency of dealing in the past which would justify an inference that the present contract was to be on similar terms.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The fact of past dealings between the parties on unvarying terms does appear to be an accepted means of incorporation, despite its omission from <span class=\"bd\">Denning LJ</span>&#8216;s list. However, some caution is needed. In this case, Lord Reid referred to it as a means by which contractual conditions might be implied, and the implying of terms is not the same as their incorporation. He went on to state a test (the \u201cofficious bystander\u201d test) which is well-known as belonging to the field of implied terms. Lord Devlin expressly went further in this direction, stating that the only means by which an unexpressed term can come into a contract is by implication.</span><br>&emsp;&emsp;<span class=\"it\">Perhaps the matter can be tested by extending the usual rationale for incorporation into this area in order to see whether in theory it could have any application, and if so, what results. Across the fields of incorporation by signature, reasonable notice, and the peculiar facts of the British Crane Hire case (perhaps sui generis), the justification for incorporation seems to be a standard one; one party&#8217;s conduct or inaction in all the circumstances entitles the other to deduce assent to the stipulations which are to govern the contract. It is possible to imagine a past course of dealing which would give rise to this state of affairs. It would need to be such as to enable the one party to submit that the other \u201cmust have known\u201d that the usual pattern of contracting on set terms was not meant to have been abandoned, and that the instant change could only plausibly be regarded as an oversight, or explained by the urgency of the situation. Whether the drawing of that inference is taken to lead to the incorporation or implication of a term, it is clear that the facts of McCutcheon v David MacBrayne did not permit it.</span>"
    ],
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation By Course of Dealing",
    "CITATION": "McCutcheon v David MacBrayne Ltd [1964] 1 WLR 125",
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation By Course of Dealing"
    ],
    "RELATED": [
        "Bannerman v White",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "L'Estrange v Graucob",
        "Oscar Chess v Williams",
        "Grogan v Robin Meredith Plant Hire",
        "Schawel v Reade",
        "Parker v South Eastern Railway Co",
        "Inntrepreneur Pub Co v East Crown Ltd",
        "Olley v Marlborough Court Hotel",
        "AEG (UK( Ltd v Logic Resource",
        "Thompson v London, Midland and Scottish Railway Co Ltd"
    ],
    "NUMBER": "163",
    "TYPE": "Case",
    "NAME": "McCutcheon v David MacBrayne Ltd",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "NUMBER": "164",
    "TYPE": "Concept",
    "NAME": "2. Terms which supplement the contract (warranties etc)",
    "CATEGORY": "Incorporation of Terms",
    "RELATED": [
        "Collateral Contracts",
        "Onerous or unusual clauses",
        "Timing.",
        "Assumption of responsibility / advice to verify",
        "The Parol Evidence Rule",
        "Incorporation of Terms - Introduction",
        "Timing",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "The contractual nature of the document / expectations of the parties",
        "The intention with which the statement was made",
        "Other tests",
        "Reduction of the contract to writing"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">2. Terms which supplement the contract (warranties etc)</span></span><br>&emsp;&emsp;The second half of this lecture deals with the incorporation of a different class of stipulations: those which increase the responsibility inherent in the contract&#8217;s performance, typically through the addition of a positive guarantee of some kind.<br>&emsp;&emsp;Most writers present this aspect of incorporation in the course of drawing a distinction between representations, which remain outside the contract, and warranties, which are contractual terms. It may be helpful to begin with an explanation of why the subject tends to be presented in that way, even though it is quite as much to do with the incorporation of stipulations into contracts as the topic covered in the first part of the lecture.<br>&emsp;&emsp;If a negative stipulation, such as an exclusion clause, is not found to be incorporated, it is ineffective. If a positive guarantee is not found to be incorporated, it may still take effect as a representation (sometimes referred to, particularly in older cases, as a \u201cmere\u201d representation). On the assumption that a representation has proved to be untrue \u2013 this is generally if not invariably at the centre of actions within this area \u2013 there may be a remedy for misrepresentation. However, prior to the passing of the Misrepresentation Act 1967, there was no general remedy by way of damages for a misrepresentation unless it had been made fraudulently. The relevant remedy would be rescission of the contract, which would restore the parties to the positions they would have been in had the contract not been made. However, rescission was often impossible on the facts.<br>&emsp;&emsp;Therefore it was in the interest of many plaintiffs to argue that a positive assurance which had motivated them to enter the contract had become one of its terms, so that they could seek damages for its breach. The cases, which are numerous, tend to dwell on the distinction between representations and contractual warranties, since that was plainly the live issue in most of them. Various tests were established, all going to that distinction, and to discuss the cases in connection with the distinction is simply to go with their grain. Still, it should be sufficient to observe that the test of timing with regard to the moment of contracting is as relevant here as it was in the earlier group of cases in order to see that beneath the surface we are concerned throughout with drawing the boundary around what is contractual."
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "NUMBER": "165",
    "TYPE": "Concept",
    "NAME": "The intention with which the statement was made",
    "CATEGORY": "Incorporation of Terms",
    "RELATED": [
        "The contractual nature of the document / expectations of the parties",
        "Assumption of responsibility / advice to verify",
        "Onerous or unusual clauses",
        "Other tests",
        "2. Terms which supplement the contract (warranties etc)",
        "Reduction of the contract to writing",
        "Incorporation of Terms - Introduction",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "Timing",
        "Timing.",
        "The Parol Evidence Rule",
        "Collateral Contracts"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The intention with which the statement was made</span></span><br>&emsp;&emsp;The basic test for whether an assurance has become part of the contract is whether the parties intended that it should do so. The following House of Lords case makes that clear. It also establishes that while other, subsidiary tests may be of some assistance in gauging the parties&#8217; intentions, none of them may displace the primary enquiry."
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Distinguishing Between Terms and Representations",
        "Intention of Parties"
    ],
    "YEAR": "1913",
    "NUMBER": "166",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The facts, in so far as they are of much relevance, concern the promotion of a company at the time of a boom in rubber production. One party asked the other if it were true that they were \u201cbringing out a rubber company\u201d. The response was positive. The next question was whether \u201cit was all right\u201d. The answer given was \u201cWe are bringing it out\u201d. On the strength of that answer, the inquirer bought a large quantity of shares in the company. The shares were bought at the height of the boom, but soon dropped in value when it became clear that the company&#8217;s plantations were inadequate. An action was brought against the defendants for fraudulently representing that the company was a rubber company or, in the alternative, for breach of a warranty to the same effect.<br>&emsp;&emsp;The misrepresentation action failed at first instance. The House of Lords held that the question of breach of warranty should never have been put to the jury at all, since as a matter of law there was no evidence on which it could have been maintained.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Moulton: \u201c... the attempts to make a person liable for an innocent misrepresentation have usually taken the form of attempts to extend the doctrine of warranty beyond its limits and to find that a warranty existed in cases where there was nothing more than an innocent misrepresentation. The present case is, in my opinion, an instance of this. But in respect of the question of the existence of a warranty the courts have had the advantage of an admirable enunciation of the true principle of law which was made in very early days by Holt CJ with respect to the contract of sale. He says: \u201cAn affirmation at the time of the sale is a warranty, provided it appears to be on evidence to be so intended\u201d. So far as decisions are concerned, this has, on the whole, been consistently followed in the courts of common law. But from time to time there have been dicta inconsistent with it which have, unfortunately, found their way into textbooks and have given rise to confusion and uncertainty in this branch of the law....A still more serious deviation from the correct principle is to be found in a passage in the judgment of the Court of Appeal in <i>De Lassalle v Guildford</i> [1901] 2 KB 215,221, which was cited to us in argument in the present case. In discussing the question whether a representation amounts to a warranty or not the judgment says: \u201cIn determining whether it was so intended, a decisive test is whether the vendor assumes to assert a fact of which the buyer is ignorant, or merely states an opinion or judgment upon a matter of which the vendor has no special knowledge, and on which the buyer may be expected also to have an opinion and to exercise his judgment\u201d.<br>&emsp;&emsp;With all deference to the authority of the court that decided that case, the proposition which it thus formulates cannot be supported. It is clear that the court did not intend to depart from the law laid down by Holt CJ and cited above, for in the same judgment that dictum is referred to and accepted as a correct statement of the law. It is, therefore, evident that the use of the phrase \u201cdecisive test\u201d cannot be defended. Otherwise it would be the duty of a judge to direct a jury that if a vendor states a fact of which the buyer is ignorant, they must, as a matter of law, find the existence of a warranty, whether or not the totality of the evidence shows that the parties intended the affirmation to form part of the contract; and this would be inconsistent with the law as laid down by Holt CJ. It may well be that the features referred to in the judgment of the Court of Appeal in that case may be criteria of value in guiding a jury in coming to a decision whether or not a warranty was intended, but they cannot be said to furnish decisive tests, because it cannot be said as a matter of law that the presence or absence of those features is conclusive of the intention of the parties. The intention of the parties can only be deduced from the totality of the evidence, and no secondary principles of such a kind can be universally true\u201d.<br>&emsp;&emsp;The next task must be to assess the subsidiary tests, bearing in mind Lord Moulton&#8217;s strictures. They are merely guides to discovering what the parties intended. That said, the first of them will often provide particularly direct insight."
    ],
    "NAME": "Heilbut , Symons & Co v Buckleton",
    "CATEGORY": "Incorporation of Terms &mdash; Distinguishing Between Terms and Representations &mdash; Intention of Parties",
    "CITATION": "Heilbut , Symons &amp; Co v Buckleton [1913] AC 30",
    "RELATED": [
        "Inntrepreneur Pub Co v East Crown Ltd",
        "Ecay v Godfrey",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Oscar Chess v Williams",
        "Schawel v Reade",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "Bannerman v White",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "Esso Petroleum Co Ltd v Mardon",
        "Couchman v Hill",
        "Grogan v Robin Meredith Plant Hire",
        "McCutcheon v David MacBrayne Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Importance of the Statement"
    ],
    "YEAR": "1861",
    "NUMBER": "167",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff, a hop merchant, offered the produce of 300 acres of hops for sale to the defendant, and provided a sample. The defendant asked for the plaintiff&#8217;s assurance than no sulphur had been used in the cultivation of the crop, and made it clear that he would not initiate discussions over price unless he received that assurance. The plaintiff provided a note to that effect, in the form of an indemnity.<br>&emsp;&emsp;The court held that the plaintiff&#8217;s indemnity was a term of the contract, since the negotiations would not have proceeded further unless it had been given."
    ],
    "NAME": "Bannerman v White",
    "CATEGORY": "Incorporation of Terms &mdash; Importance of the Statement",
    "CITATION": "Bannerman v White (1861) 10 CB NS 844",
    "RELATED": [
        "Couchman v Hill",
        "Schawel v Reade",
        "Oscar Chess v Williams",
        "Thompson v London, Midland and Scottish Railway Co Ltd",
        "City and Westminster Properties v Mudd",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "Heilbut , Symons & Co v Buckleton",
        "Olley v Marlborough Court Hotel",
        "L'Estrange v Graucob",
        "Ecay v Godfrey",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "Esso Petroleum Co Ltd v Mardon"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1957",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant acquired a new car from the plaintiffs on hire purchase terms. The plaintiffs took the defendant&#8217;s old car, a Morris, in part exchange. The defendant stated that the car was a 1948 model, and produced the vehicle&#8217;s registration book as confirmation of that fact. It later transpired that the car had in fact been manufactured in 1939 (the outward appearance of that model not having changed between those dates). The plaintiffs sued for damages for breach of warranty on the basis that they had allowed the defendant \u00a3115 more for the car than they would have done had they known its true age.<br>&emsp;&emsp;The Court of Appeal held by a majority that the defendant&#8217;s statement of the age of the car was a representation, rather than a warranty. The plaintiffs knew that the defendant had no greater knowledge of the car&#8217;s date of manufacture than they had themselves. Morris LJ, dissenting, considered that the age of the car was a vitally important matter, and therefore a condition of the contract.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;<span class=\"bd\">Denning LJ</span> explained why he differed from the trial judge who had found that the statement of the car&#8217;s age was a term of the contract:<br>&emsp;&emsp;\u201cHe asked himself, \u201cWas it fundamental to the contract?\u201d He answered it by saying that it was fundamental.... By concentrating on whether it was fundamental, he seems to me to have missed the crucial point in the case which is whether it was a term of the contract at all.... The material distinction here is between a statement which is a term of the contract and a statement which is only an innocent misrepresentation. This distinction is best expressed by the ruling of Lord Holt: Was it intended as a warranty or not? using the word warranty there in its ordinary English meaning: because it gives the exact shade of meaning that is required. It is something to which a man must be taken to bind himself.<br>&emsp;&emsp;In applying Lord Holt&#8217;s test, however, some misunderstanding has arisen by the use of the word \u201cintended\u201d. It is sometimes supposed that the tribunal must look into the minds of the parties to see what they themselves intended. That is a mistake. Lord Moulton made it quite clear that \u201cThe intention of the parties can only be deduced from the totality of the evidence\u201d. The question whether a warranty was intended depends on the conduct of the parties, on their words and behaviour, rather than on their thoughts. If an intelligent bystander would reasonably infer that a warranty was intended, that will suffice.<br>&emsp;&emsp;Turning now to the present case, much depends on the precise words that were used. If the seller says \u201cI believe it is a 1948 Morris. Here is the registration book to prove it\u201d, there is clearly no warranty. It is a statement of belief, not a contractual promise. But if the seller says \u201cI guarantee that it is a 1948 Morris. This is borne out by the registration book, but you need not rely solely on that. I give you my own guarantee that it is\u201d, there is clearly a warranty. The seller is making himself contractually responsible, even though the registration book is [read \u201cmay be\u201d] wrong\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;There is a risk of ending up thoroughly confused by Lord Denning&#8217;s remarks above, even though (as so often) they are technically correct if not indeed penetrating. A restatement of his points, which may perhaps alleviate the confusion, follows. Intention, as the fundamental test for the distinction between representation and warranty, is to be understood in its objective sense, as always. The importance of the statement made is not a free-standing test which can be used as an alternative to the test of objective intention. Importance is relevant if it increases the likelihood that the parties should be taken to have intended a remedy in damages if the statement should prove untrue. Importance, in this sense, will often be more truly shown by the emphasis placed on the statement, rather than by an examination of its relation to the main object of the contract.",
        "<span class=\"ud\"><span class=\"bd\">A closer look </span></span><br>&emsp;&emsp;<span class=\"it\">On a separate point, it should be noted that Denning LJ admits elsewhere in his judgment that he is concerned to reach a right result on the facts of this case, and that the law regarding representation and warranties enables him to do it. The loss, on facts such as these, would ideally be borne by the fraudster who first faked the car&#8217;s registration documents. That person is not available. Since the remaining choice is between penalising the expert buyers, who could have made supplementary checks but did not, or the innocent seller who had no relevant expertise, Denning LJ has no hesitation which way to go. </span>"
    ],
    "CATEGORY": "Incorporation of Terms &mdash; Distinguishing Between Terms and Representations &mdash; Subsidiary Tests",
    "CITATION": "Oscar Chess Ltd v Williams [1957] 1 WLR 370",
    "CATEGORIES": [
        "Incorporation of Terms",
        "Distinguishing Between Terms and Representations",
        "Subsidiary Tests"
    ],
    "RELATED": [
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Ecay v Godfrey",
        "Inntrepreneur Pub Co v East Crown Ltd",
        "Schawel v Reade",
        "Heilbut , Symons & Co v Buckleton",
        "Bannerman v White",
        "Olley v Marlborough Court Hotel",
        "AEG (UK( Ltd v Logic Resource",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "Grogan v Robin Meredith Plant Hire",
        "Parker v South Eastern Railway Co",
        "Esso Petroleum Co Ltd v Mardon"
    ],
    "NUMBER": "168",
    "TYPE": "Case",
    "AKA": "Oscar Chess",
    "NAME": "Oscar Chess v Williams",
    "FLAGS": [
        "Denning"
    ]
},
{
    "YEAR": "1965",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The actor Dick Bentley asked the defendant, a car-dealer, to find him a \u201cwell-vetted\u201d Bentley car. An apparently suitable car was found, and the defendant told the plaintiff that it had done only 20,000 miles since being fitted with a replacement engine and gearbox. This was the mileage shown by the speedometer. The defendant said that he had put this information forward as being true to the best of his belief, but that he had not warranted it so as to make it a term of the contract, nor had he represented it (a representation is a statement of fact). The trial judge found on the evidence that the statement as to mileage was false, and had amounted to a warranty.<br>&emsp;&emsp;The Court of Appeal, including Lord <span class=\"bd\">Denning MR</span>, distinguished <i>Oscar Chess</i> and dismissed the appeal. The statement as to mileage was indeed a term of the contract.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;\u201cI endeavoured to explain in <i>Oscar Chess Ltd v Williams</i> [1957] 1 WLR 370 that the question whether a warranty was intended depends on the conduct of the parties, on their words and behaviour, rather than on their thoughts. If an intelligent bystander would reasonably infer that a warranty was intended, that will suffice. What conduct, then? What words or behaviour, lead to the inference of a warranty?<br>&emsp;&emsp;Looking at the cases once more, as we have done so often, it seems to me that if a representation is made in the course of dealings for a contract for the very purpose of inducing the other party to act on it, and actually inducing him to act upon it, by entering into the contract, that is prima facie ground for inferring that it was intended as a warranty... But the maker of the representation can rebut this inference if he can show that it really was an innocent misrepresentation, in that he was in fact innocent of fault in making it, and that it would not be reasonable in the circumstances for him to be bound by it. In the <i>Oscar Chess</i> case the inference was rebutted. There a man had bought a second-hand car and received with it a log-book, which stated the year of the car, 1948. He afterwards resold the car. When he resold it he simply repeated what was in the log-book and passed it on to the buyer. He honestly believed on reasonable grounds that it was true. He was completely innocent of any fault. There was no warranty by him but only an innocent misrepresentation. Whereas in the present case it is very different. The inference is not rebutted. Here we have a dealer, Smith, who was in a position to know, or at least to find out, the history of the car. He could have got it by writing to the makers. He did not do so. Indeed it was done later. When the history of this car was examined, his statement turned out to be quite wrong. He ought to have known better. There was no reasonable foundation for it\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This was not Lord Denning&#8217;s finest hour, unless one is happy to let matters rest on the footing that people in the trade should more generally be liable to pay contractual damages than those who are not. The references to fault seem entirely beside the point; the court was required to construe a contract, not to judge the defendant&#8217;s behaviour. Fault, or its absence, is not generally the most appropriate tool for contractual analysis, and there is little independent support in the case law for using it to detect the difference between the making of statements which are contractual terms and those which are extra-contractual representations.<br>&emsp;&emsp;What can one properly take from this well-known case? Perhaps only the following, which omits reference to fault. A statement will more readily be found to be a term of the contract if it is made by a person who, to the knowledge of both parties, is well-placed to guarantee its accuracy. Somebody who is in the trade, or an expert, or a person who could be presumed to have the means to have checked the facts, is so placed.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">There is a further difficulty lurking in these two cases. It needs to be recorded here simply because it is capable of leading to misunderstanding at a later stage. Lord Denning manoeuvres himself into equating representations with statements of belief, and warranties with inducements. Unfortunately a representation, strictly understood, is precisely not a statement of belief but one of fact. What is more, a representation must be an inducement to enter into a contract, so it is puzzling to find the fact of inducement used as to define a statement as going beyond a representation. Oscar Chess and Dick Bentley leave certain aspects of the law in a mess. </span>"
    ],
    "CATEGORY": "Incorporation of Terms &mdash; Distinguishing Between Terms and Representations &mdash; Subsidiary Tests",
    "CITATION": "Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd [1965] 1 WLR 623",
    "CATEGORIES": [
        "Incorporation of Terms",
        "Distinguishing Between Terms and Representations",
        "Subsidiary Tests"
    ],
    "RELATED": [
        "Inntrepreneur Pub Co v East Crown Ltd",
        "Ecay v Godfrey",
        "Oscar Chess v Williams",
        "Schawel v Reade",
        "Heilbut , Symons & Co v Buckleton",
        "McCutcheon v David MacBrayne Ltd",
        "Couchman v Hill",
        "Grogan v Robin Meredith Plant Hire",
        "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "Bannerman v White",
        "Tilden Rent-A-Car Co v Clendinning",
        "AEG (UK( Ltd v Logic Resource"
    ],
    "NUMBER": "169",
    "TYPE": "Case",
    "NAME": "Dick Bentley Productions v Harold Smith (Motors) Ltd",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "NUMBER": "170",
    "TYPE": "Concept",
    "NAME": "Other tests",
    "CATEGORY": "Incorporation of Terms",
    "RELATED": [
        "Timing.",
        "Timing",
        "Reduction of the contract to writing",
        "Incorporation of Terms - Introduction",
        "The Parol Evidence Rule",
        "The contractual nature of the document / expectations of the parties",
        "Onerous or unusual clauses",
        "2. Terms which supplement the contract (warranties etc)",
        "The intention with which the statement was made",
        "Assumption of responsibility / advice to verify",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "Collateral Contracts"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Other tests</span></span><br>&emsp;&emsp;Since the distinction between contractual terms and mere representation was once hotly fought, as explained earlier, there are numerous cases on the subject. Many of them, in so far as they provide a rationale for the court&#8217;s decision, can be taken to state tests for drawing the distinction. Most, on a close reading, turn out to be heavily dependent on factual context, so that they cannot conveniently be separated from it for wider application. What little could be achieved by presenting such authorities individually would be outweighed by the burden of learning to which it would lead. Therefore a short selection of the cases will be given very briefly. All should be taken as means of measuring the importance of the statement in question so as to judge the intention with which it was ostensibly made."
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "NUMBER": "171",
    "TYPE": "Concept",
    "NAME": "Assumption of responsibility / advice to verify",
    "CATEGORY": "Incorporation of Terms",
    "RELATED": [
        "The Parol Evidence Rule",
        "Onerous or unusual clauses",
        "Other tests",
        "The intention with which the statement was made",
        "Collateral Contracts",
        "Timing.",
        "The contractual nature of the document / expectations of the parties",
        "Reduction of the contract to writing",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "2. Terms which supplement the contract (warranties etc)",
        "Timing",
        "Incorporation of Terms - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Assumption of responsibility / advice to verify</span></span>"
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Distinguishing Between Terms and Representations",
        "Subsidiary Tests"
    ],
    "YEAR": "1912",
    "NUMBER": "172",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Where the prospective buyer of a horse was told by the seller that he need not continue to examine the animal because if anything were wrong the seller would have informed him, it was held by Lord Moulton that there could be no clearer evidence that the statement was meant as a term of the contract. The seller was taking responsibility for the soundness of the horse."
    ],
    "NAME": "Schawel v Reade",
    "CATEGORY": "Incorporation of Terms &mdash; Distinguishing Between Terms and Representations &mdash; Subsidiary Tests",
    "CITATION": "Schawel v Reade [1912] IR 64",
    "RELATED": [
        "Ecay v Godfrey",
        "Oscar Chess v Williams",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Inntrepreneur Pub Co v East Crown Ltd",
        "Heilbut , Symons & Co v Buckleton",
        "Bannerman v White",
        "AEG (UK( Ltd v Logic Resource",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "Thompson v London, Midland and Scottish Railway Co Ltd",
        "L'Estrange v Graucob",
        "City and Westminster Properties v Mudd",
        "Parker v South Eastern Railway Co"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Distinguishing Between Terms and Representations",
        "Subsidiary Tests"
    ],
    "YEAR": "1947",
    "NUMBER": "173",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Where, by contrast, the seller of a motor cruiser appeared concerned to know whether the buyer would have a survey done or not, Lord Goddard CJ held that the seller&#8217;s statements as to the boat&#8217;s condition would not be interpreted as a contractual guarantee. It was not clear in this context that the seller was prepared to take responsibility for its condition."
    ],
    "NAME": "Ecay v Godfrey",
    "CATEGORY": "Incorporation of Terms &mdash; Distinguishing Between Terms and Representations &mdash; Subsidiary Tests",
    "CITATION": "Ecay v Godfrey (1947) 80 Ll L Rep 286",
    "RELATED": [
        "Inntrepreneur Pub Co v East Crown Ltd",
        "Schawel v Reade",
        "Oscar Chess v Williams",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Heilbut , Symons & Co v Buckleton",
        "AEG (UK( Ltd v Logic Resource",
        "Olley v Marlborough Court Hotel",
        "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "Thompson v London, Midland and Scottish Railway Co Ltd",
        "Bannerman v White",
        "Couchman v Hill",
        "Esso Petroleum Co Ltd v Mardon"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "NUMBER": "174",
    "TYPE": "Concept",
    "NAME": "Timing.",
    "CATEGORY": "Incorporation of Terms",
    "RELATED": [
        "The contractual nature of the document / expectations of the parties",
        "Collateral Contracts",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "Onerous or unusual clauses",
        "2. Terms which supplement the contract (warranties etc)",
        "Assumption of responsibility / advice to verify",
        "Incorporation of Terms - Introduction",
        "The Parol Evidence Rule",
        "Timing",
        "Other tests",
        "Reduction of the contract to writing",
        "The intention with which the statement was made"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Timing.</span></span>"
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "NUMBER": "175",
    "TYPE": "Concept",
    "NAME": "Reduction of the contract to writing",
    "CATEGORY": "Incorporation of Terms",
    "RELATED": [
        "Incorporation of Terms - Introduction",
        "The intention with which the statement was made",
        "Onerous or unusual clauses",
        "2. Terms which supplement the contract (warranties etc)",
        "The Parol Evidence Rule",
        "The contractual nature of the document / expectations of the parties",
        "Collateral Contracts",
        "Timing.",
        "Other tests",
        "Timing",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "Assumption of responsibility / advice to verify"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Reduction of the contract to writing</span></span>"
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Distinguishing Between Terms and Representations",
        "Subsidiary Tests"
    ],
    "YEAR": "2000",
    "NUMBER": "176",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;There are dicta in some cases which suggest that a statement made at or just before the conclusion of the contract is more likely to be held to be intended as a term (because it had decisive effect on the recipient&#8217;s willingness to contract). It is also said that where the parties have drawn up a written contract, and made no reference in it to an earlier statement, there is a presumption that it is not intended to have contractual effect. <i>Inntrepreneur Pub Co v East Crown Ltd</i> is authority for both these approaches.<br>&emsp;&emsp;Can a statement be shown to be a term of the contract where it conflicts with a provision which clearly is part of the contract?<br>&emsp;&emsp;The logical objection to this state of affairs is obvious, but the starting point for a discussion of the problem as far as English law is concerned is not logic but a general policy of the courts towards evidence of pre-contractual statements. Where the contract itself is oral, no difficulty arises; the court will review everything which passed between the parties in order to determine what is within the contract. Where the contract is written there is, at least in theory, a broad objection to looking outside it in order to qualify it in any way."
    ],
    "NAME": "Inntrepreneur Pub Co v East Crown Ltd",
    "CATEGORY": "Incorporation of Terms &mdash; Distinguishing Between Terms and Representations &mdash; Subsidiary Tests",
    "CITATION": "Inntrepreneur Pub Co v East Crown Ltd [2000] 2 Lloyd&#8217;s Rep 611",
    "RELATED": [
        "Schawel v Reade",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Ecay v Godfrey",
        "Oscar Chess v Williams",
        "Heilbut , Symons & Co v Buckleton",
        "Esso Petroleum Co Ltd v Mardon",
        "Curtis v Chemical Cleaning & Dyeing Co",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "AEG (UK( Ltd v Logic Resource",
        "Thompson v London, Midland and Scottish Railway Co Ltd",
        "Tilden Rent-A-Car Co v Clendinning",
        "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incorporation of Terms"
    ],
    "NUMBER": "177",
    "FLAGS": [
        "Treitel",
        "McKendrick"
    ],
    "TYPE": "Concept",
    "NAME": "The Parol Evidence Rule",
    "CATEGORY": "Incorporation of Terms",
    "RELATED": [
        "Timing",
        "2. Terms which supplement the contract (warranties etc)",
        "Other tests",
        "Onerous or unusual clauses",
        "The intention with which the statement was made",
        "Incorporation of Terms - Introduction",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "Assumption of responsibility / advice to verify",
        "The contractual nature of the document / expectations of the parties",
        "Timing.",
        "Collateral Contracts",
        "Reduction of the contract to writing"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The Parol Evidence Rule </span></span><br>&emsp;&emsp;The rule, for which authority is normally found in the case of <i>Jacobs v Batavia (1924)</i>, ostensibly prevents the adducing of extrinsic evidence to \u201cadd to, vary or contradict\u201d the terms of a written contract. The rationale for this principle can be found in the combined values of certainty, finality, and respect for the parties&#8217; objectively recorded contractual intentions. The contract, so this reasoning would have it, is sacrosanct.<br>&emsp;&emsp;Nevertheless, no statement of the parol evidence rule would be complete without immediately adding the proviso that there are numerous exceptions to it. One of the most telling of them consists in the proposition that one may adduce \u201cextrinsic\u201d evidence to rebut the presumption that the contract is entire, and to show that the parties actually intended it to be in two parts \u2013 the formal document, and some other statement which was meant to stand with it on an equal footing. The adduction of such evidence does not \u201cadd to, vary or contradict\u201d the contract. It merely shows that the contract exists in two places, and therefore indicates its true extent.<br>&emsp;&emsp;It is not necessary to set out (or to learn) the intricacies of the rule in detail, at least for the purposes of this year. As far as the detail is concerned, the Law Commission in 1986 published a report on the rule, concluding that it required no amendment because in reality it never prevented the adduction of relevant evidence. <span class=\"bd\">Treitel</span> took a more cautious view. Passages from the Law Commission&#8217;s report and <span class=\"bd\">Treitel</span>&#8216;s response are reproduced in <span class=\"bd\">McKendrick</span>&#8216;s textbook.<br>&emsp;&emsp;The point of present interest is that the parol evidence rule has in fact (and somewhat ironically) provided a way for English law to circumvent the obvious logical answer to the question about conflicting statements posed at the beginning of this section. To that logical answer there can be no response, but to a rule of evidence which covers the same ground, there can be exceptions. The two exceptions of greatest relevance are (a) that a pre-contractual statement may be said to enter the contract, despite inconsistent terms within it, as an express oral assurance which overrides the inconsistent terms, or (b) it may be regarded as a collateral contract."
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation of Conlicting Terms",
        "Parol Evidence Rule"
    ],
    "YEAR": "1947",
    "NUMBER": "178",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff attended an auction, intending to buy a heifer for service by his bull. The catalogue described the heifer as \u201cunserved\u201d, but also stated that accuracy of descriptions was not guaranteed and that lots were sold with all errors of description. Before the auction began, the plaintiff asked the defendant, who was owner of the heifer, and the auctioneer, for confirmation that it was unserved. Each assured him that it was, and he bid successfully for the animal. In fact it was not unserved, and it died from carrying a calf too young.<br>&emsp;&emsp;The Court of Appeal held that the express oral assurance amounted to a contractual term which overrode the disclaimer in the catalogue.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The ground of this decision was explained by Scott LJ: \u201cThere was no contract in existence until the hammer fell. The offer was defined, the auctioneer&#8217;s authority was defined, but it was in law open to the would-be purchaser to intimate in advance before bidding for any particular heifer offered from the rostrum that that he was not willing to bid for the lot unless the defendant modified the terms of sale contained in the two documents in some way specified by him. There is no doubt that the plaintiff did make some attempt of the kind in order to protect himself from the risk of buying an animal that was not of the kind described.<br>&emsp;&emsp;The real question is: What did the parties understand by the question addressed to and the answer received from both the defendant and the auctioneer? It is contended by the defendant that the question meant \u201chaving regard to the onerous stipulations which I know I shall have to put up with if I bid and the lot is knocked down to me, can you give me your honourable assurance that the heifers have in fact not been served? If so, I will risk the penalties of the catalogue\u201d. The alternative meaning is: \u201cI am frightened of contracting on your published terms, but I will bid if you will tell me by word of mouth that you accept full responsibility for the statement in the catalogue that the heifers have not been served, or in other words, give me a clean warranty. That is the only condition on which I will bid\u201d. If that was the meaning there was clearly an oral offer of a warranty which over-rode the stultifying condition in the printed terms, that offer was accepted by the plaintiff when he bid, and the contract was made on that basis when the lot was knocked down to him...\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">This case is in fact controversial, but for a subsidiary reason not directly related to the conflict between the exempting terms and the express assurance. Commentators have wondered whether it was legitimate for one bidder at auction to have the benefit of a private warranty while others did not, and have contrasted Couchman with a nineteenth century case which went the other way but was not cited to the court. It is not necessary to dwell on the problem, and in fact Couchman is overlain by more than one later statement of judicial approval.</span><br>&emsp;&emsp;<span class=\"it\">The more substantial point is to gauge the means by which the oral assurance is found to take precedence over the potentially stultifying condition in the contract. The reasoning would seem to be this. The assurance comes later in time, and is therefore taken to represent the actual bargain between the parties. It is in this sense that it overrides.</span>"
    ],
    "NAME": "Couchman v Hill",
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation of Conlicting Terms &mdash; Parol Evidence Rule",
    "CITATION": "Couchman v Hill [1947] KB 554",
    "RELATED": [
        "Esso Petroleum Co Ltd v Mardon",
        "City and Westminster Properties v Mudd",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "Bannerman v White",
        "Parker v South Eastern Railway Co",
        "Olley v Marlborough Court Hotel",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "Inntrepreneur Pub Co v East Crown Ltd",
        "Tilden Rent-A-Car Co v Clendinning",
        "Oscar Chess v Williams",
        "Schawel v Reade",
        "Grogan v Robin Meredith Plant Hire"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation of Conlicting Terms",
        "Collateral Contracts"
    ],
    "NUMBER": "179",
    "TYPE": "Concept",
    "NAME": "Collateral Contracts",
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation of Conlicting Terms &mdash; Collateral Contracts",
    "RELATED": [
        "Other tests",
        "2. Terms which supplement the contract (warranties etc)",
        "Assumption of responsibility / advice to verify",
        "Reduction of the contract to writing",
        "Onerous or unusual clauses",
        "The contractual nature of the document / expectations of the parties",
        "The Parol Evidence Rule",
        "Timing",
        "Incorporation of Terms - Introduction",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "The intention with which the statement was made",
        "Timing."
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Collateral Contracts</span></span><br>&emsp;&emsp;There is still some difficulty in accepting that an express oral assurance can stand together with a contract which appears to deprive it of any effect. One means of lessening the difficulty is to reinterpret the situation as disclosing two contracts \u2013 the main agreement, and the oral assurance as a second agreement collateral to the first. A collateral contract basically has the same structure as a unilateral contract. It consists of an offer which is accepted by the doing of an act, namely entering into the main contract (this will also constitute the giving of consideration)."
    ]
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation of Conlicting Terms",
        "Collateral Contracts"
    ],
    "YEAR": "1958",
    "NUMBER": "180",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In 1941 the defendant took on the tenancy of a lock-up shop. The landlord did not object to his sleeping there. In 1947 a new lease was in the process of negotiation. It included covenants that the defendant would not sleep on the premises, apparently included to prevent the tenancy coming within the Rent Restriction Acts. In response to the defendant stating that he would not sign the lease with this covenant in it, the landlord&#8217;s agent told him that no objection would be made to his sleeping there. The lease was signed. In 1956 the plaintiffs sought forfeiture of the lease on the ground that the defendant was in breach of covenant by sleeping on the premises.<br>&emsp;&emsp;Harman J held that the promise not to object to the defendant sleeping on the premises, together with his entry into the lease, together constituted a collateral contract. Promissory estoppel was not applicable, because the landlord&#8217;s promise related to rights under a future contract, not an existing one.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The collateral contract analysis works well because it readily evades the parol evidence rule (such as it is). To meet the objection that there is a clear contract which the assurance is impermissibly attempting to contradict, it is possible to point to an independent process of contract formation which has produced a separate agreement. Furthermore, it will normally be possible to submit that since the main agreement would not have been concluded but for the collateral contract, so the main agreement must be read subject to the collateral one. Even if the main agreement were held to be unaffected by the collateral contract, it might be possible to claim damages for breach of the latter, as was successfully done in the next case."
    ],
    "NAME": "City and Westminster Properties v Mudd",
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation of Conlicting Terms &mdash; Collateral Contracts",
    "CITATION": "City and Westminster Properties v Mudd [1958] 3 WLR 312",
    "RELATED": [
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "Esso Petroleum Co Ltd v Mardon",
        "Couchman v Hill",
        "Heilbut , Symons & Co v Buckleton",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Ecay v Godfrey",
        "Oscar Chess v Williams",
        "Olley v Marlborough Court Hotel",
        "McCutcheon v David MacBrayne Ltd",
        "AEG (UK( Ltd v Logic Resource",
        "Inntrepreneur Pub Co v East Crown Ltd",
        "L'Estrange v Graucob"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation of Conlicting Terms",
        "Collateral Contracts"
    ],
    "YEAR": "1976",
    "NUMBER": "181",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Until 1967, the plaintiffs&#8217; shipments of machinery had always been carried by the defendant beneath decks, since the machinery was liable to rust if carried on deck. In 1967, in the course of a \u201ccourtesy call\u201d, the defendant proposed that it should be carried in containers. The plaintiff expressed concern about rusting, since containers are often carried on deck. The defendant gave an oral assurance that the plaintiff&#8217;s goods would always be shipped below decks, and the plaintiff agree to switch to containers. The written contract gave the defendant discretion in the matter. By an oversight, the plaintiff&#8217;s goods were placed on deck, and were lost overboard.<br>&emsp;&emsp;The Court of Appeal held that the oral assurance amounted to a collateral contract to the effect that \u201cif we continue to give you our business, you will arrange that those goods in containers are shipped under deck\u201d. It had been breached."
    ],
    "NAME": "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation of Conlicting Terms &mdash; Collateral Contracts",
    "CITATION": "J Evans &amp; Son (Portsmouth) v Andrea Merzario Ltd [1976] 2 All ER 930",
    "RELATED": [
        "Esso Petroleum Co Ltd v Mardon",
        "City and Westminster Properties v Mudd",
        "Couchman v Hill",
        "Parker v South Eastern Railway Co",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Olley v Marlborough Court Hotel",
        "Oscar Chess v Williams",
        "Tilden Rent-A-Car Co v Clendinning",
        "Schawel v Reade",
        "McCutcheon v David MacBrayne Ltd",
        "Heilbut , Symons & Co v Buckleton",
        "Grogan v Robin Meredith Plant Hire"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Incorporation of Terms",
        "Incorporation of Conlicting Terms",
        "Collateral Contracts"
    ],
    "YEAR": "1976",
    "NUMBER": "182",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The facts are not relevant for present purposes, but certain characteristically candid remarks of Lord <span class=\"bd\">Denning</span> form an apt postscript to the second half of this lecture:<br>&emsp;&emsp;\u201cEver since <i>Heilbut Symons v Buckleton</i> we have had to contend with the law as laid down by the House of Lords that an innocent misrepresentation gives no right to damages. In order to escape from that rule, the pleader used to allege \u2013 I often did it myself \u2013 that the misrepresentation was fraudulent, or alternatively a collateral warranty. We had to reckon, of course, with the dictum of Lord Moulton that such \u201ccollateral contracts must from their very nature be rare\u201d. But more often than not the court elevated the innocent misrepresentation into a collateral warranty, and thereby did justice \u2013 in advance of the Misrepresentation Act 1967. I remember scores of cases of that kind, especially on the sale of a business. A representation as to the profits that had been made in the past was invariably held to be a warranty. Besides that experience, there have been many cases since I have sat in this court where we have readily held a representation \u2013 which induces a person to enter into a contract \u2013 to be a warranty sounding in damages. I summarised them in <i>Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd </i>...\u201d."
    ],
    "NAME": "Esso Petroleum Co Ltd v Mardon",
    "CATEGORY": "Incorporation of Terms &mdash; Incorporation of Conlicting Terms &mdash; Collateral Contracts",
    "CITATION": "Esso Petroleum Co Ltd v Mardon [1976] QB 801",
    "RELATED": [
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "City and Westminster Properties v Mudd",
        "Couchman v Hill",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Olley v Marlborough Court Hotel",
        "Parker v South Eastern Railway Co",
        "Heilbut , Symons & Co v Buckleton",
        "Grogan v Robin Meredith Plant Hire",
        "Oscar Chess v Williams",
        "Bannerman v White",
        "Ecay v Godfrey",
        "Tilden Rent-A-Car Co v Clendinning"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Interpretation of Contracts"
    ],
    "NUMBER": "183",
    "FLAGS": [
        "Steyn",
        "McKendrick"
    ],
    "TYPE": "Concept",
    "NAME": "Interpretation of Contracts - Introduction",
    "CATEGORY": "Interpretation of Contracts",
    "RELATED": [
        "Development of Modern Interpretation",
        "Importance of Interpretation",
        "Going beyond \u201cmistakes\u201d in the contract",
        "Interpretation and precedent",
        "The temptation to go beyond the dictionary",
        "Over-extending the \u201cmatrix of fact\u201d",
        "The old principles of \u201clegal\u201d interpretation",
        "Commentary on Lord Hoffmann's Restatement",
        "Artificially limiting the matrix of fact",
        "The fraud cases",
        "Consideration Must Not Be Past",
        "Mistake - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;The first half of this lecture is an introduction to the field of contractual interpretation. By contrast with almost all the material presented so far, this part of this lecture is designed to be read rather than learnt. This is not an area, it has to be admitted, in which a line of decided cases readily provides the concepts or devices with which to unlock problem questions. In fact contractual interpretation, as has often been remarked, is not much governed by the use of authority. Cases there are, but they amount to statements of judicial perspective rather than tools to use against facts. That being said, they do give direct insights into the character and indeed the success of this country&#8217;s commercial law.<br>&emsp;&emsp;In <i>Lord Napier and Ettrick v R F Kershaw Ltd</i> [1999] 1 WLR 756, Lord <span class=\"bd\">Steyn</span>, a judge of the Commercial Court for much of his judicial career, made this seemingly anodyne statement:<br>&emsp;&emsp;\u201cLoyalty to the text of a commercial contract, instrument, or document read in its commercial setting is the paramount principle of interpretation. But in the process of interpreting the meaning of the language of a commercial document the court ought generally to favour a commercially sensible construction. The reason for this approach is that a commercial construction is likely to give effect to the intention of the parties. Words ought therefore to be interpreted in the way in which a reasonable commercial person would interpret them. And the reasonable commercial person can safely be assumed to be unimpressed with technical interpretations and undue emphasis on niceties of language\u201d.<br>&emsp;&emsp;Lord Steyn&#8217;s opinion suffers the following reaction from Professor <span class=\"bd\">McKendrick</span>:<br>&emsp;&emsp;\u201cThe drift is clear but whether it is a wholly desirable development is less clear cut. The last sentence is problematic. Is Lord Steyn&#8217;s assumption about the \u201creasonable commercial person\u201d correct? What about the case in which our \u201creasonable commercial person\u201d consults a lawyer before entering into the transaction? Is a lawyer also assumed to be unimpressed with \u201ctechnical interpretations and undue emphasis on niceties of language?\u201d<br>&emsp;&emsp;The point is, of course, a fair one. On the one hand, and as Lord Steyn might put it, the courts must be sensitive to what the parties as reasonable people in business probably meant by their agreement. But as McKendrick might reply, the courts must also be the guardians of certainty, recognising that the parties will have gone to the lawyers to have their deal framed by reference to the rules, and will now expect the court to apply those rules.<br>&emsp;&emsp;The resolution of this difference of emphasis demands the striking of a balance between responsiveness and predictability. The danger is that a court (or system of commercial law) which tries too hard to second-guess the parties&#8217; intention will have business people struggling to keep up with the latest precedent reflecting responsive and innovative judicial interpretation of contracts. A kind of inflation stalks the field."
    ]
},
{
    "CATEGORIES": [
        "Interpretation of Contracts",
        "Importance of Interpretation"
    ],
    "NUMBER": "184",
    "TYPE": "Concept",
    "NAME": "Importance of Interpretation",
    "CATEGORY": "Interpretation of Contracts &mdash; Importance of Interpretation",
    "RELATED": [
        "Interpretation and precedent",
        "Going beyond \u201cmistakes\u201d in the contract",
        "The temptation to go beyond the dictionary",
        "Interpretation of Contracts - Introduction",
        "Development of Modern Interpretation",
        "Commentary on Lord Hoffmann's Restatement",
        "The old principles of \u201clegal\u201d interpretation",
        "Over-extending the \u201cmatrix of fact\u201d",
        "Artificially limiting the matrix of fact",
        "The fraud cases",
        "The doctrine of fundamental breach",
        "The basis of quantification"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Importance of Interpretation</span></span><br>&emsp;&emsp;However, does any of this matter, beyond the fact that judges (like anybody else who has ever who has puzzled over a problem of interpretation) feel a powerful need to get it right? The staple diet of the Commercial Court, as Lord Goff pointed out in a 1984 essay, may be summed up in a single word \u2013 \u201cConstruction\u201d; but whichever way such problems are resolved, one party will always lose while the other wins. Provided justice is broadly done, could interpretation not be regarded as a matter of judicial technique with limited significance for the rest of the world?<br>&emsp;&emsp;An answer: it matters intensely that judges should be seen to understand the way that commerce works. There is more riding upon that than the doing of justice in individual cases. This country depends for its livelihood upon transactions. Those undertaking transactions need to be able to plan them in accordance with a body of rules which facilitates their working, and with confidence that judges will understand their dealings when applying the rules. The body of rules exists; for 250 years (essentially since the time of Lord Mansfield) English commercial law has formed itself through constant and remarkably close contact with the way in which merchants actually do business. Every new case raising a point of construction, however, is a new test of whether a judge has correctly grasped the character of what it is to which the rules must be applied. If the grasp is seen to be there, then it is the more likely that deals will continue to be done under English law, and may well be locally advised, financed, insured, reinsured and arbitrated. If the grasp fails, then the trade will go where it is better understood, or it will falter in its turn. The giving of commercially right answers is not a matter of judicial perfectionism. Commercial adjudication has consumers, and not just those who may be present in court."
    ]
},
{
    "CATEGORIES": [
        "Interpretation of Contracts",
        "Development of Modern Interpretation"
    ],
    "NUMBER": "185",
    "TYPE": "Concept",
    "NAME": "Development of Modern Interpretation",
    "CATEGORY": "Interpretation of Contracts &mdash; Development of Modern Interpretation",
    "RELATED": [
        "Commentary on Lord Hoffmann's Restatement",
        "Importance of Interpretation",
        "The old principles of \u201clegal\u201d interpretation",
        "Interpretation of Contracts - Introduction",
        "The temptation to go beyond the dictionary",
        "Going beyond \u201cmistakes\u201d in the contract",
        "Over-extending the \u201cmatrix of fact\u201d",
        "Interpretation and precedent",
        "Artificially limiting the matrix of fact",
        "Timing",
        "Lord Denning's invention of common mistake in equity",
        "Incomplete and Vague Agreements - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Development of Modern Interpretation</span></span><br>&emsp;&emsp;The first principle of the construction of contracts has traditionally been that it is for the court to act upon its own objective understanding of what a document means. Its interpretation will be informed by relevant evidence, but will not be coloured by the individual parties&#8217; subjective interpretations."
    ]
},
{
    "CATEGORIES": [
        "Interpretation of Contracts",
        "Development of Modern Interpretation"
    ],
    "YEAR": "1911",
    "NUMBER": "186",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff sought an injunction to prevent the defendant, its former director, from carrying on business in Liverpool as a manufacturer of margarine. It relied on an agreement under seal that he would not set up in the relevant area as a \u201cprovision merchant\u201d for a specified time. It was therefore necessary to decide whether trading as a margarine manufacturer made the defendant a provision merchant. The Court of Appeal held, after considering evidence, that it did not.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Cozens-Hardy MR stated the accepted approach to the construction of documents: \u201cIf there is one principle more clearly established than another in English law it is surely this: It is for the court to construe a written document. It is irrelevant and improper to ask what the parties, prior to the execution of the instrument, intended or understood. What is the meaning of the language that they have used therein? That is the problem, and the only problem. In saying that, I do not mean to assert that no evidence can be admitted.... it is the duty of the court, which is presumed to understand the English language, to construe the document according to the ordinary grammatical meaning of the words used therein, and without reference to anything which has previously passed between the parties to it\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This approach to construction, sometimes known as the \u201cfour corners\u201d doctrine, amounted to the view that everything that could properly be taken from a document would appear from its words alone, provided only that they were properly interpreted (which might require the meaning of some to be elucidated by objective evidence). Such an inward-looking perspective may seem all too appropriate to an elitist and isolated judiciary. It should be borne in mind, however, that it perhaps encouraged savings of time and expense in adjudication by limiting the preparation on which it would be based; that its confirmation of the supremacy of literal meaning promoted predictability; and that it had the strong backing in principle from the fact that the court had asserted its jurisdiction over the document subject to scrutiny. The court in a sense \u201cowned\u201d the document. Certainly it regarded itself as the owner of its meaning.<br>&emsp;&emsp;Nevertheless, this attitude underwent a modification. In <i>Prenn v Simmonds</i> [1971] 1 WLR Lord Wilberforce disclaimed the idea that agreements could be wholly isolated from the \u201cmatrix of fact\u201d in which they were set. He explained this corrective view in more detail in the next case."
    ],
    "NAME": "Lovell & Christmas Ltd v Wall",
    "CATEGORY": "Interpretation of Contracts &mdash; Development of Modern Interpretation",
    "CITATION": "Lovell &amp; Christmas Ltd v Wall (1911) 104 LT 85",
    "RELATED": [
        "Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "Bank of Credit and Commerce International SA v Ali",
        "George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "Chartbrook Ltd v Persimmon Homes Ltd",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "Pettitt v Pettitt",
        "Hollier v Rambler Motors (AMC) Ltd",
        "Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "Merritt v Merritt",
        "Warlow v Harrison",
        "Edwards v Skyways"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1976",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;\u201cNo contracts are made in a vacuum: there is always a setting in which they have to be placed. The nature of what is legitimate to have regard to is usually described as \u201cthe surrounding circumstances\u201d but this phrase is imprecise: it can be illustrated but hardly defined. In a commercial contract it is certainly right that the court should know the commercial purpose of the contract and this in turn presupposes knowledge of the genesis of the transaction, the background, the context, the market in which the parties are operating....<br>&emsp;&emsp;It is often said that, in order to be admissible in aid of construction, these extrinsic facts must be within the knowledge of both parties to the contract, but this requirement should not be stated in too narrow a sense. When one speaks of the knowledge of the parties to the contract, one is speaking objectively \u2013 the parties cannot themselves give direct evidence of what their intention was \u2013 and what must be ascertained is what is to be taken as the intention which reasonable people would have if placed in the situation of the parties. Similarly when one is speaking of aim, or object, or commercial purpose, one is speaking objectively of what reasonable persons would have in mind in the situation of the parties... [w]hat the court must do must be to place itself in thought in the same factual matrix as that in which the parties were\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion </span></span><br>&emsp;&emsp;It is slightly ironic that Lord Wilberforce&#8217;s stepping beyond the four corners of the contract into the \u201cmatrix of fact\u201d is necessary in part because of an exclusionary rule of evidence. The parties cannot be heard on the subject of what they apprehended they were agreeing \u2013 this rule is akin to the parol evidence rule (see the last lecture), although technically it is separate from it. As a result, the genesis of the contract has to be studied in objective terms.<br>&emsp;&emsp;The next case is central to the subject of contractual interpretation, because Lord <span class=\"bd\">Hoffmann</span> took the opportunity to give a general account of what he took to be the modern practice of the courts."
    ],
    "CATEGORY": "Interpretation of Contracts &mdash; Development of Modern Interpretation",
    "CITATION": "Reardon Smith Line Ltd v Yngvar Hansen-Tangen [1976] 1 WLR 989",
    "CATEGORIES": [
        "Interpretation of Contracts",
        "Development of Modern Interpretation"
    ],
    "RELATED": [
        "Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "Lovell & Christmas Ltd v Wall",
        "George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "Chartbrook Ltd v Persimmon Homes Ltd",
        "Bank of Credit and Commerce International SA v Ali",
        "Pettitt v Pettitt",
        "Merritt v Merritt",
        "Winn v Bull",
        "Royscot Trust v Rogerson",
        "Harvey v Facey",
        "Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "Spencer v Harding"
    ],
    "NUMBER": "187",
    "TYPE": "Case",
    "NAME": "Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
    "FLAGS": [
        "Hoffman"
    ]
},
{
    "YEAR": "1998",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case arose out of claims brought (a) by the Investors&#8217; Compensation Scheme, and (b) individual investors, against the Building Society in respect of negligent advice given to the investors. The ICS was involved because the investors had assigned to it certain of their rights. The question was which rights had been assigned. The relevant form excluded from the assignment \u201cany claim (whether sounding in rescission for undue influence or otherwise)\u201d. The ICS and the investors understood these words differently, with the result that their claims against the building society overlapped. The investors argued that the words meant \u201cany claim\u201d, including a claim for damages. The ICS argued that they meant \u201cany claim sounding in rescission\u201d, so that a claim for damages was not included.<br>&emsp;&emsp;The House of Lords held by a majority that the ICS was correct. The clause was badly drafted, and had to be read to mean \u201cany claim sounding in rescission (whether for undue influence or otherwise). Lord Lloyd dissented on the ground that it was quite impermissible to take words from within the brackets and place them outside, thereby completely altering their sense.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord <span class=\"bd\">Hoffmann</span> was a member of the majority which considered it necessary to read the clause against its plain meaning. He took the opportunity to make a series of prefatory observations on the practice of construing contracts:<br>&emsp;&emsp;\u201cMy Lords ... I should preface my explanation of my reasons with some general remarks about the principles by which contractual documents are nowadays construed. I do not think that the fundamental change which has overtaken this branch of the law, particularly as a result of the speeches of Lord Wilberforce [in <i>Prenn v Simmonds</i> (1971) and <i>Reardon Smith Line Ltd v Hansen-Tangen</i> (1976)], is always sufficiently appreciated. The result has been, subject to one important exception, to assimilate the way in which such documents are interpreted by judges to the common sense principles by which any serious utterance would be interpreted in ordinary life. Almost all the old intellectual baggage of \u201clegal\u201d interpretation has been discarded. The principles may be summarised as follows.<br>&emsp;&emsp;[1] Interpretation is the ascertainment of the meaning which the document would convey to a reasonable person having all the background knowledge which would reasonably have been available to the parties in the situation in which they were at the time of the contract.<br>&emsp;&emsp;[2] The background was famously referred to by Lord Wilberforce as the \u201cmatrix of fact\u201d, but this phrase is, if anything, an understated description of what the background may include. Subject to the requirement that it should have been reasonably available to the parties and to the exception to be mentioned next, it includes absolutely anything which would have affected the way in which the language of the document would have been understood by a reasonable man.<br>&emsp;&emsp;[3] The law excludes from the admissible background the previous negotiations of the parties and their declarations of subjective intent. They are admissible only in an action for rectification. The law makes this distinction for reasons of practical policy and, in this respect only, legal interpretation differs from the way we would interpret utterances in ordinary life. The boundaries of this exception are in some respects unclear. But this is not the occasion on which to explore them.<br>&emsp;&emsp;[4] The meaning which a document (or any other utterance) would convey to a reasonable man is not the same thing as the meaning of its words. The meaning of words is a matter of dictionaries and grammars; the meaning of the document is what the parties using those words against the relevant background would reasonably have been understood to mean. The background may not merely enable the reasonable man to choose between the possible meanings of words which are ambiguous but even (as occasionally happens in ordinary life) to conclude that the parties must, for whatever reason, have used the wrong words or syntax (see <i>Mannai Investment Co Ltd v Eagle Star Life Assurance Co Ltd</i> [1997] 2 WLR 945).<br>&emsp;&emsp;[5] The \u201crule\u201d that words should be given their \u201cnatural and ordinary meaning\u201d reflects the commonsense proposition that we do not easily accept that people have made linguistic mistakes, particularly in formal documents. On the other hand, if one would nevertheless conclude from the background that something must have gone wrong with the language, the law does not require judges to attribute to the parties an intention which they plainly could not have had. Lord <span class=\"bd\">Diplock</span> made this point more vigorously when he said in <i>Antaios Cia Naviera SA v Salen Rederiema AB, The Antaios</i> [1985] 191 at 201:<br>&emsp;&emsp;\u201cif detailed semantic and syntactical analysis of words in a commercial contract is going to lead to a conclusion that flouts business common sense, it must be made to yield to business common sense\u201d.\u201d"
    ],
    "CATEGORY": "Interpretation of Contracts &mdash; Development of Modern Interpretation",
    "CITATION": "Investors&#8217; Compensation Scheme Ltd v West Bromwich Building Society [1998] 1 WLR 896",
    "CATEGORIES": [
        "Interpretation of Contracts",
        "Development of Modern Interpretation"
    ],
    "RELATED": [
        "Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "Lovell & Christmas Ltd v Wall",
        "George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "Bank of Credit and Commerce International SA v Ali",
        "Chartbrook Ltd v Persimmon Homes Ltd",
        "Balfour v Balfour",
        "Bolton v Mahadeva",
        "Krell v Henry",
        "Sumpter v Hedges",
        "Curtis v Chemical Cleaning & Dyeing Co",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Holwell Securities Ltd v Hughes"
    ],
    "NUMBER": "188",
    "TYPE": "Case",
    "NAME": "Investors' Compensation Scheme Ltd v West Bromwich Building Society",
    "FLAGS": [
        "Hoffman",
        "Diplock"
    ]
},
{
    "CATEGORIES": [
        "Interpretation of Contracts",
        "Commentary on Lord Hoffmann's Restatement"
    ],
    "NUMBER": "189",
    "TYPE": "Concept",
    "NAME": "Commentary on Lord Hoffmann's Restatement",
    "CATEGORY": "Interpretation of Contracts &mdash; Commentary on Lord Hoffmann's Restatement",
    "RELATED": [
        "Interpretation and precedent",
        "Importance of Interpretation",
        "The temptation to go beyond the dictionary",
        "Interpretation of Contracts - Introduction",
        "Over-extending the \u201cmatrix of fact\u201d",
        "The old principles of \u201clegal\u201d interpretation",
        "Development of Modern Interpretation",
        "Going beyond \u201cmistakes\u201d in the contract",
        "Artificially limiting the matrix of fact",
        "Acceptance By Conduct",
        "Characteristics of Promissory Estoppel",
        "The basics"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Commentary on Lord Hoffmann&#8217;s Restatement</span></span><br>&emsp;&emsp;The remainder of this part of the lecture consists of a review of some of the main reactions from commentators to what Lord Hoffmann said in the <i>ICS</i> case. They include objections on the ground that it is too broad, but also suggestions that it blocks off ways in which the law ought to develop."
    ]
},
{
    "CATEGORIES": [
        "Interpretation of Contracts"
    ],
    "NUMBER": "190",
    "FLAGS": [
        "McKendrick",
        "Hoffman",
        "Denning"
    ],
    "TYPE": "Concept",
    "NAME": "The old principles of \u201clegal\u201d interpretation",
    "CATEGORY": "Interpretation of Contracts",
    "RELATED": [
        "Going beyond \u201cmistakes\u201d in the contract",
        "Importance of Interpretation",
        "Interpretation and precedent",
        "The temptation to go beyond the dictionary",
        "Interpretation of Contracts - Introduction",
        "Development of Modern Interpretation",
        "Over-extending the \u201cmatrix of fact\u201d",
        "Commentary on Lord Hoffmann's Restatement",
        "Artificially limiting the matrix of fact",
        "Misrepresentation (2) - Introduction",
        "Intention to Create Legal Relations - Introduction",
        "Part Payment of a Debt as Consideration"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The old principles of \u201clegal\u201d interpretation</span></span><br>&emsp;&emsp;The first point much commented upon is Lord <span class=\"bd\">Hoffmann</span>&#8216;s statement (in his introductory paragraph) that almost all the old intellectual baggage of \u201clegal\u201d interpretation has been discarded. Lord <span class=\"bd\">Hoffmann</span>, in several of his most famous judicial pronouncements, has a tendency radically to simplify, sometimes in a way that leaves most others impressed but slightly incredulous. In connection with the courts&#8217; construction of exemption clauses, some, including Professor <span class=\"bd\">McKendrick</span>, have wondered whether Lord <span class=\"bd\">Hoffmann</span>&#8216;s attitude is not too sweeping.<br>&emsp;&emsp;The construction of exemption clauses is an area in which special rules of interpretation have traditionally applied. Judges did not warm to the way in which parties with a dominant position would use standard form clauses, often hidden in small print, to deprive others of their contractual remedies. Exemption clauses have therefore tended to be \u201cread down\u201d though the application of the <i>contra proferentem</i> rule (the \u201cproferens\u201d is the party relying on such a clause). With the passing of the Unfair Contract Terms Act 1977, there were strong expressions of judicial disapproval for the continuance of this practice, since the Act now provided a regular and legislatively ratified means of controlling such clauses. Nevertheless, in cases of ambiguity, the rule still applies, supported by the decisions of senior courts which Lord Hoffmann cannot be taken to have overruled.<br>&emsp;&emsp;In the following case Lord <span class=\"bd\">Denning</span> tells the story of the rise and near fall of the <i>contra proferentem</i> rule."
    ]
},
{
    "YEAR": "1983",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;\u201cNone of you will remember the trouble we had \u2013 when I was called to the Bar \u2013 with exemption clauses. They were printed in small print on the back of tickets and order forms and invoices. They were contained in catalogues or timetables. They were held to be binding on any person who took them without objection. No one ever did object. He never read them or knew what was in them. No matter how unreasonable they were, he was bound. All this was done in the name of \u201cfreedom of contract\u201d. But freedom was all on the side of the big concern which had the use of the printing press. No freedom for the little man who took the ticket or order form or invoice. The big concern said, \u201cTake it or leave it\u201d. The little man had no option but to take it. The big concern could and did exempt itself from liability in its own interest without regard to the little man. It got away with it time after time. When the courts said to the big concern, \u201cYou must put it in clear words\u201d, the big concern had no hesitation in doing so. It knew well that the little man would never read the exemption clauses or understand them.<br>&emsp;&emsp;Faced with this abuse of power \u2013 by the strong against the weak \u2013 by the use of the small print of the conditions \u2013 the judges did what they could to put a curb upon it. They still had before them the idol, \u201cfreedom of contract\u201d. They still knelt down and worshipped it, but they concealed under their cloaks a secret weapon. They used it to stab the idol in the back. This weapon was called \u201cthe true construction of the contract\u201d. They used it with great skill and ingenuity. They used it so as to depart from the natural meaning of the words of the exemption clause and to put upon them a strained and unnatural construction. In case after case, they said that the words were not strong enough to give the big concern exemption from liability; or that in the circumstances the big concern was not entitled to rely on the exemption clause. If a ship deviated from the contractual voyage, the owner could not rely on the exemption clause. If a warehouseman stored the goods in the wrong warehouse, he could not pray in aid the limitation clause. If the seller supplied goods different in kind from those contracted for, he could not rely on any exemption from liability. If a shipowner delivered goods to a person without production of the bill of lading, he could not escape liability by reference to an exemption clause. In short, whenever the wide words \u2013 in their natural meaning \u2013 would give rise to an unreasonable result, the judges either rejected them as repugnant to the main purpose of the contract, or else cut them down to size in order to produce a reasonable result.<br>&emsp;&emsp;Lord <span class=\"bd\">Denning</span> went on to recount how \u201cout of winter came spring\u201d with the legislative activity which led to the passing of the Unfair Contract Terms Act 1977. In his view, it was no longer necessary to go through \u201call kinds of gymnastic contortions\u201d to get around exclusion clauses, since the Act now subjected many of them to a test of reasonableness. Lord <span class=\"bd\">Denning</span> also considered that it should no longer be necessary to harass students with the study of cases on exclusion clauses. Nevertheless, the topic will be revisited (fairly briefly) in lecture 12."
    ],
    "CATEGORY": "Interpretation of Contracts &mdash; Commentary on Lord Hoffmann's Restatement",
    "CITATION": "George Mitchell (Chesterhall) Ltd v Finney Lock Seeds [1983] 2 AC 803",
    "CATEGORIES": [
        "Interpretation of Contracts",
        "Commentary on Lord Hoffmann's Restatement"
    ],
    "RELATED": [
        "Bank of Credit and Commerce International SA v Ali",
        "Chartbrook Ltd v Persimmon Homes Ltd",
        "Lovell & Christmas Ltd v Wall",
        "Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "Chappell & Co v Nestle Co Ltd",
        "Solle v Butcher",
        "Warlow v Harrison",
        "Andrews Bros (Bournemouth) Ltd v Singer & Co Ltd",
        "Fisher v Bell",
        "Birmingham and District Land Co v LNWR",
        "Williams v Carwardine"
    ],
    "NUMBER": "191",
    "TYPE": "Case",
    "NAME": "George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Interpretation of Contracts"
    ],
    "NUMBER": "192",
    "FLAGS": [
        "McKendrick",
        "Hoffman"
    ],
    "TYPE": "Concept",
    "NAME": "Interpretation and precedent",
    "CATEGORY": "Interpretation of Contracts",
    "RELATED": [
        "Over-extending the \u201cmatrix of fact\u201d",
        "The temptation to go beyond the dictionary",
        "Going beyond \u201cmistakes\u201d in the contract",
        "Interpretation of Contracts - Introduction",
        "The old principles of \u201clegal\u201d interpretation",
        "Artificially limiting the matrix of fact",
        "Commentary on Lord Hoffmann's Restatement",
        "Importance of Interpretation",
        "Development of Modern Interpretation",
        "Collateral Contracts",
        "Making the election to affirm or terminate",
        "Offer Distinguished From Invitation to Treat"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Interpretation and precedent</span></span><br>&emsp;&emsp;Another query raised by Professor <span class=\"bd\">McKendrick</span> concerns the relationship between Lord <span class=\"bd\">Hoffmann</span>&#8216;s restatement and the old cases generally. Which, if any of them, should he be taken to be overruling? <span class=\"bd\">McKendrick</span> goes on to make the point that it may not matter too much if, as is often said, precedent has a relatively limited role to play in the interpretation of contracts. This is an interesting and important point in its own right, and since one of the most forceful proponents of this sceptical view of the usefulness of precedent has been Lord <span class=\"bd\">Hoffmann</span> himself, his opinion is set out here."
    ]
},
{
    "YEAR": "2001",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case was one of several arising from the collapse of BCCI. Mr Naeem, who had earlier been made redundant by the bank, signed a release of all claims that he might have against it. The question for the House of Lords in this case was whether that agreement should be taken to extend to a claim not known to the law at the time (in 1998, a decision of the House of Lords introduced the concept of \u201cstigma damages\u201d, to which Mr Naeem was now arguably entitled). The majority of their lordships held that the agreement did not extend to stigma damages. Lord <span class=\"bd\">Hoffmann</span>, dissenting, held that the draftsman of Mr Naeem&#8217;s general release agreement had \u201cmeant business\u201d and was not leaving deliberate gaps. All claims were barred, whether known to the law at the time of the agreement or not.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Hoffmann deprecated the use of authority to solve this problem of construction:<br>&emsp;&emsp;50. \u201cThe main contrary argument which Mr Allen put before your Lordships was an argument based on authority. He referred the House to a number of cases, going back to the 18th century, from which he culled general statements much along the lines of those which I have already cited from <i>Directors of the London and South Western Railway Co v Blackmore,</i> LR 4 HL 610 and <i>Lyall v Edwards, </i>6 H &amp; N 337. From these he invited your Lordships to hold that there was a general presumption that, in the absence of what were described as &#8220;clear words to the contrary&#8221;, general words of release would be confined to matters which were within the specific contemplation of the parties. And he urged your Lordships to adopt this construction even in a case in which there were obviously no claims within the specific contemplation of the parties.<br>&emsp;&emsp;51. My Lords, I have a number of difficulties with this argument, the first of which goes to the root of the process of interpretation. If interpretation is the quest to discover what a reasonable man would have understood specific parties to have meant by the use of specific language in a specific situation at a specific time and place, how can that be affected by authority? How can the question of what a reasonable man in 1990 would have thought BCCI and Mr Naeem meant by using the language of an Acas form be answered by examining what Lord Keeper Henley said in 1758 (<i>Salkeld v Vernon,</i> 1 Eden 64)? I can understand that if parties in a legal context use words in what appears to have been a technical sense, it may be necessary to ascertain that technical meaning from authorities. But there is nothing of that kind here.<br>&emsp;&emsp;52. My second difficulty is that Mr Allen&#8217;s citations of authority were almost entirely context-free. He read a number of general statements of the kind which I have already cited without inviting your Lordships to examine in any detail the facts of the cases in which they were made. But that does not seem to me a proper use of authority. The remarks of judges, however general, have to be read in context no less than the general words of contractual documents\u201d."
    ],
    "CATEGORY": "Interpretation of Contracts &mdash; Commentary on Lord Hoffmann's Restatement",
    "CITATION": "Bank of Credit and Commerce International SA v Ali [2001] UKHL 8",
    "CATEGORIES": [
        "Interpretation of Contracts",
        "Commentary on Lord Hoffmann's Restatement"
    ],
    "RELATED": [
        "George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "Chartbrook Ltd v Persimmon Homes Ltd",
        "Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "Lovell & Christmas Ltd v Wall",
        "Hughes v Metropolitan Railway Co",
        "Misrepresentation - Glossary",
        "Collins v Godefroy",
        "Carlill v Carbolic Smoke Ball Company",
        "Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "Solle v Butcher",
        "Holwell Securities Ltd v Hughes"
    ],
    "NUMBER": "193",
    "TYPE": "Case",
    "NAME": "Bank of Credit and Commerce International SA v Ali",
    "FLAGS": [
        "Hoffman"
    ]
},
{
    "CATEGORIES": [
        "Interpretation of Contracts"
    ],
    "NUMBER": "194",
    "FLAGS": [
        "Hoffman"
    ],
    "TYPE": "Concept",
    "NAME": "Over-extending the \u201cmatrix of fact\u201d",
    "CATEGORY": "Interpretation of Contracts",
    "RELATED": [
        "Interpretation and precedent",
        "Importance of Interpretation",
        "Interpretation of Contracts - Introduction",
        "Development of Modern Interpretation",
        "The temptation to go beyond the dictionary",
        "Artificially limiting the matrix of fact",
        "Going beyond \u201cmistakes\u201d in the contract",
        "Commentary on Lord Hoffmann's Restatement",
        "The old principles of \u201clegal\u201d interpretation",
        "The purpose for which damages are awarded",
        "Making the election to affirm or terminate",
        "The deviation and bailment cases"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Over-extending the \u201cmatrix of fact\u201d</span></span><br>&emsp;&emsp;Another point on which Lord <span class=\"bd\">Hoffmann</span>&#8216;s restatement has proved vulnerable to criticism is the proposition (in his second paragraph) that the relevant \u201cmatrix of fact\u201d includes \u201cabsolutely anything which would have affected the way in which the language of the document would have been understood by a reasonable man\u201d.<br>&emsp;&emsp;The danger associated with these words is that they could be read by some as an invitation to submerge legal proceedings in a welter of evidential detail to the detriment of efficient and focused adjudication. In some litigation, perhaps particularly where complex charges of wrong-doing are brought, this could be used by a defendant as a means to muddy the waters. In any litigation it could put justice beyond the financial means of many, and endanger the rule of law.<br>&emsp;&emsp;In the <i>BCCI</i> case (above), Lord Hoffmann explained that he meant there were no conceptual limits to what might be relevant as background. He had not thought it necessary to say that he was referring only to what a reasonable man would have regarded as relevant."
    ]
},
{
    "CATEGORIES": [
        "Interpretation of Contracts"
    ],
    "NUMBER": "195",
    "FLAGS": [
        "Hoffman"
    ],
    "TYPE": "Concept",
    "NAME": "Artificially limiting the matrix of fact",
    "CATEGORY": "Interpretation of Contracts",
    "RELATED": [
        "Commentary on Lord Hoffmann's Restatement",
        "The old principles of \u201clegal\u201d interpretation",
        "Interpretation and precedent",
        "Over-extending the \u201cmatrix of fact\u201d",
        "Going beyond \u201cmistakes\u201d in the contract",
        "Interpretation of Contracts - Introduction",
        "The temptation to go beyond the dictionary",
        "Development of Modern Interpretation",
        "Importance of Interpretation",
        "Misrepresentation (2) - Introduction",
        "Towards Promissory Estoppel - Introduction",
        "Innocent Misrepresentation"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Artificially limiting the matrix of fact</span></span><br>&emsp;&emsp;Lord <span class=\"bd\">Hoffmann</span> has had to defend the third paragraph on his restatement against several commentators who disagree with him (and with the settled law) that evidence of the parties&#8217; negotiating positions and declarations of subjective intent remain excluded from the matrix of fact. The traditional reason for this exclusion was given by Lord Wilberforce in <i>Prenn v Simmonds</i> (1971) above; the parties&#8217; positions during a negotiation are changing, and it is only the final document which records a stable consensus. An objection to this traditional view consists in accepting that the weight to be attached to such evidence may vary according to the context, but that there should not be a blanket prohibition on its use.<br>&emsp;&emsp;Lord Hoffmann himself gave a characteristically elegant rebuttal of some of the arguments for inclusivity in the following case. The facts are not relevant."
    ]
},
{
    "YEAR": "2009",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;38. \u201cLike Lord <span class=\"bd\">Bingham</span>, I rather doubt whether the ICS case produced a dramatic increase in the amount of material produced by way of background for the purposes of contractual interpretation. But pre-contractual negotiations seem to me capable of raising practical questions different from those created by other forms of background. Whereas the surrounding circumstances are, by definition, objective facts, which will usually be uncontroversial, statements in the course of pre-contractual negotiations will be drenched in subjectivity and may, if oral, be very much in dispute. It is often not easy to distinguish between those statements which (if they were made at all) merely reflect the aspirations of one or other of the parties and those which embody at least a provisional consensus which may throw light on the meaning of the contract which was eventually concluded. But the imprecision of the line between negotiation and provisional agreement is the very reason why in every case of dispute over interpretation, one or other of the parties is likely to require a court or arbitrator to take the course of negotiations into account. Your Lordships&#8217; experience in the analogous case of resort to statements in Hansard under the rule in Pepper v Hart [1993] AC 593 suggests that such evidence will be produced in any case in which there is the remotest chance that it may be accepted and that even these cases will be only the tip of a mountain of discarded but expensive investigation. Pepper v Hart has also encouraged ministers and others to make statements in the hope of influencing the construction which the courts will give to a statute and it is possible that negotiating parties will be encouraged to improve the bundle of correspondence with similar statements.<br>&emsp;&emsp;39. Supporters of the admissibility of pre-contractual negotiations draw attention to the fact that Continental legal systems seem to have little difficulty in taking them into account. Both the Unidroit Principles of International Commercial Contracts (1994 and 2004 revision) and the Principles of European Contract Law (1999) provide that in ascertaining the \u201ccommon intention of the parties&#8221;, regard shall be had to prior negotiations: articles 4.3 and 5.102 respectively. The same is true of the United Nations Convention on Contracts for the International Sale of Goods (1980). But these instruments reflect the French philosophy of contractual interpretation, which is altogether different from that of English law. As Professor Catherine Valcke explains in an illuminating article (\u201cOn Comparing French and English Contract Law: Insights from Social Contract Theory\u201d) (16 January 2009), French law regards the intentions of the parties as a pure question of subjective fact, their volont\u00e9 psychologique, uninfluenced by any rules of law. It follows that any evidence of what they said or did, whether to each other or to third parties, may be relevant to establishing what their intentions actually were. There is in French law a sharp distinction between the ascertainment of their intentions and the application of legal rules which may, in the interests of fairness to other parties or otherwise, limit the extent to which those intentions are given effect. English law, on the other hand, mixes up the ascertainment of intention with the rules of law by depersonalising the contracting parties and asking, not what their intentions actually were, but what a reasonable outside observer would have taken them to be. One cannot in my opinion simply transpose rules based on one philosophy of contractual interpretation to another, or assume that the practical effect of admitting such evidence under the English system of civil procedure will be the same as that under a Continental system\u201d."
    ],
    "CATEGORY": "Interpretation of Contracts &mdash; Commentary on Lord Hoffmann's Restatement",
    "CITATION": "Chartbrook Ltd v Persimmon Homes Ltd [2009] UKHL 38",
    "CATEGORIES": [
        "Interpretation of Contracts",
        "Commentary on Lord Hoffmann's Restatement"
    ],
    "RELATED": [
        "George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "Bank of Credit and Commerce International SA v Ali",
        "Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "Lovell & Christmas Ltd v Wall",
        "Mountford v Scott",
        "Scammell and Nephew Ltd v Ouston",
        "Lipkin Gorman v Karpnale Ltd",
        "Derry v Peek",
        "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
        "Tinn v Hoffman & Co",
        "The Brimnes"
    ],
    "NUMBER": "196",
    "TYPE": "Case",
    "NAME": "Chartbrook Ltd v Persimmon Homes Ltd",
    "FLAGS": [
        "Bingham"
    ]
},
{
    "CATEGORIES": [
        "Interpretation of Contracts"
    ],
    "NUMBER": "197",
    "FLAGS": [
        "Hoffman"
    ],
    "TYPE": "Concept",
    "NAME": "The temptation to go beyond the dictionary",
    "CATEGORY": "Interpretation of Contracts",
    "RELATED": [
        "Over-extending the \u201cmatrix of fact\u201d",
        "Artificially limiting the matrix of fact",
        "Going beyond \u201cmistakes\u201d in the contract",
        "Interpretation of Contracts - Introduction",
        "Commentary on Lord Hoffmann's Restatement",
        "Importance of Interpretation",
        "Interpretation and precedent",
        "Development of Modern Interpretation",
        "The old principles of \u201clegal\u201d interpretation",
        "Assumption of responsibility / advice to verify",
        "Innominate terms",
        "Fraudulent, negligent and innocent misrepresentation"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The temptation to go beyond the dictionary</span></span><br>&emsp;&emsp;This critique relates to the fourth paragraph of Lord <span class=\"bd\">Hoffmann</span>&#8216;s restatement. It has always been accepted that a court may need to go beyond the dictionary definitions of words where those words are ambiguous. However, Lord <span class=\"bd\">Hoffmann</span>&#8216;s proposition that the meaning of a document is not the same as the meaning of its words is clearly not confined to cases where ambiguity forces the court to have regard to context. It can be read as a general licence to courts, and therefore also to advocates, to approach contractual documents on the footing that they do not necessarily mean what they say. If the result is that the parties&#8217; objective intention is vindicated despite problems with their drafting, then all is well. If, on the other hand, the court adopts an over-ingenious interpretation which the parties never intended, then a serious blow is struck against the principles of certainty in commercial law (and against freedom of contract)."
    ]
},
{
    "CATEGORIES": [
        "Interpretation of Contracts"
    ],
    "NUMBER": "198",
    "FLAGS": [
        "Hoffman"
    ],
    "TYPE": "Concept",
    "NAME": "Going beyond \u201cmistakes\u201d in the contract",
    "CATEGORY": "Interpretation of Contracts",
    "RELATED": [
        "Development of Modern Interpretation",
        "The old principles of \u201clegal\u201d interpretation",
        "Commentary on Lord Hoffmann's Restatement",
        "Over-extending the \u201cmatrix of fact\u201d",
        "Interpretation of Contracts - Introduction",
        "Artificially limiting the matrix of fact",
        "Interpretation and precedent",
        "The temptation to go beyond the dictionary",
        "Importance of Interpretation",
        "Implication from presumed intention (\u201cterms implied in fact\u201d)",
        "Classification of Terms - Introduction",
        "Mistake - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Going beyond \u201cmistakes\u201d in the contract</span></span><br>&emsp;&emsp;The principle in Lord <span class=\"bd\">Hoffmann</span>&#8216;s fifth paragraph is that the court&#8217;s interpretation need not be fettered by an obvious mistake in the drafting of a document so that the parties are saddled with an intention which they plainly could not have had. This seems so entirely unobjectionable that it may be surprising to see that there is a counter-argument. Where the court upholds the agreement in fact made, rather than discovering and enforcing one which would have been a better agreement, it does a great service to the value of certainty. Furthermore, a cautious approach to the construction of contracts is one for which people in business can prepare by making sure that they draft their documents with care. What they are powerless against is a court which illegitimately takes it upon itself to re-write documents.<br>&emsp;&emsp;However, the principle that an obvious mistake in drafting will not bind the court is qualified in Lord Hoffman&#8217;s restatement; it must be apparent that it does not represent the parties&#8217; intention. Therefore the decision to \u201ccorrect\u201d a mistake is taken by reference to the entire context from which the parties&#8217; intention appears, and not by reference to the scope for improvement.<br>&emsp;&emsp;Therefore there is no great controversy here, but instead an attitude of vigilance. The interpretation of contracts must remain in step with the assumptions of people in business, neither lagging behind them nor (albeit from the best of motives) rushing ahead."
    ]
},
{
    "CATEGORIES": [
        "Implication of Terms"
    ],
    "NUMBER": "199",
    "FLAGS": [
        "Hoffman"
    ],
    "TYPE": "Concept",
    "NAME": "Implication of Terms - Introduction",
    "CATEGORY": "Implication of Terms",
    "RELATED": [
        "Implication from custom",
        "Implication from the parties' legal relationship (\u201cterms implied in law\u201d)",
        "Implication from presumed intention (\u201cterms implied in fact\u201d)",
        "Innominate terms",
        "The purpose for which damages are awarded",
        "Contract and tort measures compared",
        "The role of foresight",
        "Part Payment of a Debt as Consideration",
        "Anticipatory Breach",
        "2. Terms which supplement the contract (warranties etc)",
        "Remedies - Introduction",
        "Frustration of common purpose"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;The implication of terms into contracts differs from the incorporation of terms (see the last lecture). In the case of incorporation, the stipulation in question is extant \u2013 it has been stated, or written, or displayed or referred to by one of the parties at some time before the contract is concluded. In the case of an implied term, the stipulation has no existence in relation to the contract until the case is before the court.<br>&emsp;&emsp;Broadly speaking, the law recognises four rationales for the implication of terms. They are<br>&emsp;&emsp;(3) Implication from the parties&#8217; legal relationship (\u201cterms implied in law\u201d)<br>&emsp;&emsp;This lecture will deal with the first three. The most important aspects of the fourth, which really concerns the imposition of terms by a superior authority, will be set out in the next lecture.<br>&emsp;&emsp;It might well have been thought, until very recently, that the implication of terms was a self-contained subject \u2013 not the easiest, to be sure, but one around which a boundary could have been drawn with some assurance. However, Lord <span class=\"bd\">Hoffmann</span> has now stepped into this arena, and proposed that the first three instances of implication above are in fact no more than aspects of the contextual interpretation of contracts. He made this proposal in a case cited at some length later in this lecture \u2013 <i>Attorney General of Belize v Belize Telecom</i> (2009).<br>&emsp;&emsp;We will first work through the standard sub-divisions of the law on implication of terms before addressing Lord Hoffmann&#8217;s insight."
    ]
},
{
    "YEAR": "1832",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff promised the defendant 10, 000 rabbits. The defendant was to pay \u00a360 per 1000, but refused to pay the sum apparently owing, contending that in Suffolk 1000 rabbits actually meant 1200 rabbits. Held, that this was correct.<br>&emsp;&emsp;This case concerned the demise of a rabbit warren, which was an abundant and valuable source of cheap meat. The decision stands as authority for an exception to the parol evidence rule (see the last lecture), namely that oral evidence may be admitted to show that a contract should be construed in accordance with local custom.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;What is the court doing here? In a sense, it is implying into this contract the term that \u201c1000 rabbits\u201d, in a contract made in the 1830s in Suffolk, has the meaning \u201c1200 rabbits\u201d. Local custom requires this implication. However, the court is equally interpreting the parties&#8217; contract contextually, taking into account the matrix of fact in order to discover the meaning which the parties must be deemed to have intended their contract to bear. There does not seem to be any way of preferring either one of these analyses over the other. They are different approaches to a single proposition. Lord <span class=\"bd\">Hoffmann</span>, and the others who have agreed with him or indeed pointed the way to this perception, would appear to have a point. The internal organisation of some contract textbooks may need to be reconsidered."
    ],
    "CATEGORY": "Implication of Terms",
    "CITATION": "Smith v Wilson (1832) 3 B and Adol 728",
    "CATEGORIES": [
        "Implication of Terms"
    ],
    "RELATED": [
        "Liverpool City Council v Irwin",
        "Shirlaw v Southern Foundries Ltd",
        "Attorney General of Belize v Belize Telecom Ltd",
        "Reigate v Union Manufacturing Co",
        "Scally v Southern Health and Social Services Board",
        "Crossley v Faithful & Gould Holdings",
        "The Moorcock",
        "Hutton v Warren",
        "Musumeci v Winadell Pty Ltd",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Olley v Marlborough Court Hotel",
        "Branca v Cobarro"
    ],
    "NUMBER": "200",
    "TYPE": "Case",
    "NAME": "Smith v Wilson",
    "FLAGS": [
        "Hoffman"
    ]
},
{
    "CATEGORIES": [
        "Implication of Terms"
    ],
    "NUMBER": "201",
    "TYPE": "Concept",
    "NAME": "Implication from custom",
    "CATEGORY": "Implication of Terms",
    "RELATED": [
        "Implication from presumed intention (\u201cterms implied in fact\u201d)",
        "Implication of Terms - Introduction",
        "Implication from the parties' legal relationship (\u201cterms implied in law\u201d)",
        "Pre-Emptive Agreements",
        "Incorporation of Terms - Introduction",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "Rules of Sufficiency",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "The basics",
        "Development of Modern Interpretation",
        "Interpretation of Contracts - Introduction",
        "The purpose for which damages are awarded"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Implication from custom</span></span><br>&emsp;&emsp;The parties may be deemed to have contracted with reference to a custom objectively known to operate within a certain activity or area."
    ]
},
{
    "YEAR": "1836",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The tenant of a farm was given notice by his landlord to quit. The landlord later served notice that the tenant was bound, in accordance with a custom of the country, to continue to farm in a regular way until leaving. The tenant did so, and duly quit, but claimed that the custom of the country entitled him to an allowance for the cost to him of seed and his labour in ploughing and sowing before he went.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Parke B stated that extrinsic evidence of custom had long been held to be admissible to annex incidents to written contracts with respect to which they were silent. The underlying presumption was that the parties had not meant to express in writing the whole of their agreement, but had contracted by reference to known usage.<br>&emsp;&emsp;He said that it went too far to submit (as had been done in argument) that the custom was operative unless the agreement excluded it in express terms. More accurately, the custom would apply unless the agreement, on its true construction, either expressly or impliedly excluded it.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Despite the age of this authority, it is apparent that it is not very distant from the approach of Lord <span class=\"bd\">Hoffmann</span> when Parke B emphasises the distinction mentioned above. It is wrong to say \u201cthere is a relevant custom \u2013 it applies unless, when we turn to the contract, we find words which exclude it\u201d. The correct approach is that the construction of the contract comes first, and will answer the question whether the parties have or have not contracted by reference to local custom. </span><br>&emsp;&emsp;<span class=\"it\">This is a fairly minor point in the present context, but nevertheless one worth remembering. In the law of frustration of contracts, it comes to assume some importance in a difference of opinion between Lord <span class=\"bd\">Denning</span> and Professor <span class=\"bd\">Treitel</span></i>.</span><br>&emsp;&emsp;<span class=\"it\">There are several interesting though subsidiary points to be made about implication from custom, even to the point that it could be treated as a testing ground for a developing understanding of how the common law works in the commercial arena. For example, does the existence of various practices tending in the same direction strengthen the submission that a certain custom exists? No, this state of affairs tends to undermine it, by showing that practice is still in a state of flux. Can custom stand against a House of Lords decision tending against it? It depends how long ago the decision was made, and by reference to which facts. If there have been more recent developments in the relevant field of activity, it may be that the authority in question could now be distinguished on its facts. </span>"
    ],
    "CATEGORY": "Implication of Terms &mdash; Terms Implied By Custom",
    "CITATION": "Hutton v Warren (1836) 1 M &amp; W 466",
    "CATEGORIES": [
        "Implication of Terms",
        "Terms Implied By Custom"
    ],
    "RELATED": [
        "Shirlaw v Southern Foundries Ltd",
        "Smith v Wilson",
        "Reigate v Union Manufacturing Co",
        "Liverpool City Council v Irwin",
        "Scally v Southern Health and Social Services Board",
        "Attorney General of Belize v Belize Telecom Ltd",
        "Crossley v Faithful & Gould Holdings",
        "The Moorcock",
        "Edwards v Skyways",
        "Frost v Knight",
        "Koufos v Czarnikow Ltd (The Heron II)",
        "Felthouse v Bindley"
    ],
    "NUMBER": "202",
    "TYPE": "Case",
    "NAME": "Hutton v Warren",
    "FLAGS": [
        "Hoffman",
        "Denning",
        "Treitel"
    ]
},
{
    "CATEGORIES": [
        "Implication of Terms"
    ],
    "NUMBER": "203",
    "TYPE": "Concept",
    "NAME": "Implication from presumed intention (\u201cterms implied in fact\u201d)",
    "CATEGORY": "Implication of Terms",
    "RELATED": [
        "Implication from the parties' legal relationship (\u201cterms implied in law\u201d)",
        "Implication of Terms - Introduction",
        "Implication from custom",
        "Misrepresentation (1) - Introduction",
        "The assessment of delay",
        "Characteristics of Promissory Estoppel",
        "Consideration Distinguished From Conditional Gifts",
        "The circumstances of frustration",
        "The rule in Hadley v Baxendale",
        "Breach of contract \u2013 the basic rights",
        "Common Law Bars to Rescission",
        "Entire and severable obligations"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Implication from presumed intention (\u201cterms implied in fact\u201d)</span></span><br>&emsp;&emsp;This second category of implications shares its rationale with the first; it gives effect to what the parties must be deemed to have intended. It differs in so far as the term to be implied is identified by the court exclusively by reference to the parties&#8217; contract, instead of being drawn from some sub-stratum of relevant practice."
    ]
},
{
    "CATEGORIES": [
        "Implication of Terms",
        "Terms Implied From Parties' Presumed Intentions (\u201cTerms Implied In Fact\u201d)"
    ],
    "YEAR": "1889",
    "NUMBER": "204",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;It was arranged that the plaintiff, owner of the steamship \u201cMoorcock\u201d, would discharge and take on cargo at the defendants&#8217; wharf on the tidal River Thames. No charge was made for the mooring, but the plaintiff was to pay for use of the cargo handling facilities. It was obvious to both parties that the vessel would take the ground at low water. When this occurred, the vessel was damaged, since there proved to be a ridge of hard ground which caused her weight to be unevenly distributed. The defendants were not the owners of the river bed, and had no control over it.<br>&emsp;&emsp;The trial judge found that the defendants had given no warranty or representation as to the state of the river bed, but had impliedly represented that they had taken reasonable care to ascertain if it was safe. The Court of Appeal put the same implication in the form of a term rather than a representation. It was necessary in order to give such business efficacy to the contract as the parties, as reasonable business men, must have intended it to have. The plaintiff could have known nothing about the state of the river bed, while the defendant wharfingers, with little trouble, might know everything. In the absence of the implied term, the plaintiff would merely have been buying the opportunity to put his vessel at risk.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The key concept in this case is \u201cbusiness efficacy\u201d \u2013 a presumption that the parties, as reasonable people in business, must be taken to have intended their contract to work, rather than to fail through amounting to an absurdity. This necessity enables the court to imply a term to which the parties could not but have agreed as reasonable people had it been put to them.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">As is often remarked of The Moorcock, it is not altogether easy to see how the implication made on the facts fits with the doctrine of business efficacy. The term implied here by the court was obviously intended to produce a reasonable allocation of risk, but there is no general rule that business can only be done on the basis that risk has been allocated in a reasonable way between the parties. </span><br>&emsp;&emsp;<span class=\"it\">Perhaps the best explanation of this state of affairs in connection with The Moorcock is the following. Some intervention by the court was indeed justified on the basis of necessity, because it was unthinkable that a matter as vital as the safety of the berth could be regarded indifferently by reasonable people. The necessity established, the court then implies a term which is reasonable; the wharfingers cannot be taken to be warranting something over which they do not have direct control, but they may be taken to warrant that they have found out the facts, and that if the facts had disclosed a hazard to the ship they would have warned the plaintiff. In other words, the process is a two-stage one. Necessity establishes the power of the court to intervene, but reasonableness dictates the manner of its intervention.</span><br>&emsp;&emsp;<span class=\"it\">A crucial point, namely that the court will not imply a term merely because it considers it reasonable to do so, is brought out by the next case.</span>"
    ],
    "NAME": "The Moorcock",
    "CATEGORY": "Implication of Terms &mdash; Terms Implied From Parties' Presumed Intentions (\u201cTerms Implied In Fact\u201d)",
    "CITATION": "The Moorcock (1889) 14 PD 64",
    "RELATED": [
        "Reigate v Union Manufacturing Co",
        "Shirlaw v Southern Foundries Ltd",
        "Crossley v Faithful & Gould Holdings",
        "Attorney General of Belize v Belize Telecom Ltd",
        "Smith v Wilson",
        "Scally v Southern Health and Social Services Board",
        "Hutton v Warren",
        "Liverpool City Council v Irwin",
        "Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "Nicolene v Simmonds",
        "Curtis v Chemical Cleaning & Dyeing Co",
        "Barry v Davies"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Implication of Terms",
        "Terms Implied From Parties' Presumed Intentions (\u201cTerms Implied In Fact\u201d)"
    ],
    "YEAR": "1918",
    "NUMBER": "205",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The question arose in connection with a seven year agency agreement whether the agency might be terminated at any point through one party ceasing to do business. The parties had in fact specified two grounds in their contract on which the agency would terminate (death of the agent, or by a period of notice).<br>&emsp;&emsp;Scrutton LJ refused to imply a term, observing that had it been put to the parties they would probably have disagreed about it, and that they had contractually recorded the extent of their agreement. He stated the correct approach as follows:<br>&emsp;&emsp;\u201cThe first thing is to see what the parties have expressed in the contract; and then an implied term is not to be added merely because the court thinks that it would have been reasonable to have inserted it in the contract. A term can only be implied if it is necessary in the business sense to give efficacy to the contract; that is, if it is such a term that it can confidently be said that if at the time the contract was being negotiated someone had said to the parties, \u201cWhat will happen in such a case?\u201d they would have both replied: \u201cOf course, so and so will happen; we did not trouble to say that; it is too clear\u201d. Unless the court comes to some such conclusion as that, it ought not to imply a term which the parties themselves have not expressed\u201d.<br>&emsp;&emsp;Scrutton LJ&#8217;s test was famously formulated (and successfully applied) in the next case, becoming known as the \u201cofficious bystander test\u201d."
    ],
    "NAME": "Reigate v Union Manufacturing Co",
    "CATEGORY": "Implication of Terms &mdash; Terms Implied From Parties' Presumed Intentions (\u201cTerms Implied In Fact\u201d)",
    "CITATION": "Reigate v Union Manufacturing Co [1918] 1 KB 592",
    "RELATED": [
        "Shirlaw v Southern Foundries Ltd",
        "The Moorcock",
        "Hutton v Warren",
        "Crossley v Faithful & Gould Holdings",
        "Liverpool City Council v Irwin",
        "Scally v Southern Health and Social Services Board",
        "Smith v Wilson",
        "Attorney General of Belize v Belize Telecom Ltd",
        "Simpkins v Pays",
        "Karsales (Harrow) Ltd v Wallis",
        "Wallis, Son & Wells v Pratt & Haynes",
        "Harris v Nickersen"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Implication of Terms",
        "Terms Implied From Parties' Presumed Intentions (\u201cTerms Implied In Fact\u201d)"
    ],
    "YEAR": "1939",
    "NUMBER": "206",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Mr Shirlaw had been the managing director of Southern Foundries. His contract stated that he was to hold this post for 10 years. During his tenure of it, Southern Foundries was taken over by another company, which altered its articles to permit two directors and the secretary to dismiss Mr Shirlaw. They did so. He sued for damages, and obtained them at first instance.<br>&emsp;&emsp;The Court of Appeal, by a majority, dismissed an appeal against the award. The contract was deemed to contain an implied term that the company&#8217;s articles would not be altered to create the right to dismiss Mr Shirlaw. An appeal to the House of Lords was essentially unsuccessful.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;In the view of MacKinnon LJ, had the parties been asked at the outset whether Mr Shirlaw benefited from the protection now implied by the court, they would each have agreed that he did. Before putting his decision on that basis, MacKinnon LJ had this to say about the implication of terms in fact:<br>&emsp;&emsp;\u201cI recognize that the right or duty of a Court to find the existence of an implied term or implied terms in a written contract is a matter to be exercised with care; and a Court is too often invited to do so upon vague and uncertain grounds. Too often also such an invitation is backed by the citation of a sentence or two from the judgment of Bowen LJ in <i>The Moorcock</i>. They are sentences from an extempore judgment as sound and sensible as all the utterances of that great judge; but I fancy that he would have been rather surprised if he could have foreseen that these general remarks of his would come to be a favourite citation of a supposed principle of law, and I even think that he might sympathize with the occasional impatience of his successors when <i>The Moorcock</i> is so often flushed for them in that guise.<br>&emsp;&emsp;For my part, I think that there is a test that may be at least as useful as such generalities. If I may quote from an essay which I wrote some years ago, I then said: &#8220;Prima facie that which in any contract is left to be implied and need not be expressed is something so obvious that it goes without saying; so that, if, while the parties were making their bargain, an officious bystander were to suggest some express provision for it in their agreement, they would testily suppress him with a common &#8216;Oh, of course!&#8217;&#8221;<br>&emsp;&emsp;At least it is true, I think, that, if a term were never implied by a judge unless it could pass that test, he could not be held to be wrong\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">A minor point - you will notice from the last sentence of the passage cited above that \u201cbeing wrong\u201d is on MacKinnon LJ&#8217;s mind, and in fact his reasoning on the facts of the case did not fare well in the House of Lords. It is a bold and somewhat risky step for a judge to introduce a term into a contract. The stating of the test in stringent terms, as is explicitly done above, provides some protection against the risk of successful appeal; the higher court may well note with approval that the test is stringent and therefore legally correct and then, even though it feels some doubt about the facts, defer to the lower court which has heard the evidence. In other words, there may be an element of gamesmanship in the wording of the officious bystander test. The actual application of the test may be less strict than the test itself suggests</i>.</span><br>&emsp;&emsp;<span class=\"it\">In the next case, these tests are reviewed and explained. As a result, the independent existence of (a) contractual interpretation and (b) the implication of terms in fact is effectively ended.</span>"
    ],
    "NAME": "Shirlaw v Southern Foundries Ltd",
    "CATEGORY": "Implication of Terms &mdash; Terms Implied From Parties' Presumed Intentions (\u201cTerms Implied In Fact\u201d)",
    "CITATION": "Shirlaw v Southern Foundries Ltd [1939] 2 KB 206",
    "RELATED": [
        "The Moorcock",
        "Reigate v Union Manufacturing Co",
        "Scally v Southern Health and Social Services Board",
        "Attorney General of Belize v Belize Telecom Ltd",
        "Crossley v Faithful & Gould Holdings",
        "Smith v Wilson",
        "Hutton v Warren",
        "Liverpool City Council v Irwin",
        "Tool Metal v Tungsten Electric",
        "Herne Bay Steam Boat Co v Hutton",
        "R v Clarke",
        "Brogden v Metropolitan Railway"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "2009",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The facts are complex, but can be given briefly by way of context. A situation arose, during the privatisation and later re-organisations of the Belize telecommunications service, in which two \u201cspecial\u201d directors sat on the board of Belize Telecom. The power to appoint them had belonged to the holder of a certain quantity and class of shares in the company. The holder of the relevant shares also had the power to dismiss them. However, no such entity now had the requisite share-holding. The question was whether the company&#8217;s articles of association (which gave no express answer to the problem) should be construed to allow for termination of the directors&#8217; tenure of office once the special shareholding had ceased to exist.<br>&emsp;&emsp;Lord <span class=\"bd\">Hoffmann</span>, giving the opinion of the Privy Council, considered that this implication was correct. <a name=\"para32\">The implication was required to avoid defeating what appeared to have been the overriding purpose of the machinery of appointment and removal of directors, namely to ensure that the board reflected the appropriate shareholder interests in accordance with the scheme laid out in the articles.</a",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Hoffmann explained his view of the relationship between the interpretation of contracts and the implication of terms from the presumed intention of the parties. They were one and the same process, based on the court&#8217;s objective construction of what the parties must be deemed to have meant.<br>&emsp;&emsp;16. \u201cBefore discussing in greater detail the reasoning of the Court of Appeal, the Board will make some general observations about the process of implication. The court has no power to improve upon the instrument which it is called upon to construe, whether it be a contract, a statute or articles of association. It cannot introduce terms to make it fairer or more reasonable. It is concerned only to discover what the instrument means. However, that meaning is not necessarily or always what the authors or parties to the document would have intended. It is the meaning which the instrument would convey to a reasonable person having all the background knowledge which would reasonably be available to the audience to whom the instrument is addressed: see <i><a href=\"http://en.wikipedia.org/wiki/Investors<span class=&#8220;it\">Compensation</span>Scheme<span class=\"it\">Ltd</span>v<span class=\"it\">West</span>Bromwich<span class=\"it\">Building</span>Society&#8221; title=\"Investors Compensation Scheme Ltd v West Bromwich Building Society\">Investors Compensation Scheme Ltd v West Bromwich Building Society</a></i> [1998] 1 WLR 896, 912-913. It is this objective meaning which is conventionally called the intention of the parties, or the intention of Parliament, or the intention of whatever person or body was or is deemed to have been the author of the instrument.<br>&emsp;&emsp;17. The question of implication arises when the instrument does not expressly provide for what is to happen when some event occurs. The most usual inference in such a case is that nothing is to happen. If the parties had intended something to happen, the instrument would have said so. Otherwise, the express provisions of the instrument are to continue to operate undisturbed. If the event has caused loss to one or other of the parties, the loss lies where it falls.<br>&emsp;&emsp;18. In some cases, however, the reasonable addressee would understand the instrument to mean something else. He would consider that the only meaning consistent with the other provisions of the instrument, read against the relevant background, is that something is to happen. The event in question is to affect the rights of the parties. The instrument may not have expressly said so, but this is what it must mean. In such a case, it is said that the court implies a term as to what will happen if the event in question occurs. But the implication of the term is not an addition to the instrument. It only spells out what the instrument means.<br>&emsp;&emsp;19. The proposition that the implication of a term is an exercise in the construction of the instrument as a whole is not only a matter of logic (since a court has no power to alter what the instrument means) but also well supported by authority. In <i><a href=\"http://en.wikipedia.org/w/index.php?title=Trollope<span class=&#8220;it\">%26</span>Colls<span class=\"it\">Ltd</span>v<span class=\"it\">North</span>West<span class=\"it\">Metropolitan</span>Regional<span class=\"it\">Hospital</span>Board&amp;action=edit&amp;redlink=1&#8221; title=\"Trollope &amp; Colls Ltd v North West Metropolitan Regional Hospital Board (page does not exist)&#8220;>Trollope &amp; Colls Ltd v North West Metropolitan Regional Hospital Board</a></i> [1973] 1 WLR 601, 609 Lord Pearson, with whom Lord Guest and Lord <span class=&#8220;bd\">Diplock</span> agreed, said:<br>&emsp;&emsp;&#8221;[T]he court does not make a contract for the parties. The court will not even improve the contract which the parties have made for themselves, however desirable the improvement might be. The court&#8217;s function is to interpret and apply the contract which the parties have made for themselves. If the express terms are perfectly clear and free from ambiguity, there is no choice to be made between different possible meanings: the clear terms must be applied even if the court thinks some other terms would have been more suitable. An unexpressed term can be implied if and only if the court finds that the parties must have intended that term to form part of their contract: it is not enough for the court to find that such a term would have been adopted by the parties as reasonable men if it had been suggested to them: it must have been a term that went without saying, a term necessary to give business efficacy to the contract, a term which, though tacit, formed part of the contract which the parties made for themselves.&#8221;<br>&emsp;&emsp;20. More recently, in <i><a href=\"http://en.wikipedia.org/wiki/Equitable<span class=&#8220;it\">Life</span>Assurance<span class=\"it\">Society</span>v_Hyman&#8221; title=\"Equitable Life Assurance Society v Hyman\">Equitable Life Assurance Society v Hyman</a></i> [2002] 1 AC 408, 459, Lord <span class=\"bd\">Steyn</span> said:<br>&emsp;&emsp;&#8221;If a term is to be implied, it could only be a term implied from the language of [the instrument] read in its commercial setting.&#8221;<br>&emsp;&emsp;21. It follows that in every case in which it is said that some provision ought to be implied in an instrument, the question for the court is whether such a provision would spell out in express words what the instrument, read against the relevant background, would reasonably be understood to mean. It will be noticed from Lord Pearson&#8217;s speech that this question can be reformulated in various ways which a court may find helpful in providing an answer \u2013 the implied term must &#8220;go without saying&#8221;, it must be &#8220;necessary to give business efficacy to the contract&#8221; and so on \u2013 but these are not in the Board&#8217;s opinion to be treated as different or additional tests. There is only one question: is that what the instrument, read as a whole against the relevant background, would reasonably be understood to mean?<br>&emsp;&emsp;22. There are dangers in treating these alternative formulations of the question as if they had a life of their own. Take, for example, the question of whether the implied term is &#8220;necessary to give business efficacy&#8221; to the contract. That formulation serves to underline two important points. The first, conveyed by the use of the word &#8220;business&#8221;, is that in considering what the instrument would have meant to a reasonable person who had knowledge of the relevant background, one assumes the notional reader will take into account the practical consequences of deciding that it means one thing or the other. In the case of an instrument such as a commercial contract, he will consider whether a different construction would frustrate the apparent business purpose of the parties. That was the basis upon which <i><a href=\"http://en.wikipedia.org/wiki/Equitable<span class=&#8220;it\">Life</span>Assurance<span class=\"it\">Society</span>v_Hyman&#8221; title=\"Equitable Life Assurance Society v Hyman\">Equitable Life Assurance Society v Hyman</a></i> [2002] 1 AC 408 was decided. The second, conveyed by the use of the word &#8220;necessary&#8221;, is that it is not enough for a court to consider that the implied term expresses what it would have been reasonable for the parties to agree to. It must be satisfied that it is what the contract actually means.<br>&emsp;&emsp;23. The danger lies, however, in detaching the phrase &#8220;necessary to give business efficacy&#8221; from the basic process of construction of the instrument. It is frequently the case that a contract may work perfectly well in the sense that both parties can perform their express obligations, but the consequences would contradict what a reasonable person would understand the contract to mean. <a href=\"http://en.wikipedia.org/wiki/Lord_Steyn\" title=\"Lord Steyn\">Lord Steyn</a> made this point in the <i>Equitable Life case</i> (at p 459) when he said that in that case an implication was necessary &#8220;to give effect to the reasonable expectations of the parties.&#8221;<br>&emsp;&emsp;24. The same point had been made many years earlier by Bowen LJ in his well known formulation in <i><a href=\"http://en.wikipedia.org/wiki/The_Moorcock\" title=\"The Moorcock\">The Moorcock</a></i> (1889) 14 PD 64, 68:<br>&emsp;&emsp;&#8221;In business transactions such as this, what the law desires to effect by the implication is to give such business efficacy to the transaction as must have been intended at all events by both parties who are business men&#8221;<br>&emsp;&emsp;25. Likewise, the requirement that the implied term must &#8220;go without saying&#8221; is no more than another way of saying that, although the instrument does not expressly say so, that is what a reasonable person would understand it to mean. Any attempt to make more of this requirement runs the risk of diverting attention from the objectivity which informs the whole process of construction into speculation about what the actual parties to the contract or authors (or supposed authors) of the instrument would have thought about the proposed implication. The imaginary conversation with an officious bystander in <i><a href=\"http://en.wikipedia.org/wiki/Shirlaw<span class=&#8220;it\">v</span>Southern<span class=\"it\">Foundries</span>(1926)_Ltd&#8221; title=\"Shirlaw v Southern Foundries (1926) Ltd\">Shirlaw v Southern Foundries (1926) Ltd</a></i> [1939] 2 KB 206, 227 is celebrated throughout the common law world. Like the phrase &#8220;necessary to give business efficacy&#8221;, it vividly emphasises the need for the court to be satisfied that the proposed implication spells out what the contact would reasonably be understood to mean. But it carries the danger of barren argument over how the actual parties would have reacted to the proposed amendment. That, in the Board&#8217;s opinion, is irrelevant. Likewise, it is not necessary that the need for the implied term should be obvious in the sense of being immediately apparent, even upon a superficial consideration of the terms of the contract and the relevant background. The need for an implied term not infrequently arises when the draftsman of a complicated instrument has omitted to make express provision for some event because he has not fully thought through the contingencies which might arise, even though it is obvious after a careful consideration of the express terms and the background that only one answer would be consistent with the rest of the instrument. In such circumstances, the fact that the actual parties might have said to the officious bystander &#8220;Could you please explain that again?&#8221; does not matter.<br>&emsp;&emsp;26. In <i><a href=\"http://en.wikipedia.org/w/index.php?title=BP<span class=&#8220;it\">Refinery</span>(Westernport)<span class=\"it\">Pty</span>Ltd<span class=\"it\">v</span>Shire<span class=\"it\">of</span>Hastings&amp;action=edit&amp;redlink=1&#8221; title=\"BP Refinery (Westernport) Pty Ltd v Shire of Hastings (page does not exist)&#8220;>BP Refinery (Westernport) Pty Ltd v Shire of Hastings</a></i> (1977) 180 CLR 266, 282-283 Lord Simon of Glaisdale, giving the advice of the majority of the Board, said that it was &#8220;not... necessary to review exhaustively the authorities on the implication of a term in a contract\" but that the following conditions (&#8220;which may overlap&#8221;) must be satisfied:<br>&emsp;&emsp;&#8221;(1) it must be reasonable and equitable; (2) it must be necessary to give business efficacy to the contract, so that no term will be implied if the contract is effective without it; (3) it must be so obvious that &#8216;it goes without saying&#8217; (4) it must be capable of clear expression; (5) it must not contradict any express term of the contract&#8221;.<br>&emsp;&emsp;27. The Board considers that this list is best regarded, not as series of independent tests which must each be surmounted, but rather as a collection of different ways in which judges have tried to express the central idea that the proposed implied term must spell out what the contract actually means, or in which they have explained why they did not think that it did so. The Board has already discussed the significance of &#8220;necessary to give business efficacy&#8221; and &#8220;goes without saying&#8221;. As for the other formulations, the fact that the proposed implied term would be inequitable or unreasonable, or contradict what the parties have expressly said, or is incapable of clear expression, are all good reasons for saying that a reasonable man would not have understood that to be what the instrument meant\u201d."
    ],
    "CATEGORY": "Implication of Terms &mdash; Coalescence of Contractual Interpretation and Implication of Terms In Fact",
    "CITATION": "Attorney General of Belize v Belize Telecom Ltd [2009] UKPC 10",
    "CATEGORIES": [
        "Implication of Terms",
        "Coalescence of Contractual Interpretation and Implication of Terms In Fact"
    ],
    "RELATED": [
        "Hutton v Warren",
        "Scally v Southern Health and Social Services Board",
        "Smith v Wilson",
        "Crossley v Faithful & Gould Holdings",
        "Liverpool City Council v Irwin",
        "The Moorcock",
        "Reigate v Union Manufacturing Co",
        "Shirlaw v Southern Foundries Ltd",
        "McCullough v Lane Fox and Partners Ltd",
        "Henderson v Merrett Syndicates",
        "Spencer v Harding",
        "Caparo Industries plc v Dickman"
    ],
    "NUMBER": "207",
    "TYPE": "Case",
    "NAME": "Attorney General of Belize v Belize Telecom Ltd",
    "FLAGS": [
        "Hoffman",
        "Diplock",
        "Steyn"
    ]
},
{
    "CATEGORIES": [
        "Implication of Terms"
    ],
    "NUMBER": "208",
    "TYPE": "Concept",
    "NAME": "Implication from the parties' legal relationship (\u201cterms implied in law\u201d)",
    "CATEGORY": "Implication of Terms",
    "RELATED": [
        "Implication of Terms - Introduction",
        "Implication from presumed intention (\u201cterms implied in fact\u201d)",
        "Implication from custom",
        "The fraud cases",
        "Penalties/Agreed sums payable on breach",
        "Offer Distinguished From Invitation to Treat",
        "Intention to Create Legal Relations - Introduction",
        "Offers - Introduction",
        "Fact, as opposed to opinion, belief, intention, or (formerly) law",
        "Consideration Distinguished From Conditional Gifts",
        "Doctrine of Implied Assumpsit",
        "Reactions to the innominate analysis"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Implication from the parties&#8217; legal relationship (\u201cterms implied in law\u201d)</span></span><br>&emsp;&emsp;As an alternative to the implication of a term because it is necessary to make the contract work (or by reference to what it necessarily means), it may be possible to imply a term because the contract is within a recognised class, but lacks terms which are normally found in that class of contracts. Implication on this basis is commonly referred to as the implying of terms \u201cin law\u201d.<br>&emsp;&emsp;The test for making this type of implication is again said to be <i>necessity</i>, in the sense that a term will be implied if the nature of the relationship between the parties <i>requires</i> it. However, it would be wrong to conclude on that basis that there is a close link between implication in fact and implication in law.<br>&emsp;&emsp;The basis for the implication of terms in law does differ from implication from presumed intention (\u201cimplication in fact\u201d). There is no need to be persuaded that the parties would (at least as notionally reasonable people) at once have agreed the term had their attention been drawn to it. The courts are deciding whether to modify a paradigm contract of a certain type, and policy is arguably the principal consideration.<br>&emsp;&emsp;The speeches in the following leading case, however, are marred by the fact that the words \u201cnecessity\u201d and \u201cnecessary\u201d seem to have taken on separate shades of meaning. This feature of the decision is further discussed below."
    ]
},
{
    "YEAR": "1977",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The council was the owner of a large block of flats in Everton. The defendants were tenants of flats within it. There was no complete tenancy agreement between the parties, but merely a document headed \u201cConditions of Tenancy\u201d which consisted of a list of obligations placed upon the tenants. The landlord had no express obligations. The block had been subject to vandalism, neglect by the landlords, and a lack of co-operation from the tenants. As a result, the lifts frequently did not work, the stairs were unlit, the rubbish chutes were blocked, and the lavatory cisterns overflowed. Following a rent strike, the council took proceedings against the tenants for possession of the flats. They counterclaimed for damages and an injunction to require the council to maintain the block properly.<br>&emsp;&emsp;At first instance the possession order was granted, but the defendants received \u00a310 damages on their counterclaim since the council was held to be in breach of implied and statutory covenants. The Court of Appeal reversed the first instance judgment on the ground that the council was not in breach of covenant. The House of Lords accepted that the council was in breach of implied covenants to do what was reasonable to keep the block repaired and lit.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The following extract from the speech of Lord Wilberforce is a substantial one, so that the development of his reasoning can be seen.<br>&emsp;&emsp;\u201cAt the end there is a form for signature by the tenant stating that he accepts the tenancy.<br<br>&emsp;&emsp;On the landlords&#8217; side there is nothing, no signature, no demise, no covenant: the contract takes effect as soon as the tenants sign the form and are let into possession.<br>&emsp;&emsp;We have then a contract which is partly, but not wholly, stated in writing. In order to complete it, in particular to give it a bilateral character, it is necessary to take account of the actions of the parties and the circumstances. As actions of the parties, we must note the granting of possession by the landlords and reservation by them of the &#8220;common parts &#8220; stairs, lifts, chutes, etc. As circumstances we must include the nature of the premises, viz., a maisonette for family use on the ninth floor of a high block, one which is occupied by a large number of other tenants, all using the common parts and dependent upon them, none of them having any expressed obligation to maintain or repair them.<br>&emsp;&emsp;a name=\"_Hlk157677335\"></a>To say that the construction of a complete contract out of these elements involves a process of &#8220;implication&#8221; may be correct: it would be so if implication means the supplying of what is not expressed. But there are varieties of implications which the courts think fit to make and they do not necessarily involve the same process. Where there is, on the face of it, a complete, bilateral contract, the courts are sometimes willing to add terms to it, as implied terms: this is very common in mercantile contracts where there is an established usage: in that case the courts are spelling out what both parties know and would, if asked, unhesitatingly agree to be part of the bargain. In other cases, where there is an apparently complete bargain, the courts are willing to add a term on the ground that without it the contract will not work\u2014this is the case, if not of <i>The Moorcock </i>itself on its facts, at least of the doctrine of <i>The Moorcock </i>as usually applied. This is, as was pointed out by the majority in the Court of Appeal, a strict test\u2014though the degree of strictness seems to vary with the current legal trend, and I think that they were right not to accept it as applicable here. There is a third<br<br>&emsp;&emsp;variety of implication, that which I think Lord <span class=\"bd\">Denning MR</span> favours, or at least did favour in this case, and that is the implication of reasonable terms. But though I agree with many of his instances, which in fact fall under one or other of the preceding heads, I cannot go so far as to endorse his principle: indeed, it seems to me, with respect, to extend a long, and undesirable, way beyond sound authority.<br>&emsp;&emsp;The present case, in my opinion, represents a fourth category, or I would rather say a fourth shade on a continuous spectrum. The court here is simply concerned to establish what the contract is, the parties not having themselves fully stated the terms. In this sense the court is searching for what must be implied.<br>&emsp;&emsp;a name=\"_Hlk157678412\"></a>What then should this contract be held to be? There must first be implied a letting, i.e., a grant of the right of exclusive possession to the tenants. With this there must, I would suppose, be implied a covenant for quiet enjoyment, as a necessary incident of the letting. The difficulty begins when we consider the common parts. We start with the fact that the demise is useless unless access is obtained by the staircase: we can add that, having regard to the height of the block, and the family nature of the dwellings, the demise would be useless without a lift service: we can continue that there being rubbish chutes built in to the structures and no other means of disposing of light rubbish there must be a right to use the chutes. The question to be answered\u2014and it is the only question in this case\u2014is what is to be the legal<br<br>&emsp;&emsp;There can be no doubt that there must be implied (i) an easement for the tenants and their licensees to use the stairs, (ii) a right in the nature of an easement to use the lifts, (iii) an easement to use the rubbish chutes.<br>&emsp;&emsp;But are these easements to be accompanied by any obligation upon the landlord, and what obligation? There seem to be two alternatives. The first, for which the council contends, is for an easement coupled with no legal obligation, except such as may arise under the Occupiers&#8217; Liability Act 1957 as regards the safety of those using the facilities, and possibly such other liability as might exist under the ordinary law of tort. The alternative<br<br>&emsp;&emsp;s for easements coupled with some obligation on the part of the landlords as regards the maintenance of the subject of them, so that they are available for use.<br>&emsp;&emsp;My Lords, in order to be able to choose between these, it is necessary to define what test is to be applied, and I do not find this difficult. In my opinion such obligation should be read into the contract as the nature of the contract itself implicitly requires, no more, no less: a test in other words of necessity. The relationship accepted by the Corporation is that of landlord and tenant: the tenant accepts obligations accordingly, in relation <i>inter alia </i>to the stairs, the lifts and the chutes. All these are not just facilities, or conveniences provided at discretion: they are essentials of the tenancy without which life in the dwellings, as a tenant, is not possible. To leave the landlord free of contractual obligation as regards these matters, and subject only to administrative or political pressure, is, in my opinion, inconsistent totally with the nature of this relationship. The subject matter of the lease (high-rise blocks) and the relationship created by the tenancy demands, of its nature, some contractual obligation on the landlord. It remains to define the standard. My Lords, if, as I think, the test of the existence of the term is necessity the standard must surely not exceed what is necessary having regard to the circumstances. To imply an absolute obligation to repair would go beyond what is a necessary legal incident and would indeed be unreasonable. An obligation to take reasonable care to keep in reasonable repair and usability is what fits the requirements of the case. Such a definition involves\u2014and I think rightly\u2014recognition that the tenants themselves have their responsibilities. What it is reasonable to expect of a landlord has a clear relation to what a reasonable set of tenants should do for themselves\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Lord Wilberforce therefore envisages three accepted situations in which terms may be implied, and a fourth, championed by Lord Denning MR in the Court of Appeal in this case, which Lord Wilberforce rejects. The first is implication from custom, and the second is implication in fact to make the contract work. He observes that in either of these cases the contract may appear complete without the implied term, although it will not work in accordance with what must be taken to be the parties&#8217; intentions. The third case is implication in law, where the contract is manifestly incomplete and must necessarily be supplemented. It seems fair enough to remark, as Lord Wilberforce does, that these instances of implication exist upon a spectrum in so far as the notion of necessity links them. Lord Denning MR&#8217;s willingness to imply terms because they would be merely reasonable is beyond the spectrum and wrong.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">On its face, this case is confusing. It is said more than once by their Lordships that domestic occupancy of the tower block is not feasible without working lifts, lighting and rubbish chutes. The term implied by Lord Wilberforce amounts to an obligation upon the council to take reasonable care to maintain these facilities. Since it is put no higher than that, it is possible that the council might take reasonable care but still fail to deliver the service, without negligence on its part. No doubt the decision is sensible, because it is rightly pointed out that the tenants have their own obligations to work towards and not against the maintenance of the building. Nevertheless, the reasoning is hard to follow on a technical level, because a stated necessity is to be secured by a means which may fall short, being less than unconditional.</span><br>&emsp;&emsp;<span class=\"it\">The reason this happens is that their Lordships very properly use a two-part test for the implication of a term here, as suggested in connection with The Moorcock above. The use of the facilities, and therefore the implication of a term, are necessities (an expression denoting that they are absolutely required). The term to be implied should not go beyond what is necessary (an expression limiting the obligation to the one appropriate in all the circumstances). </span><br>&emsp;&emsp;<span class=\"it\">It would have been more straightforward to concede that the test for whether to imply a term is necessity, but that the test for the specific term then to imply is reasonableness or proportionality.</span><br>&emsp;&emsp;<span class=\"it\">In more recent cases, \u201cnecessity\u201d as the test for implication of terms from the parties&#8217; legal relationship has come under pressure.</span>"
    ],
    "CATEGORY": "Implication of Terms &mdash; Terms Implied From Parties' Legal Relationship (\u201cTerms Implied In Law\u201d)",
    "CITATION": "Liverpool City Council v Irwin [1977] AC 239",
    "CATEGORIES": [
        "Implication of Terms",
        "Terms Implied From Parties' Legal Relationship (\u201cTerms Implied In Law\u201d)"
    ],
    "RELATED": [
        "Scally v Southern Health and Social Services Board",
        "Crossley v Faithful & Gould Holdings",
        "Hutton v Warren",
        "The Moorcock",
        "Attorney General of Belize v Belize Telecom Ltd",
        "Reigate v Union Manufacturing Co",
        "Shirlaw v Southern Foundries Ltd",
        "Smith v Wilson",
        "Merritt v Merritt",
        "Harris v Nickersen",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Lipkin Gorman v Karpnale Ltd"
    ],
    "NUMBER": "209",
    "TYPE": "Case",
    "NAME": "Liverpool City Council v Irwin",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Implication of Terms",
        "Terms Implied From Parties' Legal Relationship (\u201cTerms Implied In Law\u201d)"
    ],
    "YEAR": "1992",
    "NUMBER": "210",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;One means for an employee to complete the legislatively required forty years of qualifying service to become eligible for a state pension was to purchase additional years at a favourable rate. The plaintiffs brought this case against their employers on the basis (inter alia) that the latter were in breach of an implied term to notify their employees of that right.<br>&emsp;&emsp;The House of Lords accepted that a term was properly to be implied, subject to a restriction on the category of contracts to which (by virtue of the doctrine of binding precedent) it would apply. It was necessary, because if there was no such obligation on the employer, then employees might have no way of knowing about a right which had been created for their benefit and it would be stultified.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Although Lord Bridge said that he fully accepted that the criterion to justify an implication of this type was necessity, not reasonableness, he found in the authorities a distinction between the necessity which operated in the business efficacy cases, and \u201cthe search, based on wider considerations, for a term which the law will imply as a necessary incident of a definable category of contractual relationship.<br>&emsp;&emsp;Whether or not Lord Bridge intended here to give a hint to future courts, a further step was perhaps taken (obiter) in the next case,"
    ],
    "NAME": "Scally v Southern Health and Social Services Board",
    "CATEGORY": "Implication of Terms &mdash; Terms Implied From Parties' Legal Relationship (\u201cTerms Implied In Law\u201d)",
    "CITATION": "Scally v Southern Health and Social Services Board [1992] 1 AC 294",
    "RELATED": [
        "Crossley v Faithful & Gould Holdings",
        "Liverpool City Council v Irwin",
        "Smith v Wilson",
        "The Moorcock",
        "Shirlaw v Southern Foundries Ltd",
        "Reigate v Union Manufacturing Co",
        "Hutton v Warren",
        "Attorney General of Belize v Belize Telecom Ltd",
        "Roscorla v Thomas",
        "Shuey v United States",
        "Payne v Cave",
        "Tool Metal v Tungsten Electric"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Implication of Terms",
        "Terms Implied From Parties' Legal Relationship (\u201cTerms Implied In Law\u201d)"
    ],
    "YEAR": "2004",
    "NUMBER": "211",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;An employee, who had resigned on mental health grounds, had followed his employer&#8217;s advice to backdate his resignation for tax reasons. As a result, he lost the entitlement to benefits under his employer&#8217;s insurance scheme. He argued that his employer was in breach of an implied term to take reasonable care for his economic well-being.<br>&emsp;&emsp;The Court of Appeal rejected this term as too broad to be implied generally into contracts of employment, and too burdensome if it were. In the course of his judgment, Dyson LJ described necessity as a standard in cases of this sort as \u201celusive\u201d and \u201cprotean\u201d, adding that it was preferable to recognise the role of reasonableness, fairness, and the balancing of competing policy considerations. He doubted whether necessity had in fact been the test applied in certain recent cases.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;May the law come to accept that it includes a jurisdiction to supply default clauses into classes of legal relationship on the basis, essentially, of reasonableness rather than necessity? Perhaps not, because judicial intervention of this type is often subject to the objection that the legislature is better equipped to act, and so if it is to take place at all under the auspices of a court it is most wisely explained on the basis of some necessity for the court&#8217;s intervention. However, a different view is possible. As a result of Lord <span class=\"bd\">Hoffmann</span>&#8216;s judgment in <i>Attorney General of Belize</i>, the tectonic plates on which interpretation and implication rest are on the move. Implication based on the presumed intention of the parties is now an extension of contractual interpretation. That has sundered it from implication in law. The latter area may drift further away from interpretation in fact, to which it was once tethered, and to which the requirement of necessity properly belongs. Implication of terms in law may come to look far more like the process by which courts determine whether duties should be imposed in the field of tort. If that were to happen, appeals to necessity would begin to sound beside the point."
    ],
    "NAME": "Crossley v Faithful & Gould Holdings",
    "CATEGORY": "Implication of Terms &mdash; Terms Implied From Parties' Legal Relationship (\u201cTerms Implied In Law\u201d)",
    "CITATION": "Crossley v Faithful &amp; Gould Holdings [2004] EWCA Civ 293",
    "RELATED": [
        "Scally v Southern Health and Social Services Board",
        "Liverpool City Council v Irwin",
        "Hutton v Warren",
        "Reigate v Union Manufacturing Co",
        "Attorney General of Belize v Belize Telecom Ltd",
        "The Moorcock",
        "Shirlaw v Southern Foundries Ltd",
        "Smith v Wilson",
        "Carlill v Carbolic Smoke Ball Company",
        "L'Estrange v Graucob",
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Thornton v Shoe Lane Parking"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Classification of Terms"
    ],
    "NUMBER": "212",
    "TYPE": "Concept",
    "NAME": "Classification of Terms - Introduction",
    "CATEGORY": "Classification of Terms",
    "RELATED": [
        "Innominate terms",
        "Conditions",
        "Further aspects of the remedial scheme",
        "Making the election to affirm or terminate",
        "Warranties",
        "Comments",
        "Comments.",
        "The basics",
        "Reactions to the innominate analysis",
        "Misrepresentation (1) - Introduction",
        "Common mistake as to the subject-matter of the contract",
        "Implication from presumed intention (\u201cterms implied in fact\u201d)"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;The last lecture, in its second half, addressed the implication of terms into contracts by the courts. It would seem natural to go straight on to deal with the terms implied (or more accurately imposed) by statute. However, the study of those terms will require you to address not only their content, but also their status. For that reason, it is most convenient to deal first with the status of contractual terms generally, in order to explain the common law scheme which Parliament has built upon in some of its most important commercial legislation.<br>&emsp;&emsp;That scheme, which comprises two levels of terms and associated remedies, is simple to the point of being rigid. Through the device of the \u201cinnominate\u201d term, the common law has found a way beyond the limitations of its traditional approach, although it is one which exists in an uneasy tension with the value of certainty in commercial law.<br>&emsp;&emsp;The second part of the lecture is largely devoted to the Sale of Goods Act 1979, and reproduces the text of some of the most important sections of the Act with minimal comment. These are the sections which imply terms of primary importance into commercial contracts. For the purposes of this year, students are not expected to go further than to develop some familiarity with the most important provisions. These are printed in bold type. The surrounding sections of the Act are given by way of context and linkage.<br>&emsp;&emsp;The lecture touches on similar provisions in the Supply of Goods and Services Act 1982, and reproduces sections 13-15 of that Act, before turning to the changes made by the Consumer Rights Act 2015. The sections taken from the two earlier statutes are shown as amended by the 2015 legislation. This statutory material will be discussed to some extent in tutorials."
    ]
},
{
    "CATEGORIES": [
        "Classification of Terms"
    ],
    "NUMBER": "213",
    "FLAGS": [
        "Diplock"
    ],
    "TYPE": "Concept",
    "NAME": "The basics",
    "CATEGORY": "Classification of Terms",
    "RELATED": [
        "Comments",
        "Warranties",
        "Comments.",
        "Reactions to the innominate analysis",
        "Further aspects of the remedial scheme",
        "Conditions",
        "Classification of Terms - Introduction",
        "Innominate terms",
        "Making the election to affirm or terminate",
        "Unfair Contract Terms Act 1977 - Introduction",
        "Part Payment of a Debt as Consideration",
        "The role of foresight"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The basics</span></span><br>&emsp;&emsp;Broadly speaking, a contractual term may be classified as either a warranty, or a condition, or an innominate term. The distinction between warranties and conditions is of long standing, and became entrenched in English contract law after the Sale of Goods Act 1983 adopted it. The category of \u201cintermediate\u201d or \u201cinnominate\u201d terms has been introduced into the law comparatively recently, by the 1962 judgment of <span class=\"bd\">Diplock LJ</span> in the <i>Hong Kong Fir</i> case, and will be discussed in due course.<br>&emsp;&emsp;The distinction between warranties and conditions ultimately depends, like so much analysis of contract, upon the parties&#8217; intention. Nevertheless, although that may be the principled bedrock upon which the distinction is established, it will often be reached in practice by express analysis of how important the term in question is. Conditions are the more important terms of the contract. Warranties are the less important terms. The distinction is therefore drawn in a way which closely resembles the law&#8217;s approach to identifying pre-contractual statements as terms or representations.<br>&emsp;&emsp;The distinction has crucial consequences in terms of the remedies which will be available for breach of a given term.<br>&emsp;&emsp;The breach of condition brings about a more complex situation. The wronged party has a choice (or \u201celection\u201d) to make, since breach of condition creates the entitlement either to terminate the contract (and sue for damages as well if necessary), or to \u201caccept the breach\u201d and sue only for damages, while providing and hoping to receive continued performance of the contract."
    ]
},
{
    "CATEGORIES": [
        "Classification of Terms"
    ],
    "NUMBER": "214",
    "TYPE": "Concept",
    "NAME": "Further aspects of the remedial scheme",
    "CATEGORY": "Classification of Terms",
    "RELATED": [
        "Making the election to affirm or terminate",
        "Reactions to the innominate analysis",
        "Conditions",
        "Comments",
        "Warranties",
        "Innominate terms",
        "Comments.",
        "The basics",
        "Classification of Terms - Introduction",
        "Interpretation and precedent",
        "Fraudulent, negligent and innocent misrepresentation",
        "Lord Denning's invention of common mistake in equity"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Further aspects of the remedial scheme</span></span><br>&emsp;&emsp;Perhaps the first issue, for the purposes of developing an understanding of what has been stated above, is to touch on the circumstances in which the wronged party may wish only to sue for damages in connection with a breach of condition. It may seem slightly odd that a party would choose to forego the apparently superior remedy of termination. The answer is an entirely practical one. There could be more than one reason why the wronged party would not wish to terminate the contract, even though the law presents that option. For instance, the ongoing trading relationship with the party in breach may be of the utmost importance. Damages may well constitute sufficient compensation for the breach, while termination would destroy the commercial relationship.<br>&emsp;&emsp;The election, once made, is binding. If it is decided only to sue for damages in connection with a breach of condition, then further performance under the contract remains due from either party. There can be no second thoughts. Equally, if it is decided to terminate the contract, it cannot later be revived.<br>&emsp;&emsp;More than that turns on the election. If one party purports to terminate the contract on account of the other&#8217;s breach of condition, the other may object (and perhaps later prove in court) that the term breached was not a condition but merely a warranty, or even that no term was breached. If that is so, then the termination of contract will itself be a breach \u2013 wrongful repudiation.<br>&emsp;&emsp;It is therefore of the utmost importance that the law on this topic should be clear, so that parties can know with certainty what rights they have. That being said, there is a competing legal value which creates tension in this area. While being certain, the law also needs to deliver a proportionate scheme of remedies. It therefore needs to show a degree of elasticity."
    ]
},
{
    "CATEGORIES": [
        "Classification of Terms",
        "Classification of Terms",
        "Conditions"
    ],
    "NUMBER": "215",
    "FLAGS": [
        "McKendrick"
    ],
    "TYPE": "Concept",
    "NAME": "Conditions",
    "CATEGORY": "Classification of Terms &mdash; Classification of Terms &mdash; Conditions",
    "RELATED": [
        "Comments",
        "Innominate terms",
        "Making the election to affirm or terminate",
        "The basics",
        "Classification of Terms - Introduction",
        "Further aspects of the remedial scheme",
        "Warranties",
        "Comments.",
        "Reactions to the innominate analysis",
        "The Parol Evidence Rule",
        "Artificially limiting the matrix of fact",
        "The contractual nature of the document / expectations of the parties"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Conditions</span></span><br>&emsp;&emsp;One way in which the parties can (in theory) ensure clarity and at least some proportionality is by classifying their obligations themselves at the time of contracting as either conditions or warranties. The question, as the next case shows, is whether a court will feel bound to accept such a classification.",
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The parties entered into a \u201cdistributorship agreement\u201d by which Wickman was to act as agent in obtaining buyers for panel presses manufactured by Schuler, a German company. The agreement was to last for four and a half years. Clause 7(b) of the agreement stated that \u201cit shall be condition of this agreement that (i) [Wickman] shall send its representatives to visit [the six large UK motor manufacturers] at least once in every week for the purpose of soliciting orders for panel presses ...\u201d. Clause 11a gave to either party the right to terminate the agreement if the other had committed a material breach which remained unremedied within sixty days of the other&#8217;s notice in writing. Wickman did not make all the weekly visits required by the agreement. Schuler terminated it immediately, claiming that Wickman was in breach of condition, and that by its nature the breach could not be remedied. Since the possibility of remedy under clause 11 had no application on this view, Schuler claimed the ordinary remedy for breach of condition untrammelled by the need to give a sixty day warning.<br>&emsp;&emsp;The House of Lords held, by a majority, that Schuler had had no entitlement to terminate the contract. Lord Reid said that the agreement was badly drafted, but that one available construction (avoiding absurdity) was that a few missed visits could be remedied by improving procedures for the future. Schuler should therefore have acted in accordance with the provisions of clause 11, rather than immediately terminating the contract. Lord Wilberforce, dissenting, was of the view that there was no basis for the assumption that the parties had adopted \u201ca standard of easygoing tolerance rather than one of aggressive, insistent punctuality and efficiency\u201d, and that the drafting of the agreement in fact indicated the latter.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;In the following explanation by Lord Reid of his reasoning, the reference to \u201crescinding\u201d the contract should be read as \u201cterminating the contract\u201d.<br>&emsp;&emsp;\u201cSchuler maintains that the word &#8220;condition&#8221; has now acquired a precise legal meaning; that, particularly since the enactment of the Sale of Goods Act, 1893, its recognised meaning in English law is a term of a contract any breach of which by one party gives to the other party an immediate right to rescind the whole contract. Undoubtedly the word is frequently used in that sense. There may, indeed, be some presumption that in a formal legal document it has that meaning. But it is frequently used with a less stringent meaning. One is familiar with printed &#8220;Conditions of Sale&#8221; incorporated into a contract, and with the words &#8220;For conditions see back&#8221; printed on the ticket. There it simply means that the &#8220;conditions&#8221; are terms of the contract.<br>&emsp;&emsp;In the ordinary use of the English language &#8220;condition&#8221; has many meanings, some of which have nothing to do with agreements. In connection with an agreement it may mean a pre-condition: something which must happen or be done before the agreement can take effect. Or it may mean some state of affairs which must continue to exist if the agreement is to remain in force. The legal meaning on which Schuler relies is, I think, one which would not occur to a layman; a condition in that sense is not something which has an automatic effect. It is a term the breach of which by one party gives to the other an option either to terminate the contract or to let the contract proceed and, if he so desires, sue for damages for the breach.<br>&emsp;&emsp;Sometimes a breach of a term gives that option to the aggrieved party because it is of a fundamental character going to the root of the contract, sometimes it gives that option because the parties have chosen to stipulate that it shall have that effect. Blackburn J. said in <b><i>Bettini v Gye </i></b>(1875) L.R. 1 Q.B.D. 183: <i>&#8220;Parties may think some matter, apparently of very<br>&emsp;&emsp;little importance, essential; and if they sufficiently express an intention to make the literal fulfilment of such a thing a condition precedent, it will be one.&#8221;<br>&emsp;&emsp;In the present case it is not contended that Wickman&#8217;s failures to make visits amounted in themselves to fundamental breaches. What is contended is that the terms of clause 7 <i>&#8220;sufficiently express an intention </i>&#8220; to make any breach, however small, of the obligation to make visits a condition so that any such breach shall entitle Schuler to rescind the<br>&emsp;&emsp;Schuler maintains that the use of the word &#8220;condition&#8221; is in itself enough to establish this intention. No doubt some words used by lawyers do have a rigid inflexible meaning. But we must remember that we are seeking to discover intention as disclosed by the contract as a whole. Use of the word &#8220;condition&#8221; is an indication\u2014even a strong indication\u2014of such an<br>&emsp;&emsp;ntention but it is by no means conclusive. The fact that a particular construction leads to a very unreasonable result must be a relevant consideration. The more unreasonable the result the more unlikely it is that the parties can have intended it, and if they do intend it the more<br>&emsp;&emsp;necessary it is that they shall make that intention abundantly clear\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;As Professor <span class=\"bd\">McKendrick</span> notes, the key to understanding this case lies in the relationship between clauses 7 and 11 of the parties&#8217; contract. He concludes, surely rightly, that if no more had been in play than the agreement&#8217;s characterisation of even a single, venial breach as a breach of condition, then there would have been very little basis for arguing that it was not a condition. That drafting would have been a clear indication of the parties&#8217; intention. However, clause 11 provided contractual machinery which the majority thought capable of barring the consequence that any breach should immediately justify termination.<br>&emsp;&emsp;McKendrick also makes the valuable point that the majority&#8217;s decision left Schuler liable for wrongfully repudiating the contract. Wickman was therefore free to accept that breach (if it wished), and sue Schuler for all the profits which Wickman could show it would have earned over the lifetime of the agency. As for Schuler&#8217;s action for what it had thought to be a \u201cbreach of condition\u201d, it would have been downgraded to the right to bring a counterclaim for such damage as it could show was caused by the missed visits.<br>&emsp;&emsp;Despite these somewhat surprising consequences of the majority&#8217;s decision, <i>Schuler v Wickman</i> stands as the leading authority in English law on the distinction between conditions and warranties."
    ]
},
{
    "CATEGORIES": [
        "Classification of Terms",
        "Classification of Terms",
        "Warranties"
    ],
    "NUMBER": "216",
    "TYPE": "Concept",
    "NAME": "Warranties",
    "CATEGORY": "Classification of Terms &mdash; Classification of Terms &mdash; Warranties",
    "RELATED": [
        "Comments",
        "Further aspects of the remedial scheme",
        "The basics",
        "Innominate terms",
        "Comments.",
        "Classification of Terms - Introduction",
        "Reactions to the innominate analysis",
        "Conditions",
        "Making the election to affirm or terminate",
        "Commercial Agreements",
        "The contractual nature of the document / expectations of the parties",
        "Using the Unfair Contract Terms Act 1977"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Warranties</span></span><br>&emsp;&emsp;As stated above, warranties are essentially the less important terms of the contract, which the parties may be deemed to have intended only to be underwritten by a remedy in damages.<br>&emsp;&emsp;A fuller and more satisfactory definition than this is not readily available. The interpretation section of the Sale of Goods Act 1979 defines a warranty as \u201ccollateral to the main purpose of the contract\u201d, and this must be contrasted with the frequent observation in the cases that conditions \u201cgo to the root of the contract\u201d. \u201cCollateral\u201d here seems to have much the sense of \u201csecondary\u201d or \u201cinessential\u201d. The fact is that the words \u201cwarranty\u201d and \u201ccondition\u201d have often been used in English law with no apparent precision, but rather to point up the difference of something from something else (compare the various ways in which the expression \u201ccommon law\u201d has been used to mark a distinction \u2013 from equity, from statute, from civilian law, etc).<br>&emsp;&emsp;Glosses upon the meaning of \u201cwarranty\u201d in some decisions accordingly need to be treated warily. For example, where \u201cwarranty\u201d is used in the cases to contrast with non-contractual \u201crepresentations\u201d, it has already been seen that one supposed characteristic of a warranty is the emphasis placed upon it, or even its decisive effect upon one party&#8217;s willingness to contract with the other. These associations of the word really have to be put away as irrelevant to the present topic, or even misleading."
    ]
},
{
    "CATEGORIES": [
        "Classification of Terms"
    ],
    "NUMBER": "217",
    "TYPE": "Concept",
    "NAME": "Innominate terms",
    "CATEGORY": "Classification of Terms",
    "RELATED": [
        "The basics",
        "Further aspects of the remedial scheme",
        "Making the election to affirm or terminate",
        "Warranties",
        "Classification of Terms - Introduction",
        "Conditions",
        "Comments",
        "Comments.",
        "Reactions to the innominate analysis",
        "Implication of Terms - Introduction",
        "Acceptance By Silence/Inactivity",
        "The election to terminate"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Innominate terms</span></span><br>&emsp;&emsp;In order to understand the challenge brought to the bipartite scheme of classification by cases in the mid twentieth century, following <i>Hong Kong Fir </i>(below), it is essential to bear in mind that the traditional classification does not look beyond the moment of contracting. This is because it is based upon the intention of the parties, and their intention must appear from the contract.<br>&emsp;&emsp;Once the contract is formed, there is no further guide to the parties&#8217; intentions, so that there is no reason for the courts to look beyond that point in time. Clearly, courts do in fact look beyond that point in time in so far as they compare performance of the contract with its terms in order to decide whether there has been a breach, but traditionally they do not do so in order to construe the contract.<br>&emsp;&emsp;If, however, one&#8217;s concern is with the proportionality of the remedy for breach of contract provided by the law, it may be of the greatest importance to look beyond the moment of contract formation to the breach which has actually occurred. Whatever the importance of the term which has been breached, proportionality must partly consist in the remedy being suited to the <i>breach</i>, and not just to the <i>term</i>. It may well be that a very important term could be breached in a very minor way, causing little loss, and vice versa. An appropriate remedy is one which most truly offers compensation for loss in fact suffered.<br>&emsp;&emsp;We should therefore enter the field of innominate terms aware that the orthodox approach to the classification of a term refuses to be influenced by the nature of the breach, while a different perspective characterises the actual breach as possibly decisive."
    ]
},
{
    "YEAR": "1962",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;By a time charter, the charterers were to have the vessel Hong Kong Fir for 24 months. Clause 1 on the charter stated that the vessel was \u201cin every way fitted for ordinary cargo service\u201d (the \u201cseaworthiness clause\u201d). The shipowners were bound to keep the vessel in a fit state. Any repair taking more than 24 hours would cause the payment of hire to be suspended. Such \u201coff-hire\u201d days could be added on to the overall duration of the charter, at the charterers&#8217; option. The vessel was in fact off-hire for substantial periods as a result of engine trouble and the incompetence of the short-handed crew. Not long after the charter period began, the market rate for freight carriage dropped, so that the charterers could have obtained a ship more cheaply. The charterers wrote to the shipowners to terminate the contract for breach of condition.<br>&emsp;&emsp;At first instance, the judge found that the contract had been wrongfully repudiated. The Court of Appeal upheld that judgment. Sellers LJ stated that the seaworthiness clause was a warranty. Upjohn LJ said that the question was whether the breach of the clause went so much to the root of the contract as to make its further commercial performance impossible. <span class=\"bd\">Diplock LJ</span> said that the seaworthiness clause was to be viewed as neither a condition nor a warranty, but as an \u201cintermediate\u201d or \u201cinnominate\u201d term for breach of which the remedy would be the one best apportioned to the breach itself and its consequences.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;a name=\"para54\"></a><a name=\"para53\"></a>\u201cLawyers tend to speak of [the bipartite classification of terms] as if it were comprehensive, partly for the historical reasons which I have already mentioned and partly because Parliament itself adopted it in the Sale of Goods Act, 1893, as respects a number of implied terms in contracts for the sale of goods and has in that Act used the expressions &#8220;condition&#8221; and &#8220;warranty&#8221; in that meaning. But it is by no means true of contractual undertakings in general at common law.<br>&emsp;&emsp;a name=\"para55\">No doubt there are many simple contractual undertakings, sometimes express but more often because of their very simplicity (&#8220;It goes without saying&#8221;) to be implied, of which it can be predicated that every breach of such an undertaking must give rise to an event which will deprive the party not in default of substantially the whole benefit which it was intended that he should obtain from the contract. And such a stipulation, unless the parties have agreed that breach of it shall not entitle the non-defaulting party to treat the contract as repudiated, is a &#8220;condition&#8221;. So too there may be other simple contractual undertakings of which it can be predicated that no breach can give rise to an event which will deprive the party not in default of substantially the whole benefit which it was intended that he should obtain from the contract; and such a stipulation, unless the parties have agreed that breach of it shall entitle the non-defaulting party to treat the contract as repudiated, is a &#8220;warranty &#8220;.</a<br>&emsp;&emsp;a name=\"para56\">There are, however, many contractual undertakings of a more complex character which cannot be categorised as being &#8220;conditions&#8221; or &#8220;warranties&#8221; if the late nineteenth century meaning adopted in the Sale of Goods Act, 1893, and used by Lord Justice Bowen in Bensen v. Taylor Sons &amp; Co. (1893 2 Queen&#8217;s Bench page 274, at page 280) be given to those terms. Of such undertakings all that can be predicated is that some breaches will and others will not give rise to an event which will deprive the party not in default of substantially the whole benefit which it was intended that he should obtain from the contract;and the legal consequences of a breach of such an undertaking, unless provided for expressly in the contract, depend upon the nature of the event to which the breach gives rise and do not follow automatically from a prior classification of the undertaking as a &#8220;condition&#8221; or a &#8220;warranty&#8221;. </a><a name=\"para57\"></a<br>&emsp;&emsp;a name=\"para58\">As my brethren have already pointed out, the shipowner&#8217;s undertaking to tender a seaworthy ship has, as a result of numerous decisions as to what can amount to &#8220;unseaworthiness&#8221;, become one of the most complex of contractual undertakings. It embraces obligations with respect to every part of the hull and machinery, stores and equipment and the crew itself. It can be broken by the presence of trivial defects easily and rapidly remediable as well as by defects which must inevitably result in a total loss of the vessel.</a<br>&emsp;&emsp;a name=\"para59\">Consequently the problem in this case is, in my view, neither solved nor soluble by debating whether the shipowner&#8217;s express or implied undertaking to tender a seaworthy ship is a &#8220;condition&#8221; or a &#8220;warranty&#8221;. It is like so many other contractual terms an undertaking one breach of which may give rise to an event which relieves the charterer of further performance of his undertakings if he so elects and another breach of which may not give rise to such an event but entitle him only to monetary compensation in the form of damages. It is, with all deference to Mr. Ashton Roskill&#8217;s skilful argument, by no means surprising that among the many hundreds of previous cases about the shipowner&#8217;s undertaking to deliver a seaworthy ship there is none where it was found profitable to discuss in the judgments the question whether that undertaking is a &#8220;condition&#8221; or a &#8220;warranty&#8221;; for the true answer, as I have already indicated, is that it is neither, but one of that large class of contractual undertakings one breach of which may have the same effect as that ascribed to a breach of &#8220;condition&#8221; under the Sale of Goods Act and a different breach of which may have only the same effect as that ascribed to a breach of &#8220;warranty&#8221; under that Act.</a><a name=\"para60\">...</a<br>&emsp;&emsp;What the learned judge had to do in the present case as in any other case where one party to a contract relies upon a breach by the other party as giving him a right to elect to rescind the contract, was to look at the events which had occurred as a result of the breach at the time at which the charterers purported to rescind the charter-party and to decide whether the occurrence of those events deprived the charterers of substantially the whole benefit which it was the intention of the parties as expressed in the charter-party that the charterers should obtain from the further performance of their own contractual undertakings\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;How does the orthodox classification co-exist with Lord Diplock&#8217;s analysis? The orthodox labelling of terms as conditions or warranties remains prima facie appropriate where the labels have been applied by the parties, and it is also holds where the term under examination is one which can be breached only in a restricted range of ways. Later cases emphatically add that the orthodox classification continues to govern where it is mandated by binding authority in respect of specific terms. Beyond these instances, the innominate analysis appears to be the correct one.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">In the application of that analysis it is easy to take a wrong step by regarding an innominate term as effectively a condition if the consequences of its breach are serious, and a warranty if otherwise. If this were right, Lord Diplock would have achieved little; the innominate analysis would merely identify terms in a middle ground, and use the consequences of breach as a prompt to help decide which way they should go.</span><br>&emsp;&emsp;<span class=\"it\">The innominate understanding of terms is more than a way of introducing some order into the debatable middle ground between conditions and warranties. It has deep jurisprudential roots in the historical development of contract law. The breach of an innominate term will justify termination of the contract only where it deprives the wronged party of substantially the whole benefit of the contract \u2013 the threshold for termination is set very high. The explanation for this is that Lord Diplock means to derive termination for breach from the same stratum within contract that produces termination for frustration (where the contract, without fault of either party, has become impossible or effectively impossible of performance). His full discussion of these parallel doctrines, as he regards them, has not been reproduced above for reasons of space, but it includes his perception that the right to terminate arises not so much from the fact of breach itself, as from the event which the breach constitutes. In parallel with the law of frustration, where it is axiomatic that frustration operates automatically, and in parallel with the doctrine of conditions precedent, the event simply leaves the parties free of further obligations to each other. </span><br>&emsp;&emsp;<span class=\"it\">On this view, it is actually the continuing liberty of the wronged party to elect to keep the contract going which starts to appear anomalous. The radical equation of lines of contractual reasoning which Lord Diplock is seeking to bring about in the Hong Kong Fir seems to leave little room for that choice. An associated point is astutely made by Megaw LJ in the later case of Bunge Corpn v Tradax (1981). If, ex hypothesi, the choice between termination and affirmation of the contract only exists where the wronged party has been deprived of substantially the whole benefit that the contract was to provide, why would a party in that position ever wish to affirm?</span><br>&emsp;&emsp;<span class=\"it\">Hong Kong Fir is not the only exercise in jurisprudence by Lord Diplock which excites admiration mixed with the slight unease that it may prove too much. </span>"
    ],
    "CATEGORY": "Classification of Terms &mdash; Classification of Terms &mdash; Innominate Terms",
    "CITATION": "Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd [1962] 2 QB 26",
    "CATEGORIES": [
        "Classification of Terms",
        "Classification of Terms",
        "Innominate Terms"
    ],
    "RELATED": [
        "Bunge Corporation v Tradax Export SA",
        "Ward v Byham",
        "Rose v Pim",
        "Andrews Bros (Bournemouth) Ltd v Singer & Co Ltd",
        "Grainger & Sons v Gough (Surveyor of Taxes)",
        "Dick Bentley Productions v Harold Smith (Motors) Ltd",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Hillas v Arcos",
        "Waltons Stores v Maher",
        "Household Fire Insurance Co v Grant",
        "Krell v Henry",
        "Vitol v Norelf"
    ],
    "NUMBER": "218",
    "TYPE": "Case",
    "NAME": "Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd",
    "FLAGS": [
        "Diplock"
    ]
},
{
    "CATEGORIES": [
        "Classification of Terms"
    ],
    "NUMBER": "219",
    "FLAGS": [
        "Diplock"
    ],
    "TYPE": "Concept",
    "NAME": "Making the election to affirm or terminate",
    "CATEGORY": "Classification of Terms",
    "RELATED": [
        "Comments.",
        "Reactions to the innominate analysis",
        "Innominate terms",
        "Classification of Terms - Introduction",
        "The basics",
        "Further aspects of the remedial scheme",
        "Comments",
        "Conditions",
        "Warranties",
        "Counter-Offer",
        "The old principles of \u201clegal\u201d interpretation",
        "Enrichment by subtraction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Making the election to affirm or terminate</span></span><br>&emsp;&emsp;Before we proceed further with the cases on innominate terms, it is worth taking a detour to look more closely at the election which the wronged party makes in response to breach of condition or innominate term rendering the contract terminable. The current law does not place any controls upon the making of this election, so that it can be informed purely by commercial opportunism. Professor Brownsword, in \u201cRetrieving Reasons, Retrieving Rationality? A New Look at the Right to Withdraw for Breach of Contract\u201d (1992) 5 Journal of Contract Law, 83, examines the principles which could be applied in this context. In the course of doing so, he helpfully sheds light on the reasons which might be given by a party seeking to terminate a contract for breach:<br>&emsp;&emsp;\u201cWithout any claim to being exhaustive of possible good reasons, six arguable grounds for the right to withdraw may be suggested as follows:<br>&emsp;&emsp;(1) the contract breaker evinces, through the breach, a lack of commitment to the contract as a source of obligation (for example, the breach is intentional/calculating, or fraud/dishonesty is involved);<br>&emsp;&emsp;(2) the breach raises concerns about the competence of the contract-breaker (for example, the breach involves negligence);<br>&emsp;&emsp;(3) the breach, although unintentional and non-negligent, renders performance under the contract radically different from that envisaged at formation;<br>&emsp;&emsp;(4) proving (or quantifying) losses flowing from the breach gives rise to difficulties which put the innocent party at risk;<br>&emsp;&emsp;(5) the breach gives rise to concern about the contract-breaker&#8217;s ability to meet future claims; and<br>&emsp;&emsp;(6) the breach gives rise to concern about the <i>innocent</i> party&#8217;s own ability to perform either the contract in question of another&#8217;s associated contract\u201d.<br>&emsp;&emsp;Professor Brownsword goes on to suppose, within this exercise in imagining how the law might reasonably be, that the party claiming the right to withdraw would need to make out a prima facie case for the applicability of one of the reasons above, and would need to be acting in good faith. The onus would then shift to the other party to rebut the other&#8217;s case.<br>&emsp;&emsp;It must be stressed that the above proposals are not law \u2013 the assertion of the right to terminate is at the sole discretion of the wronged party. However, the scheme above offers a useful insight into some of the practical considerations which presumably inform that exercise of discretion even on the present state of the law. It is also instructive to notice that Brownsword&#8217;s proposals move in the opposite direction from one aspect of <span class=\"bd\">Diplock LJ</span>&#8216;s analysis in the Hong Kong Fir. Termination, on that jurisprudential analysis, tended to be seen as the default position, if not as technically automatic."
    ]
},
{
    "CATEGORIES": [
        "Classification of Terms"
    ],
    "NUMBER": "220",
    "TYPE": "Concept",
    "NAME": "Reactions to the innominate analysis",
    "CATEGORY": "Classification of Terms",
    "RELATED": [
        "The basics",
        "Warranties",
        "Comments",
        "Further aspects of the remedial scheme",
        "Innominate terms",
        "Comments.",
        "Conditions",
        "Classification of Terms - Introduction",
        "Making the election to affirm or terminate",
        "Negligent Misrepresentation",
        "Effect of Promissory Estoppel",
        "Excluding liability for negligence"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Reactions to the innominate analysis</span></span><br>&emsp;&emsp;Several major commercial cases discuss the <i>Hong Kong Fir</i>. The temptation to set them all out at length here will be resisted, but the final one to be cited below (<i>Bunge Corpn v Tradax</i>) does give a clear direction to future courts which justifies fuller quotation from it."
    ]
},
{
    "NUMBER": "221",
    "NAME": "The Mihalis Angelos",
    "TYPE": "Case",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Clause 1 of a charterparty for a voyage from Haiphong to Hamburg stated that the ship was \u201cexpected ready to load under this charter about 1 July 1965\u201d. In fact there were no good grounds to expect the ship to be ready to load on or around that date, since she was still engaged on another charter. The charterers, meanwhile, found that as a result (so they thought) of the war in Vietnam they could not obtain the expected cargo, and terminated the charter claiming force majeure. This ground of termination was found to be invalid. In the shipowners&#8217; action for damages for wrongful repudiation, the issue for the court was whether a breach of Clause 1 gave a right to terminate the contract.<br>&emsp;&emsp;In the Court of Appeal, Megaw LJ held that Clause 1 was a condition, so that its breach did give rise to the right to terminate. Binding authority led to this conclusion. Furthermore, the law needed to be predictable. It was preferable, in a case of this type, that both parties and their advisors should know where they stood, rather than having to wonder whether a court would find that a breach went to the root of the contract. The charterers&#8217; right to terminate was not affected by the fact that they had initially asserted it for an invalid reason."
    ]
},
{
    "NUMBER": "222",
    "FLAGS": [
        "Denning"
    ],
    "NAME": "The Hansa Nord",
    "TYPE": "Case",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A contract for the sale of citrus pulp pellets to be used in the manufacture of cattle feed provided by Clause 7 for \u201cshipment to be made in good condition\u201d. The contract price was \u00a3100,000. Over a third of the pellets were damaged during shipment. The market price of pellets had meanwhile fallen, and the buyers rejected the consignment, claiming that the right to terminate arose from breach of condition. In fact they later repurchased the pellets from a third party for \u00a330,000, and used them for the purpose originally intended.<br>&emsp;&emsp;The Court of Appeal held that Clause 7 was neither a condition nor a warranty. In order to establish that its breach gave rise to the right to terminate the contract, it was necessary in line with the reasoning in the <i>Hong Kong Fir</i> to show that it went to the root of the contract. On these facts that could not be shown. Lord <span class=\"bd\">Denning MR</span> embraced the innominate term analysis with some enthusiasm, holding that it could apply to sales of goods disputes notwithstanding the express use of the condition/warranty dichotomy in the Sale of Goods Act."
    ]
},
{
    "YEAR": "1981",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;By Clause 7 of a contract, the buyers of a consignment of soya bean meal were to give the sellers \u201cat least 15 consecutive days&#8217; notice of probable readiness of vessel[s] and of the approximate quantity to be loaded\u201d. Notice of readiness to load was in fact given on 17 June, and was therefore insufficient if the goods were to be shipped before the end of that month, as the contract required. The sellers treated this as a breach of condition entitling them to terminate the contract. The buyers argued that Clause 7 was an innominate term, so that the shortfall in notice had to be assessed in order to decide whether it deprived the other party of substantially the whole benefit of the contract.<br>&emsp;&emsp;The House of Lords held that on its contextual construction, the term as to notice was a condition. <span class=\"bd\">Diplock LJ</span> in the <i>Hong Kong Fir</i> had been concerned to show that the dichotomy of warranties and conditions did not occupy the entire field of contract terms. He had not intended to provide an easy escape to contract breakers from the consequences of breach of condition. Time provisions in mercantile contracts would usually be of the essence, so that their breach would justify termination.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Wilberforce, commenting on the submissions made by counsel for the buyers, distinguished the <i>Hong Kong Fir</i>:<br>&emsp;&emsp;\u201cThis argument, in my opinion, is based upon a dangerous misunderstanding, or misapplication, of what was decided and said in <i>Hong Kong Fir. </i>That case was concerned with an obligation of seaworthiness, breaches of which had occurred during the course of the voyage. The decision of the Court of Appeal was that this obligation was not a condition, a breach of which entitled the charterer to repudiate. It was pointed out that, as could be seen in advance the breaches, which might occur of it, were various. They might be extremely trivial, the omission of a nail; they might be extremely grave, a serious defect in the hull or in the machinery; they might be of serious but not fatal gravity, incompetence or incapacity of the crew. The decision, and the judgments of the Court of Appeal, drew from these facts the inescapable conclusion that it was impossible to ascribe to the obligation, in advance, the character of a condition.<br>&emsp;&emsp;Diplock LJ then generalised this particular consequence into the analysis which has since become classical. The fundamental fallacy of the appellant&#8217;s argument lies in attempting to apply this analysis to a time clause such as the present in a mercantile contract, which is totally different in character. As to such a clause there is only one kind of breach possible, namely, to be late, and the questions which have to be asked are, first, what importance have the parties expressly ascribed to this consequence, and secondly, in the absence of expressed agreement, what consequence ought to be attached to it having regard to the contract as a whole.<br>&emsp;&emsp;The test suggested by the appellants was a different one. One must consider, they said, the breach actually committed and then decide whether that default would deprive the party not in default of substantially the whole benefit of the contract. They invoked even certain passages in the judgment of Diplock LJ in <i>Hong Kong Fir </i>to support it. One may observe in the first place that the introduction of a test of this kind would be commercially most undesirable. It would expose the parties, after a breach of one, two, three, seven and other numbers of days to an argument whether this delay would have left time for the seller to provide the goods. It would make it, at the time, at least difficult, and sometimes impossible, for the supplier to know whether he could do so. It would fatally remove from a vital provision in the contract that certainty which is the most indispensable quality of mercantile contracts, and lead to a large increase in arbitrations. It would confine the seller\u2014perhaps after arbitration and reference through the courts\u2014to a remedy in damages which might be extremely difficult to quantify. These are all serious objections in practice. But I am clear<br<br>&emsp;&emsp;that the submission is unacceptable in law. The judgment of Diplock LJ does not give any support and ought not to give any encouragement to any such proposition; for beyond doubt it recognises that it is open to the parties to agree that, as regards a particular obligation, any breach shall entitle the party not in default to treat the contract as repudiated. Indeed, if he were not doing so he would, in a passage which does not profess to be more than clarificatory, be discrediting a long and uniform series of cases\u2014at least from <i>Bowes </i>v. <i>Shand </i>(1877) 2 App. Cas. 455 onwards which have been referred to by my noble and learned friend. Lord Roskill. It remains true, as Lord Roskill has pointed out in <i>Cehave N.V. </i>v. <i>Bremer Handelsgesellschaft m.b.H. </i>[1976] 1 Q.B. 44, that the courts should not be too ready to interpret contractual clauses as conditions. And I have myself commended, and continue to commend, the greater flexibility in the law of contracts to which <i>Hong Kong Fir </i>points the way <i>(Reardon Smith Line Ltd. </i>v. <i>Hansen-Tangen </i>[1976] 1 W.L.R. 989, 998). But I do not doubt that, in suitable cases, the courts should not be reluctant, if the intentions of the<br<br>&emsp;&emsp;arties as shown by the contract so indicate, to hold that an obligation has the force of a condition, and that indeed they should usually do so in the case of time clauses in mercantile contracts\u201d.<br>&emsp;&emsp;To read a contract without an awareness of the vital provisions which may be implied into it by statute would be an entirely pointless exercise.<br>&emsp;&emsp;Numerous statutes and other instruments may imply terms into contracts. For the purposes of this year, no more than a first approach is made to the legislative impact on the contents of contracts. To achieve practical competence in this area would require study; the GDL course attempts at least to lay the foundations of an understanding of how statute influences the interpretation and litigation of contracts.<br>&emsp;&emsp;Most of the material which follows is provided only to give the context in which a few, extremely important provisions occur. These, which are printed in bold, need to be learnt. One or two sections which are particularly relevant to subjects covered later in the course are also in bold.<br>&emsp;&emsp;The Sale of Goods Act 1979 remains very close in structure and content to the original Act passed in 1893. This was a codifying Act, drafted by Sir Mackenzie Chalmers with a view to summing up actual mercantile practice and expectations as faithfully as possible. Before being passed, it was scrutinised in particular by Lords Herschell, <span class=\"bd\">Bramwell</span> and Halsbury, as well as others. The 1893 Act was repealed in 1979, but that should not be taken to be a sign that it had outlived its usefulness. Far from it; in fact the 1979 Act which replaced it closely followed its structure and reproduced a great deal of its content.<br>&emsp;&emsp;The Sale of Goods Act is one of the corner-stones of English commercial law, together with the loyalty and responsiveness which the courts have shown to parties&#8217; contractually expressed intentions. It has deserved to be carefully maintained and, when necessary, updated. The 1979 Act has itself been amended, and some of the changes to it will be noted after the main run of text, together with very limited commentary on certain provisions. The most significant modification is that from 1 October 2015 the 1979 Act and the 1982 Supply of Goods and Services Act <b>no longer apply to consumer contracts</b>. These are now regulated by the Consumer Rights Act 2015. Changes made by that Act to the original legislation have been printed below in italics.<br>&emsp;&emsp;(1) This Act applies to contracts of sale of goods made on or after (but not to those made before) 1 January 1894.<br>&emsp;&emsp;(2) In relation to contracts made on certain dates, this Act applies subject to the modification of certain of its sections as mentioned in Schedule 1 below.<br>&emsp;&emsp;(3) Any such modification is indicated in the section concerned by a reference to Schedule 1 below.<br>&emsp;&emsp;(4) Accordingly, where a section does not contain such a reference, this Act applies in relation to the contract concerned without such modification of the section.<br>&emsp;&emsp;(5) Certain sections or subsections of this Act do not apply to a contract to which Chapter 2 of Part 1 of the Consumer Rights Act 2015 applies.<br>&emsp;&emsp;b>(1) A contract of sale of goods is a contract by which the seller transfers or agrees to transfer the property in goods to the buyer for a money consideration, called the price.</b<br>&emsp;&emsp;(2) There may be a contract of sale between one part owner and another.<br>&emsp;&emsp;(4) Where under a contract of sale the property in the goods is transferred from the seller to the buyer the contract is called a sale.<br>&emsp;&emsp;(5) Where under a contract of sale the transfer of the property in the goods is to take place at a future time or subject to some condition later to be fulfilled the contract is called an agreement to sell.<br>&emsp;&emsp;(6) An agreement to sell becomes a sale when the time elapses or the conditions are fulfilled subject to which the property in the goods is to be transferred.<br>&emsp;&emsp;(1) Capacity to buy and sell is regulated by the general law concerning capacity to contract and to transfer and acquire property.<br>&emsp;&emsp;(2) Where necessaries are sold and delivered [to a minor or] to a person who by reason of [mental incapacity or] drunkenness is incompetent to contract, he must pay a reasonable price for them.<br>&emsp;&emsp;(3) In subsection (2) above \u201cnecessaries\u201d means goods suitable to the condition in life of the [minor or other] person concerned and to his actual requirements at the time of the sale and delivery.<br>&emsp;&emsp;(1) Subject to this and any other Act, a contract of sale may be made in writing (either with or without seal), or by word of mouth, or partly in writing and partly by word of mouth, or may be implied from the conduct of the parties.<br>&emsp;&emsp;(1) The goods which form the subject of a contract of sale may be either existing goods, owned or possessed by the seller, or goods to be manufactured or acquired by him after the making of the contract of sale, in this Act called future goods.<br>&emsp;&emsp;(2) There may be a contract for the sale of goods the acquisition of which by the seller depends on a contingency which may or may not happen.<br>&emsp;&emsp;(3) Where by a contract of sale the seller purports to effect a present sale of future goods, the contract operates as an agreement to sell the goods.<br>&emsp;&emsp;b>Where there is a contract for the sale of specific goods, and the goods without the knowledge of the seller have perished at the time when the contract is made, the contract is void.</b<br>&emsp;&emsp;Where there is an agreement to sell specific goods and subsequently the goods, without any fault on the part of the seller or buyer, perish before the risk passes to the buyer, the agreement is avoided.<br>&emsp;&emsp;b>(1) The price in a contract of sale may be fixed by the contract, or may be left to be fixed in a manner agreed by the contract, or may be determined by the course of dealing between the parties.</b<br>&emsp;&emsp;b>(2) Where the price is not determined as mentioned in sub-section (1) above the buyer must pay a reasonable price.</b<br>&emsp;&emsp;b>(3) What is a reasonable price is a question of fact dependent on the circumstances of each particular case</b>.<br>&emsp;&emsp;(1 )Unless a different intention appears from the terms of the contract, stipulations as to time of payment are not of the essence of a contract of sale.<br>&emsp;&emsp;(2) Whether any other stipulation as to time is or is not of the essence of the contract depends on the terms of the contract.<br>&emsp;&emsp;(3) In a contract of sale \u201cmonth\u201d prima facie means calendar month.<br>&emsp;&emsp;b>(2) Where a contract of sale is subject to a condition to be fulfilled by the seller, the buyer may waive the condition, or may elect to treat the breach of the condition as a breach of warranty and not as a ground for treating the contract as repudiated.</b<br>&emsp;&emsp;b>(3) Whether a stipulation in a contract of sale is a condition, the breach of which may give rise to a right to treat the contract as repudiated, or a warranty, the breach of which may give rise to a claim for damages but not to a right to reject the goods and treat the contract as repudiated, depends in each case on the construction of the contract; and a stipulation may be a condition, though called a warranty in the contract.</b<br>&emsp;&emsp;(4) Subject to section 35A below where a contract of sale is not severable and the buyer has accepted the goods or part of them, the breach of a condition to be fulfilled by the seller can only be treated as a breach of warranty, and not as a ground for rejecting the goods and treating the contract as repudiated, unless there is an express or implied term of the contract to that effect.<br>&emsp;&emsp;(4A) Subsection (4) does not apply to a Contract to which Chapter 2 of Part 1 of the Consumer Rights Act 2015 applies (but see the provision made about such contracts in sections 19 to 22 of that Act).<br>&emsp;&emsp;(6) Nothing in this section affects a condition or warranty whose fulfilment is excused by law by reason of impossibility or otherwise.<br>&emsp;&emsp;(7) Paragraph 2 of Schedule 1 below applies in relation to a contract made before 22 April 1967 or (in the application of this Act to Northern Ireland) 28 July 1967.<br>&emsp;&emsp;b>(1) In a contract of sale, other than one to which subsection (3) below applies, there is an implied [term] on the part of the seller that in the case of a sale he has a right to sell the goods, and in the case of an agreement to sell he will have such a right at the time when the property is to pass.</b<br>&emsp;&emsp;(2) In a contract of sale, other than one to which subsection (3) below applies, there is also an implied [term] that\u2014<br>&emsp;&emsp;(a) the goods are free, and will remain free until the time when the property is to pass, from any charge or encumbrance not disclosed or known to the buyer before the contract is made, and<br>&emsp;&emsp;(b) the buyer will enjoy quiet possession of the goods except so far as it may be disturbed by the owner or other person entitled to the benefit of any charge or encumbrance so disclosed or known.<br>&emsp;&emsp;(3) This subsection applies to a contract of sale in the case of which there appears from the contract or is to be inferred from its circumstances an intention that the seller should transfer only such title as he or a third person may have.<br>&emsp;&emsp;(4) In a contract to which subsection (3) above applies there is an implied [<href=\"#commentary-c1108890\" title=\"View the commentary text for this item\">F6</a>term] that all charges or encumbrances known to the seller and not known to the buyer have been disclosed to the buyer before the contract is made.<br>&emsp;&emsp;(5) In a contract to which subsection (3) above applies there is also an implied [<href=\"#commentary-c1108890\" title=\"View the commentary text for this item\">F6</a>term] that none of the following will disturb the buyer&#8217;s quiet possession of the goods, namely\u2014<br>&emsp;&emsp;(b) in a case where the parties to the contract intend that the seller should transfer only such title as a third person may have, that person;<br>&emsp;&emsp;(c) anyone claiming through or under the seller or that third person otherwise than under a charge or encumbrance disclosed or known to the buyer before the contract is made.<br>&emsp;&emsp;b>[ (5A) As regards England and Wales and Northern Ireland, the term implied by subsection (1) above is a condition and the terms implied by subsections (2), (4) and (5) above are warranties.]</b<br>&emsp;&emsp;6) Paragraph 3 of Schedule 1 below applies in relation to a contract made before 18 May 1973.<br>&emsp;&emsp;7) This section does not apply to a contract to which Chapter 2 of Part 1 of the Consumer Rights Act 2015 applies (but see the provision made about such contracts in section 17 of that Act).<br>&emsp;&emsp;b>(1) Where there is a contract for the sale of goods by description, there is an implied [term] that the goods will correspond with the description.</b<br>&emsp;&emsp;b>[ (1A)As regards England and Wales and Northern Ireland, the term implied by subsection (1) above is a condition.]</b<br>&emsp;&emsp;(2) If the sale is by sample as well as by description it is not sufficient that the bulk of the goods corresponds with the sample if the goods do not also correspond with the description.<br>&emsp;&emsp;(3) A sale of goods is not prevented from being a sale by description by reason only that, being exposed for sale or hire, they are selected by the buyer.<br>&emsp;&emsp;(4) Paragraph 4 of Schedule 1 below applies in relation to a contract made before 18 May 1973.<br>&emsp;&emsp;(5) This section does not apply to a contract to which Chapter 2 of Part 1 of the Consumer Rights Act 2015 applies (but see the provision made about such contracts in section 11 of that Act).<br>&emsp;&emsp;(1)Except as provided by this section and section 15 below and subject to any other enactment, there is no implied [term] about the quality or fitness for any particular purpose of goods supplied under a contract of sale.<br>&emsp;&emsp;b>[ (2) Where the seller sells goods in the course of a business, there is an implied term that the goods supplied under the contract are of satisfactory quality.</b<br>&emsp;&emsp;(2A) For the purposes of this Act, goods are of satisfactory quality if they meet the standard that a reasonable person would regard as satisfactory, taking account of any description of the goods, the price (if relevant) and all the other relevant circumstances.<br>&emsp;&emsp;(2B)For the purposes of this Act, the quality of goods includes their state and condition and the following (among others) are in appropriate cases aspects of the quality of goods\u2014<br>&emsp;&emsp;(a) fitness for all the purposes for which goods of the kind in question are commonly supplied,<br>&emsp;&emsp;(2C) The term implied by subsection (2) above does not extend to any matter making the quality of goods unsatisfactory\u2014<br>&emsp;&emsp;(a) which is specifically drawn to the buyer&#8217;s attention before the contract is made,<br>&emsp;&emsp;(b) where the buyer examines the goods before the contract is made, which that examination ought to reveal, or<br>&emsp;&emsp;(c) in the case of a contract for sale by sample, which would have been apparent on a reasonable examination of the sample.]<br>&emsp;&emsp;(3) Where the seller sells goods in the course of a business and the buyer, expressly or by implication, makes known\u2014<br>&emsp;&emsp;(b) where the purchase price or part of it is payable by instalments and the goods were previously sold by a credit-broker to the seller, to that credit-broker,<br>&emsp;&emsp;any particular purpose for which the goods are being bought, there is an implied [term] that the goods supplied under the contract are reasonably fit for that purpose, whether or not that is a purpose for which such goods are commonly supplied, except where the circumstances show that the buyer does not rely, or that it is unreasonable for him to rely, on the skill or judgment of the seller or credit-broker.<br>&emsp;&emsp;(4) An implied [term] about quality or fitness for a particular purpose may be annexed to a contract of sale by usage.<br>&emsp;&emsp;(5) The preceding provisions of this section apply to a sale by a person who in the course of a business is acting as agent for another as they apply to a sale by a principal in the course of a business, except where that other is not selling in the course of a business and either the buyer knows that fact or reasonable steps are taken to bring it to the notice of the buyer before the contract is made.<br>&emsp;&emsp;b>[ (6) As regards England and Wales and Northern Ireland, the terms implied by subsections (2) and (3) above are conditions.]</b<br>&emsp;&emsp;(7) Paragraph 5 of Schedule 1 below applies in relation to a contract made on or after 18 May 1973 and before the appointed day, and paragraph 6 in relation to one made before 18 May 1973.<br>&emsp;&emsp;(8) In subsection (7) above and paragraph 5 of Schedule 1 below references to the appointed day are to the day appointed for the purposes of those provisions by an order of the Secretary of State made by statutory instrument.<br>&emsp;&emsp;(9) This section does not apply to a contract to which Chapter 2 of Part 1 of the Consumer Rights Act 2015 applies (but see the provision made about such contracts in sections 9, 10 and 18 of that Act).<br>&emsp;&emsp;(1) A contract of sale is a contract for sale by sample where there is an express or implied term to that effect in the contract.<br>&emsp;&emsp;b>(2) In the case of a contract for sale by sample there is an implied [term]\u2014</b<br>&emsp;&emsp;(c )that the goods will be free from any defect, making their quality unsatisfactory, which would not be apparent on reasonable examination of the sample.<br>&emsp;&emsp;b>[ (3) As regards England and Wales and Northern Ireland, the term implied by subsection (2) above is a condition.]</b<br>&emsp;&emsp;(4) Paragraph 7 of Schedule 1 below applies in relation to a contract made before 18 May 1973.<br>&emsp;&emsp;(5) <i>This section does not apply to a contract to which Chapter 2 of Part 1 of the Consumer Rights Act 2015 applies (but see the provision made about such contracts in section 18 of that Act).<br>&emsp;&emsp;b>[15A Modification of remedies for breach of condition in non-consumer cases. </b<br>&emsp;&emsp;b>(a) the buyer would, apart from this subsection, have the right to reject goods by reason of a breach on the part of the seller of a term implied by section 13, 14 or 15 above, but</b<br>&emsp;&emsp;b>(b) the breach is so slight that it would be unreasonable for him to reject them,</b<br>&emsp;&emsp;b>then, the breach is not to be treated as a breach of condition but may be treated as a breach of warranty.</b<br>&emsp;&emsp;b>(2) This section applies unless a contrary intention appears in, or is to be implied from, the contract.</b<br>&emsp;&emsp;(3) It is for the seller to show that a breach fell within subsection (1)(b) above."
    ],
    "CATEGORY": "Classification of Terms &mdash; Classification of Terms &mdash; Innominate Terms",
    "CITATION": "Bunge Corporation v Tradax Export SA [1981] 1 WLR 711",
    "CATEGORIES": [
        "Classification of Terms",
        "Classification of Terms",
        "Innominate Terms"
    ],
    "RELATED": [
        "Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd",
        "Edwards v Skyways",
        "Chappell & Co v Nestle Co Ltd",
        "Clifton v Palumbo",
        "Dunlop v New Garage",
        "Dimmock v Hallett",
        "Jones v Padavatton",
        "Smith v Land and House Property Corporation",
        "Scally v Southern Health and Social Services Board",
        "Lampleigh v Brathwait",
        "Doyle v Olby (Ironmngers) Ltd",
        "Balfour v Balfour"
    ],
    "NUMBER": "223",
    "TYPE": "Case",
    "NAME": "Bunge Corporation v Tradax Export SA",
    "FLAGS": [
        "Diplock",
        "Bramwell"
    ]
},
{
    "CATEGORIES": [
        "Classification of Terms"
    ],
    "NUMBER": "224",
    "TYPE": "Concept",
    "NAME": "Comments",
    "CATEGORY": "Classification of Terms",
    "RELATED": [
        "Innominate terms",
        "Making the election to affirm or terminate",
        "Classification of Terms - Introduction",
        "Further aspects of the remedial scheme",
        "Reactions to the innominate analysis",
        "The basics",
        "Conditions",
        "Warranties",
        "Comments.",
        "The basis of quantification",
        "Effect of Promissory Estoppel",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Comments</span></span><br>&emsp;&emsp;Section 6: This section will need attention at a later stage, in connection with a short line of cases on mistake (<i>Couturier v Hastie</i> (1856) and <i>McRae v Commonwealth Disposals</i> (1951)).<br>&emsp;&emsp;Section 11: This section ratifies some of the common law rules on conditions and warranties, and was one of the grounds upon which it was sometimes thought that these two categories of term were the only available ones.<br>&emsp;&emsp;Section 12: With section 12, the main cycle of implied terms begins. It continues through sections 13, 14 and 15, imposing implied conditions as to good title, description, quality and correspondence with sample on non-consumer contracts for the sale of goods. The reason for the initial statement of a \u201cterm\u201d and its later specification as a \u201ccondition\u201d, is that the Act applies in Scotland as well as England, Wales and Northern Ireland; its structure, and the use of square brackets around certain words or sections, are indications that the text diverges at these points into a local version for each jurisdiction.<br>&emsp;&emsp;Section 15A: This new section was introduced by the Sale and Supply of Goods Act 1994. It addresses a problem inherent in the condition/warranty dichotomy which governs this part of the Sale of Goods Act. Since breach of a condition entitles the wronged party to opt for termination of the contract, even though he may have suffered no damage as a result of the breach, there were several cases prior to 1994 in which parties did exactly that in order to escape a bad bargain (see, for example, <i>Moore v Landauer</i> (1921)). The new section puts a stop to this practice. Its introduction creates a necessary elasticity in the scheme of remedies under the Act, comparable to the effect of the innominate term analysis in broader commercial law.<br>&emsp;&emsp;This Act takes the structure and content of the main run of implied terms in the Sale of Goods Act 1979 (sections 12 \u2013 15A), and applies them with virtually no modifications to contracts for the <b>transfer of property in goods</b>, and contracts for the <b>hire of goods</b>. Like the Sale of Goods Act, the 1982 Act no longer applies to consumer contracts, which are now governed by the Consumer Rights Act 2015. Changes made by that Act are printed below in italics.<br>&emsp;&emsp;It is not always easy to determine whether a contract is one for the sale of goods or for the supply of goods and services. Perhaps surprisingly, the boundary between the two types of contract is not rigorously established. Chapter 2 of Atiyah, Adams and MacQueen&#8217;s <i>The Sale of Goods</i> deals exhaustively with this topic. Often, little will turn on which side of the boundary a case is put, since the provisions on either side of the divide are so similar.<br>&emsp;&emsp;Contracts for the <b>supply of a service</b> are dealt with completely separately. Since this part of the 1982 Act includes one implied term of immense importance relating to care and skill, and two more which deserve to be learnt, it is reproduced here in full (sections 13-15).<br>&emsp;&emsp;(1) In this Act a \u201crelevant contract for the supply of a service\u201d means, subject to subsection (2) below, a contract under which a person (\u201cthe supplier\u201d) agrees to carry out a service<i>, other than one to which Chapter 4 of Part 1 of the Consumer Rights Act 2015 applies.<br>&emsp;&emsp;(2) For the purposes of this Act, a contract of service or apprenticeship is not a contract for the supply of a service.<br>&emsp;&emsp;(3) Subject to subsection (2) above, a contract is a contract for the supply of a service for the purposes of this Act whether or not goods are also\u2014<br>&emsp;&emsp;under the contract, and whatever is the nature of the consideration for which the service is to be carried out.<br>&emsp;&emsp;(4) The Secretary of State may by order provide that one or more of sections 13 to 15 below shall not apply to services of a description specified in the order, and such an order may make different provision for different circumstances.<br>&emsp;&emsp;(5) The power to make an order under subsection (4) above shall be exercisable by statutory instrument subject to annulment in pursuance of a resolution of either House of Parliament.<br>&emsp;&emsp;b>In a <i>relevant</i> contract for the supply of a service where the supplier is acting in the course of a business, there is an implied term that the supplier will carry out the service with reasonable care and skill.</b<br>&emsp;&emsp;b>(1) Where, under a <i>relevant</i> contract for the supply of a service by a supplier acting in the course of a business, the time for the service to be carried out is not fixed by the contract, left to be fixed in a manner agreed by the contract or determined by the course of dealing between the parties, there is an implied term that the supplier will carry out the service within a reasonable time.</b<br>&emsp;&emsp;b>(1) Where, under a <i>relevant</i> contract for the supply of a service, the consideration for the service is not determined by the contract, left to be determined in a manner agreed by the contract or determined by the course of dealing between the parties, there is an implied term that the party contracting with the supplier will pay a reasonable charge.</b<br>&emsp;&emsp;(1)Where a right, duty or liability would arise under a <i>relevant</i> contract for the supply of a service by virtue of this Part of this Act, it may (subject to subsection (2) below and the 1977 Act) be negatived or varied by express agreement, or by the course of dealing between the parties, or by such usage as binds both parties to the contract.<br>&emsp;&emsp;(2 )An express term does not negative a term implied by this Part of this Act unless inconsistent with it.<br>&emsp;&emsp;(a) any rule of law which imposes on the supplier a duty stricter than that imposed by section 13 or 14 above; or<br>&emsp;&emsp;(b) subject to paragraph (a) above, any rule of law whereby any term not inconsistent with this Part of this Act is to be implied in a contract for the supply of a service.<br>&emsp;&emsp;(4) This Part of this Act has effect subject to any other enactment which defines or restricts the rights, duties or liabilities arising in connection with a service of any description."
    ]
},
{
    "CATEGORIES": [
        "Classification of Terms"
    ],
    "NUMBER": "225",
    "TYPE": "Concept",
    "NAME": "Comments.",
    "CATEGORY": "Classification of Terms",
    "RELATED": [
        "Warranties",
        "Reactions to the innominate analysis",
        "Conditions",
        "Comments",
        "Making the election to affirm or terminate",
        "Further aspects of the remedial scheme",
        "Innominate terms",
        "The basics",
        "Classification of Terms - Introduction",
        "Common mistake as to the subject-matter of the contract",
        "Rescission",
        "The Parol Evidence Rule"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Comments.</span></span><br>&emsp;&emsp;The implied terms in sections 13 \u2013 15 are not defined by the 1982 Act in the same way that those in the main run of implied terms are specified to be either conditions or warranties. It is probable that the terms in sections 13 and 14 are in fact innominate. Section 15 seems merely to introduce a mechanism into contracts which would not give rise to the sequence of breach and remedy, and therefore does not require further definition.<br>&emsp;&emsp;This long and complex piece of legislation, brought into force on 1 October 2015, has produced the most significant overhaul of consumer law in decades. It governs contracts for goods and for services between traders and consumers, to which the Sale of Goods Act 1979 and the Supply of Goods and Services Act 1982 have now ceased to apply. The rights and protections which were formerly derived from them are re-enacted in a more sophisticated form, with a tiered system of remedies. The Act also deals comprehensively with contracts for the supply of digital content.<br>&emsp;&emsp;The Act has also taken over the functions of the Unfair Contract Terms Act 1977 with regard to consumer contracts. This will be further discussed in the next lecture, which deals with the control of exemption clauses.<br>&emsp;&emsp;The main terms implied by the Act into contracts for the sale or supply of goods are that they should:<br>&emsp;&emsp;\u00b7 Be fit for a particular purpose (if such a purpose was expressly or impliedly made known) (s. 10);<br>&emsp;&emsp;Broadly similar provisions in Chapter 3 of the Act cover the supply of digital content.<br>&emsp;&emsp;b>The scheme of remedies</b> (this is complex, and only a schematic introduction is given here).<br>&emsp;&emsp;The consumer has the right to reject and receive a full refund. This right terminates after 30 days (sooner if the goods are perishable).<br>&emsp;&emsp;This right also arises on transfer of ownership or delivery, but continues beyond the 30 day period.<br>&emsp;&emsp;b>Tier 3</b> \u2013 rejection and refund, or retention and price reduction<br>&emsp;&emsp;This right exists for 6 months from transfer of ownership or delivery, but can be claimed only after the second tier remedy has been exercised, or proved impossible.<br>&emsp;&emsp;Chapter 4 of the 2015 Act governs contracts for the supply of services. At its core are provisions similar to those of the equivalent part of the Supply of Goods and Services Act 1982, including the requirement that a service must be performed with reasonable care and skill (s.49). S.54 sets out the rights which arise upon breach. These include the right to repeat performance and the right to a price reduction, while the availability of other contractual remedies is preserved (short of double recovery, of course). The s.49 provision as to reasonable care and skill cannot be excluded.<br>&emsp;&emsp;The key provision determining the applicability of the Act is given in s.2, where \u201ctrader\u201d is defined as \u201ca person acting for purposes relating to that person&#8217;s trade, business, craft or profession\u201d, and \u201cconsumer\u201d is defined as \u201can individual acting for purposes that are wholly or mainly outside that individual&#8217;s trade, business, craft or profession\u201d."
    ]
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)"
    ],
    "NUMBER": "226",
    "FLAGS": [
        "Hoffman",
        "McKendrick"
    ],
    "TYPE": "Concept",
    "NAME": "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015)",
    "RELATED": [
        "Exclusion and limitation clauses",
        "Using the Unfair Contract Terms Act 1977",
        "The Consumer Rights Act 2015",
        "The function of exemption clauses",
        "Excluding liability for negligence",
        "The deviation and bailment cases",
        "Unfair Contract Terms Act 1977 - Introduction",
        "The construction of exemption clauses",
        "The doctrine of fundamental breach",
        "Mutual Mistake",
        "Acceptance By Conduct",
        "Counter-Offer"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;The first part of this lecture occupies an intermediate position between the issue of incorporation, and legislative control over the validity of exemption clauses. On the assumption that a clause has been validly incorporated into a contract, and before any question of whether the clause can stand against relevant legislation (principally the Unfair Contract Terms Act 1977 and the Consumer Rights Act 2015), it is necessary to ask whether it covers the breach of contract which has in fact occurred.<br>&emsp;&emsp;The second part of this lecture sets out and to some extent examines the impact of legislation on exemption clauses.<br>&emsp;&emsp;The first topic, however, is part of the interpretation of contracts. Special rules governing the construction of exemption clauses may be said to be part of the \u201cold intellectual baggage of \u201clegal\u201d interpretation\u201d which has been almost completely discarded, according to Lord <span class=\"bd\">Hoffmann</span>&#8216;s restatement of the principles of interpretation in <i>Investors Compensation Scheme Ltd v West Bromwich Building Society</i> [1988] 1 WLR 896. However, as pointed out in the lecture on that topic, Lord <span class=\"bd\">Hoffmann</span> may have overstated the case. There is a great deal of learning on the construction of exemption clauses. Much of it (perhaps not all) makes sense. As Lord Wilberforce used to say, one should not so readily discard reasoned authorities. Some of the main approaches taken in those authorities are set out here for information, and to promote an awareness of the way in which the law has developed within this field.<br>&emsp;&emsp;To pave the way for that examination, it seems appropriate to begin by contrasting and explaining two views which could plausibly be taken of exemption clauses. The first is memorably expressed by Professor <span class=\"bd\">McKendrick</span> at the beginning of his chapter on the topic. They could be regarded as a social nuisance. They may be imposed upon a contracting party who lacks any real opportunity to take issue with them, or the commercial clout to insist that they should be modified. Exemption clauses may then be used to stultify the law in so far as they may be set up against the remedy which the law would otherwise give for an admitted and perhaps grave breach of contract. It is not surprising, where this is the context, that the courts have tended to construe them narrowly.<br>&emsp;&emsp;On the other hand, exemption clauses in the business to business context may perform a useful function. Absent any presumption that one experienced and well-advised party is likely to be oppressing another of comparable bargaining power and resilience, exemption clauses may be seen as one means of fine-tuning a contract. They indicate where risk is to lie, so saving the need to go to law. They provide protections to parties which may enable them to take on roles which otherwise would be too risky. They may well be used together with an insurance back-up for the party who is to take the burden of them. At their best, they can be a means of facilitating a transaction which it would otherwise be impractical to undertake.<br>&emsp;&emsp;The basic principle running right through the common law&#8217;s attitude to exemption clauses is that within certain limits (unfortunately not well defined) they will be effective if sufficiently clearly drafted."
    ]
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)"
    ],
    "NUMBER": "227",
    "FLAGS": [
        "Hoffman"
    ],
    "TYPE": "Concept",
    "NAME": "The construction of exemption clauses",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015)",
    "RELATED": [
        "Excluding liability for negligence",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "Unfair Contract Terms Act 1977 - Introduction",
        "The deviation and bailment cases",
        "The doctrine of fundamental breach",
        "The Consumer Rights Act 2015",
        "Using the Unfair Contract Terms Act 1977",
        "The function of exemption clauses",
        "Exclusion and limitation clauses",
        "Unilateral Mistake",
        "Implication from presumed intention (\u201cterms implied in fact\u201d)",
        "Misrepresentation arising from silence and/or conduct"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The construction of exemption clauses</span></span><br>&emsp;&emsp;The <i>contra proferentem</i> principle has already been mentioned as an exemplary item within the old intellectual rules on interpretation of contracts. Strictly, <i>contra proferentem</i> construction comes into its own where there is an ambiguity in an exemption clause, and therefore a choice of ways for the court to go. The ambiguity will be resolved against the party who is seeking to rely on the exemption.<br>&emsp;&emsp;More basically than this, however, the courts&#8217; manner of reading exemption clauses is narrow, even where it may be difficult to articulate an ambiguity which provides the courts with a choice. This is almost certainly still the case, notwithstanding Lord <span class=\"bd\">Hoffmann</span>&#8216;s remarks in <i>West Bromwich</i>. It is hard to argue that narrow reading is not an appropriate way to construe exemption clauses. After all, they have traditionally been seen as excuses which become relevant only when one party has breached its primary obligations."
    ]
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)",
        "Construction of Exemption Clauses",
        "Narrow Reading of Exemption Clauses"
    ],
    "YEAR": "1911",
    "NUMBER": "228",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendants sold seed to the plaintiffs, who sold it on to a sub-buyer. It was supplied as \u201ccommon English sainfoin\u201d, but when it germinated it was found to be giant sainfoin, an inferior strain. The plaintiffs settled actions brought against them by the sub-buyer, and sued the defendants. The defendants relied on a clause in the contract which read \u201cSellers give no warranty, express or implied, as to growth, description, or any other matters...\u201d.<br>&emsp;&emsp;The House of Lords upheld the plaintiffs&#8217; claim for damages, approving the dissenting judgment of Fletcher Moulton LJ in the Court of Appeal. He had based himself on the distinction between warranties and conditions, observing that the failure of the seed to correspond with its contractual description was a breach of condition. The clause in the contract referred only to warranties. Since it was admitted that a condition had been breached, the clause had no application.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;As a matter of language, it obviously cannot be said that this reading of the contract is unsustainable \u2013 quite the contrary. The difficulty arises when one stands back and considers the broader picture or the matrix of fact. Is it plausible to suppose that the sellers felt it necessary to exclude all warranties, but were content to leave all conditions standing? Or is the reality that they slipped up in their drafting, and the court allowed the plaintiff to take advantage of the slip? Perhaps the answer is that one cannot really decide the matter in the absence of plentiful evidence, and that to purport to do so on a narrow linguistic basis actually does violence not so much to language, as to the public interest in true adjudication.<br>&emsp;&emsp;The rejoinder to this would be along the lines already mapped in lecture 10; provided people in business are aware that courts apply a particular technique to the construction of exemption clauses no harm is done. They must simply take care that their documents say what they mean them to say. In the case of consumer contracts, the Consumer Rights Act 2015 now imposes on traders a tersely-worded obligation to do exactly that (s.68). By s.69, the contra proferentem rule seems to obtain statutory backing."
    ],
    "NAME": "Wallis, Son & Wells v Pratt & Haynes",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015) &mdash; Construction of Exemption Clauses &mdash; Narrow Reading of Exemption Clauses",
    "CITATION": "Wallis, Son &amp; Wells v Pratt &amp; Haynes [1911] AC 394",
    "RELATED": [
        "Andrews Bros (Bournemouth) Ltd v Singer & Co Ltd",
        "Hollier v Rambler Motors (AMC) Ltd",
        "Karsales (Harrow) Ltd v Wallis",
        "Canada Steamship Lines Ltd v The King",
        "Photo Production Ltd v Securicor Transport",
        "L'Estrange v Graucob",
        "Whittington v Seale-Hayne",
        "Branca v Cobarro",
        "Ecay v Godfrey",
        "Derry v Peek",
        "Tekdata Interconnections Ltd v Amphenol Ltd",
        "Parker v Clark"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)"
    ],
    "NUMBER": "229",
    "TYPE": "Concept",
    "NAME": "Exclusion and limitation clauses",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015)",
    "RELATED": [
        "Using the Unfair Contract Terms Act 1977",
        "Unfair Contract Terms Act 1977 - Introduction",
        "The Consumer Rights Act 2015",
        "The deviation and bailment cases",
        "The doctrine of fundamental breach",
        "The function of exemption clauses",
        "The construction of exemption clauses",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "Excluding liability for negligence",
        "The Law Reform (Frustrated Contracts) Act 1943",
        "Other tests",
        "Innocent Misrepresentation"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Exclusion and limitation clauses</span></span><br>&emsp;&emsp;If exemption clauses deserve narrow reading for reasons of policy, it is proper nevertheless that the narrowness of that reading should vary according the effect of the clause which is being construed. Here, a broad distinction is traditionally drawn between clauses which exclude liability altogether, and those which limit it to an agreed maximum amount payable by way of compensation. It is said that while the narrow approach applies to either type of clause, it applies with greater rigour against exclusions; see the House of Lords&#8217; case <i>Ailsa Craig Fishing Co Ltd v Malvern Fishing Co Ltd and Securicor (Scotland) Ltd</i> [1983] 1 WLR 964. This position has also been criticised on the ground that some limitation clauses may be more onerous than certain exclusion clauses. On the other hand, that will not generally be the case. It would not be difficult to take the debate further, but here is not the place.<br>&emsp;&emsp;If an exemption clause is repugnant to the contract itself, it may well be deprived of effect by the courts. However, the basis for intervening has long been a problem with significant conceptual ramifications."
    ]
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)",
        "Construction of Exemption Clauses",
        "Narrow Reading of Exemption Clauses"
    ],
    "YEAR": "1934",
    "NUMBER": "230",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendants appointed the plaintiffs as dealers to buy from them and sell on \u201cnew Singer cars\u201d. The contract included a clause which read: \u201cAll cars sold by the company are subject to the terms of the warranty set out in Schedule No. 3 of this agreement and all conditions, warranties and liabilities implied by common law, statute or otherwise are excluded\u201d. One of the cars supplied was not new, in the sense that it had already been driven some 550 miles to be shown to a potential customer. The question was whether the clause given above was effective to prevent liability arising.<br>&emsp;&emsp;The Court of Appeal held that it was not. The contract was expressly for the sale of new cars. The clause only ousted implied terms, not express ones.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Counsel for the defendants argued that the description of the cars as \u201cnew\u201d was an implied term, because section 13 of the Sale of Goods Act 1893 stated that \u201cwhere there is a contract for the sale of goods by description, there is an implied condition that the goods shall correspond with the description...\u201d. In the opinion of Scrutton LJ, this submission put a very strained meaning on the word \u201cimplied\u201d in the section. Where goods were expressly described in the contract and did not comply with the description, it was quite inaccurate to say that there was an implied term.</span><br>&emsp;&emsp;<span class=\"it\">Who is right? One of several difficulties with the defendant&#8217;s submission is that it can be extended to prove too much. Where there is a contract for the sale of goods by description, an exemption clause which purports to make it not a sale by description attacks the contract itself. The practitioner text Benjamin on Sale says the following about this situation: \u201cOnce the court has decided that the sale was a sale by description of \u201cnew Singer cars\u201d then nothing else could satisfy the contract and by no artifice could the seller avoid the obligation to provide new Singer cars. Startling results would follow otherwise, for, if the seller can ignore one of the three descriptive words, he can ignore the others; the article need not be a Singer car, or even a car. The seller might supply a second-hand pedal bicycle or a child&#8217;s perambulator! In a sale by description one is selling a described thing or things and that is fundamental and one need not really consider conditions or warranties express or implied as ordinarily understood\u201d. </span><br>&emsp;&emsp;<span class=\"it\">The idea being put forward in the passage from <i>Benjamin on Sale</i> quoted above is a well-known one of long standing. It is often stated in terms derived from an early nineteenth century case, <i>Chanter v Hopkins</i> (1838) 4 M &amp; W 399, in which Lord Abinger said \u201cIf a man offers to buy peas of another, and he sends him beans, he does not perform his contract\u201d. The next case is generally taken to be a \u201cpeas and beans\u201d decision.</span>"
    ],
    "NAME": "Andrews Bros (Bournemouth) Ltd v Singer & Co Ltd",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015) &mdash; Construction of Exemption Clauses &mdash; Narrow Reading of Exemption Clauses",
    "CITATION": "Andrews Bros (Bournemouth) Ltd v Singer &amp; Co Ltd [1934] 1 KB 17",
    "RELATED": [
        "Wallis, Son & Wells v Pratt & Haynes",
        "Photo Production Ltd v Securicor Transport",
        "Karsales (Harrow) Ltd v Wallis",
        "Hollier v Rambler Motors (AMC) Ltd",
        "Canada Steamship Lines Ltd v The King",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Bell v Lever Bros Ltd",
        "Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "Thomas v Thomas",
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "Nicolene v Simmonds",
        "Harvey v Facey"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)",
        "Construction of Exemption Clauses",
        "Liability For Fundamental Breaches of Contract"
    ],
    "YEAR": "1956",
    "NUMBER": "231",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case began as an action brought to recover arrears owing on the acquisition of a car by hire purchase. The car had remained in the possession of its original owner, a man named Stinton. Wallis, the intending purchaser and defendant, had been unable to buy it outright from Stinton because he lacked the money, so Stinton had sold the vehicle to Karsales, which sold it to a finance company which let it on hire purchase to Wallis. The hire purchase agreement was later taken over by Karsales. The car was subsequently towed to Wallis&#8217;s premises at night and left. The cylinder head was missing, the engine valves had been burnt out, two pistons were broken, the tyres damaged and the radio had been removed. In bringing their claim for arrears, Karsales placed reliance on Clause 3(g) of the agreement which stated \u201cNo condition or warranty that the vehicle is roadworthy, or as to its age, condition or fitness for any purpose is given by the owner or implied herein\u201d.<br>&emsp;&emsp;In the judgment of the Court of Appeal the exemption clause could not apply. The agreement related to a car. The vehicle in question could no longer be regarded as a car, because it was so grossly damaged as to be incapable of self-propulsion.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;One of the problems with the \u201cpeas and beans\u201d approach is that it would seem to lead to impossible exercises in line-drawing. When is a car so badly damaged as no longer to be a car? At one extreme of the spectrum it would no doubt be specious to try to maintain that a compressed block of metal was still the car that it had once been. But that simply attracts attention to the rest of the spectrum in which suitable divisions do not readily appear. One way in which the problem can be re-phrased, if not exactly solved, is to associate the peas/beans extreme with cases of non-performance of the contract rather than its defective performance. It might be posited that an exemption clause may stand in a case of defective performance, but cannot excuse non-performance. In a sense this must be true. Imagine an exemption which consists in denying all liability on the contract. That would render performance a matter of the one party&#8217;s discretion, as distinct from legal obligation, and the entire contractual edifice would fall (its collapse could be put in terms of a failure of offer and acceptance, or of consideration, or of intention to create legal relations, or all three). Logically, then, an exemption clause must stop short of total efficacy. Non-performance is one way of defining the class of breach which cannot be covered by exempting words. It is a rough and ready way of doing it, not a perfect one.<br>&emsp;&emsp;Great care is needed at this point, because another conceptual problem now arises. The idea that a certain type of breach is too fundamental to be covered by an exemption clause will be found in <i>Karsales v Wallis</i> and some other cases, but it shades into an analysis which the House of Lords has overruled."
    ],
    "NAME": "Karsales (Harrow) Ltd v Wallis",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015) &mdash; Construction of Exemption Clauses &mdash; Liability For Fundamental Breaches of Contract",
    "CITATION": "Karsales (Harrow) Ltd v Wallis [1956] 1 WLR 936",
    "RELATED": [
        "Photo Production Ltd v Securicor Transport",
        "Hollier v Rambler Motors (AMC) Ltd",
        "Wallis, Son & Wells v Pratt & Haynes",
        "Canada Steamship Lines Ltd v The King",
        "Andrews Bros (Bournemouth) Ltd v Singer & Co Ltd",
        "Foley v Classique Coaches Ltd",
        "Roscorla v Thomas",
        "Errington v Errington and Woods",
        "Hochster v De la Tour",
        "Shogun Finance v Hudson",
        "J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "Crossley v Faithful & Gould Holdings"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)"
    ],
    "NUMBER": "232",
    "FLAGS": [
        "Denning"
    ],
    "TYPE": "Concept",
    "NAME": "The doctrine of fundamental breach",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015)",
    "RELATED": [
        "The construction of exemption clauses",
        "The deviation and bailment cases",
        "Excluding liability for negligence",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "The function of exemption clauses",
        "Using the Unfair Contract Terms Act 1977",
        "Unfair Contract Terms Act 1977 - Introduction",
        "Exclusion and limitation clauses",
        "The Consumer Rights Act 2015",
        "Fraudulent, negligent and innocent misrepresentation",
        "2. Terms which supplement the contract (warranties etc)",
        "\u201cProblem\u201d Cases"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The doctrine of fundamental breach</span></span><br>&emsp;&emsp;In <i>Harbutt&#8217;s Plasticine Ltd v Wayne Tank &amp; Pump Co Ltd</i> [1970] 1 QB 447, Lord <span class=\"bd\">Denning</span> proposed that where a fundamental term of a contract (ie. a condition) had been breached, and the wronged party had elected to terminate the contract, then with the termination of contract any exemption clause contained within it ceased to operate. This was an attractive notion in one respect (if only the one). Rather than requiring the court to deduce the invalidation of an exemption clause from the character of the breach, it made its invalidation consequent upon one party&#8217;s uncontroversial entitlement to bring the contract to an end for breach of condition. Unfortunately it is simply wrong to assert that the termination of the contract deprives it of further effect. It remains as the instrument which created and maintains the wronged party&#8217;s right to recover damages, and its exemption clauses stand by the same token.<br>&emsp;&emsp;Lord Denning was also of the view that an exemption clause would automatically cease to operate if the contract was breached in such a way which was fundamental, in the sense that the breach went to the root of the contract. Here, he was building on a rule of construction, namely that in these circumstances it will not normally be taken to be the parties&#8217; intention that the contract should exclude such liability. However, the doctrine associated with Lord Denning made this rule substantive or absolute, to the effect that exemption clauses in his view and that of other members of the Court of Appeal were quite simply ineffective in cases of fundamental breach."
    ]
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)",
        "Construction of Exemption Clauses",
        "Liability For Fundamental Breaches of Contract"
    ],
    "YEAR": "1980",
    "NUMBER": "233",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;By a contract made in 1968, Securicor agreed to provide its Night Patrol Service to Photo Productions. A number of visits were to be made each night, seven nights of the week. The weekly charge was low: \u00a38 15s. One of the clauses in the contract stated that \u201cunder no circumstances shall [Securicor] be responsible for any injurious act or default by any employee of [Securicor] unless such act or default could have been foreseen and avoided by the exercise of due diligence on the part of [Securicor] as his employer...\u201d. One of Securicor&#8217;s duty employees, in the course of a visit to the premises, decided to light a fire by throwing a match onto some cartons. The fire got out of control, and burnt down a substantial part of Photo Productions&#8217; premises, causing damage amounting to \u00a3615,000. Photo Productions sued for damages. Securicor relied on its clause.<br>&emsp;&emsp;The Court of Appeal, applying the doctrine of fundamental breach, held that the employee&#8217;s behaviour had brought the contract to an end, or that the clause could not be construed to apply to the breach which had occurred. The House of Lords, reversing the Court of Appeal in this case and overruling <i>Harbutt&#8217;s Plasticine</i>, held that the doctrine of fundamental breach amounted to a rule of construction only. Here the clause was effective to shield Securicor from liability. Securicor&#8217;s very modest charge for its service, and its lack of knowledge of Photo Productions&#8217; premises and fire precautions, led to the inference that the contract left the risk of damage on Photo Productions.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The bedrock of Lord Wilberforce&#8217;s speech in the House of Lords is his perception that the Court of Appeal, both in this case and in its earlier decision in <i>Harbutt&#8217;s Plasticine</i>, had entirely misunderstood the House&#8217;s decision in <i>Suisse Atlantique Societe d&#8217;Armement Maritime SA v NV Rotterdamsche Kolen Centrale</i> [1967] 1 AC 361. The speeches in the <i>Suisse Atlantique</i> case had admittedly been less than clear. However, on a fair reading, they put paid to any suggestion that the law included a substantive doctrine of fundamental breach invalidating exemption clauses upon a contract&#8217;s termination. The Court of Appeal, in holding otherwise, had based itself on mere dicta in their Lordships&#8217; speeches. While it was true to say (as a presumption to be applied when interpreting a contract) that the parties would not readily be taken to have intended a fundamental breach to be covered by an exemption clause, the ultimate question was simply whether the clause did or did not apply on the true construction of the contract."
    ],
    "NAME": "Photo Production Ltd v Securicor Transport",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015) &mdash; Construction of Exemption Clauses &mdash; Liability For Fundamental Breaches of Contract",
    "CITATION": "Photo Production Ltd v Securicor Transport [1980] AC 827",
    "RELATED": [
        "Karsales (Harrow) Ltd v Wallis",
        "Andrews Bros (Bournemouth) Ltd v Singer & Co Ltd",
        "Hollier v Rambler Motors (AMC) Ltd",
        "Wallis, Son & Wells v Pratt & Haynes",
        "Canada Steamship Lines Ltd v The King",
        "Luxor (Eastbourne) Ltd v Cooper",
        "Collins v Godefroy",
        "L'Estrange v Graucob",
        "Herne Bay Steam Boat Co v Hutton",
        "Hadley v Baxendale",
        "Bunge Corporation v Tradax Export SA",
        "Hartog v Colin & Shields"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)"
    ],
    "NUMBER": "234",
    "TYPE": "Concept",
    "NAME": "The deviation and bailment cases",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015)",
    "RELATED": [
        "The function of exemption clauses",
        "The doctrine of fundamental breach",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "Unfair Contract Terms Act 1977 - Introduction",
        "Using the Unfair Contract Terms Act 1977",
        "Excluding liability for negligence",
        "The Consumer Rights Act 2015",
        "The construction of exemption clauses",
        "Exclusion and limitation clauses",
        "Transmission of Acceptance",
        "Common Law Bars to Rescission",
        "Beyond section 3"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The deviation and bailment cases</span></span><br>&emsp;&emsp;The position taken up by the House of Lords in <i>Photo Productions v Securicor</i> is clear; a fundamental breach does not avoid the contract. Unfortunately even this corrective statement of principle needs a further note. Something very like the substantive doctrine of fundamental breach does validly operate in two linked classes of commercial contracts. In contracts for the carriage of goods, and contracts of bailment (by which goods are deposited to be kept and later restored by the bailee), any deviation from the agreed voyage, or diversion of the goods from where they were to be kept, will take the defendant \u201coutside the four quarters of the contract\u201d and beyond the protective reach of exclusion clauses. It is not easy to account for this special strictness in principled terms, except by renewed reference to the \u201cpeas and beans\u201d analysis; the plaintiff has agreed a specific voyage, and therefore a different voyage cannot be the subject of the agreement or benefit from protective clauses built into it. Quite possibly a more penetrating account of these cases is the one given by Lord Wilberforce in passing in <i>Photo Productions</i>: \u201cIt may be preferable that they should be considered as a body of authority sui generis with special rules derived from historical and commercial reasons\u201d."
    ]
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)"
    ],
    "NUMBER": "235",
    "TYPE": "Concept",
    "NAME": "Excluding liability for negligence",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015)",
    "RELATED": [
        "The doctrine of fundamental breach",
        "Using the Unfair Contract Terms Act 1977",
        "The construction of exemption clauses",
        "The deviation and bailment cases",
        "The Consumer Rights Act 2015",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "Exclusion and limitation clauses",
        "The function of exemption clauses",
        "Unfair Contract Terms Act 1977 - Introduction",
        "Further aspects of the remedial scheme",
        "Deferred Agreements",
        "Incorporation of Terms - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Excluding liability for negligence</span></span><br>&emsp;&emsp;The next line of cases (from which only two are given here) applies a set of principles which may appear complex at first glance but in reality are not. Nevertheless, it has to be said that the principles do sheer away from an intuitive approach. Furthermore, modern commentators express doubts about whether a special attitude to negligence liability is desirable.<br>&emsp;&emsp;The leading case is a Privy Council authority, well known from for a passage setting out what are usually referred to as the <i>Canada Steamship</i> rules."
    ]
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)",
        "Construction of Exemption Clauses",
        "Exclusion of Liability For Negligence"
    ],
    "YEAR": "1952",
    "NUMBER": "236",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs&#8217; goods were stored in a shed which the defendant had leased from the Crown. As a result of the negligence of the defendant the shed caught fire and the goods were destroyed. A clause in the lease stated that the lessee should have no claim against the lessor for goods stored in the shed.<br>&emsp;&emsp;The Privy Council held that the wording of the clause was wide enough to cover negligently caused loss (even though it did not expressly refer to it). However, its very breadth made it capable of covering not only loss caused by negligence but other types of loss as well. Here, the Civil Code in force in Quebec did in fact impose other liabilities upon the lessors. The clause would be deemed to have been intended to cover those other liabilities, and not to shield the Crown against the consequences of its servants&#8217; negligence.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Morton of Henryton summed up the courts&#8217; approach to clauses relied on against liability arising in negligence:<br>&emsp;&emsp;\u201cTheir Lordships think that the duty of a court in approaching the construction of [exemption] clauses may be summarised as follows:-<br>&emsp;&emsp;(1) If the clause contains language which expressly exempts the person in whose favour it is made (hereafter called \u201cthe proferens\u201d) from the consequence of the negligence of his own servants, effect must be given to that provision...<br>&emsp;&emsp;(2) If there is no express reference to negligence, the court must consider whether the words used are wide enough, in their ordinary meaning, to cover negligence on the part of the servants of the proferens...<br>&emsp;&emsp;(3) If the words used are wide enough for the above purpose, the court must then consider whether \u201cthe head of damage may be based on some ground other than that of negligence,\u201d to quote again from the <i>Alderslade</i> case. The \u201cother ground\u201d must not be so fanciful or remote that the proferens cannot be supposed to have desired protection against it; but subject to this qualification, which is no doubt to be implied from Lord Greene&#8217;s words, the existence of a possible head of damage other than that of negligence is fatal to the proferens even if the words used are prima facie wide enough to cover negligence on the part of his servants\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The unintuitive characteristic of these rules consists in the way that two apparent concessions towards exclusions of negligence liability are followed by a twist. Negligence liability may be excluded by express words; it may be excluded by sufficiently broad words, but the broader the words are, the more likely that they will be taken to refer to things other than negligence."
    ],
    "NAME": "Canada Steamship Lines Ltd v The King",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015) &mdash; Construction of Exemption Clauses &mdash; Exclusion of Liability For Negligence",
    "CITATION": "Canada Steamship Lines Ltd v The King [1952] AC 192",
    "RELATED": [
        "Hollier v Rambler Motors (AMC) Ltd",
        "Karsales (Harrow) Ltd v Wallis",
        "Andrews Bros (Bournemouth) Ltd v Singer & Co Ltd",
        "Photo Production Ltd v Securicor Transport",
        "Wallis, Son & Wells v Pratt & Haynes",
        "Smith v Hughes",
        "Bannerman v White",
        "Lovell & Christmas Ltd v Wall",
        "Caparo Industries plc v Dickman",
        "H Parsons (Livestock) Ltd v Uttley Ingham & Co",
        "Phillips v Brooks",
        "Winn v Bull"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)",
        "Construction of Exemption Clauses",
        "Exclusion of Liability For Negligence"
    ],
    "YEAR": "1972",
    "NUMBER": "237",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff left his car for repair at the defendants&#8217; garage. As a result of the defendants&#8217; negligence there was a fire which badly damaged the car. The plaintiff sued for damages. The defendants attempted to rely on a clause contained in an invoice, stating that \u201cThe company is not responsible for damage caused by fire to customers&#8217; cars on the premises\u201d. The trial judge accepted that this clause had been incorporated in the contract by a course of dealing, since on a few previous occasions the plaintiff had signed the form containing the notice.<br>&emsp;&emsp;The Court of Appeal reversed the trial judge on the incorporation point, holding the course of dealing to have been insufficient. This was enough to dispose of the case, but their lordships went on to consider whether the clause would have protected the defendants against negligence liability had it been validly incorporated. They said that it would not.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The judgment of Salmon LJ is an instructive application of the <i>Canada Steamship</i> rules, since it measures their effect within a real setting:<br>&emsp;&emsp;\u201cIt is well settled that a clause excluding liability for negligence should make its meaning plain on its face to any ordinarily literate and sensible person. The easiest way of doing that, of course, is to state expressly that the garage, tradesman or merchant, as the case may be, will not be responsible for any damage caused by his own negligence. No doubt merchants, tradesmen and garage proprietors and the like are a little shy of writing in an exclusion clause quite so bluntly as that. Clearly it would not tend to attract customers, and might even put many off. I am not saying that an exclusion clause cannot be effective to exclude negligence unless it does so expressly, but in order for the clause to be effective the language should be so plain that it clearly bears that meaning. I do not think that defendants should be allowed to shelter behind language which might lull the customer into a false sense of security by letting him think \u2013 unless perhaps he happens to be a lawyer \u2013 that he would have redress against the man with whom he was dealing for any damage which he, the customer, might suffer by the negligence of that person.<br>&emsp;&emsp;The principles are stated by Scrutton LJ with his usual clarity in <i>Rutter v Palmer</i> [1922] 2 KB 87, 92:<br>&emsp;&emsp;\u201cFor the present purposes a rougher test will serve. In construing an exemption clause certain general rules may be applied. First the defendant is not exempted from liability for the negligence of his servants unless adequate words are used; secondly, the liability of the defendant apart from the exempting words must be ascertained; then the particular clause in question must be considered; and if the only liability of the party pleading the exemption is a liability for negligence, the clause will more readily operate to exempt him\u201d.<br>&emsp;&emsp;Scrutton LJ was far too great a lawyer, and had far too much robust common sense, if I may be permitted to say so, to put it higher than \u201cif the only liability of the party pleading the exemption is a liability for negligence, the clause will more readily operate to exempt him\u201d. He does not say \u201cif the only liability of the party pleading the exemption is a liability for negligence, the clause will necessarily exempt him\u201d. After all, there are many cases in the books dealing with exemption clauses, and in every case it comes down to a question of construing the alleged exemption clause which is then before the court\u201d."
    ],
    "NAME": "Hollier v Rambler Motors (AMC) Ltd",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015) &mdash; Construction of Exemption Clauses &mdash; Exclusion of Liability For Negligence",
    "CITATION": "Hollier v Rambler Motors (AMC) Ltd [1972] 2 QB 71",
    "RELATED": [
        "Canada Steamship Lines Ltd v The King",
        "Karsales (Harrow) Ltd v Wallis",
        "Photo Production Ltd v Securicor Transport",
        "Andrews Bros (Bournemouth) Ltd v Singer & Co Ltd",
        "Wallis, Son & Wells v Pratt & Haynes",
        "Glasbrook v Glamorgan CC",
        "Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd",
        "Doyle v Olby (Ironmngers) Ltd",
        "Edmonds v Lawson",
        "Esso Petroleum Co Ltd v Mardon"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)"
    ],
    "NUMBER": "238",
    "TYPE": "Concept",
    "NAME": "The function of exemption clauses",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015)",
    "RELATED": [
        "Exclusion and limitation clauses",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "The deviation and bailment cases",
        "The Consumer Rights Act 2015",
        "The construction of exemption clauses",
        "Excluding liability for negligence",
        "Using the Unfair Contract Terms Act 1977",
        "The doctrine of fundamental breach",
        "Unfair Contract Terms Act 1977 - Introduction",
        "Acceptance By Conduct",
        "Common mistake as to the subject-matter of the contract",
        "Special types of loss"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The function of exemption clauses</span></span><br>&emsp;&emsp;In the quotation above from the judgment of Scrutton LJ in <i>Rutter v Palmer</i>, there is a statement which has significance beyond the immediate context of exemption clauses and negligence liability. He says that \u201cthe liability of the defendant apart from the exempting words must be ascertained\u201d, and only then do those words fall to be considered as a possible defence to an action for breach of contract.<br>&emsp;&emsp;This is not the only way in which exempting words in contracts could be understood. An alternative approach has been strongly advocated by Professor Coote in <i>Exception Clauses</i> (Sweet &amp; Maxwell, 1964). It will indicate why he prefers \u201cexception\u201d to \u201cexemption\u201d. His view is that exemptions are no different from any other provisions in contracts. They should therefore inform the view taken of what the primary contractual obligations are, since it is artificial to decide those obligations in isolation from clauses which in fact modify them from the outset. The examples given by Professor Coote to contrast the defensive conception of exemptions with their role in defining duties ab initio are (a) the sale of a horse warranted to be sound, but an exclusion of liability for its performance in hunting; and (b) the same horse warranted sound except for hunting.<br>&emsp;&emsp;Professor Coote goes further, regarding the defensive understanding of exemptions as fallacious and impossible:<br>&emsp;&emsp;\u201c...the true juristic function and effect of exception clauses are quite different from those currently ascribed to them by the courts. Instead of being mere shields to claims based on breach of accrued rights, exception clauses substantively delimit the rights themselves... It may seem feasible that the parties should have intended a contractual duty to remain when they excluded liability for its breach, but this is in reality a juristic impossibility. A duty of sorts there may be, but it will be a duty of honour, not a contractual one. It would follow, then, that the current approach to exception clauses is based on a fallacy\u201d.<br>&emsp;&emsp;Against this view, it should be pointed out that the long-standing practice of the courts is to view exemptions as defences, and that Scrutton LJ&#8217;s analysis cited above is therefore entirely mainstream. Certainly it would be wise for the purposes of this year to follow the procedure of asking (1) what the contract promised; (2) whether it was performed or breached; and (3) if breached, whether it includes an exemption which on its true construction provides a defence against the breach in question.<br>&emsp;&emsp;Perhaps the real significance of Professor Coote&#8217;s duty-defining approach is seen in the context of legislation dealing with exemption clauses. Section 3 of the Unfair Contract Terms Act (\u201cLiability arising in Contract\u201d) is drafted in such a way as to control the type of exemption clauses which stand as defences to breach, but also those which in accordance with Coote&#8217;s understanding define and limit contractual undertakings in the first place. That being so, it must be recognised that the Act goes further than to set limits to contracting out of breach. It sets limits to free contracting."
    ]
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)"
    ],
    "NUMBER": "239",
    "TYPE": "Concept",
    "NAME": "Unfair Contract Terms Act 1977 - Introduction",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015)",
    "RELATED": [
        "The construction of exemption clauses",
        "The function of exemption clauses",
        "The doctrine of fundamental breach",
        "The Consumer Rights Act 2015",
        "The deviation and bailment cases",
        "Excluding liability for negligence",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "Exclusion and limitation clauses",
        "Using the Unfair Contract Terms Act 1977",
        "Misrepresentation (2) - Introduction",
        "2. Terms which supplement the contract (warranties etc)",
        "Negligent Misrepresentation"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The Unfair Contract Terms Act 1977</span></span><br>&emsp;&emsp;The text of Part 1 of the Unfair Contract Act 1977 as modified by the Consumer Rights Act 2015 is set out below (Part 2 applies to Scotland). As a result of the 2015 Act which governs consumer contracts, UCTA 1977 now applies exclusively to non-consumer contracts.<br>&emsp;&emsp;The aim this year is to build up a working grasp of the conditions for the Act&#8217;s application, and the main classes of term to which it applies. This is not a minor nor a straightforward task. Think in terms of mapping pathways through the apparatus of the Act. Often, it will be necessary to begin by examining threshold questions which affect the Act&#8217;s relevance to the facts under examination. Then, assuming that the Act does apply, it will be necessary to say accurately which section controls the term in question. If the Act subjects the term to a reasonableness test, it will then be a matter of choosing the correct reasonableness test (section 11 of the Act contains four such tests). All of these are fairly workaday tasks, or at least they can be approached in that way. However, they are rather more of a challenge if you have not developed familiarity with the structure and content of the Act itself.<br>&emsp;&emsp;Rather than interrupt the text with notes, it has seemed most useful for the purposes of this year to append to it some indications of typical ways through the Act. First, read Part 1. Changes made by the Consumer Rights Act 2015 are printed in italics. The 2015 Act has made UCTA shorter than it was, but unfortunately it has also made it more complex."
    ]
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)",
        "Construction of Exemption Clauses",
        "Unfair Contract Terms Act 1977"
    ],
    "NUMBER": "240",
    "TYPE": "Statute",
    "NAME": "Unfair Contract Terms Act 1977",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015) &mdash; Construction of Exemption Clauses &mdash; Unfair Contract Terms Act 1977",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Unfair Contract Terms Act 1977</span></span><br>An Act to impose further limits on the extent to which under the law of England and Wales and Northern Ireland civil liability for breach of contract, of for negligence or other breach of duty, can be avoided by means of contract terms and otherwise, and under the law of Scotland civil liability can be avoided by means of contract terms.",
        "<span class=\"bd\">S1 &mdash; Scope of Part 1</span>",
        "<ol><li><span class=\"nl\"> For the purposes of this Part of this Act, \u201cnegligence\u201d means the breach\u2014</span><ol><li><span class=\"nl\"> of any obligation, arising from the express or implied terms of a contract, to take reasonable care or exercise reasonable skill in the performance of the contract;</span></li><li><span class=\"nl\"> of any common law duty to take reasonable care or exercise reasonable skill (but not any stricter duty);</span></li><li><span class=\"nl\"> of the common duty of care imposed by the Occupiers&#8217; Liability Act 1957 or the Occupiers&#8217; Liability Act (Northern Ireland) 1957.</span></li></ol><li><span class=\"nl\"> This Part of this Act is subject to Part 111; and in relation to contracts, the operation of sections 2, 3 and 7 is subject to the exceptions made by Schedule 1.</span></li><li><span class=\"nl\"> In the case of both contract and tort, sections 2 to 7 apply (except where the contrary is stated in section 6(4)) only to business liability, that is liability for breach of obligations or duties arising\u2014</span><ol><li><span class=\"nl\"> from things done or to be done by a person in the course of a business (whether his own business or another&#8217;s); or</span></li><li><span class=\"nl\"> from the occupation of premises used for business purposes of the occupier;<br>&emsp;&emsp;and references to liability are to be read accordingly [but liability of an occupier of premises for breach of an obligation or duty towards a person obtaining access to the premises for recreational or educational purposes, being liability for loss or damage suffered by reason of the dangerous state of the premises, is not a business liability of the occupier unless granting that person such access for the purposes concerned falls within the business purposes of the occupier].</span></li></ol><li><span class=\"nl\"> In relation to any breach of duty or obligation, it is, immaterial for any purpose of this Part of this Act whether the breach was inadvertent or intentional, or whether liability for it arises directly or vicariously.</span></li></ol>",
        "<span class=\"bd\">S2 &mdash; Negligence Liability</span>",
        "<ol><li><span class=\"nl\"> A person cannot by reference to any contract term or to a notice given to persons generally or to particular persons exclude or restrict his liability for death or personal injury resulting from negligence.</span></li><li><span class=\"nl\"> In the case of other loss or damage, a person cannot so exclude or restrict his liability for negligence except in so far as the term or notice satisfies the requirement of reasonableness.</span></li><li><span class=\"nl\"> Where a contract term or notice purports to exclude or restrict liability for negligence a person&#8217;s agreement to or awareness of it is not of itself to be taken as indicating his voluntary acceptance of any risk.<br>&emsp;&emsp;(but see the provision made about such contracts and notices in sections 62 and 65 of the Consumer Rights Act 2015).</span></li></ol>",
        "<span class=\"bd\">S3 &mdash; Liability Arising in Contract</span>",
        "<ol><li><span class=\"nl\"> This section applies as between contracting parties where one of them deals on the other&#8217;s written standard terms of business.</span></li><li><span class=\"nl\"> As against that party, the other cannot by reference to any contract term\u2014</span><ol><li><span class=\"nl\"> when himself in breach of contract, exclude or restrict any liability of his in respect of the breach; or</span><ol><li><span class=\"nl\"> to render a contractual performance substantially different from that which was reasonably expected of him, or</span></li><li><span class=\"nl\"> in respect of the whole or any part of his contractual obligation, to render no performance at all,<br>&emsp;&emsp;except in so far as (in any of the cases mentioned above in this subsection) the contract term satisfies the requirement of reasonableness.</span></li></ol></li></ol><li><span class=\"nl\"> This section does not apply to a term in a consumer contract (but see the provision made about such contracts in section 62 of the Consumer Rights Act 2015).</span></li></ol>",
        "<span class=\"bd\">S6 &mdash; Sale and Hire Purchase</span>",
        "<ol><li><span class=\"nl\">Liability for breach of the obligations arising from\u2014-</span><ol><li><span class=\"nl\"> [ section 12 of the Sale of Goods Act 1979] (seller&#8217;s implied undertakings as to title, etc.);</span></li><li><span class=\"nl\"> section 8 of the Supply of Goods (Implied Terms) Act 1973 (the corresponding thing in relation to hire-purchase),</span></li><li><span class=\"nl\"> section 13, 14 or 15 of the 1979 Act (seller&#8217;s implied undertakings as to conformity of goods with description or sample, or as to their quality or fitness for a particular purpose;</span></li><li><span class=\"nl\"> section 9, 10 or 11 of the 1973 Act (the corresponding things in relation to hire purchase)<br>&emsp;&emsp;cannot be excluded or restricted by reference to a contract term except so far as the term satisfies the requirement of reasonableness.</span></li></ol><li style=\"counter-reset: item 3;\"><span class=\"nl\"> The liabilities referred to in this section are not only the business liabilities defined by section 1(3), but include those arising under any contract of sale of goods or hire-purchase agreement.</span></li><li><span class=\"nl\"> This section does not apply to a consumer contract (but see the provision made about such contracts in section 31 of the Consumer Rights Act 2015).</span></li></ol>",
        "<span class=\"bd\">S7 &mdash; Miscellaneous contracts under which goods pass</span>",
        "<ol><li><span class=\"nl\"> Where the possession or ownership of goods passes under or in pursuance of a contract not governed by the law of sale of goods or hire-purchase, subsections (2) to (4) below apply as regards the effect (if any) to be given to contract terms excluding or restricting liability for breach of obligation arising by implication of law from the nature of the contract.</span></li><li class=\"nonum\"><span class=\"nl\"> *(1A) Liability in respect of the goods&#8217; correspondence with description or sample, or their quality or fitness for any particular purpose, cannot be excluded or restricted by reference to such a term except in so far as the term satisfies the requirement of reasonableness.</span></li><li class=\"nonum\"><span class=\"nl\"> *(3A) Liability for breach of the obligations arising under section 2 of the Supply of Goods and Services Act 1982 (implied terms about title etc. in certain contracts for the transfer of the property in goods) cannot be excluded or restricted by reference to any such term.]</span></li><li style=\"counter-reset: item 3;\"><span class=\"nl\"> Liability in respect of &mdash;</span><ol><li><span class=\"nl\"> the right to transfer ownership of the goods, or give possession; or</span></li><li><span class=\"nl\"> the assurance of quiet possession to a person taking goods in pursuance of the contract,</span></li></ol><li class=\"nonum\"><span class=\"nl\"> cannot (in a case to which subsection (3A) above does not apply), be excluded or restricted by reference to any such term except in so far as the term satisfies the requirement of reasonableness.</span></li><li class=\"nonum\"><span class=\"nl\"> <span class=\"bd\">(4A)</span> This section does not apply to a consumer contract (but see the provision made about such contracts in section 31 of the Consumer Rights Act 2015).</span></li></ol>",
        "<span class=\"bd\">S10 &mdash; Evasion by means of secondary contract</span><br>A person is not bound by any contract term prejudicing or taking away rights of his which arise under, or in connection with the performance of, another contract, so far as those rights extend to the enforcement of another&#8217;s liability which this Part of this Act prevents that other from excluding or restricting.",
        "<span class=\"bd\">S11 &mdash; The \u201creasonableness\u201d test.</span>",
        "<ol><li><span class=\"nl\"> In relation to a contract term, the requirement of reasonableness for the purposes of this Part of this Act, section 3 of the Misrepresentation Act 1967 and section 3 of the Misrepresentation Act (Northern Ireland) 1967 is that the term shall have been a fair and reasonable one to be included having regard to the circumstances which were, or ought reasonably to have been, known to or in the contemplation of the parties when the contract was made.</span><ol><li><span class=\"nl\"> In determining for the purposes of section 6 or 7 above whether a contract term satisfies the requirement of reasonableness, regard shall be had in particular to the matters specified in Schedule 2 to this Act; but this subsection does not prevent the court or arbitrator from holding, in accordance with any rule of law, that a term which purports to exclude or restrict any relevant liability is not a term of the contract.</span></li></ol><li><span class=\"nl\"> In relation to a notice (not being a notice having contractual effect), the requirement of reasonableness under this Act is that it should be fair and reasonable to allow reliance on it, having regard to all the circumstances obtaining when the liability arose or (but for the notice) would have arisen.</span></li><li><span class=\"nl\"> Where by reference to a contract term or notice a person seeks to restrict liability to a specified sum of money, and the question arises (under this or any other Act) whether the term or notice satisfies the requirement of reasonableness, regard shall be had in particular (but without prejudice to subsection (2) above in the case of contract terms) to\u2014</span><ol><li><span class=\"nl\"> the resources which he could expect to be available to him for the purpose of meeting the liability should it arise; and</span></li></ol><li><span class=\"nl\"> It is for those claiming that a contract term or notice satisfies the requirement of reasonableness to show that it does.</span></li></ol>",
        "<span class=\"bd\">S13 &mdash; Varieties of exemption clause</span>",
        "<ol><li><span class=\"nl\"> To the extent that this Part of this Act prevents the exclusion or restriction of any liability it also prevents\u2014</span><ol><li><span class=\"nl\"> making the liability or its enforcement subject to restrictive or onerous conditions;</span></li><li><span class=\"nl\"> excluding or restricting any right or remedy in respect of the liability, or subjecting a person to any prejudice in consequence of his pursuing any such right or remedy;<br>and (to that extent) sections 2 , 6 and 7 also prevent excluding or restricting liability by reference to terms and notices which exclude or restrict the relevant obligation or duty.</span></li></ol><li><span class=\"nl\"> But an agreement in writing to submit present or future differences to arbitration is not to be treated under this Part of this Act as excluding or restricting any liability.</span></li></ol>",
        "<span class=\"bd\">S14 &mdash; Interpretation of Part 1</span>",
        "<ol><li class=\"nonum\"><span class=\"nl\"> \u201cbusiness\u201d includes a profession and the activities of any government department or local or public authority;</span></li><li class=\"nonum\"><span class=\"nl\"> \u201cconsumer contract\u201d has the same meaning as in the Consumer Rights Act 2015 (see section 61);</span></li><li class=\"nonum\"><span class=\"nl\"> \u201cconsumer notice\u201d has the same meaning as in the Consumer Rights Act 2015 (see section 61):</span></li><li class=\"nonum\"><span class=\"nl\"> \u201chire-purchase agreement\u201d has the same meaning as in the Consumer Credit Act 1974;</span></li><li class=\"nonum\"><span class=\"nl\"> \u201cnotice\u201d includes an announcement, whether or not in writing, and any other communication or pretended communication; and</span></li><li class=\"nonum\"><span class=\"nl\"> \u201cpersonal injury\u201d includes any disease and any impairment of physical or mental condition.</span></li></ol>",
        "<span class=\"bd\">SCHEDULE 2 E+W+S+NI</span><br>\u201cGuidelines\u201d for Application of Reasonableness Test",
        "<ol><li><span class=\"nl\"> The matters to which regard is to be had in particular for the purposes of sections 6(1A), 7(1A) and (4), 20 and 21 are any of the following which appear to be relevant\u2014</span><ol><li><span class=\"nl\"> the strength of the bargaining positions of the parties relative to each other, taking into account (among other things) alternative means by which the customer&#8217;s requirements could have been met;</span></li><li><span class=\"nl\"> whether the customer received an inducement to agree to the term, or in accepting it had an opportunity of entering into a similar contract with other persons, but without having a similar term;</span></li><li><span class=\"nl\"> whether the customer knew or ought reasonably to have known of the existence and the extent of the term (having regard, among other things, to any custom of the trade and any previous course of dealing between the parties);</span></li><li><span class=\"nl\"> where the term excludes or restricts any relevant liability if some condition was not complied with, whether it was reasonable at the time of the contract to expect that compliance with that condition would be practicable;</span></li><li><span class=\"nl\"> whether the goods were manufactured, processed or adapted to the special order of the customer.</span></li></ol></ol>"
    ]
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)"
    ],
    "NUMBER": "241",
    "TYPE": "Concept",
    "NAME": "Using the Unfair Contract Terms Act 1977",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015)",
    "RELATED": [
        "Excluding liability for negligence",
        "The Consumer Rights Act 2015",
        "Unfair Contract Terms Act 1977 - Introduction",
        "The deviation and bailment cases",
        "The function of exemption clauses",
        "Exclusion and limitation clauses",
        "The doctrine of fundamental breach",
        "The construction of exemption clauses",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "Communication of Acceptance - Intro",
        "Performance of Existing Legal Duties as Consideration",
        "Anticipatory Breach"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Using the Unfair Contract Terms Act 1977</span></span><br>&emsp;&emsp;As stated above, what follows is not a series of annotations or even selected notes on the Act, but rather a limited pointer towards the sort of questions likely to arise in connection with its use for the purposes of this course.<br>&emsp;&emsp;b>Section 13</b> extends the conception of exclusions or limitations of liability beyond the simple definition of an exemption clause. It may be the right starting point if a contract term seems onerous, but not a normal exemption clause<br>&emsp;&emsp;You may have noticed, reading through Part 1, that it includes some introductory provisions, then it asserts its control over various types of contract terms or other terms. That central section ends with section 7. In fact what may be regarded as the central part of the Act (that is, sections 2 \u2013 7) is said by <b>section 1(3)</b> to apply only to business liability, save that section 6 is not limited in this way. Given that you are likely to want to use one of these central sections, it is of obvious importance to check whether you are dealing with business liability.<br>&emsp;&emsp;Among the \u201ccentral\u201d sections, <b>section 3</b> is likely to be of frequent relevance (\u201cliability arising in contract\u201d). Notice that its application is limited to instances where one contracting party deals on the other&#8217;s written standard terms of business. There is no legislative definition of \u201cwritten standard terms of business\u201d. There is some caselaw on the topic.<br>&emsp;&emsp;Those are the likely preliminary matters, some or all of which may need to be discussed before the Act can actually be used for its main purpose.<br>&emsp;&emsp;The central <b>sections 2-7</b> vary in difficulty. An application of section 2 (negligence liability) might well be easy. By contrast, there are aspects of section 3 (liability arising in contract) which might be more challenging, perhaps because of the drafting of that section. Section 6 (sale and hire purchase) is difficult because of the relatively complex interlocking with the Sale of Goods Act 1979 and the Supply of Goods and Services Act 1982. However, the difficulty is not conceptual. With a good grasp of the sections of those two acts which were set out in the last lecture, it should be straightforward to settle who can exclude liability for what, or can do so subject to a reasonableness test.<br>&emsp;&emsp;If a clause is made subject to a reasonableness test by the Act, then the place to look in order to run that test is <b>section 11</b>. Since section 11 in fact contains four tests, it is essential to choose the correct one. The beginning words of each subsection indicate which is the appropriate one, depending on the central section from which you have come.<br>&emsp;&emsp;Only section 11(2) explicitly requires the consideration of reasonableness to be assessed in accordance with the <b>Schedule 2</b> criteria set out above. However, there is authority that Schedule 2 may be referred to whenever the question of a term&#8217;s reasonableness is to be judged.<br>&emsp;&emsp;In deciding whether a term is reasonable or not, you are not required to go very far into the facts for the purposes of this year. This year, the key to handling the Unfair Contract Terms Act is to find a pathway through it which is not wrong, and to show a good understanding of where the materials required for fuller argument would be found."
    ]
},
{
    "CATEGORIES": [
        "Exemption Clauses (UCTA 1997 and CRA 2015)"
    ],
    "NUMBER": "242",
    "TYPE": "Concept",
    "NAME": "The Consumer Rights Act 2015",
    "CATEGORY": "Exemption Clauses (UCTA 1997 and CRA 2015)",
    "RELATED": [
        "The deviation and bailment cases",
        "Unfair Contract Terms Act 1977 - Introduction",
        "Using the Unfair Contract Terms Act 1977",
        "The doctrine of fundamental breach",
        "Excluding liability for negligence",
        "The function of exemption clauses",
        "The construction of exemption clauses",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "Exclusion and limitation clauses",
        "Substantial performance",
        "Offers - Introduction",
        "Frustration - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The Consumer Rights Act 2015</span></span><br>&emsp;&emsp;Part 2 of the 2015 Act now deals with all aspects of exemption clauses in consumer contracts (and with notices), leaving UCTA governing only non-consumer contracts. Amongst the other functions of the Act is to continue a well-established legislative trend towards making the control of exemptions the work of regulators, not merely of courts. The central section is s.62, which is printed below. S62(4) deserves to be committed to memory.<br>&emsp;&emsp;(3) This does not prevent the consumer from relying on the term or notice if the consumer chooses to do so.<br>&emsp;&emsp;(4) A term is unfair if, contrary to the requirement of good faith, it causes a significant imbalance in the parties&#8217; rights and obligations under the contract to the detriment of the consumer.<br>&emsp;&emsp;(b) by reference to all the circumstances existing when the term was agreed and to all of the other terms of the contract or of any other contract on which it depends.<br>&emsp;&emsp;(6) A notice is unfair if, contrary to the requirement of good faith, it causes a significant imbalance in the parties&#8217; rights and obligations to the detriment of the consumer.<br>&emsp;&emsp;(b) by reference to all the circumstances existing when the rights or obligations to which it relates arose and to the terms of any contract on which it depends.<br>&emsp;&emsp;Other important provisions of the 2015 Act&#8217;s regulation of exemptions are the following, certain aspects of which are surprising:<br>&emsp;&emsp;\u00b7 S.64 prohibits the assessment of the fairness of a term to the extent that it specifies the main subject matter of the contract, or the assessment would be of the price payable (the two sides of the <i>quid pro quo</i>). This is done in order to protect the principle of freedom of contract. However, to escape assessment, the term in question must be \u201ctransparent and prominent\u201d. The section in fact rests upon a number of value judgments, which is ironic since part of its function is to avoid scrutiny of value. It does not look straightforward to apply.<br>&emsp;&emsp;\u00b7 S.65 repeats UCTA&#8217;s ban on the exclusion or restriction of liability for negligence causing personal injury or death. The section&#8217;s heading, \u201cBar on exclusion or restriction of negligence liability\u201d appears to be misleadingly broad, since the bar does not apply to exclusions of lesser consequences of negligence.<br>&emsp;&emsp;\u00b7 S.68 places an obligation on a trader to \u201censure that a written term of a consumer contract, or a consumer notice in writing, is transparent\u201d. Transparency requires expression \u201cin plain and intelligible language\u201d, and legibility. It is again ironic that this section itself appears to be poorly drafted, in that its definition of transparency is related only to notices, and not to terms. The Act&#8217;s explanatory notes regard the definition as extending to terms as well.<br>&emsp;&emsp;\u00b7 S69 provides that an ambiguous term or notice is to receive the interpretation most favourable to the consumer. This appears to be a codification of the common law&#8217;s <i>contra proferentem</i> approach to the construction of exemptions.<br>&emsp;&emsp;\u00b7 S71 obliges courts to consider whether terms are fair even if no party the proceedings has raised the issue. This is subject to the proviso that the court must be satisfied that it has sufficient legal and factual material to enable the assessment to be made.<br>&emsp;&emsp;b>Schedule 2</b> of the Act gives an indicative and non-exhaustive list of terms (often referred to as \u201cthe grey list\u201d) which may be regarded as unfair, and is based on a similar list in the Unfair Terms in Consumer Contracts Regulations 1999 which the 2015 Act revokes.<br>&emsp;&emsp;The list is a substantial one, and it is not expected that you will learn it. Nevertheless, it is interesting, not least because it confirms the validity (whilst of course putting in question the fairness) of certain types of arrangement about which you might have felt some doubt at the level of contract formation. You would do well to read through it two or three times. For that reason, it is set out below.<br>&emsp;&emsp;1 A term which has the object or effect of excluding or limiting the trader&#8217;s liability in the event of the death of or personal injury to the consumer resulting from an act or omission of the trader.<br>&emsp;&emsp;2 A term which has the object or effect of inappropriately excluding or limiting the legal rights of the consumer in relation to the trader or another party in the event of total or partial non-performance or inadequate performance by the trader of any of the contractual obligations, including the option of offsetting a debt owed to the trader against any claim which the consumer may have against the trader.<br>&emsp;&emsp;3 A term which has the object or effect of making an agreement binding on the consumer in a case where the provision of services by the trader is subject to a condition whose realisation depends on the trader&#8217;s will alone.<br>&emsp;&emsp;4 A term which has the object or effect of permitting the trader to retain sums paid by the consumer where the consumer decides not to conclude or perform the contract, without providing for the consumer to receive compensation of an equivalent amount from the trader where the trader is the party cancelling the contract.<br>&emsp;&emsp;5 A term which has the object or effect of requiring that, where the consumer decides not to conclude or perform the contract, the consumer must pay the trader a disproportionately high sum in compensation or for services which have not been supplied.<br>&emsp;&emsp;6 A term which has the object or effect of requiring a consumer who fails to fulfil his obligations under the contract to pay a disproportionately high sum in compensation.<br>&emsp;&emsp;7 A term which has the object or effect of authorising the trader to dissolve the contract on a discretionary basis where the same facility is not granted to the consumer, or permitting the trader to retain the sums paid for services not yet supplied by the trader where it is the trader who dissolves the contract.<br>&emsp;&emsp;8 A term which has the object or effect of enabling the trader to terminate a contract of indeterminate duration without reasonable notice except where there are serious grounds for doing so.<br>&emsp;&emsp;9 A term which has the object or effect of automatically extending a contract of fixed duration where the consumer does not indicate otherwise, when the deadline fixed for the consumer to express a desire not to extend the contract is unreasonably early.<br>&emsp;&emsp;10 A term which has the object or effect of irrevocably binding the consumer to terms with which the consumer has had no real opportunity of becoming acquainted before the conclusion of the contract.<br>&emsp;&emsp;11 A term which has the object or effect of enabling the trader to alter the terms of the contract unilaterally without a valid reason which is specified in the contract.<br>&emsp;&emsp;12 A term which has the object or effect of permitting the trader to determine the characteristics of the subject matter of the contract after the consumer has become bound by it.<br>&emsp;&emsp;13 A term which has the object or effect of enabling the trader to alter unilaterally without a valid reason any characteristics of the goods, digital content or services to be provided.<br>&emsp;&emsp;14 A term which has the object or effect of giving the trader the discretion to decide the price payable under the contract after the consumer has become bound by it, where no price or method of determining the price is agreed when the consumer becomes bound.<br>&emsp;&emsp;15 A term which has the object or effect of permitting a trader to increase the price of goods, digital content or services without giving the consumer the right to cancel the contract if the final price is too high in relation to the price agreed when the contract was concluded.<br>&emsp;&emsp;16 A term which has the object or effect of giving the trader the right to determine whether the goods, digital content or services supplied are in conformity with the contract, or giving the trader the exclusive right to interpret any term of the contract.<br>&emsp;&emsp;17 A term which has the object or effect of limiting the trader&#8217;s obligation to respect commitments undertaken by the trader&#8217;s agents or making the trader&#8217;s commitments subject to compliance with a particular formality.<br>&emsp;&emsp;18 A term which has the object or effect of obliging the consumer to fulfil all of the consumer&#8217;s obligations where the trader does not perform the trader&#8217;s obligations.<br>&emsp;&emsp;19 A term which has the object or effect of allowing the trader to transfer the trader&#8217;s rights and obligations under the contract, where this may reduce the guarantees for the consumer, without the consumer&#8217;s agreement.<br>&emsp;&emsp;20 A term which has the object or effect of excluding or hindering the consumer&#8217;s right to take legal action or exercise any other legal remedy, in particular by\u2014<br>&emsp;&emsp;(a) requiring the consumer to take disputes exclusively to arbitration not covered by legal provisions,<br>&emsp;&emsp;(c) imposing on the consumer a burden of proof which, according to the applicable law, should lie with another party to the contract."
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Misrepresentation (2)"
    ],
    "NUMBER": "243",
    "SUMMARY": [
        "Since misrepresentation and misstatement are quite distinct from actions for breach of contract, they have their own terminology. A selection from it is set out below for ready reference and to clear up any initial queries, even though several of these terms will not be relevant until the second of these two lectures on misrepresentation.",
        "<span class=\"bd\">Representation</span><br>A pre-contractual statement of fact, whether express or implied, which leads the representee to enter into a contract with the representor.",
        "<span class=\"bd\">Misrepresentation</span><br>A statement, as above, which proves false, whether made innocently, negligently or fraudulently.",
        "<span class=\"bd\">Misstatement</span><br>A statement, whether of fact, opinion or belief, by which the maker becomes liable for loss resulting to the recipient.",
        "<span class=\"bd\">Rescission</span><br>The retroactive undoing of the contract, involving the return of its subject matter and the price paid for it.",
        "<span class=\"bd\">Termination</span><br>The withholding of further performance of the contract.",
        "<span class=\"bd\">Indemnity</span><br>Monetary compensation for obligations which the contract has (a) created; and (b) imposed on a misrepresentee.",
        "<span class=\"bd\">Reliance</span><br>The importance of the representation in the mind of the representee in deciding whether to enter into the contract, and if so, on what terms.",
        "<span class=\"bd\">Materiality</span><br>The propensity of the representation to affect the mind of a reasonable in the sense above.",
        "<span class=\"bd\">Innocent</span><br>(a) Before 1967: non-fraudulent.<br>(b) After 1967: without fault."
    ],
    "NAME": "Misrepresentation - Glossary",
    "CATEGORY": "Misrepresentation (1) / Misrepresentation (2)",
    "RELATED": [
        "East v Maurer",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "Smith v Land and House Property Corporation",
        "Gran Gelato Ltd v Richcliff (Group) Ltd",
        "Dimmock v Hallett",
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "Pankhania v Hackney Borough Council",
        "Redgrave v Hurd",
        "William Sindall plc v Cambridgeshire County Council",
        "Attwood v Small",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Derry v Peek"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (1)"
    ],
    "NUMBER": "244",
    "TYPE": "Concept",
    "NAME": "Misrepresentation (1) - Introduction",
    "CATEGORY": "Misrepresentation (1)",
    "RELATED": [
        "Misrepresentation arising from silence and/or conduct",
        "Fact, as opposed to opinion, belief, intention, or (formerly) law",
        "Materiality and reliance",
        "Intention to Create Legal Relations - Introduction",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "Atiyah's Understanding of Consideration",
        "Timing.",
        "Breach of Contract - Introduction",
        "Law Reform (Frustrated Contracts) Act 1943",
        "Self-induced frustration",
        "Frustration of common purpose",
        "The basis of quantification"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;Misrepresentation is a large and therefore a complex subject. The aim here has been to present it in a way which maximises understanding while minimising overload. Once the basic rules are grasped, the area will be seen to be one which allows rather more use of the imagination than actions for breach of contract.<br>&emsp;&emsp;This first lecture on the subject is concerned with the ingredients of liability (a) for misrepresentation, whether fraudulent, negligent or innocent; and (b) for negligent misstatement. The need to contrast misrepresentation and misstatement actions is emphasised.<br>&emsp;&emsp;The second lecture broadly tracks the Misrepresentation Act 1967, a short but sometimes puzzling piece of legislation. The lecture includes detailed discussion of fraudulent, negligent and innocent misrepresentation, focusing on the remedies available for each. The remedy of rescission is an important subject in its own right, since it is necessary to be aware not only of its effect but also of factors (the bars to rescission) which may make it unavailable. The second lecture also deals with attempts to exclude liability for misrepresentation.<br>&emsp;&emsp;Two topics within misrepresentation have a particular tendency to prolong treatments of the subject to the point at which it may begin to seem impossibly detailed. One is the relationship between silence and misrepresentation, which is given concise handling here. The other is the quantum of damages for misrepresentation. This is also given as light a treatment here as possible."
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (1)"
    ],
    "NUMBER": "245",
    "TYPE": "Concept",
    "NAME": "Fact, as opposed to opinion, belief, intention, or (formerly) law",
    "CATEGORY": "Misrepresentation (1)",
    "RELATED": [
        "Misrepresentation (1) - Introduction",
        "Misrepresentation arising from silence and/or conduct",
        "Materiality and reliance",
        "The Consumer Rights Act 2015",
        "Performance of Existing Legal Duties as Consideration",
        "Postal Rule",
        "Breach of contract \u2013 the basic rights",
        "Lord Denning's invention of common mistake in equity",
        "Timing",
        "Frustration of common purpose",
        "The purpose for which damages are awarded",
        "The election to terminate"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Fact, as opposed to opinion, belief, intention, or (formerly) law</span></span><br>&emsp;&emsp;In order to be actionable, a representation must be factual, clear, material, relied upon, and false. In addition the representee must have entered into a contract with the representor, or with the representor&#8217;s principal.<br>&emsp;&emsp;The requirement that a representation should be factual militates against bringing actions based on statements of opinion, belief, or future intention. Formerly, statements of law were also held not to be actionable, but this is no longer the case."
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Fact, as Opposed to Opinion, Belief, Intention and (Formerly) Law"
    ],
    "YEAR": "1927",
    "NUMBER": "246",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In the course of negotiations for the purchase of a block of land in New Zealand, the seller told the buyers that \u201cif the place was worked as I was working it, with a good six horse team, my idea was that it would carry 2000 sheep\u201d. In fact, as the buyers knew, the seller had not been working the land as a sheep farm. When they began to use the land in that way, they found that it would not carry 2000 sheep, and sought rescission of the contract on that basis.<br>&emsp;&emsp;The Privy Council held that the seller&#8217;s statement had been nothing more than an honest expression of opinion, and that the buyers had not been justified in regarding it as fact. Further, they had not even proved that the land could not carry 2000 sheep, if properly worked."
    ],
    "NAME": "Bisset v Wilkinson",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Fact, as Opposed to Opinion, Belief, Intention and (Formerly) Law",
    "CITATION": "Bisset v Wilkinson [1927] AC 177",
    "RELATED": [
        "Smith v Land and House Property Corporation",
        "Pankhania v Hackney Borough Council",
        "Edgington v Fitzmaurice",
        "Henderson v Merrett Syndicates",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Dimmock v Hallett",
        "Attwood v Small",
        "Caparo Industries plc v Dickman",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "With v O'Flanagan",
        "McCullough v Lane Fox and Partners Ltd",
        "Keates v The Earl of Cadogan"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Fact, as Opposed to Opinion, Belief, Intention and (Formerly) Law"
    ],
    "YEAR": "1884",
    "NUMBER": "247",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs were selling a hotel, which was let to one Frederick Fleck. In the particulars of sale they described Mr Fleck both as a \u201cmost desirable\u201d and as a \u201cvery desirable\u201d tenant. In fact, Mr Fleck had fallen behind with the latest instalment of the rent, and had paid the previous instalment very late. After the contract was concluded, he became bankrupt. The plaintiffs sought specific performance of the contract, and the defendant buyers counterclaimed for rescission for misrepresentation.<br>&emsp;&emsp;The Court of Appeal held that the plaintiffs&#8217; statements amounted to misrepresentation. Although they appeared at first sight only to be opinion, that expression of opinion involved the implied assertion of a factual basis for its making.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;\u201cIn considering whether there was a misrepresentation, I will first deal with the argument that the particulars only contain a statement of opinion about the tenant. It is material to observe that it is often fallaciously assumed that a statement of opinion cannot involve the statement of a fact. In a case where the facts are equally well known to both parties, what one of them says to the other is frequently nothing but an expression of opinion. The statement of such opinion is in a sense a statement of a fact, about the condition of the man&#8217;s own mind, but only of an irrelevant fact, for it is of no consequence what the opinion is. But if the facts are not equally known to both sides, then a statement of opinion by the one who knows the facts best involves very often a statement of a material fact, for he impliedly states that he knows facts which justify his opinion\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Bowen LJ&#8217;s proposition above deserves careful attention. It can be very useful in preparing an accurately pleaded misrepresentation case. Where a statement of the defendant is \u201ctainted\u201d by opinion, it is possible to plead it as nothing more than a statement, and therefore in itself neutral, but then to extract from it the implied representation of fact on which it is based.</span>"
    ],
    "NAME": "Smith v Land and House Property Corporation",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Fact, as Opposed to Opinion, Belief, Intention and (Formerly) Law",
    "CITATION": "Smith v Land and House Property Corporation (1884) 28 Ch D 7",
    "RELATED": [
        "Pankhania v Hackney Borough Council",
        "Edgington v Fitzmaurice",
        "Bisset v Wilkinson",
        "Henderson v Merrett Syndicates",
        "Dimmock v Hallett",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Keates v The Earl of Cadogan",
        "McCullough v Lane Fox and Partners Ltd",
        "Attwood v Small",
        "With v O'Flanagan",
        "Caparo Industries plc v Dickman"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Fact, as Opposed to Opinion, Belief, Intention and (Formerly) Law"
    ],
    "YEAR": "1885",
    "NUMBER": "248",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendants, the directors of a company, sent out a prospectus to shareholders including the plaintiff. The prospectus invited subscriptions to be made in return for bonds, and stated that the money received would be used for expanding the company&#8217;s business by the purchase of horses and vans, and by pursuing plans to develop a business supplying cheap fish. In fact the intention of the directors was to use most of the money to pay off the company&#8217;s creditors. The company later went into liquidation, and the plaintiff sued for the return of his money by way of damages for misrepresentation.<br>&emsp;&emsp;The Court of Appeal held that this action succeeded. Bowen LJ, in another very well-known explanation, indicated how the directors&#8217; statement of intention supposed a statement of present fact:<br>&emsp;&emsp;\u201cThere must be a misstatement of an existing fact: but the state of a man&#8217;s mind is as much a fact as the state of his digestion. It is true that it is very difficult to prove what the state of a man&#8217;s mind at a particular time is, but if it can be ascertained it is as much a fact as anything else. A misrepresentation as to the state of a man&#8217;s mind is, therefore, a misstatement of fact\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">This is the first case cited here in which it matters to know the level of culpability being alleged against the defendants. The misrepresentation pleaded and found proven by the courts was fraudulent. This is why Bowen LJ&#8217;s analysis works. Behind what on its face was merely a promise (binding if supported by consideration but otherwise not) is a positive and present resolve to do something completely inconsistent with the promise. The misstated fact upon which the successful misrepresentation action is mounted is the deceiving assertion of honesty. It will be apparent, therefore, that the ratio of this case cannot easily be extended beyond the type of misrepresentation which is wilful \u2013 ie. fraudulent misrepresentation. </span><br>&emsp;&emsp;<span class=\"it\">Until recently it was thought that statements of law could not be actionable misrepresentations. The rationale for this rule was not entirely clear, and it contained provisos some of which were notoriously difficult to apply. In particular, the rule related only to statements of general law, and not to statements of private legal right. The distinction between these two categories was uncertain. Fortunately the law has now been clarified and simplified. Statements of law can found actions for misrepresentation.</span>"
    ],
    "NAME": "Edgington v Fitzmaurice",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Fact, as Opposed to Opinion, Belief, Intention and (Formerly) Law",
    "CITATION": "Edgington v Fitzmaurice (1885) 29 Ch D 459",
    "RELATED": [
        "Smith v Land and House Property Corporation",
        "Bisset v Wilkinson",
        "Pankhania v Hackney Borough Council",
        "With v O'Flanagan",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "McCullough v Lane Fox and Partners Ltd",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Redgrave v Hurd",
        "Keates v The Earl of Cadogan",
        "Attwood v Small",
        "Henderson v Merrett Syndicates",
        "Caparo Industries plc v Dickman"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Fact, as Opposed to Opinion, Belief, Intention and (Formerly) Law"
    ],
    "YEAR": "2002",
    "NUMBER": "249",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The purchaser of properties at auction argued that he had been induced to buy by two misrepresentations. One of them was that National Car Parks was a mere contractual licensee with regard to one of the properties, so that its occupation could be terminated on three months&#8217; notice. That was false, since the company was in fact a business tenant, protected by the Landlord and Tenant Act 1954. The difficulty facing the purchaser was that the nature of NCP&#8217;s interest in the property was a matter of law (albeit a matter of private legal right).<br>&emsp;&emsp;Rex Tedd QC, sitting as a deputy judge of the High Court, held that these facts amounted to an actionable misrepresentation. The House of Lords in <i>Kleinwort Benson Ltd v Lincoln City Council</i> [1999] 2 AC 349, had abolished the rule that a mistake of law could not give rise to a remedy. The notion that \u201cevery person was presumed to know the law\u201d had been shown in that case to be an entirely unwarranted outgrowth from the principle that ignorance of the law was no defence to a criminal charge. It was impossible to suppose that the bar to action for misrepresentation of law could survive the decision of the House of Lords on mistake of law, and desirable in any event that the common law should display consistency."
    ],
    "NAME": "Pankhania v Hackney Borough Council",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Fact, as Opposed to Opinion, Belief, Intention and (Formerly) Law",
    "CITATION": "Pankhania v Hackney Borough Council [2002] EWHC 2441",
    "RELATED": [
        "Smith v Land and House Property Corporation",
        "Bisset v Wilkinson",
        "Edgington v Fitzmaurice",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Keates v The Earl of Cadogan",
        "Dimmock v Hallett",
        "With v O'Flanagan",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "Henderson v Merrett Syndicates",
        "Caparo Industries plc v Dickman",
        "Redgrave v Hurd",
        "Attwood v Small"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (1)"
    ],
    "NUMBER": "250",
    "TYPE": "Concept",
    "NAME": "Misrepresentation arising from silence and/or conduct",
    "CATEGORY": "Misrepresentation (1)",
    "RELATED": [
        "Misrepresentation (1) - Introduction",
        "Materiality and reliance",
        "Fact, as opposed to opinion, belief, intention, or (formerly) law",
        "Negligent Misrepresentation",
        "Penalties/Agreed sums payable on breach",
        "Going beyond \u201cmistakes\u201d in the contract",
        "The doctrine of fundamental breach",
        "A new basis for deciding questions of remoteness?",
        "Reasonable notice and reasonable assumptions \u2013 the \u201cticket cases\u201d",
        "The basis of quantification",
        "Implication from presumed intention (\u201cterms implied in fact\u201d)",
        "Innocent Misrepresentation"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Misrepresentation arising from silence and/or conduct</span></span>"
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Misrepresentations Arising From Silence And/Or Conduct"
    ],
    "YEAR": "1851",
    "NUMBER": "251",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant contracted to let a house to the plaintiff. He was aware that the plaintiff wanted the house for immediate occupation, and also that the house was in an uninhabitable state. However, the defendant did nothing to induce the plaintiff to suppose that the house was habitable. It was argued on the plaintiff&#8217;s behalf that the defendant&#8217;s conduct had been fraudulent.<br>&emsp;&emsp;The court held, however, that the only relevant facts were the defendant&#8217;s knowledge of the plaintiff&#8217;s intentions, and his knowledge of the state of the house. It was not alleged that the defendant had given any warranty or made any representation as to the house&#8217;s condition. Nor was it shown that the defendant had any reason to suppose that the plaintiff would not make his own enquiries into the matter. These things being so, there was nothing amounting to deceit.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This is a robust decision, but it should not be a surprising one. It is perfectly compatible in the balance it strikes between law, practice and morality with the judgments in <i>Smith v Hughes</i>. Just as there was nothing in that situation requiring the seller of oats to take positive steps to disabuse the buyer of his notion that the oats were old oats, so here the parties are at arm&#8217;s length, and the principle \u201ccaveat emptor\u201d best expresses the yardstick which reasonable people (in the court&#8217;s view) would apply.<br>&emsp;&emsp;If, on the other hand, the defendant has said or done something which creates a positive impression in the mind of the other, and it is later rendered misleading by a change in circumstances, it will become a misrepresentation."
    ],
    "NAME": "Keates v The Earl of Cadogan",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Misrepresentations Arising From Silence And/Or Conduct",
    "CITATION": "Keates v The Earl of Cadogan (1851) 10 CB 591",
    "RELATED": [
        "With v O'Flanagan",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Dimmock v Hallett",
        "Edgington v Fitzmaurice",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "Caparo Industries plc v Dickman",
        "Smith v Land and House Property Corporation",
        "Henderson v Merrett Syndicates",
        "Bisset v Wilkinson",
        "Pankhania v Hackney Borough Council",
        "Attwood v Small",
        "McCullough v Lane Fox and Partners Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Misrepresentations Arising From Silence And/Or Conduct"
    ],
    "YEAR": "1936",
    "NUMBER": "252",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In January 1934, during negotiations for the sale of his medical practice, the defendant stated to the intending buyers that it was \u201cdoing at the rate of \u00a32000 a year\u201d. This was substantially true of the two years to December 1933. However, between January and May, when the contract was concluded, the practice was neglected because of the ill health of the defendant. The buyers, when they first opened for business, found that no patients turned up, and that the practice had taken no more than \u00a315 in the previous three weeks. They brought the present action to rescind the contract.<br>&emsp;&emsp;The Court of Appeal held that although the statement of turnover had been true when made, it was no longer accurate when the agreement was concluded. A representation was to be regarded as having continuing effect from the time of its making until the contract&#8217;s conclusion. The representation in this case had become false in the course of that period.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The idea of a \u201ccontinuing representation\u201d is quite a striking one. It would be quite possible to imagine the law taking the contrary approach, and focusing on the moment when a representation first has its impact. The explanation for the acceptability of the somewhat more artificial analysis in fact adopted by the law is not simply that it enables justice to be done where a representor has stood by and allowed a true statement to go uncorrected when it later became misleading. It is also based on the principle that a representation must \u201cinduce\u201d the contract, which is to say that it must be relied upon. In the view of the law, that reliance is to be regarded as ongoing until it culminates in the concluding of the contract.</span><br>&emsp;&emsp;<span class=\"it\">Even if circumstances do not change after the making of a representation, so that it is at all times literally true, it may nevertheless mislead and so be actionable.</span>"
    ],
    "NAME": "With v O'Flanagan",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Misrepresentations Arising From Silence And/Or Conduct",
    "CITATION": "With v O&#8217;Flanagan [1936] Ch 575",
    "RELATED": [
        "Dimmock v Hallett",
        "Keates v The Earl of Cadogan",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Caparo Industries plc v Dickman",
        "Henderson v Merrett Syndicates",
        "Pankhania v Hackney Borough Council",
        "Bisset v Wilkinson",
        "Smith v Land and House Property Corporation",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "Attwood v Small",
        "Redgrave v Hurd",
        "Edgington v Fitzmaurice"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Misrepresentations Arising From Silence And/Or Conduct"
    ],
    "YEAR": "1866",
    "NUMBER": "253",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A contract for the sale of a large agricultural estate was concluded in January 1866. In entering it, the buyer relied on the seller&#8217;s statements as to the identities of the tenants of two farms, and the rate at which another farm had previously been let. The seller had also stated that certain other tenants had given notice to quit. All this information was correct. However, the tenants of the two farms had in fact also given notice to quit, and the third farm had been offered to another tenant at a substantially lower rent than the one formerly charged.<br>&emsp;&emsp;The Court of Appeal held that these circumstances justified the rescinding of the contract. Although what had been said was technically true, it carried the implication that the two tenants had not been given notice to quit, and that the value of the third farm had not become seriously reduced.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;How can a statement be both true and a misrepresentation, seeing that a misrepresentation must be false? The answer probably is that the seller&#8217;s statements here should not themselves be regarded as misrepresentations; the account given above intentionally avoided describing them as such. Rather, they carry implications which, since they are unambiguously false, are themselves actionable misrepresentations."
    ],
    "NAME": "Dimmock v Hallett",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Misrepresentations Arising From Silence And/Or Conduct",
    "CITATION": "Dimmock v Hallett (1866) LR 2 Ch App 21",
    "RELATED": [
        "Spice Girls Ltd v Aprilia World Service BV",
        "Keates v The Earl of Cadogan",
        "With v O'Flanagan",
        "Edgington v Fitzmaurice",
        "McCullough v Lane Fox and Partners Ltd",
        "Bisset v Wilkinson",
        "Attwood v Small",
        "Henderson v Merrett Syndicates",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "Redgrave v Hurd",
        "Pankhania v Hackney Borough Council",
        "Smith v Land and House Property Corporation"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "2002",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In March 1998, Geri Halliwell informed the other four members of the band The Spice Girls that she intended to leave it. In early May 1998, Spice Girls Ltd entered into a contract with Aprilia, a manufacturer of motorcycles and scooters, whereby Aprilia was to provide the band with sponsorship for a concert tour in return for promotional work by the band. Geri Halliwell left the band at the end of May 1998.<br>&emsp;&emsp;At first instance, <span class=\"bd\">Arden J</span> held that the participation of the band members in a photo shoot with Aprilia on 4 May had amounted to a misrepresentation by conduct that Spice Girls Ltd had no reason to believe that any of the band&#8217;s members would leave before the end of the minimum term of the agreement. The Court of Appeal upheld <span class=\"bd\">Arden J</span>&#8216;s decision, but on a broader basis. In many respects the negotiations between the parties had proceeded on the implicit basis that the band would continue to consist of all five members.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\"><span class=\"bd\">McKendrick</span> prints a lengthy extract from the judgment of Morritt V-C in this case. It includes discussion of materiality, inducement and reliance. It will be pointed out later that these concepts can easily be misused. Morritt V-C&#8217;s use of them is none too rigorous, and for that reason it might well prove confusing to linger over this aspect of his judgment. The issue is dealt with immediately below.</span>"
    ],
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Misrepresentations Arising From Silence And/Or Conduct",
    "CITATION": "Spice Girls Ltd v Aprilia World Service BV [2002] EWCA Civ 15",
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Misrepresentations Arising From Silence And/Or Conduct"
    ],
    "RELATED": [
        "Dimmock v Hallett",
        "With v O'Flanagan",
        "Keates v The Earl of Cadogan",
        "Redgrave v Hurd",
        "Attwood v Small",
        "Henderson v Merrett Syndicates",
        "Edgington v Fitzmaurice",
        "Smith v Land and House Property Corporation",
        "Pankhania v Hackney Borough Council",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "McCullough v Lane Fox and Partners Ltd",
        "Bisset v Wilkinson"
    ],
    "NUMBER": "254",
    "TYPE": "Case",
    "NAME": "Spice Girls Ltd v Aprilia World Service BV",
    "FLAGS": [
        "Arden",
        "McKendrick"
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (1)"
    ],
    "NUMBER": "255",
    "FLAGS": [
        "Treitel",
        "McKendrick"
    ],
    "TYPE": "Concept",
    "NAME": "Materiality and reliance",
    "CATEGORY": "Misrepresentation (1)",
    "RELATED": [
        "Fact, as opposed to opinion, belief, intention, or (formerly) law",
        "Misrepresentation (1) - Introduction",
        "Misrepresentation arising from silence and/or conduct",
        "Frustration - Introduction",
        "Other tests",
        "Implication from custom",
        "Acceptance By Silence/Inactivity",
        "Towards Promissory Estoppel - Introduction",
        "Further aspects of the remedial scheme",
        "The Parol Evidence Rule",
        "Communication of Acceptance - Intro",
        "The temptation to go beyond the dictionary"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Materiality and reliance</span></span><br>&emsp;&emsp;It is commonly said that a misrepresentation, in order to be actionable, must induce the representee to enter into the contract. This is certainly not wrong, but it can lead to confusion. The problem is that the notion of inducement can be understood in different ways. It can refer to the extent to which the mind of the representee was actually affected by the statetment made. It can refer to the propensity of the statement to encourage reliance. In a phrase such as \u201cin order to induce...\u201d, it can import the idea that the representor must have intended the statement to have that effect (some older cases expressly state that requirement, whilst some others disavow it).<br>&emsp;&emsp;For the purpose of accurate analysis, the language of inducement is best avoided altogether. It has not been avoided in recent decisions, so that confusion remains.<br>&emsp;&emsp;Inducement can be translated with advantage by the concepts of materiality and reliance, an approach favoured by <span class=\"bd\">Treitel</span>. Materiality, when correctly understood, refers to the capacity of the statement made to affect the mind of a reasonable representee. It is an objective measure of the statement&#8217;s significance. Reliance is an assessment of whether the statement did in fact play a real and substantial part in the representee&#8217;s decision whether (or at least on what terms) to enter the contract.<br>&emsp;&emsp;This approach, consisting of objective and subjective measurements of the statement&#8217;s impact, is more likely to lead to clarity than attempts to cover the same ground by looking for \u201cinducement\u201d. One remaining problem is that the law remains unclear about the relationship between materiality, reliance, and where the burden of proof should lie. For the purposes of this year, that problem (although a real one) is not going to be over-stated.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Recent cases, such as Raifeissen Zentralbank Osterreich v Royal Bank of Scotland (2011) have gone further, and proposed that a \u201cbut for\u201d test applies to reliance. This is not the place for full discussion, but a few points seem apposite by way of response. One is that a heightening of the bar for reliance seems not altogether easy to reconcile with earlier caselaw or with the mechanics of proof described in Museprime v Adhill (see below). Another is that contract analysis seems more accident-prone in this area than public law would be, not least because public law has learnt from unpicking formal statements of reasons provided by those who decide (and explain) pursuant to duty. The distinction between factors which are \u201cimportant\u201d to a decision, and others merely \u201csupportive of it\u201d could readily be ideated in public law with regard to weight. The last is that <span class=\"bd\">McKendrick</span>&#8216;s references to Raifeissen seem to be just that \u2013 references, with little done to pursue coherence.</span><br>&emsp;&emsp;<span class=\"it\">The requirement that a misrepresentation should be capable of affecting the mind of a reasonable person (as opposed to being wholly trivial, or totally irrelevant, or mere sales talk) seems to derive from contracts which include a duty of disclosure \u2013 typically, insurance contracts. Since any non-disclosure entitles the insurer to avoid the contract, there has to be some limit on what is required to be disclosed, and it is provided by materiality. Otherwise the way would be open to opportunistic and unjustified repudiations of liability by insurers. The class of facts to be disclosed is defined as any capable of affecting the mind of a reasonable insurer in deciding whether to take on the risk, and if so, on what terms. In <i>Pan Atlantic Co Ltd v Pine Top Insurance Co Ltd</i> [1994] 3 All ER 581, Lord Mustill and the majority of the House of Lords held that misrepresentation included a similar test.</span><br>&emsp;&emsp;<span class=\"it\">Complexity arises because materiality seems not to be used as a simple test to be passed or failed by a given representation. Instead, it is suggested that where a representation is not material, the representee must assume the probative burden of showing that he did in fact rely on it in deciding to enter the contract. Where a representation is material, it is the representor who has the burden of showing that the other did not rely on it (see <i>Museprime Properties Ltd v Adhill Properties Ltd</i> (1991) 61 P &amp; CR 111).</span><br>&emsp;&emsp;<span class=\"it\">In the case of fraudulent misrepresentation there is no requirement of materiality. As Treitel puts it (paragraph 9-014) \u201ca person who has successfully perpetrated a fraud cannot be heard to say that the representation which he used to achieve this end was immaterial\u201d.</span><br>&emsp;&emsp;<span class=\"it\">The shifting of the burden of proof described above is probably for the best, because in the majority of cases it will relieve the representee of the difficult task of demonstrating reliance (while it is only fair that he should have to do just that if the representation is not one on which most people would have relied). The cases on reliance tend either to articulate fairly obvious impediments to finding it, or to consider whether reliance must have been objectively reasonable in addition to being subjectively present. Each issue will be examined in turn.</span><br>&emsp;&emsp;<span class=\"it\">In the class of obvious impediments are cases in which the representee did not become aware of the representation; or took no account of it; or realised that it was false.</span>"
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Materiality and Reliance"
    ],
    "YEAR": "1838",
    "NUMBER": "256",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In the course of negotiations for the sale of mines and iron works, the seller made representations about the earning capacities of these assets. The buyers asked to be allowed to verify these statements, and sent agents to examine the works and accounts, and to report on them. The reports upheld the statements made. The contract of sale was concluded, but six months later it became clear that the statements were incorrect. The buyers brought an action for fraudulent misrepresentation.<br>&emsp;&emsp;Although the three speeches delivered in the House of Lords are not entirely clear, the ratio of the case is normally taken to be that the buyers had relied on their agents&#8217; investigations and not on the statements made to them by the sellers. Two of their Lordships also held that fraud had not been established."
    ],
    "NAME": "Attwood v Small",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Materiality and Reliance",
    "CITATION": "Attwood v Small (1838) 6 Cl &amp; F 232",
    "RELATED": [
        "Redgrave v Hurd",
        "Henderson v Merrett Syndicates",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "Caparo Industries plc v Dickman",
        "Smith v Land and House Property Corporation",
        "Bisset v Wilkinson",
        "With v O'Flanagan",
        "Dimmock v Hallett",
        "Keates v The Earl of Cadogan",
        "Pankhania v Hackney Borough Council",
        "Edgington v Fitzmaurice",
        "Spice Girls Ltd v Aprilia World Service BV"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1881",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff was a solicitor who was planning to retire. He advertised that he would appoint as partner a person who would also be willing to buy his house. He told the defendant that the practice brought in approximately \u00a3300 a year, and showed the defendant summary accounts which indicated that receipts were in fact somewhat less than \u00a3200. When the defendant enquired into the shortfall, the plaintiff produced a bundle of papers which he said detailed further business. The defendant looked only cursorily at the bundle, and entered into a contract to buy the house and a share in the practice. At trial it was found that the further documents showed additional business amounting only to some 5 or 6 pounds a year.<br>&emsp;&emsp;The Court of Appeal refused the plaintiff&#8217;s claim for specific performance, and allowed the defendant&#8217;s counterclaim for rescission of the contract. The misrepresentation had been shown to be material, and the plaintiff had failed to demonstrate that the defendant had not relied on it. He had been under no duty to inspect the documents properly, but was free to rely instead on the plaintiff&#8217;s representation.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Jessel MR explained the basis for the decision as follows: \u201c...if a man is induced to enter into a contract by a false representation it is not a sufficient answer to say, \u201cif you had used due diligence you would have found out that the statement was untrue. You had the means afforded you of discovering its falsity, and did not choose to avail yourself of them\u201d.<br>&emsp;&emsp;Nothing can be plainer, I take it, on the authorities in equity than that the effect of false representation is not got rid of on the ground that the person to whom it was made has been guilty of negligence.<br>&emsp;&emsp;Where you have neither evidence that he knew facts to show that the statement was untrue, or that he said or did anything to show that he did not actually rely upon the statement, the inference remains that he did so rely, and the statement being a material statement, its being untrue is a sufficient ground for rescinding the contract\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Although this case remains good law, the fact that the representee may have been negligent in not taking an obvious opportunity to make his own checks can no longer be said to have no legal consequence. Following the passing of the Law Reform (Contributory Negligence) Act 1945, it could now be made the basis for reducing an award of damages to reflect contributory negligence (though this would not apply if the representation were fraudulent).</span><br>&emsp;&emsp;<span class=\"it\">That being said, it continues to be the case that the attitude of Lord Jessel broadly makes sense, and it is worth bearing in mind at all times when considering misrepresentation. This is not an area, unlike contract formation for example, in which the parties must be treated with even-handedness. The law will tend to lean against a misrepresentor, for the simple reason that he has made a statement which has proved to be false.</span><br>&emsp;&emsp;<span class=\"it\">Misrepresentation exists on the borders of contract as a non-contractual wrong which goes on to result in loss occasioned by the representee&#8217;s entry into a contract. Misstatement exists beyond contract altogether. In fact negligent misstatement is a tort, and more specifically, part of the wider tort of negligence. Most of the analysis which goes into the establishment of the tort of negligence therefore applies to this action as well, albeit with certain modifications. Few of the preconditions for liability in misrepresentation <i>necessarily</i> apply to it.</span><br>&emsp;&emsp;<span class=\"it\">However, certain cases and several passages or remarks in textbooks reveal a reluctance to take the exclusively tortious nature of negligent misstatement seriously (eg. Professor Burrows&#8217; A Casebook on Contract (2<sup>nd</sup> ed, 2009) which inadmissibly refers to \u201ctortious negligent misrepresentation\u201d). <span class=\"bd\">Treitel</span> also mixes up the terminologies.</span><br>&emsp;&emsp;<span class=\"it\">Negligent misstatement must be kept entirely separate from misrepresentation. Negligent misstatement need not lead to the conclusion of a contract. It is not limited to statements of fact. It is not (technically, at least) limited to material statements, since materiality is a test which supposes later entry into a contract. A misstatement need not be proven false. It may in fact be false, but that is not a pre-condition of liability. The true requirement is that the misstatement should have caused loss to the person who relied upon it, and that it should have been negligently made.</span><br>&emsp;&emsp;<span class=\"it\">These jurisprudential differences between misrepresentations on the one hand and misstatement on the other are fundamental. That being said, the two actions are not mutually exclusive. Both may be present on the same facts, and they may be pleaded together. </span>"
    ],
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Materiality and Reliance",
    "CITATION": "Redgrave v Hurd (1881) 20 Ch D 1",
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Materiality and Reliance"
    ],
    "RELATED": [
        "Attwood v Small",
        "McCullough v Lane Fox and Partners Ltd",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "Smith v Land and House Property Corporation",
        "Henderson v Merrett Syndicates",
        "Dimmock v Hallett",
        "Keates v The Earl of Cadogan",
        "Bisset v Wilkinson",
        "Pankhania v Hackney Borough Council",
        "Edgington v Fitzmaurice",
        "Caparo Industries plc v Dickman",
        "With v O'Flanagan"
    ],
    "NUMBER": "257",
    "TYPE": "Case",
    "NAME": "Redgrave v Hurd",
    "FLAGS": [
        "Treitel"
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Negligent Misstatement: Conditions of Liability"
    ],
    "YEAR": "1964",
    "NUMBER": "258",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The appellants, who had received a large order for advertising time and space from one of their customers, Easipower, instructed their bank to request a bankers&#8217; report on the creditworthiness of Easipower from Easipower&#8217;s bankers, the respondents. The respondents provided a letter headed \u201cwithout responsibility on the part of this bank\u201d which went on to state that Easipower was \u201cconsidered good for its ordinary business engagements\u201d. The appellants relied on this in entering contracts with Easipower by which they gave the firm credit, and incurred substantial losses when Easipower subsequently went into liquidation. The appellants brought the present action in the tort of negligence against Easipower&#8217;s bankers. The respondents submitted that there was no duty of care with regard to the making of statements, or in the alternative, that any such duty had been negatived by their disclaimer of responsibility.<br>&emsp;&emsp;The House of Lords held unanimously that a duty to take care would have arisen in these circumstances had it not been prevented from doing so by the disclaimer. It had previously been thought that liability for negligent misstatement could exist only where there was a fiduciary relationship between the parties, but that view was too narrow. Where a \u201cspecial relationship\u201d existed between the parties, such that one must be taken to have assumed a responsibility to prevent negligently caused economic loss to the other, a tortious duty of care would be found.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Morris of Borth-y-Gest summed up the principle which would have been applied had responsibility not been expressly refused: \u201cMy Lords, I consider that it follows and that it should now be regarded as settled that if someone possessed of a special skill undertakes, quite irrespective of contract, to apply that skill for the assistance of another person who relies upon such skill, a duty of care will arise. The fact that the service is to be given by means of or by the instrumentality of words can make no difference. Furthermore, if in a sphere in which a person is so placed that others could reasonably rely upon his judgment or his skill or upon his ability to make careful inquiry, a person takes it upon himself to give information or advice to, or allows his information or advice to be passed on to, another person who, as he knows or should know, will place reliance upon it, then a duty of care will arise.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The language of Lord Morris, above, is significant. It makes no reference to the representing of facts, but to a quite different conception \u2013 the provision of skill, information or advice for another&#8217;s benefit. It is clear from this that negligent misstatement is effectively unrelated to misrepresentation despite the application by some commentators of the same terminology to the two actions. Negligent misstatement is entirely capable of dealing with statements of opinion, advice and belief, all of which are more problematic to characterise as representations.</span>"
    ],
    "NAME": "Hedley Byrne & Co Ltd v Heller & Partners",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Negligent Misstatement: Conditions of Liability",
    "CITATION": "Hedley Byrne &amp; Co Ltd v Heller &amp; Partners [1964] AC 465",
    "RELATED": [
        "Henderson v Merrett Syndicates",
        "Caparo Industries plc v Dickman",
        "McCullough v Lane Fox and Partners Ltd",
        "Bisset v Wilkinson",
        "Attwood v Small",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Pankhania v Hackney Borough Council",
        "With v O'Flanagan",
        "Edgington v Fitzmaurice",
        "Keates v The Earl of Cadogan",
        "Smith v Land and House Property Corporation",
        "Redgrave v Hurd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Negligent Misstatement: Conditions of Liability"
    ],
    "YEAR": "1990",
    "NUMBER": "259",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The appellants had been auditors of the accounts of a publicly listed company, Fidelity plc. The respondents, Caparo, bought shares in Fidelity in reliance upon the accounts. They later alleged that the accounts had been negligently prepared and certified, and that they would have not have bought the shares and suffered loss as a result had they known that. They asserted that the auditors had a duty of care to investors and potential investors, and that it had been breached.<br>&emsp;&emsp;The House of Lords allowed the auditors&#8217; appeal, overturning the majority decision of the Court of Appeal. Although it had been \u201cforeseeable\u201d (in the broad, law of tort sense) that shareholders including Caparo might rely on the accounts, there was nevertheless insufficient proximity between them and the auditors. To extend the auditors&#8217; duty of care to cover a use of the accounts for which they were not in fact provided would be to go beyond the principles of liability deducible from existing House of Lords authority, which required the following elements to support the imposition of a duty: (a) that the loss sustained by the claimant was foreseeable; (b) that there was sufficient proximity between the claimant and the defendant; and (c) that it was fair, just and reasonable to impose a duty of care in the circumstances.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Bridge, referring to the three elements listed above, recognised that proximity and fairness were not capable of such precise definition as to be practical tests; rather, they were labels for those features of individual situations which the law would recognise pragmatically and on a case-by-case basis as giving rise to the duty of care.<br>&emsp;&emsp;Lord Oliver of Aylmerton analysed the principles which could properly be extracted from <i>Hedley Byrne v Heller</i>:<br>&emsp;&emsp;\u201cWhat can be deduced from the <i>Hedley Byrne</i> case, therefore, is that the necessary relationship between the maker of a statement or giver of advice (&#8220;the adviser&#8221;) and the recipient who acts in reliance upon it (&#8220;the advisee&#8221;) may typically be held to exist where (1) the advice is required for a purpose, whether particularly specified or generally described, which is made known, either actually or inferentially, to the adviser at the time when the advice is given; (2) the adviser knows, either actually or inferentially, that his advice will be<br<br>&emsp;&emsp;communicated to the advisee, either specifically or as a member of an ascertainable class, in order that it should be used by the advisee for that purpose; (3)it is known either actually or<br<br>&emsp;&emsp;nferentially, that the advice so communicated is likely to be acted upon by the advisee for that purpose without independent inquiry, and (4) it is so acted upon by the advisee to his<br<br>&emsp;&emsp;detriment. That is not, of course, to suggest that these conditions are either conclusive or exclusive, but merely that the actual decision in the case does not warrant any broader propositions\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The reasons for which the ambit of the duty needs to be defined in this way will probably be obvious to any student of tort, but it may nevertheless be helpful to confirm what is probably the main one. It is already made very clear in <i>Hedley Byrne</i> itself. Negligent words, as opposed to negligent actions, have a potentially limitless reach. The risk of indeterminate liability to an indeterminate class must be avoided."
    ],
    "NAME": "Caparo Industries plc v Dickman",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Negligent Misstatement: Conditions of Liability",
    "CITATION": "Caparo Industries plc v Dickman [1990] 2 AC 605",
    "RELATED": [
        "McCullough v Lane Fox and Partners Ltd",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "Henderson v Merrett Syndicates",
        "Keates v The Earl of Cadogan",
        "Dimmock v Hallett",
        "Edgington v Fitzmaurice",
        "With v O'Flanagan",
        "Attwood v Small",
        "Smith v Land and House Property Corporation",
        "Bisset v Wilkinson",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Redgrave v Hurd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Negligent Misstatement: Conditions of Liability"
    ],
    "YEAR": "1995",
    "NUMBER": "260",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In outline, this action was part of litigation brought against managing agents in the Lloyds of London market by individual investors (\u201cnames\u201d) who alleged that the funds to which they subscribed had been negligently managed. Links between names and managing agents were of two types \u2013 direct and indirect. Of particular relevance for the application of the <i>Hedley Byrne</i> principle were the relationships between names and managing agents which were indirect in that a member&#8217;s agent stood between the two (and the name&#8217;s contract was only with the member&#8217;s agent).<br>&emsp;&emsp;The House of Lords held that the <i>Hedley Byrne</i> principle applied to both the relationships in issue in the litigation. The case has chiefly been regarded as authority, contrary to previous doctrine, that there was no principled reason why contractual and tortious liability should not exist concurrently in an action.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;As far as the further refinement of <i>Hedley Byrne</i> is concerned, the decision is significant because it vindicates the prime importance of the \u201cassumption of responsibility\u201d test in the leading case. This had come under criticism in some decisions subsequent to <i>Hedley Byrne</i>, chiefly because it came to be regarded as somewhat unrealistic and therefore misleading. In <i>Henderson v Merrett</i> Lord Goff rehabilitates this test. He goes on to explain that certain consequences follow from its affirmative nature. One is that a disclaimer of responsibility will prevent the duty of care from arising. Another is that an assumption of responsibility may well not be found where information or advice etc. is given in informal circumstances. Perhaps the most important consequence is that an assumption of responsibility makes it unnecessary to enquire whether it is \u201cfair, just and reasonable\u201d to recognise a duty of care not to cause economic loss. That question is overshadowed by the affirmative character of the assumption of responsibility.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Judicial discussion of what is meant by an \u201cassumption of responsibility\u201d does not end with this case, but it is far from being a clash between wholly opposing views. The difference is one merely of emphasis; the test undoubtedly includes an objective as well as a subjective enquiry, but while some have criticised the test because it downplays the objective view, others like Lord Goff clearly value it because its subjective framing allows it to be applied with some flexibility. All would agree that \u201cassumption\u201d must tend to mean \u201cdeemed assumption\u201d. All would also agree that any test has limited validity within this area; the truth is that the facts of individual cases are decisive, and the difficulty of deriving general principles from them can clearly be seen. </span><br>&emsp;&emsp;<span class=\"it\">The resemblance between \u201cassumption of responsibility\u201d and the test of intention in contract has been academically noticed (see Stathis Banakas, \u201cVoluntary Assumption of Tort Liability in English Law: A Paradox?\u201d InDret 4/2009). Ordinarily, tortious liability is imposed because of the relationship between the parties, irrespective of their thoughts on the subject. The parties&#8217; objectively understood intention, by contrast, is the basis of contractual liability. Negligent misstatement seems to have grown to resemble a contractual analysis. It is not imposed. It grows out of an objective assessment of the parties&#8217; dealings.</span><br>&emsp;&emsp;<span class=\"it\">A resemblance between the contractual perspective and the present action is not surprising. The circumstances in which negligent misstatement can be successfully used as a cause of action are effectively those in which it is anomalous that there is no contract linking the parties. Often, an implied contract could be found if it were not for the absence of consideration. Seen from the viewpoint of a contract lawyer, negligent misstatement presents itself as a means of doing justice where a narrow understanding of consideration prevents that being achieved through the law of contract.</span><br>&emsp;&emsp;<span class=\"it\">The next case includes substantial discussion of the development of the law since <i>Hedley Byrne</i>, but in itself it is a direct application of the ratio of the leading case \u2013 a disclaimer is a factor likely to prevent the finding that responsibility has been assumed. It is included here on the assumption that it may be helpful to see a detailed example of the court&#8217;s handling of negligent misstatement in a context far easier to grasp than that of the Lloyds litigation.</span>"
    ],
    "NAME": "Henderson v Merrett Syndicates",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Negligent Misstatement: Conditions of Liability",
    "CITATION": "Henderson v Merrett Syndicates [1995] 2 AC 145",
    "RELATED": [
        "McCullough v Lane Fox and Partners Ltd",
        "Caparo Industries plc v Dickman",
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "Smith v Land and House Property Corporation",
        "Keates v The Earl of Cadogan",
        "Dimmock v Hallett",
        "Attwood v Small",
        "Edgington v Fitzmaurice",
        "Pankhania v Hackney Borough Council",
        "With v O'Flanagan",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Redgrave v Hurd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (1)",
        "Introduction",
        "Negligent Misstatement: Conditions of Liability"
    ],
    "YEAR": "1996",
    "NUMBER": "261",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff was interested in buying a large 1930s riverside house in Chiswick. He intended to demolish it and build a new house, and therefore was not going to have it surveyed before purchase. The vendors&#8217; agent was Lane Fox, represented at all material times by Mr Scott. The plaintiff had received details of the property from Lane Fox. They contained the statement that the garden was 0.92 of an acre, and a disclaimer of responsibility. The plaintiff said that he had not studied the particulars, but that he knew that they would include disclaimers. In the course of showing the property to the plaintiff, Mr Scott repeated the statement that the garden was 0.92 of an acre. In fact, when preparing the particulars, he had misread his own notes which showed that the garden was 0.48 of an acre. After buying the property, the plaintiff discovered the true size of the garden, and brought the present action alleging negligent misstatement by Lane Fox.<br>&emsp;&emsp;The Court of Appeal held that the conditions of liability for negligent misstatement were present, save that the disclaimer in the particulars negatived the required proximity between the parties. The plaintiff&#8217;s appeal was therefore turned down.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;a name=\"para95\"></a><a name=\"para94\"></a>Hobhouse LJ explained how liability would have arisen but for the disclaimer: \u201cIn the present case there was a direct relationship between Mr Scott and Mr McCullagh. Mr Scott made the representation to Mr McCullagh: he chose to speak to him and make a factual statement which was designed to influence the decision making processes of Mr McCullagh. Mr Scott was holding himself out as a person who knew the area of the land being offered for sale, presumably because he had measured it or had supervised its measurement. He had a special knowledge which was not available to Mr McCullagh. The relation\u00adship was a business one. Mr Scott had a financial interest in influencing persons to buy the property and to buy at as high a price as could be negotiated. His remuneration, as everyone knew, was dependant upon someone agreeing to buy the land and upon the price at which that person was willing to purchase. He would be paid by way of a commission payable out of the deposit paid by the purchaser. Indirectly, he would be paid by the purchaser. The absence of a specific consideration moving directly from the representee to the representor is the only thing which prevents the rela\u00adti\u00adon\u00adship between them from being contractual. Thus far I see nothing in the structure of the transaction which would negative a duty of care to be owed by the estate agent in relation to any representation the estate agent chooses to make to the prospective purchaser for the purpose of influenc\u00ading him to buy. It is his choice to make a representation intended to influence the representee which amounts to the assumption of responsibility. It is foreseeable that such a representation may be relied on since it was intended to have the effect of influencing the prospective purchaser to buy\u2026.<br>&emsp;&emsp;a name=\"para101\"></a><a name=\"para100\"></a>On the Sunday, Mr Scott knew, or ought to have known, that his representation was likely to be relied on by Mr McCullagh. However he also knew that Mr McCullagh had the Lane Fox particulars which included <i>both</i> the relevant statement and the disclaimer. In my judgment the result of this is that the element of proximity was negatived. A reasonable person, appreciating that the statement which he was proposing to rely upon was a statement contained in the particulars and the fact that those particulars also stated that<br>&emsp;&emsp;&#8221;all statements contained in these particulars as to this property are made without responsibility on the part of Lane Fox ...&#8221;,<br>&emsp;&emsp;a name=\"para102\">would understand that there was no assumption of responsibility by Lane Fox. This understanding would be reinforced by para\u00adgraphs 3, 4 and 5 of the disclaimer. In my judgment the dis\u00adclaim\u00ader puts the present case on all fours with the actual decision in <i>Hedley Byrne </i>as explained earlier.</a<br>&emsp;&emsp;a name=\"para103\">The Judge avoided this conclusion by approaching the disclaimer as if it were a contractual exclusion. On such an approach it would need to be strictly construed and the argument was available that it did not as such cover an oral statement. But that is not, in my judgment, the right approach. It is not an exclusion to be construed. The right approach, as is made clear in <i>Hedley Byrne</i>, is to treat the existence of the disclaimer as one of the facts relevant to answering the question whether there had been an assumption of responsibility by the Defendants for the relevant statement. This question must be answered objectively by reference to what a reasonable person in the position of Mr McCullagh would have understood at the time that he finally relied upon the representation. In this context, it is obvious that the statement that the acreage of the property is 0.92 was a statement which was taken from the particulars and that the Defendants were not assuming responsi\u00adbility for that statement. The mere fact that Mr Scott, when showing Mr Mc\u00adCullagh round the property, gave the same inform\u00adation to Mr McCullagh orally would not lead a reasonable person to conclude that the Defendants were there\u00adby choosing to assume responsi\u00adbility for the statement which they said in the particulars they were not assuming responsi\u00adbility for. The sub\u00admission that such a conclusion would be reasonable is unreal. It was not supported by any evidence. Mr McCullagh said (surprisingly) that he had not bothered to read the particulars but he also said that he knew that they would contain disclaimers of the type which they in fact did. The submission was further inconsistent with paragraph 5 of the dis\u00adclaimer. The essence of the law of negligence is the application of objective standards of reason\u00adableness. By those standards, it is clear that the Defendants were not assuming responsibility for the accuracy of the statement about the acreage. The position might be different if the representation had been about something not, or not expected to be, included in the particulars\u201d.</a",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;It may seem surprising that there is apparently such a difference of approach to a contractual exemption (usually treated as a defence and sometimes read down by strict construction), and a disclaimer of responsibility (regarded here as defining or indeed negating the duty of the defendant to the plaintiff). A means of explaining this distinction is to note that a contractual exemption must be judged on its effect upon promises for the performance of which the promisee has paid. A non-contractual disclaimer is judged in relation to information gratuitously offered, and therefore deserves a less narrow construction."
    ],
    "NAME": "McCullough v Lane Fox and Partners Ltd",
    "CATEGORY": "Misrepresentation (1) &mdash; Introduction &mdash; Negligent Misstatement: Conditions of Liability",
    "CITATION": "McCullough v Lane Fox and Partners Ltd [1996] PNLR 205",
    "RELATED": [
        "Hedley Byrne & Co Ltd v Heller & Partners",
        "Caparo Industries plc v Dickman",
        "Henderson v Merrett Syndicates",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Edgington v Fitzmaurice",
        "With v O'Flanagan",
        "Attwood v Small",
        "Keates v The Earl of Cadogan",
        "Pankhania v Hackney Borough Council",
        "Redgrave v Hurd",
        "Dimmock v Hallett",
        "Bisset v Wilkinson"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (2)"
    ],
    "NUMBER": "262",
    "TYPE": "Concept",
    "NAME": "Misrepresentation (2) - Introduction",
    "CATEGORY": "Misrepresentation (2)",
    "RELATED": [
        "Common Law Bars to Rescission",
        "Fraudulent, negligent and innocent misrepresentation",
        "Section 1: treating a contract term as a misrepresentation",
        "Section 2(1)",
        "Rescission",
        "Negligent Misrepresentation",
        "Beyond section 3",
        "Innocent Misrepresentation",
        "Making the election to affirm or terminate",
        "Implication of Terms - Introduction",
        "Unfair Contract Terms Act 1977 - Introduction",
        "Implication from presumed intention (\u201cterms implied in fact\u201d)"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;The last lecture dealt with the general conditions of liability for (a) misrepresentation, and (b) negligent misstatement. By far the greater part of this lecture is confined to misrepresentation.<br>&emsp;&emsp;Its structure broadly follows that of the Misrepresentation Act 1967. This Act by no means deals comprehensively with the relevant law \u2013 far from it, in fact \u2013 but its coverage does have a certain logic which can be adopted for a general exposition of the subject. This is an unorthodox means of organising the material, but it works, and it seems preferable to a presentation in which the sections of the Act are shuffled and dispersed into a discussion focused on the common law.<br>&emsp;&emsp;Rescission, the basic remedy for misrepresentation, is easy enough to understand in principle, but both the Act and the common law place restrictions upon its availability. These are examined in turn. A great many authorities could be cited on the common law \u201cbars to rescission\u201d, but it has seemed more realistic to explain this subject as a collection of principles without multiplying the quantity of cases needing to be learnt.<br>&emsp;&emsp;The last substantive section of the Act makes attempts to exclude liability for misrepresentation subject to one of the reasonableness tests in the Unfair Contract Terms Act 1977. This provides a suitable opportunity to look more generally at the topic of exemption in this area, which is potentially fairly confusing.<br>&emsp;&emsp;The Act begins by relaxing the boundary between intra-contractual terms and extra-contractual representations, and that seems as good a starting point as any.<br>&emsp;&emsp;Questions relating to the quantification of damages for misrepresentation are among the most difficult in general contract law. For that reason they have largely been shelved as inappropriate to the GDL year&#8217;s syllabus unless they are capable of clear and generally applicable answers.<br>&emsp;&emsp;An Act to amend the law relating to innocent misrepresentations and to amend sections 11 and 35 of the Sale of Goods Act 1893.<br>&emsp;&emsp;1. Removal of certain bars to rescission for innocent misrepresentation.<br>&emsp;&emsp;Where a person has entered into a contract after a misrepresentation has been made to him, and\u2014<br>&emsp;&emsp;or both, then, if otherwise he would be entitled to rescind the contract without alleging fraud, he shall be so entitled, subject to the provisions of this Act, notwithstanding the matters mentioned in paragraphs (a) and (b) of this section."
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (2)"
    ],
    "NUMBER": "263",
    "TYPE": "Concept",
    "NAME": "Section 1: treating a contract term as a misrepresentation",
    "CATEGORY": "Misrepresentation (2)",
    "RELATED": [
        "Innocent Misrepresentation",
        "Misrepresentation (2) - Introduction",
        "Negligent Misrepresentation",
        "Beyond section 3",
        "Rescission",
        "Common Law Bars to Rescission",
        "Fraudulent, negligent and innocent misrepresentation",
        "Section 2(1)",
        "Doctrine of Implied Assumpsit",
        "Breach of contract \u2013 the basic rights",
        "Implication from presumed intention (\u201cterms implied in fact\u201d)",
        "Pre-Emptive Agreements"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Section 1: treating a contract term as a misrepresentation</span></span><br>&emsp;&emsp;In the lecture which dealt with incorporation, the point was made that the many cases on the distinction between mere representations (statements left outside the contract) and terms reflected a general desire on the part of claimants to be able to sue for damages for breach of contract rather than for misrepresentation. This reflected the fact that prior to the passing of the Misrepresentation Act 1967 there were no damages for misrepresentation unless it was fraudulent. The standard remedy for misrepresentation was rescission, which means the retroactive dismantling of the contract, and involves the return of its subject matter and the repayment of the price.<br>&emsp;&emsp;It followed that a claimant who wanted compensation for having been deprived of a good bargain would not get it, save by showing that the false pre-contractual statement had become a term of the contract. Meanwhile, rescission itself might be unavailable for misrepresentation, since there were and are formal bars to rescission (eg. the impossibility of giving back the subject matter of the contract). These will be discussed in due course.<br>&emsp;&emsp;Despite the above, it was not invariably most advantageous to prove that a representation had become a term of the contract. After all, if the contract had turned out to be a bad bargain, an action for breach of contract might result in only nominal damages. By contrast a misrepresentation action, if it lay, was likely to produce the remedy of rescission and thereby rescue the claimant from the contract.<br>&emsp;&emsp;Until the passing of the Misrepresentation Act 1967, the weight of authority was against the permissibility of treating a term as a representation. Section 1 of the Act removes any common law impediment to doing that. It does appear necessary, nevertheless, that the term should have featured in pre-contractual exchanges as a representation independently of its later incorporation into the contract. If it first appears in the contract itself, then it must continue to be treated as a term; it is nothing else.<br>&emsp;&emsp;Even this relatively simple and self-contained proposition, beyond serving as an explanation of section 1 of the Act, involves an anomaly. If it is possible to bring a misrepresentation action and seek rescission for the falsity of a statement which later became a warranty (not a condition) of the contract, the claimant seems to be able to find a way out of the contract even though no such escape lies for mere breach of warranty. Breach of warranty is compensated only by damages, not by termination. By effectively downgrading a warranty to a representation, the claimant seems to be able to assert a superior remedy.<br>&emsp;&emsp;In fact the Act includes a means of stopping this from happening, since by section 2(2) it gives a court the discretion to refuse rescission for any non-fraudulent misrepresentation where that remedy would be inappropriate. This will be examined in due course."
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (2)"
    ],
    "NUMBER": "264",
    "TYPE": "Concept",
    "NAME": "Section 2(1)",
    "CATEGORY": "Misrepresentation (2)",
    "RELATED": [
        "Common Law Bars to Rescission",
        "Negligent Misrepresentation",
        "Rescission",
        "Misrepresentation (2) - Introduction",
        "Fraudulent, negligent and innocent misrepresentation",
        "Innocent Misrepresentation",
        "Section 1: treating a contract term as a misrepresentation",
        "Beyond section 3",
        "Conditional Agreements",
        "Commercial Agreements",
        "Commentary on Lord Hoffmann's Restatement",
        "The temptation to go beyond the dictionary"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Section 2(1)</span></span><br>&emsp;&emsp;(1) Where a person has entered into a contract after a misrepresentation has been made to him by another party thereto and as a result thereof he has suffered loss, then, if the person making the misrepresentation would be liable to damages in respect thereof had the misrepresentation been made fraudulently, that person shall be so liable notwithstanding that the misrepresentation was not made fraudulently, unless he proves that he had reasonable ground to believe and did believe up to the time the contract was made the facts represented were true."
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (2)"
    ],
    "NUMBER": "265",
    "TYPE": "Concept",
    "NAME": "Fraudulent, negligent and innocent misrepresentation",
    "CATEGORY": "Misrepresentation (2)",
    "RELATED": [
        "Rescission",
        "Section 1: treating a contract term as a misrepresentation",
        "Common Law Bars to Rescission",
        "Innocent Misrepresentation",
        "Beyond section 3",
        "Misrepresentation (2) - Introduction",
        "Negligent Misrepresentation",
        "Section 2(1)",
        "Enrichment by subtraction",
        "Transmission of Acceptance",
        "Self-induced frustration",
        "Importance of Interpretation"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Fraudulent, negligent and innocent misrepresentation</span></span><br>&emsp;&emsp;Section 2(1) of the 1967 Act creates a new type of misrepresentation. It can be described, with an approach to accuracy, as \u201cnegligent misrepresentation\u201d; the minor shortcoming of that label will be seen shortly, and of course negligent misrepresentation is always to be distinguished rigorously from negligent misstatement at common law. Since section 2(1) creates this new form of liability by a means which involves reference to fraudulent misrepresentation, and it also enacts a defence which will downgrade negligent to innocent misrepresentation if it is made out by the defendant, a grasp of section 2(1) therefore requires all three types of misrepresentation to have been understood. They will be presented here in turn.<br>&emsp;&emsp;This is a sub-category of the broader tort of deceit. Deceit covers any use of fraud which causes loss to the person deceived. Fraudulent misrepresentation is present where the innocent party has entered into a contract with the fraudster. The remedies for fraudulent misrepresentation are rescission and/or damages.<br>&emsp;&emsp;The first case to be cited concerns the state of mind required for a defendant to be found fraudulent. It is worth being aware from the outset that fraud must be strictly proved, so that if there is any doubt whether that can be done on given facts it would be prudent to choose a different cause of action."
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Fradulent Misrepresentation"
    ],
    "YEAR": "1889",
    "NUMBER": "266",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendants, who were directors of a tram company, issued a prospectus for shares in connection with the opening of new tramways. In it, they stated that they had the right to power the trams mechanically instead of using horses. This was incorrect; in fact the consent of the Board of Trade was required for the use of steam or mechanical power. Consent was refused, and the company was wound up. The plaintiff, who had bought shares in the company on the strength of the prospectus, brought an action for damages for deceit.<br>&emsp;&emsp;The House of Lords held that the action must fail, since fraud had not been made out. The directors had assumed, honestly but mistakenly, that the giving of consent by the Board of Trade was a formality. This was reprehensible on their part, since they had no grounds for their assumption, but it was not dishonest.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Herschell defined the state of mind needed for fraud to be found: \u201cI think the authorities establish the following propositions: First, in order to sustain an action of deceit, there must be proof of fraud, and nothing short of that will suffice. Secondly, fraud is proved where it is shewn that a false representation has been made (1) knowingly, or (2) without belief in its truth, or (3) recklessly, careless whether it be true or false. Although I have treated the second and third as distinct cases, I think the third is but an instance of the second, for one who makes a statement under such circumstances can have no real belief in the truth of what he states. To prevent a false statement being fraudulent, there must, I think, always be an honest belief in its truth. And this probably covers the whole ground, for one who knowingly alleges that which is false, has obviously no such honest belief. Thirdly, if fraud be proved, the motive of the person guilty of it is immaterial. It matters not that there was no intention to cheat or injure the person to whom the statement was made\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Lord Herschell&#8217;s definition of fraud is fairly expansive. In practice it needs treating with care for two reasons. The first is that the heavy burden of proof for fraud discourages the making of that allegation on facts which technically fit the definition but fail to indicate a dishonest motive. The second reason for caution is that Lord Herschell spoke long before the passing of the Misrepresentation Act 1967. A reckless misrepresentation, absent the intention to cheat, would now more naturally be placed in the category of negligent misrepresentation as created by section 2(1). </span><br>&emsp;&emsp;<span class=\"it\">The next two cases concern the measure of damages which can be obtained for fraud. This is an important point for the development of an understanding of the present shape of misrepresentation, as will later appear. It is not just a matter of how to argue quantum on given facts.</span>"
    ],
    "NAME": "Derry v Peek",
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Fradulent Misrepresentation",
    "CITATION": "Derry v Peek (1889) 14 App Cas 337",
    "RELATED": [
        "Doyle v Olby (Ironmngers) Ltd",
        "East v Maurer",
        "William Sindall plc v Cambridgeshire County Council",
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "Royscot Trust v Rogerson",
        "Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "Whittington v Seale-Hayne",
        "Cremdean v Nash",
        "Gran Gelato Ltd v Richcliff (Group) Ltd",
        "Car & Universal Finance Co Ltd v Caldwell",
        "Misrepresentation - Glossary",
        "Edgington v Fitzmaurice"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Fradulent Misrepresentation"
    ],
    "YEAR": "1969",
    "NUMBER": "267",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff bought a business from the defendant, who told him fraudulently that all the activity of the business was \u201cover the counter\u201d. This was false, since half the turnover was achieved by a travelling salesman. The plaintiff made heavy losses from the business, and brought an action in the tort of deceit. He recovered \u00a31500 in damages at first instance. This award was based on the cost of \u201cmaking good the representation\u201d. The plaintiff appealed, claiming that a proper award, compensating him for all loss sustained through the transaction, was \u00a35500.<br>&emsp;&emsp;The Court of Appeal held that \u00a35500 was the correct quantum of damages. In actions for breach of contract the principle of foreseeability of loss applied to limit recovery by reference to what was within the contemplation of the parties at the time the contract was made. For reasons of justice and policy there was no equivalent limitation on the loss recoverable in the tort of deceit. The only limit on recovery is that loss must be shown to have been caused by the fraudulently induced transaction."
    ],
    "NAME": "Doyle v Olby (Ironmngers) Ltd",
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Fradulent Misrepresentation",
    "CITATION": "Doyle v Olby (Ironmngers) Ltd [1969] 2 QB 158",
    "RELATED": [
        "Derry v Peek",
        "East v Maurer",
        "Gran Gelato Ltd v Richcliff (Group) Ltd",
        "Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "Whittington v Seale-Hayne",
        "Cremdean v Nash",
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "William Sindall plc v Cambridgeshire County Council",
        "Royscot Trust v Rogerson",
        "Car & Universal Finance Co Ltd v Caldwell",
        "Misrepresentation - Glossary",
        "Grainger & Sons v Gough (Surveyor of Taxes)"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Fradulent Misrepresentation"
    ],
    "YEAR": "1991",
    "NUMBER": "268",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant owned two hair-dressing salons in Bournemouth. He sold one of them to the plaintiff, fraudulently representing to her that he had no intention of working at the other, but that he intended to set up business abroad. In fact he went on to work full-time at the second salon, and a number of his clients followed him there. The plaintiff ran the business at a loss until she managed to sell it, some years later, for much less than she had paid for it. At first instance the plaintiff received damages for the fall in the value of the business, the expenses of buying and selling it, the trading losses, improvements carried out in an attempt to make it more profitable, loss of profits and general damages for disappointment and inconvenience.<br>&emsp;&emsp;The Court of Appeal allowed the defendant&#8217;s appeal in part, reducing the damages awarded for loss of profits. Counsel for the defendant had submitted that loss of profits was not recoverable except in an action for breach of a contractual warranty as to what the profits would be. That submission was rejected, but it was nevertheless held that the trial judge had assessed loss of profits on a misconceived basis. He had considered the profit which might have been made had the plaintiff operated the salon without the defendant in close competition. The correct approach was to consider what profits might have been earned by the plaintiff had she not entered into the contract with the defendant, but had rather bought a similar business in the same area and run it in the normal way.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The distinction here between the right and the wrong approach is this. Damages will be awarded for fraudulent misrepresentation to represent the value of the hypothetical opportunity lost as a result of the plaintiff tying up money and time in the business instead of pursuing a different venture. Damages will not be awarded for the profits which would have been made through the business had there been no misrepresentation. That second and incorrect head of damage would involve treating the fraudulent misrepresentation as if it were a contractual promise which had been breached.<br>&emsp;&emsp;The correct measure of damage is therefore reliance loss, not expectation loss."
    ],
    "NAME": "East v Maurer",
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Fradulent Misrepresentation",
    "CITATION": "East v Maurer [1991] 2 All ER 733",
    "RELATED": [
        "Doyle v Olby (Ironmngers) Ltd",
        "Derry v Peek",
        "Car & Universal Finance Co Ltd v Caldwell",
        "Gran Gelato Ltd v Richcliff (Group) Ltd",
        "Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "William Sindall plc v Cambridgeshire County Council",
        "Cremdean v Nash",
        "Whittington v Seale-Hayne",
        "Royscot Trust v Rogerson",
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "Misrepresentation - Glossary",
        "Edgington v Fitzmaurice"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Negligent Misrepresentation"
    ],
    "NUMBER": "269",
    "TYPE": "Concept",
    "NAME": "Negligent Misrepresentation",
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Negligent Misrepresentation",
    "RELATED": [
        "Common Law Bars to Rescission",
        "Rescission",
        "Innocent Misrepresentation",
        "Fraudulent, negligent and innocent misrepresentation",
        "Section 1: treating a contract term as a misrepresentation",
        "Section 2(1)",
        "Misrepresentation (2) - Introduction",
        "Beyond section 3",
        "Reactions to the innominate analysis",
        "Timing.",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "The assessment of delay"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Negligent Misrepresentation</span></span><br>&emsp;&emsp;Section 2(1) of the Act begins by referring to the situation in which a person would be liable for a fraudulent misrepresentation. It goes on to provide that such a person will be so liable even though the misrepresentation was not made fraudulently. It then enacts a partial defence to such liability for the defendant who can show that he had good grounds to believe and did believe at all material times that the facts represented by him were true.<br>&emsp;&emsp;This oddly drafted provision, based on what has become known as \u201cthe fiction of fraud\u201d, creates a new misrepresentation action not previously known to the law. Clearly it is not fraudulent misrepresentation. Nor is it innocent misrepresentation since to show that the misrepresentation was innocent amounts to a defence to this new form of liability, even though liability for innocent misrepresentation will of course remain. What is left is misrepresentation accompanied by an intermediate level of culpability, short of fraud but beyond innocence. It is usual to describe this as \u201cnegligent misrepresentation\u201d, though it can also be referred to as \u201cstatutory\u201d or \u201csection 2(1)\u201d misrepresentation.<br>&emsp;&emsp;A potential if minor misunderstanding should be avoided before we take the subject any further. While it is accurate to say that negligent misrepresentation is a new action not known to the law before the passing of the 1967 Act, it would be wrong to conclude that a misrepresentation which was in fact negligently made could not be the subject of an action before 1967. It would have been regarded as an action for innocent misrepresentation, in so far as it fell short of an allegation of fraud. Alternatively, it might have been brought (and may still be brought) as an action for negligent misstatement following <i>Hedley Byrne</i>, provided the pre-conditions for that form of liability could be established \u2013 special relationship/assumption of responsibility.<br>&emsp;&emsp;To return to section 2(1) of the 1967 Act, it presents two very notable aspects.<br>&emsp;&emsp;One is that in introducing the special category of sub-fraudulent culpability, it does so by transferring the burden of <i>disproving</i> that fault to the defendant. This is quite remarkable. To assess it within the parameters of the situation pertaining prior to the Act, fraud was to be strictly proved by the plaintiff, while in the case of innocent misrepresentation there is obviously no degree of fault to be proved. The <i>Hedley Byrne</i> action, if it may be viewed as a model, places the proof of negligence where one would expect it \u2013 upon the plaintiff. The Act, in creating negligent misrepresentation, removes what might be regarded as the natural burden of proof from the plaintiff, and places it in the form of a burden of disproof upon the defendant.<br>&emsp;&emsp;The second remarkable aspect of section 2(1) is that it seems to transfer the \u201cliability\u201d for fraud, and therefore its remedies, to the new cause of action. The quantum of damages for fraudulent misrepresentation is far-reaching for policy reasons which can readily be articulated, but it is surprising that an honest misrepresentor should be liable to the same degree. Nevertheless, that has been taken to be the effect of the words \u201cshall be so liable\u201d in section 2(1). They establish that just as the remedies for fraudulent misrepresentation are rescission and/or damages with no test of foreseeability, so the same is true of negligent misrepresentation.<br>&emsp;&emsp;The next two cases provide confirmatory authority for these two aspects of section 2(1)."
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Negligent Misrepresentation"
    ],
    "YEAR": "1978",
    "NUMBER": "270",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In this action Howards sued for unpaid hire for barges which Ogden had chartered from them. Ogden counterclaimed for damages. Ogden had been preparing a tender to undertake excavation work. For this, barges were needed to transport earth for dumping at sea, and the price at which Ogden tendered was highly sensitive to the carrying capacity of the barges to be used. Howard&#8217;s employee, Mr O&#8217;Loughlin, stated the correct carrying capacity of the barges in cubic metres. He also gave the deadweight capacity as about 1600 tons. He had seen a figure somewhat above this in Lloyd&#8217;s Register. Exceptionally, Lloyd&#8217;s Register was wrong. The deadweight given by the manufacturer of the barges was 1050 tons. Mr O&#8217;Loughlin had also seen this figure, but had preferred to rely on Lloyd&#8217;s Register. Ogden based their counterclaim on collateral contract, or section 2(1) negligent misrepresentation, or negligent misstatement, in the alternative.<br>&emsp;&emsp;The Court of Appeal held by a majority that negligent misstatement failed here, and that section 2(1) negligent misrepresentation succeeded. All three judges were in agreement that there was no collateral contract.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Bridge LJ drew a distinction between the approach taken by the judge at first instance, and the approach required by section 2(1) of the 1967 Act:<br>&emsp;&emsp;\u201cIt is unfortunate that the judge never directed his mind to the question whether Mr O&#8217;Loughlin had any reasonable ground for his belief. The question he asked himself, in considering liability under the Misrepresentation Act 1967, was whether the innocent misrepresentation was negligent. He concluded that if Mr O&#8217;Loughlin had given the inaccurate information in the course of the April telephone conversation he would have been negligent to do so but that in the circumstances obtaining at the Otley interview in July there was no such negligence. I take it that he meant by this that on the earlier occasions the circumstances were such that he would have been under a duty to check the accuracy of his information, but that on later occasions he was exempt from any such duty. I appreciate the basis of this distinction, but it seems to me, with respect, quite irrelevant to any question of liability under the statute. If the representee proves a misrepresentation which, if fraudulent, would have sounded in damages, the onus passes immediately to the representor to prove that he had reasonable ground to believe the facts represented. In other words the liability of the representor does not depend upon his being under a duty of care the extent of which may vary according to the circumstances in which the representation is made. In the course of negotiations leading to a contract the statute imposes an absolute obligation not to state facts which the representor cannot prove he had reasonable ground to believe.<br>&emsp;&emsp;[I]t is to be assumed that Mr O&#8217;Loughlin was perfectly honest throughout. But the question remains whether his evidence, however benevolently viewed, is sufficient to show that he had an objectively reasonable ground to disregard the figure in the ship&#8217;s documents and to prefer the Lloyd&#8217;s Register. I think it is not. The fact that he was more interested in cubic capacity could not justify reliance on one figure of deadweight capacity in preference to another\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Negligence in tort is the failure to exercise the level of care which a situation demands. The fault which section 2(1) requires to be disproved is strictly speaking something else, and the more burdensome to disprove, because it is free of context and therefore absolute. The situation affords no qualifications or circumstantially-founded excuses.<br>&emsp;&emsp;Furthermore, the words \u201chad reasonable ground to believe and did believe\u201d tend to a similar conclusion. It is possible to envisage <i>negligence</i> being disproved simply by showing a reasonable ground for belief in the truth of what was said, even if positive belief in truth could not also be shown. For instance, a representation of law might be made about the status of a lease. Leaving out of account the problem that it might shade into opinion, perhaps the most that even (or perhaps particularly) an assiduous lawyer might feel able to affirm would be reasonable grounds for the advice, stopping short of positive belief. For the discharge of the burden shifted to the defendant by section 2(1), however, that is not enough.<br>&emsp;&emsp;For these reasons, description of the section 2(1) action as \u201cnegligent misrepresentation\u201d is not quite accurate, even though the label is often used and broadly acceptable. A lesser degree of culpability may qualify."
    ],
    "NAME": "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Negligent Misrepresentation",
    "CITATION": "Howard Marine &amp; Dredging Co Ltd v A Ogden &amp; Sons (Excavation) Ltd [1978] QB 574",
    "RELATED": [
        "Royscot Trust v Rogerson",
        "Gran Gelato Ltd v Richcliff (Group) Ltd",
        "Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "William Sindall plc v Cambridgeshire County Council",
        "East v Maurer",
        "Car & Universal Finance Co Ltd v Caldwell",
        "Derry v Peek",
        "Doyle v Olby (Ironmngers) Ltd",
        "Whittington v Seale-Hayne",
        "Cremdean v Nash",
        "Misrepresentation - Glossary",
        "With v O'Flanagan"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1991",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview </span></span><br>&emsp;&emsp;The facts are not particularly material, except insofar as they illustrate the prudent course of choosing not to allege fraud even in a case of deception. They are also arithmetically and conceptually complex. In brief, a car dealer sold a car on hire purchase, receiving a payment in return from a finance company which was then to recoup a larger sum from the car&#8217;s purchaser. The company would only enter into such transactions where the purchaser had paid a deposit of at least 20% of the purchase price of the car. The car dealer had altered the figures involved in order to misrepresent to the finance company (but for no other motive) that the 20% rule had been complied with although in reality it had not. The purchaser defaulted, and the finance company sued the dealer under section 2(1) of the Act.<br>&emsp;&emsp;The Court of Appeal rejected the defendant dealer&#8217;s claim that the loss pleaded by the finance company was too remote. This required the court to decide whether the far-reaching measure of damages for fraud, unlimited by any requirement of foreseeeability, was indeed imported into section 2(1) by the \u201cfiction of fraud\u201d. The court examined academic arguments, including those of <span class=\"bd\">Treitel</span> to the contrary, but concluded that all loss was recoverable for section 2(1) misrepresentation just as it was for fraudulent misrepresentation. Section 2(1) of the Act, in saying \u201cshall be so liable\u201d, means exactly that.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">A curious problem develops if one considers section 2(1) further (but if you feel you do not need a curious problem at this point, feel free to skip the remainder of this paragraph). <span class=\"bd\">McKendrick</span> describes the decision in Royscot Trust as \u201cextraordinary\u201d, but in fact it, and the statute, do make sense in a bizarre fashion. After all, if the defendant is unable to show that he believed his representation to be true, as section 2(1) requires of him if he is to have a defence, then the reasoning in Derry v Peek labels his misrepresentation fraudulent. He did not believe it to be true. No wonder he is to be liable as if he were fraudulent. Although section 2(1) cannot seriously be thought to create a statutory version of fraudulent misrepresentation with the burden of proof reversed, its drafting seems to cause it to overlap with Lord Herschell&#8217;s definition of fraud.</span><br>&emsp;&emsp;<span class=\"it\">In fact the next case provides some authority against taking this line of analysis too far. </span>"
    ],
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Negligent Misrepresentation",
    "CITATION": "Royscot Trust v Rogerson [1991] 2 QB 297",
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Negligent Misrepresentation"
    ],
    "RELATED": [
        "Gran Gelato Ltd v Richcliff (Group) Ltd",
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "East v Maurer",
        "Cremdean v Nash",
        "Derry v Peek",
        "William Sindall plc v Cambridgeshire County Council",
        "Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "Car & Universal Finance Co Ltd v Caldwell",
        "Doyle v Olby (Ironmngers) Ltd",
        "Whittington v Seale-Hayne",
        "Misrepresentation - Glossary",
        "Taylor v Caldwell"
    ],
    "NUMBER": "271",
    "TYPE": "Case",
    "NAME": "Royscot Trust v Rogerson",
    "FLAGS": [
        "Treitel",
        "McKendrick"
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Negligent Misrepresentation"
    ],
    "YEAR": "1992",
    "NUMBER": "272",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The facts are not of particular relevance; briefly, the case concerned a solicitor&#8217;s replies to preliminary enquiries in a conveyancing transaction. It is significant because the Vice Chancellor, Sir Donald Nicholls, made it clear that in his view liability under section 2(1) was essentially founded on negligence. On this basis, he went on to suggest that an award of damages under section 2(1) could be reduced for the contributory negligence of the representee. This is not a possibility, for obvious policy reasons, where a misrepresentation is fraudulent. The recognition that the possibility does exist in connection with section 2(1) indicates that there are limits to how far the courts will follow the \u201cfiction of fraud\u201d."
    ],
    "NAME": "Gran Gelato Ltd v Richcliff (Group) Ltd",
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Negligent Misrepresentation",
    "CITATION": "Gran Gelato Ltd v Richcliff (Group) Ltd [1992] 1 All ER 865",
    "RELATED": [
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "Royscot Trust v Rogerson",
        "Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "Car & Universal Finance Co Ltd v Caldwell",
        "Whittington v Seale-Hayne",
        "Derry v Peek",
        "East v Maurer",
        "William Sindall plc v Cambridgeshire County Council",
        "Cremdean v Nash",
        "Doyle v Olby (Ironmngers) Ltd",
        "Misrepresentation - Glossary",
        "Krell v Henry"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Innocent Misrepresentation"
    ],
    "NUMBER": "273",
    "TYPE": "Concept",
    "NAME": "Innocent Misrepresentation",
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Innocent Misrepresentation",
    "RELATED": [
        "Negligent Misrepresentation",
        "Rescission",
        "Common Law Bars to Rescission",
        "Beyond section 3",
        "Section 1: treating a contract term as a misrepresentation",
        "Section 2(1)",
        "Fraudulent, negligent and innocent misrepresentation",
        "Misrepresentation (2) - Introduction",
        "The basis of quantification",
        "Importance of Interpretation",
        "Atiyah's Understanding of Consideration",
        "Communication of Acceptance - Intro"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Innocent Misrepresentation</span></span><br>&emsp;&emsp;Innocent misrepresentation, which until the passing of the 1967 Act included any misrepresentation short of a fraudulent one, is a cause of action derived from common law. It will also subsist as a form of liability if a claimant has made section 2(1) his cause of action, but the defendant successfully establishes the partial defence within it.<br>&emsp;&emsp;The remedy for innocent misrepresentation is rescission. There is no entitlement to damages. Nevertheless, a monetary award may be ordered by a court on the very narrow basis called an indemnity. An indemnity reimburses the claimant for expenditure involved in meeting obligations imposed by the contract prior to its rescission. The next case is normally used as an example of indemnity."
    ]
},
{
    "YEAR": "1900",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff took on the lease of a farm, in part relying on innocent representations that the premises were in a thoroughly sanitary condition and in a good state of repair. It was his intention to use the farm for the raising of prize poultry. The lease imposed on him obligations to pay rents, rates, and to carry out repairs required by the local authority. He installed a flock of poultry and a manager, and discharged his obligations under the lease. In fact the premises were in such a state that the water supply was poisoned. The poultry either died or became valueless, and the farm manager fell ill. The plaintiff claimed compensation for the loss of the flock, consequential loss of profits, the manager&#8217;s medical expenses, and for the financial obligations imposed by the lease.<br>&emsp;&emsp;The court held that since damages were not available for innocent misrepresentation, most of these claims failed. An indemnity was awarded to cover the financial obligations imposed by the lease.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;It may seem strange that indemnity is being raised only here, in connection with innocent misrepresentation. Can it be that innocent misrepresentation comes, despite its venial character, with an extra remedy absent from actions for negligent or fraudulent misrepresentation? There is no reason to think so, even though indemnity is only ever discussed in the context of innocent misrepresentation. In actions for the culpable forms of misrepresentation there would almost certainly be a substantive award of damages, and the indemnity would be subsumed by that.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">In case the relationship between an indemnity and ordinary damages (whether contractual or tortious) seems arbitrary, it can be explained in this way. The rationale of an indemnity, unlike an award of damages, is not primarily to compensate. It is to prevent unjust enrichment of the defendant who would otherwise profit at the claimant&#8217;s expense. That principle distinguishes between the types of loss which were recoverable on the facts of this case, and those which were not. </span><br>&emsp;&emsp;<span class=\"it\">Students reading about this decision in <span class=\"bd\">McKendrick</span> may like to know that his discussion is legally correct, even though he has spliced the facts with those of a different case called Parsons v Uttley Ingham (1978).</span>"
    ],
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Innocent Misrepresentation",
    "CITATION": "Whittington v Seale-Hayne (1900) 82 LT 49",
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Innocent Misrepresentation"
    ],
    "RELATED": [
        "William Sindall plc v Cambridgeshire County Council",
        "Royscot Trust v Rogerson",
        "Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "Doyle v Olby (Ironmngers) Ltd",
        "Car & Universal Finance Co Ltd v Caldwell",
        "Gran Gelato Ltd v Richcliff (Group) Ltd",
        "East v Maurer",
        "Derry v Peek",
        "Cremdean v Nash",
        "Misrepresentation - Glossary",
        "Davis Contractors Ltd v Fareham Urban District Council"
    ],
    "NUMBER": "274",
    "TYPE": "Case",
    "NAME": "Whittington v Seale-Hayne",
    "FLAGS": [
        "McKendrick"
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Rescission"
    ],
    "NUMBER": "275",
    "TYPE": "Concept",
    "NAME": "Rescission",
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Rescission",
    "RELATED": [
        "Negligent Misrepresentation",
        "Innocent Misrepresentation",
        "Common Law Bars to Rescission",
        "Section 2(1)",
        "Fraudulent, negligent and innocent misrepresentation",
        "Section 1: treating a contract term as a misrepresentation",
        "Misrepresentation (2) - Introduction",
        "Beyond section 3",
        "Consideration Must Be Requested",
        "Unilateral Mistake",
        "Mutual Mistake",
        "Onerous or unusual clauses"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Rescission</span></span><br>&emsp;&emsp;Rescission, as is probably now clear, is the basic remedy for misrepresentation whether fraudulent, negligent, or innocent. Rescission is not available for negligent misstatement at common law; bear in mind that there may well be nothing to rescind through that action, since it does not require the claimant to have entered into a contract with the defendant. Even if there is a contract, it cannot be rescinded for negligent misstatement. The sole remedy obtained through that action is damages in the tort of negligence.<br>&emsp;&emsp;Rescission is a drastic remedy, since it undoes the contract and restores the parties to the position in which they would have been had they not entered it. The rationale for this is that the making of the contract was consequent upon a wrong.<br>&emsp;&emsp;That is not to say that the contract itself is tainted so that it must necessarily be rescinded. It is voidable. This means that the claimant has the option of rescinding or \u201cavoiding\u201d the contract, subject to any statutory or common law impediments to rescission. The claimant cannot be obliged to rescind the contract, however.<br>&emsp;&emsp;For fraudulent or negligent misrepresentation, where the court has power to make an award of damages, the claimant may seek rescission alone, or damages alone, or rescission and damages. If rescission and damages are granted, then the fact of rescinding the contract is likely to reduce the quantum of damages which can properly be recovered. After all, certain losses will cease to accumulate from the time that the contract is rescinded.<br>&emsp;&emsp;Rescission may be achieved informally, without the court&#8217;s involvement, or it may take place by order of the court. The following case gives guidance on what will be deemed to amount to rescission, informally exercised."
    ]
},
{
    "YEAR": "1965",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff had obtained a car, in good faith and without notice of any defect in title, at the end of a long chain of transactions which began with the car being fraudulently acquired from its original owner (the defendant in these proceedings) by means of a cheque later dishonoured. The plaintiff, as a bona fide purchaser for value without notice of the fraud, would have obtained good title to the car provided the original owner had not rescinded his contract with the fraudster before the plaintiff acquired the car. The defendant argued that he had validly rescinded the contract in time by giving notice of his intention to do so to the police and the AA.<br>&emsp;&emsp;The Court of Appeal held unanimously that the contract had been rescinded by this means. Although, in view of modern communications, rescission would normally be deemed to require contact to have been made with the representor, this could not be done if that person had absconded. Provided the representee has established on objective grounds that he has made a final and irrevocable decision to rescind, that is sufficient.<br>&emsp;&emsp;The following remarks are highly technical, and included here only to address any concern which some may feel over the relationship between rescission and termination. As usual, there is no requirement to read them.<br>&emsp;&emsp;How does termination of contract relate to rescission? In the glossary at the head of the first lecture on misrepresentation, and prior to that, it has been suggested that termination for breach of condition stops a contract in its tracks, while rescission is as stated above. In other words, they are to be rigorously differentiated. The difficulty is that termination of contract in the context of the sale or supply of goods can now be seen to look puzzlingly like rescission. Breach of condition prima facie entitles the buyer or transferee to send the goods back and claim for the price. Yet this is never called \u201crescission\u201d, and the idea of rescission for breach of contract makes no sense at all despite the tendency of some judges to use the verb \u201cto rescind\u201d beyond its proper context.<br>&emsp;&emsp;The following is based partly on passages in the texts of <span class=\"bd\">Treitel</span>, Cheshire &amp; Fifoot, and Anson on Contract, and partly on independent analysis. A buyer or transferee acquiring goods which breach a condition of the contract does indeed \u201cterminate performance\u201d through refusing to pay. If no payment is to be made for the goods, then they must be returned, or the buyer/transferee will have been unjustly enriched. If payment has already been made, then the subsequent return of the goods triggers a \u201ctotal failure of consideration\u201d since that party is now left without either the goods or the expenditure made to acquire them. The buyer/ transferee has nothing to show for the payment made. That subjects the other party to a restitutionary obligation to refund the payment.<br>&emsp;&emsp;This looks like rescission. In fact, it is a combination of termination of contract with restitutionary principles.<br>&emsp;&emsp;(2) Where a person has entered into a contract after a misrepresentation has been made to him otherwise than fraudulently, and he would be entitled, by reason of the misrepresentation, to rescind the contract, then, if it is claimed, in any proceedings arising out of the contract, that the contract ought to be or has been rescinded, the court or arbitrator may declare the contract subsisting and award damages in lieu of rescission, if of opinion that it would be equitable to do so, having regard to the nature of the misrepresentation and the loss that would be caused by it if the contract were upheld, as well as to the loss that rescission would cause to the other party.<br>&emsp;&emsp;(3) Damages may be awarded against a person under subsection (2) of this section whether or not he is liable to damages under subsection (1) thereof, but where he is so liable any award under the said subsection (2) shall be taken into account in assessing his liability under the said subsection (1).<br>&emsp;&emsp;Section 2(2) is clumsily drafted, but comprehensible in at least most of its effects. Once again, like section 2(1) it refers to fraudulent misrepresentation, but here does so only to affirm that fraudulent misrepresentation is beyond its reach.<br>&emsp;&emsp;In the case of fraudulent misrepresentation, rescission is available as of right, providing it is not barred by any of the common law obstacles considered below.<br>&emsp;&emsp;In the case of non-fraudulent misrepresentation (negligent or innocent), the Act gives the court a discretion. The court may refuse to allow rescission. In place of rescission, it may make an award of damages to reflect the fact that the claimant is to be permanently saddled with the contract.<br>&emsp;&emsp;For negligent misrepresentation, the damages awarded in the tort of deceit (on the fiction of fraud) may be supplemented by a further award to reflect the fact that the court has disallowed rescission.<br>&emsp;&emsp;For innocent misrepresentation, an award of damages to reflect the fact that the court has disallowed rescission will be the only compensatory award, though it may be joined with a reimbursing indemnity as discussed earlier.<br>&emsp;&emsp;This is the situation produced by the subsection (though the foregoing explanation does not address at least one of the finer points). The main question is when a court will exercise its discretion to refuse rescission for negligent or innocent misrepresentation, giving damages in lieu. The next case is the leading authority."
    ],
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Rescission Generally",
    "CITATION": "Car &amp; Universal Finance Co Ltd v Caldwell [1965] 1 QB 525",
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Rescission Generally"
    ],
    "RELATED": [
        "William Sindall plc v Cambridgeshire County Council",
        "Whittington v Seale-Hayne",
        "Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "Cremdean v Nash",
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "East v Maurer",
        "Doyle v Olby (Ironmngers) Ltd",
        "Derry v Peek",
        "Royscot Trust v Rogerson",
        "Gran Gelato Ltd v Richcliff (Group) Ltd",
        "Misrepresentation - Glossary",
        "Mountford v Scott"
    ],
    "NUMBER": "276",
    "TYPE": "Case",
    "NAME": "Car & Universal Finance Co Ltd v Caldwell",
    "FLAGS": [
        "Treitel"
    ]
},
{
    "YEAR": "1994",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff was a development company which had agreed to buy land from the County Council for more than 5 million pounds. During negotiations, the Council represented (in reply to a request for information) that there were no easements affecting the property other than those already disclosed in the draft contract. In fact, some months after the contract was concluded, it was found that a sewer crossed the land. By this time the land had halved in value for unconnected reasons. The judge at first instance held that there had been a misrepresentation, and granted the plaintiff a declaration that the contract had been rescinded.<br>&emsp;&emsp;The Court of Appeal held that there had been no misrepresentation, but went on to discuss whether rescission could properly have been claimed had there been one. The view taken was that rescission would have been disproportionate, so that the court would have used its discretion under section 2(2) to refuse it and make an award of damages in lieu.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;<span class=\"bd\">Hoffmann</span> LJ cited the Law Commission&#8217;s 1962 report in which it made recommendations for reform of the law on rescission. Among these, it was suggested that just as specific performance is not awarded when damages would be an adequate remedy, so the same relationship should pertain between rescission and damages. <span class=\"bd\">Hoffmann</span> LJ went on to list three factors which should affect the court&#8217;s exercise of its discretion under section 2(2) of the 1967 Act. These were (a) the importance of the misrepresentation in the overall context of the contract (here, the misrepresentation needed expenditure of only \u00a318,000 to be remedied; (b) the loss that would be caused by the misrepresentation if the contract were upheld; and (c) the loss which would be caused by rescission.<br>&emsp;&emsp;The case also includes discussion of the measure of damages to be awarded in lieu of rescission, but that is a matter for specialist study and will be taken no further here."
    ],
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Rescission Generally",
    "CITATION": "William Sindall plc v Cambridgeshire County Council [1994] 1 WLR 1016",
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Rescission Generally"
    ],
    "RELATED": [
        "Car & Universal Finance Co Ltd v Caldwell",
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "Royscot Trust v Rogerson",
        "Gran Gelato Ltd v Richcliff (Group) Ltd",
        "Cremdean v Nash",
        "Doyle v Olby (Ironmngers) Ltd",
        "East v Maurer",
        "Whittington v Seale-Hayne",
        "Derry v Peek",
        "Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "Misrepresentation - Glossary",
        "Bisset v Wilkinson"
    ],
    "NUMBER": "277",
    "TYPE": "Case",
    "NAME": "William Sindall plc v Cambridgeshire County Council",
    "FLAGS": [
        "Hoffman"
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Common Law Bars to Rescission"
    ],
    "NUMBER": "278",
    "TYPE": "Concept",
    "NAME": "Common Law Bars to Rescission",
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Common Law Bars to Rescission",
    "RELATED": [
        "Innocent Misrepresentation",
        "Rescission",
        "Negligent Misrepresentation",
        "Section 1: treating a contract term as a misrepresentation",
        "Fraudulent, negligent and innocent misrepresentation",
        "Beyond section 3",
        "Section 2(1)",
        "Misrepresentation (2) - Introduction",
        "Further aspects of the remedial scheme",
        "Acceptance By Conduct",
        "Penalties/Agreed sums payable on breach",
        "Importance of Interpretation"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Common Law Bars to Rescission</span></span><br>&emsp;&emsp;As stated in the introduction, it seems unnecessary to cite cases on this subject for the sake of it. For the purposes of this year, the aim is to know what the bars to rescission are in principle. If the need to research any of them further should arise, all the full-length textbooks refer to authorities from which a more detailed understanding can be developed.<br>&emsp;&emsp;Since misrepresentation renders a contract voidable, the representee must choose whether to use this remedy or not once he has become aware of the facts justifying rescission. The situation resembles the election to be made upon breach of condition (whether to terminate the contract or not). Here, as there, the election once made is binding.<br>&emsp;&emsp;There is some doubt whether lapse of time after discovery of the truth and before a purported rescission is a bar to rescission in its own right, or merely evidence from which affirmation can be deduced. Furthermore, a distinction is to be drawn between cases of fraudulent and non-fraudulent misrepresentation. In the first case, time runs from discovery of the fraud. In the second case, time appears to run from the date of the contract.<br>&emsp;&emsp;Since rescission is not an automatic consequence of misrepresentation, but is at the option of the representee, it may be defeated by the claim to security of another&#8217;s subsequent transaction involving the property. Where a third party has acquired a bona fide claim to the property for value, that prevents rescission. This will be so notwithstanding that the original contract was induced by fraudulent misrepresentation.<br>&emsp;&emsp;For rescission to be available, it must be possible to give back what passed under the contract. If, for example, goods have been consumed or much altered after delivery to the representee, they cannot be returned. If only minor alteration has taken place, the court in its equitable jurisdiction may order a monetary adjustment to be made in order to achieve the equivalent of full restitution in the changed circumstances.<br>&emsp;&emsp;3 Avoidance of provision excluding liability for misrepresentation.<b>E+W</b<br>&emsp;&emsp;(a) any liability to which a party to a contract may be subject by reason of any misrepresentation made by him before the contract was made; or<br>&emsp;&emsp;(b) any remedy available to another party to the contract by reason of such a misrepresentation,<br>&emsp;&emsp;that term shall be of no effect except in so far as it satisfies the requirement of reasonableness as stated in section 11(1) of the Unfair Contract Terms Act 1977; and it is for those claiming that the term satisfies that requirement to show that it does.<br>&emsp;&emsp;2) This section does not apply to a term in a consumer contract within the meaning of Part 2 of the Consumer Rights Act 2015 (but see the provision made about such contracts in section 62 of that Act).<br>&emsp;&emsp;In its final substantive section the 1967 Act returns to a standard style of drafting, and the effect of section 3 is fairly clear. A contractual clause exempting or restricting liability for pre-contractual misrepresentation is subject to the reasonableness test in section 11(1) of the Unfair Contract Terms Act 1977 (that is the sub-section which deals with the reasonableness of contractual terms), or the equivalent in the 2015 Act in the case of a consumer contract.<br>&emsp;&emsp;Section 3 is deemed to apply only to liability for negligent or innocent misrepresentation. In the case of fraudulent misrepresentation, the common law has taken the position on public policy grounds that the exclusion of liability is ineffective (see <i>S. Pearson &amp; Son Ltd v Dublin Corporation</i> (1907)). The position with regard to attempts to exclude liability for the fraud of agents is less clear, but will not be considered further here.<br>&emsp;&emsp;The main issue which has arisen as a result of section 3 concerns clauses which could arguably be said to exclude or restrict liability, or which could alternatively be argued to prevent liability for misrepresentation arising in the first place.<br>&emsp;&emsp;The debate repeats the difference of approach which can be taken to ordinary exemption clauses providing a defence against actions for breach of contract (or, as some would have it, preventing breach from occurring in the first place in so far as they restrict the primary obligations undertaken pursuant to the contract). It is worth recalling the line taken here earlier in that regard. The mainstream attitude to such clauses is that they should be construed as potential defences. To regard them as restricting contractual obligations ab initio is to risk depriving the 1977 Act of the protective effect which Parliament meant it to have.<br>&emsp;&emsp;In the case of misrepresentation, however, these arguments may be more finely balanced. Representations may be made in the course of pre-contractual negotiations not only by the principal, but also by the principal&#8217;s agent or agents. The sources of potential liability for misrepresentation are somewhat broader than those of potential contractual liability. Protective drafting to restrict them may well be more readily defensible."
    ]
},
{
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Exemption of Liability For Misrepresentation"
    ],
    "YEAR": "1974",
    "NUMBER": "279",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs sought specific performance against the defendants, who were refusing to proceed with the purchase of a property bought at auction. Before the auction took place, the auctioneers had told the defendants that the local authority had no plans for the property and were not likely to seek compulsory purchase of it. After the defendants had secured the property at auction, they were told by the local authority that it was to be included in a slum clearance scheme. The auctioneers&#8217; conditions of sale included the clause: \u201cThe vendors do not make or give and neither the auctioneers nor any person in the employment of the auctioneers has any authority to make or give any representation or warranty in relation to [the property]\u201d. The defendants argued that this clause should be understood as one excluding liability for misrepresentation, and that it was therefore to be subject to the test of reasonableness.<br>&emsp;&emsp;The court held that the clause was not to be understood in this way. It alerted bidders to the placing of a limit on the auctioneers&#8217; otherwise ostensible authority to make representations. For that reason it did not come within section 3 of the 1967 Act, and was not made subject to the reasonableness test.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The auctioneers were selling multiple lots on a regular basis. Unless they were to commit themselves to silence on the subject of what they were auctioning, which would seem a disproportionate solution, it made sense to warn bidders to take their statements about properties in context."
    ],
    "NAME": "Overbrooke Estates Ltd v Glencombe Properties Ltd",
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Exemption of Liability For Misrepresentation",
    "CITATION": "Overbrooke Estates Ltd v Glencombe Properties Ltd [1974] 1 WLR 1355",
    "RELATED": [
        "Cremdean v Nash",
        "Gran Gelato Ltd v Richcliff (Group) Ltd",
        "Doyle v Olby (Ironmngers) Ltd",
        "East v Maurer",
        "Royscot Trust v Rogerson",
        "Car & Universal Finance Co Ltd v Caldwell",
        "William Sindall plc v Cambridgeshire County Council",
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "Whittington v Seale-Hayne",
        "Derry v Peek",
        "Misrepresentation - Glossary",
        "Chartbrook Ltd v Persimmon Homes Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (2)",
        "Misreprentation Act  1967",
        "Exemption of Liability For Misrepresentation"
    ],
    "YEAR": "1977",
    "NUMBER": "280",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs bought two properties from the defendants, and were now seeking rescission of the contracts for misrepresentation. The defendants&#8217; invitation to tender document had contained a statement of the total lettable office space for which there was planning permission. The true figure was lower. The same document also contained the following:<br>&emsp;&emsp;(a) These particulars are prepared for the convenience of an intending purchaser or tenant and although they are believed to be correct their accuracy is not guaranteed and any error, omission or misdescription shall not annul the sale or be grounds on which compensation may be claimed and neither do they constitute any part of an offer of a contract.<br>&emsp;&emsp;(b) Any intending purchaser or tenant must satisfy himself by inspection or otherwise as to the correctness of each of the statements contained in these particulars\u201d.<br>&emsp;&emsp;The defendants argued that this clause had the effect of preventing anything stated by them from amounting to a representation in law. If that were so, the clause was not an attempt to exclude liability for misrepresentation, and was therefore not subject to the reasonableness test imposed by section 3 of the 1967 Act.<br>&emsp;&emsp;The Court of Appeal, rejecting this argument, held that the clause was subject to section 3. It was one thing for a principal, as in <i>Overbrooke v Glencombe</i>, to limit his agents&#8217; authority to make representations. It was a wholly different thing for a party to claim that representations clearly made by him were not representations. It amounted to an attempt to limit liability, and therefore was within the scope of section 3.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Scarman LJ explained why he thought the vendors&#8217; case was fallacious: \u201c[T]he case for the appellant does have an audacity and a simple logic which I confess I find attractive. It runs thus: a statement is not a representation unless it is also a statement that what is stated is true. If in context a statement contains no assertion, express or implied, that its content is accurate, there is no representation. Ergo, there can be no misrepresentation; ergo the Misrepresentation Act 1967 cannot apply to it. Humpty Dumpty would have fallen for this argument. If we were to fall for it, the Misrepresentation Act would be dashed to pieces which not all the King&#8217;s lawyers could put together again\u201d."
    ],
    "NAME": "Cremdean v Nash",
    "CATEGORY": "Misrepresentation (2) &mdash; Misreprentation Act  1967 &mdash; Exemption of Liability For Misrepresentation",
    "CITATION": "Cremdean v Nash (1977) 244 EG 547",
    "RELATED": [
        "Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "Car & Universal Finance Co Ltd v Caldwell",
        "Royscot Trust v Rogerson",
        "Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "Derry v Peek",
        "Whittington v Seale-Hayne",
        "Gran Gelato Ltd v Richcliff (Group) Ltd",
        "East v Maurer",
        "William Sindall plc v Cambridgeshire County Council",
        "Doyle v Olby (Ironmngers) Ltd",
        "Misrepresentation - Glossary",
        "Thornton v Shoe Lane Parking"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Misrepresentation (2)"
    ],
    "NUMBER": "281",
    "TYPE": "Concept",
    "NAME": "Beyond section 3",
    "CATEGORY": "Misrepresentation (2)",
    "RELATED": [
        "Common Law Bars to Rescission",
        "Rescission",
        "Misrepresentation (2) - Introduction",
        "Innocent Misrepresentation",
        "Section 2(1)",
        "Fraudulent, negligent and innocent misrepresentation",
        "Section 1: treating a contract term as a misrepresentation",
        "Negligent Misrepresentation",
        "The basics",
        "Lord Denning's invention of common mistake in equity",
        "Offer Distinguished From Invitation to Treat",
        "Entire and severable obligations"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Beyond section 3</span></span><br>&emsp;&emsp;Section 3 clearly applies only to exclusions of liability for misrepresentation which have been incorporated into the contract between the parties. It is natural and proper to wonder about the effect, if any, of exemptions which have not been incorporated. Unhelpfully, the textbooks ignore the issue.<br>&emsp;&emsp;In the case of exemptions from liability for breach, there would be no issue to be examined unless they were validly incorporated. Liability for breach arises from the contract and can only be negatived by the contract, or by some other document which is to be construed with the contract. Liability for misrepresentation does not arise from the contract. Therefore it would seem doubtful to assert that it can only be modified or exempted by a contractual term.<br>&emsp;&emsp;If a party makes a representation, but accompanies it with a warning that the other must not rely on it, it is hard to see why the law should refuse to allow that warning any effect. If it is thought that <i>Cremdean v Nash</i> gives grounds for asserting precisely that, then it will be necessary to reconcile that case with the attitude of the law in negligent misstatement. <i>Hedley Byrne</i> and <i>McCullagh v Lane Fox</i> both recognise that an express disclaimer does have legal effect in so far as it is likely to negative any assumption of responsibility. It is taken at face value.<br>&emsp;&emsp;Misrepresentation is conditioned upon both materiality and reliance. If a representation is made, but accompanied by a non-contractual warning that it should not affect the mind of the representee, why should it not be given effect?<br>&emsp;&emsp;If the representation is negligent, then the non-contractual warning can be dealt with by section 2(2) of the Unfair Contract Terms Act 1977, which makes the exclusion or restriction of liability for negligence by a contract term <i>or by a notice</i> subject to a reasonableness test. The fears expressed in <i>Cremdean v Nash</i> would therefore have no application here.<br>&emsp;&emsp;If the representation is innocent, then the 1977 Act does not provide a means of controlling the effect of a non-contractual warning about it. It would be for the common law, in a proper case, to follow its own logic by accepting that such a warning could undermine the materiality of a representation. If that threatened injustice, the relevant caselaw is flexible enough to allow positive proof of reliance despite the reduction in materiality.<br>&emsp;&emsp;It may be helpful to sum up the crucial points on exclusions as concisely as possible, since the foregoing discussion has been an involved one:<br>&emsp;&emsp;Fraudulent misrepresentation: principal&#8217;s liability for fraud cannot be excluded.<br>&emsp;&emsp;Non-fraudulent misrepresentation: exclusion must be reasonable (section 3 MRA).<br>&emsp;&emsp;Negligent misstatement: disclaimer of responsibility may prevent a duty of care arising.<br>&emsp;&emsp;Non-fraudulent misrepresentation: exclusion of negligence liability may be subject to section 2(2) UCTA; exclusion of non-negligent liability may go to materiality of representation."
    ]
},
{
    "CATEGORIES": [
        "Mistake"
    ],
    "NUMBER": "282",
    "FLAGS": [
        "Denning"
    ],
    "TYPE": "Concept",
    "NAME": "Mistake - Introduction",
    "CATEGORY": "Mistake",
    "RELATED": [
        "Lord Denning's invention of common mistake in equity",
        "The special cases",
        "Moving on from Bell",
        "Common Mistake",
        "Common mistake as to the subject-matter of the contract",
        "Unilateral Mistake",
        "The fraud cases",
        "Mutual Mistake",
        "The circumstances of frustration",
        "Rules of Sufficiency",
        "The function of exemption clauses",
        "Conditions"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;Mistake is often thought of as a difficult subject. Its reputation is partially justified. One aspect of its difficulty is that there is no unified doctrine of mistake. The area is dealt with by principles derived largely from elsewhere, and they differ according to the type of mistake in question. A second cause of difficulty is the law&#8217;s reliance on two or three distinctions which have proven hard to apply consistently to facts.<br>&emsp;&emsp;However, while the difficulties are real, they are not so formidable as to rule out a concise introductory account of the subject.<br>&emsp;&emsp;Where mistake has left the parties at cross purposes, it negatives agreement (this is \u201c<b>mutual mistake</b>\u201d). One thought he offered peas; the other thought he accepted beans. Unless there is an objective means of ascertaining what the subject matter of the contract was meant to be, the contract is void.<br>&emsp;&emsp;Where one party mistakenly deals with an interloper rather than his intended contractual partner, agreement is again negatived (this is \u201c<b>unilateral mistake</b>\u201d). It was X who was offered peas, but Y purported to accept that offer, masquerading as X. The contract may be void or it may be merely voidable, depending on some rather fine distinctions.<br>&emsp;&emsp;Where the parties have dealt on the basis of a fundamental misapprehension as to the subject matter of their contract, consent is nullified (this is \u201c<b>common mistake</b>\u201d). They thought they were dealing in peas, but in fact the peas turned out to be beans. The contract is void, because the parties had no intention to contract as in fact they did.<br>&emsp;&emsp;In unilateral mistake, the one party&#8217;s misapprehension will often be found to be not a matter of the other&#8217;s identity as such, but rather of some attribute which the other represented himself to have (eg. the honest intention to pay). In that case, the contract will not be void; it will be voidable for fraudulent misrepresentation. This area has proved to be highly problematic.<br>&emsp;&emsp;In common mistake, there has been much discussion of how fundamental the parties&#8217; shared misapprehension must be in order to justify avoidance of the contract. An equitable easing of the situation by Lord <span class=\"bd\">Denning</span> lasted 50 years, but has fairly recently been declared bad law."
    ]
},
{
    "CATEGORIES": [
        "Mistake"
    ],
    "NUMBER": "283",
    "TYPE": "Concept",
    "NAME": "Mutual Mistake",
    "CATEGORY": "Mistake",
    "RELATED": [
        "The fraud cases",
        "Common Mistake",
        "Common mistake as to the subject-matter of the contract",
        "Moving on from Bell",
        "The special cases",
        "Unilateral Mistake",
        "Mistake - Introduction",
        "Lord Denning's invention of common mistake in equity",
        "Negligent Misrepresentation",
        "The temptation to go beyond the dictionary",
        "Materiality and reliance",
        "Intention to Create Legal Relations - Conclusion"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Mutual Mistake</span></span><br>&emsp;&emsp;Mutual mistake is obscurely labelled, with the result that the label has often been misapplied. Properly it denotes the situation in which the parties misunderstand each other, so that they are at cross-purposes. It is sometimes said that two mistakes are therefore being made, one by each party.<br>&emsp;&emsp;The real questions where the parties are at cross-purposes are (a) whether this misunderstanding amounts to a flaw in their contract, or is nothing more than private misapprehension; (b) whether it matters that one party may be more to blame for the misunderstanding than the other; and (c) whether the matrix of fact allows a court to identify the more probable understanding, and therefore to overcome the ambiguity.<br>&emsp;&emsp;If the ambiguity does attach to the terms of the agreement and cannot be overcome, then the contract is void. This can be put in terms of a mismatch of offer and acceptance or, if it fits the facts better, in terms of vagueness rendering the contract unenforceable.<br>&emsp;&emsp;The first in the short line of cases debating the predicament lacks a reasoned judgment and is therefore of somewhat limited value. Nevertheless, it is traditionally given pride of place."
    ]
},
{
    "YEAR": "1864",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The parties&#8217; contract provided that the one would deliver and the other would accept 125 bales of Surat cotton \u201cto arrive <i>ex Peerless</i> from Bombay\u201d. The defendants refused to accept the consignment, and the plaintiff brought an action for damages. The question for the court was whether it was permissible, in terms of evidence and substance, for the defendants to plead at trial that they understood the contract as referring to the ship <i>Peerless</i> sailing from Bombay in October, whereas the plaintiffs had landed cargo only from a second ship, also called <i>Peerless</i>, which had sailed from Bombay in December.<br>&emsp;&emsp;Counsel for the defendants submitted that the case was one of latent ambiguity, so that there was no <i>consensus ad idem</i> and therefore no contract. The court gave judgment for the defendants, without stating reasons for the decision. Nevertheless, in the course of argument Pollock CB intervened to say that the question whether the parties were or were not referring to the same <i>Peerless</i> was a matter of evidence for the jury (and therefore a matter on which a finding of fact should be made at trial). That could be regarded as the case&#8217;s ratio.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The crucial issue here was whether the true identity of the ship was a matter which the contract was meant to settle, or whether it was nothing more than two subjective and inconsistent assumptions existing in the minds of the parties. If it was the former, then the parties&#8217; agreement was indeed void for latent ambiguity. If it was the latter, then the case appears to be wrongly decided, because a mismatch of the parties&#8217; subjective perceptions does not affect the status of their agreement; see Smith v Hughes. As <span class=\"bd\">McKendrick</span> explains, the case has been used by those who wish the law to require true (subjective) agreement between the parties, and has been criticised by supporters of the orthodox (objective) understanding of agreement.</span><br>&emsp;&emsp;<span class=\"it\">An enquiry which seems not to have been canvassed by commentators consists in asking whether it would matter much to the parties whether the ship was to sail in October or December. When the difference is put in terms of the arrival time of a substantial consignment of raw materials, be it for manufacturing or for resale, the natural assumption is that it would matter. It probably was meant to be settled by the contract, but in fact the contract left it fatally unclear. </span>"
    ],
    "CATEGORY": "Mistake &mdash; Mutual Mistake",
    "CITATION": "Raffles v Wichelhaus (1864) 2 H &amp; C 906",
    "CATEGORIES": [
        "Mistake",
        "Mutual Mistake"
    ],
    "RELATED": [
        "Falck v Williams",
        "Denny v Hancock",
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Lewis v Averay",
        "Associated Japanese Bank (International) Ltd v Credit du Nord",
        "Shogun Finance v Hudson",
        "McRae v Commonwealth Disposals Commission",
        "Solle v Butcher",
        "Bell v Lever Bros Ltd",
        "Boulton v Jones",
        "Cooper v Phibbs",
        "Phillips v Brooks"
    ],
    "NUMBER": "284",
    "TYPE": "Case",
    "NAME": "Raffles v Wichelhaus",
    "FLAGS": [
        "McKendrick"
    ]
},
{
    "CATEGORIES": [
        "Mistake",
        "Mutual Mistake"
    ],
    "YEAR": "1900",
    "NUMBER": "285",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The parties corresponded by telegraph, using a code. The plaintiff&#8217;s agent used the code carelessly, omitting a vital comma which would have made it clear to which sentence a particular word belonged. The parties supposed themselves to be in agreement, but in fact the plaintiff understood the contract to be for the carriage of copra from Fiji to the United Kingdom, whereas the defendant thought that it concerned the carriage of shale from Sydney to Barcelona. The plaintiff failed in the Supreme Court of New South Wales, and on appeal to the Privy Council.<br>&emsp;&emsp;The court held that the message was ambiguous. The plaintiff was therefore unable to prove that his understanding of it was more likely than the competing version. According to Lord Macnaghten, the defendant would have faced the same insuperable problem had he been bringing an action.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Smith &amp; Thomas (<i>A Casebook on Contract</i>) pointedly ask whether the reader agrees with Lord Macnaghten&#8217;s dictum above. Their question is an allusion to the fact that some would decide cases of this kind against the party who bears the greater responsibility for the misunderstanding.<br>&emsp;&emsp;To have a matter of contractual interpretation turn on fault tends to be dubious, even if on one level it seems to accord with a straightforward notion of justice. Where the court has nothing more than the parties&#8217; competing understandings of what their \u201cagreement\u201d was, and no means by which to regard one understanding as more probably the contract&#8217;s true sense than the other, it is hard to resist the conclusion that neither party can prove his version of that agreement to the required standard. The predicament may be more the fault of one than the other, but it would remain essentially arbitrary to reject the culpable party&#8217;s interpretation in order to penalise carelessness. The matter properly turns on proof, not fault.<br>&emsp;&emsp;Nevertheless, there are cases in which discussion of fault seems central to the judgments. At least one of them deserves to be looked at briefly."
    ],
    "NAME": "Falck v Williams",
    "CATEGORY": "Mistake &mdash; Mutual Mistake",
    "CITATION": "Falck v Williams [1900] AC 176",
    "RELATED": [
        "Raffles v Wichelhaus",
        "Denny v Hancock",
        "Phillips v Brooks",
        "Shogun Finance v Hudson",
        "Solle v Butcher",
        "Cundy v Lindsay",
        "Lewis v Averay",
        "Bell v Lever Bros Ltd",
        "King's Norton Metal v Edridge",
        "Cooper v Phibbs",
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Ingram v Little"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Mistake",
        "Mutual Mistake"
    ],
    "YEAR": "1870",
    "NUMBER": "286",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant bid for a property but declined to complete the purchase when he found that it excluded three very fine trees (elms) which he had supposed to be within its boundary. He had inspected the land with the plans, and had wrongly concluded that its border was formed by an iron fence on the far side of the trees. In fact the boundary was a row of inconspicuous stumps on the near side of the trees. At first instance a decree of specific performance was made against him. It was discharged on appeal. The court held that the defendant&#8217;s mistake was entirely understandable, that it had been induced in part through the carelessness of the vendors, and that it would not be just to compel specific performance.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The following are the factors which distinguish <i>Denny v Hancock</i> from the cases above. First, it is not a case of mutual mistake. There was a true state of affairs, and the defendant&#8217;s mistaken although understandable view. The case is one of unilateral mistake, and to suggest that the one party meant to buy with the trees and the other party to sell without them is to distort the situation. Secondly, the court is therefore not engaged in preferring one competing account of a contract above another. The question was whether an equitable remedy was to be granted in the court&#8217;s discretion against the defendant, and it was held that the plaintiff&#8217;s culpability here entitled the defendant to be protected from it. Thirdly, the judgment does not necessarily constitute outright victory for the defendant. It is unclear on this point, but it is at least possible, if not probable, that the defendant would still be answerable in damages for his failure to complete the purchase, even though he was not to be ordered by the court to do so.<br>&emsp;&emsp;True cases of mutual mistake are infrequent. Situations which seem amenable to this analysis at first sight will often reveal unilateral mistake as above, where the competing understandings of the contract are a mistaken version (however excusable), and the true version. Even where that is not so, because it does not appear on the face of the contract what its true understanding is, a broad approach to construction, taking into account the whole matrix of fact, will probably tip the balance for or against the claimant."
    ],
    "NAME": "Denny v Hancock",
    "CATEGORY": "Mistake &mdash; Mutual Mistake",
    "CITATION": "Denny v Hancock (1870) LR 6 Ch App 1",
    "RELATED": [
        "Falck v Williams",
        "Raffles v Wichelhaus",
        "McRae v Commonwealth Disposals Commission",
        "Ingram v Little",
        "Boulton v Jones",
        "Shogun Finance v Hudson",
        "Lewis v Averay",
        "Phillips v Brooks",
        "Cooper v Phibbs",
        "Bell v Lever Bros Ltd",
        "Cundy v Lindsay",
        "King's Norton Metal v Edridge"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Mistake"
    ],
    "NUMBER": "287",
    "TYPE": "Concept",
    "NAME": "Unilateral Mistake",
    "CATEGORY": "Mistake",
    "RELATED": [
        "Common mistake as to the subject-matter of the contract",
        "The fraud cases",
        "Common Mistake",
        "Lord Denning's invention of common mistake in equity",
        "The special cases",
        "Mistake - Introduction",
        "Mutual Mistake",
        "Moving on from Bell",
        "Doctrine of Implied Assumpsit",
        "Part Payment of a Debt as Consideration",
        "Breach of contract \u2013 the basic rights",
        "The role of foresight"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Unilateral Mistake</span></span><br>&emsp;&emsp;The first case to be cited here is one not included in some of the books, but since (unlike most) it includes no element of fraudulent impersonation, it provides a particularly straightforward example of the impact which an identity mistake may have upon an agreement."
    ]
},
{
    "YEAR": "1857",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant sent an order for leather hosing to Brocklehurst. He had an account with Brocklehurst. In fact Brocklehurst owed him money, so that the defendant would have a set-off against the price of the goods. Unbeknown to the defendant, Brocklehurst had transferred his business to his foreman earlier in the day on which the order arrived. The foreman supplied the goods.<br>&emsp;&emsp;The court held that the defendant had intended to contract with Brocklehurst, to whom his offer had been exclusively made. The foreman was not able to substitute himself as offeree, thereby depriving the defendant of the benefit of his set-off. Since there was therefore no contract between the foreman and the defendant, the foreman could not sue for the price of the goods.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;<span class=\"bd\">Bramwell</span> B: \u201cIt is an admitted fact, that the defendant supposed he was dealing with Brocklehurst; and the plaintiff misled him by executing the order unknown to him. It is clear also, that if the plaintiff were at liberty to sue, it would be a prejudice to the defendant, because it would deprive him of a set-off, which he would have had if the action had been brought by the party with whom he supposed we was dealing. And upon that my judgment proceeds. I do not lay it down that because a contract was made in one person&#8217;s name another person cannot sue upon it, except in cases of agency. But when one makes a contract in which the personality, so to speak, of the particular party contracted with is important for any reason, whether because it is to write a book or paint a picture, or do any work of personal skill, or whether because there is a set-off due from that party, no one else is at liberty to step in and maintain that he is the party contracted with, that he has written the book or painted the picture, or supplied the goods; and that he is entitled to sue, although, had the party really contracted with sued, the defendant would have had the benefit of his personal skill, or of a set-off due from him. As to the difficulty suggested, that if the plaintiff cannot sue for the price of the goods, no one else can, I do not feel pressed by it any more than I did in such a case as I may suppose, of work being done to my house, for instance, by a party different from the one with whom I had contracted to do it. The defendant has, it is true, had the goods; but it is also true that he has consumed them and cannot return them. And that is no reason why he should pay money to the plaintiff which he never contracted to pay, but upon some contract which he never made, and the substitution of which for that which he did make would be to his prejudice, and involve a pecuniary loss by depriving him of a set-off\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This decision is very obviously unfair to the plaintiff. Nevertheless, he would probably have been able to bring an action in the tort of conversion against the defendant, and the fact that the goods no longer existed would have been no obstacle to the recovery of damages. The modern law would provide a restitutionary remedy to prevent the defendant&#8217;s unjust enrichment.<br>&emsp;&emsp;However, the main point, for present purposes, is that the \u201ccapture\u201d of an offer by one to whom it was never directed will result in a mismatch between offer and purported acceptance so that no contract comes into being. Another way of putting it, despite the logical problem involved with this form of words, is that the contract is void."
    ],
    "CATEGORY": "Mistake &mdash; Unilateral Mistake",
    "CITATION": "Boulton v Jones (1857) 27 LJ Ex 117",
    "CATEGORIES": [
        "Mistake",
        "Unilateral Mistake"
    ],
    "RELATED": [
        "Phillips v Brooks",
        "Cundy v Lindsay",
        "Ingram v Little",
        "King's Norton Metal v Edridge",
        "Lewis v Averay",
        "Shogun Finance v Hudson",
        "Associated Japanese Bank (International) Ltd v Credit du Nord",
        "Solle v Butcher",
        "McRae v Commonwealth Disposals Commission",
        "Raffles v Wichelhaus",
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Denny v Hancock"
    ],
    "NUMBER": "288",
    "TYPE": "Case",
    "NAME": "Boulton v Jones",
    "FLAGS": [
        "Bramwell"
    ]
},
{
    "CATEGORIES": [
        "Mistake"
    ],
    "NUMBER": "289",
    "TYPE": "Concept",
    "NAME": "The fraud cases",
    "CATEGORY": "Mistake",
    "RELATED": [
        "The special cases",
        "Unilateral Mistake",
        "Mutual Mistake",
        "Mistake - Introduction",
        "Common Mistake",
        "Lord Denning's invention of common mistake in equity",
        "Common mistake as to the subject-matter of the contract",
        "Moving on from Bell",
        "Self-induced frustration",
        "Innocent Misrepresentation",
        "Fact, as opposed to opinion, belief, intention, or (formerly) law",
        "Special types of loss"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The fraud cases</span></span><br>&emsp;&emsp;We turn now to cases in which fraudulent impersonation is present (the majority). They have led the law into the attempt to draw a distinction which some regard as impossible to maintain. It is worth taking a few moments to set it out in principled terms.<br>&emsp;&emsp;In all these cases, on any view, fraudulent misrepresentation is present, so that the misrepresentee would be entitled in principle to rescind the contract into which he has been fraudulently induced to enter. The problem is that this remedy may be worth little or nothing in the circumstances. Rescission involves recovering the purchase price from the defendant; if the defendant is a fraudster he may have absconded or be penniless. Furthermore, the fraudster may have passed the property to a third party who buys without awareness of the fraud. If the contract with the fraudster can be rescinded <b>before</b> the property passes to the third party, then that person obtains no rights to it (since the fraudster had none left to give following rescission). The misrepresentee recovers it from the innocent third party by an action in the tort of conversion. If, however, rescission is attempted only <b>after </b>the third party has obtained the property, the third party is invulnerable to an action by the misrepresentee. Rescission is blocked by the common law bar of third party rights, as seen in the last lecture.<br>&emsp;&emsp;In this latter instance, the misrepresentee has only one recourse. He may attempt to persuade the court not that the contract was voidable for fraudulent misrepresentation, but that it never came into being at all. It was void because the misrepresentee never intended to contract with the fraudster, but only with the person whose identity the fraudster assumed. On this view there is a mismatch of offer and acceptance. The contract is indeed void.<br>&emsp;&emsp;The difficulty with the argument is this. While the defrauded misrepresentee may sincerely protest that he never meant to contract with a fraudster, the objective view taken by the law suggests that he did precisely that. The misrepresentee will have to show that the fraudster was a mere mechanism by which he contracted (as he mistakenly believed) with \u201cX\u201d. This will be met by the argument (almost certainly put forward by the third party) that the fraudster&#8217;s assumption of the identity of \u201cX\u201d was simply the means by which he persuaded the misrepresentee that he would honestly pay, rather than defaulting. The drawing of the line between these competing interpretations has proved troublesome.<br>&emsp;&emsp;The next case is authority for the principle that English law maintains a distinction for the present purpose between contracts entered into at a distance (eg. through correspondence), and those entered into face to face (<i>inter praesentes</i>). With regard to the first class, the parties to the contract will be identified by construing the contract, quite possibly without regard to parol evidence. With regard to the second class, the courts strongly apply a presumption that the misrepresentee legally intended to contract with the person physically present. However, that presumption is not irrebuttable."
    ]
},
{
    "CATEGORIES": [
        "Mistake",
        "Unilateral Mistake",
        "Fraud Cases"
    ],
    "YEAR": "1878",
    "NUMBER": "290",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A fraudster by the name of Alfred Blenkarn hired premises at 37 Wood Street, Cheapside. He then ordered large quantities of handkerchiefs from the plaintiffs, who were linen manufacturers in Belfast. A well-known and respected company called William Blenkiron &amp; Sons carried on business at 123, Wood Street. When ordering the handkerchiefs, Blenkarn signed himself \u201cA. Blenkarn &amp; Co\u201d, in order to take the benefit of Blenkiron &amp; Sons&#8217; presumed creditworthiness and obtain the goods without having to pay for them up front. The firm of Blenkiron &amp; Sons was known to the plaintiffs. They corresponded with the fraudster addressing letters to him as \u201cMessrs Blenkiron and Co\u201d. Blenkarn had been signing his name so that it would readily appear to be \u201cBlenkiron\u201d. He obtained the goods on credit, sold them on to innocent third party buyers, and one of the latter was later sued in conversion by the plaintiffs when Blenkarn failed to pay his debt.<br>&emsp;&emsp;The House of Lords held that the plaintiffs&#8217; action succeeded. No contract had come into existence. The plaintiffs and Blenkarn had never come into contact personally. Therefore the identity of the parties to the purported contract was to be deduced from the correspondence.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Cairns, the Lord Chancellor, explained the conclusion to which that analysis led:<br>&emsp;&emsp;\u201cIf that is so, what is the consequence? It is that Blenkarn \u2013 the dishonest man, as I call him, - was acting here just in the same way as if he had forged the signature of Blenkiron &amp; Co, the respectable firm, to the applications for goods, and as if, when, in return, the goods were forwarded and letters were sent, accompanying them, he had intercepted the goods and intercepted the letters, and had taken possession of the goods, and of the letters which were addressed to, and intended for, not himself but, the firm of Blenkiron &amp; Co. Now, my Lords, stating the matter shortly in that way, I ask the question, how is it possible to imagine that in that state of things any contract could have arisen between the respondents and Blenkarn, the dishonest man? Of him they knew nothing, and of him they never thought. With him they never intended to deal. Their minds never, even for an instant of time rested upon him, and as between him and them there was no consensus of mind which could lead to any agreement or any contract whatever. As between him and them there was merely the one side to a contract, where, in order to produce a contract, two sides would be required. With the firm of Blenkiron &amp; Co of course there was no contract, for as to them the matter was entirely unknown, and therefore the pretence of a contract was a failure.<br>&emsp;&emsp;The result, therefore, my Lords, is this, that your Lordships have not here to deal with one of those cases in which there is <i>de facto</i> a contract which may afterwards be impeached and set aside, on the ground of fraud; but you have to deal with a case which ranges itself under a completely different chapter of law, the case namely in which the contract never comes into existence. The property remained, as it originally had been, the property of the respondents, and the title which was attempted to be given to the appellants was a title which could not be given to them\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Since this is the first of a considerable line of fraud cases which have to be presented here, it would be as well to pause for reflection on the situation (not for further analysis of it). The parties to litigation of this sort are both innocent. What might the law aim to do in this situation? Prioritise the protection of the defrauded seller, or the innocent third party purchaser? Should the answer in fact vary to reflect differences in the facts? Would that lead to unacceptable uncertainty? Would the best course be to apportion the loss between the seller and third party? Or is the best course to let the legal result depend, as it does, on the distinction between a void and a voidable contract? The path taken by the law is currently the last of these."
    ],
    "NAME": "Cundy v Lindsay",
    "CATEGORY": "Mistake &mdash; Unilateral Mistake &mdash; Fraud Cases",
    "CITATION": "Cundy v Lindsay (1878) 3 App Cas 459",
    "RELATED": [
        "King's Norton Metal v Edridge",
        "Shogun Finance v Hudson",
        "Phillips v Brooks",
        "Lewis v Averay",
        "Ingram v Little",
        "Boulton v Jones",
        "Denny v Hancock",
        "Bell v Lever Bros Ltd",
        "McRae v Commonwealth Disposals Commission",
        "Associated Japanese Bank (International) Ltd v Credit du Nord",
        "Solle v Butcher",
        "Raffles v Wichelhaus"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Mistake",
        "Unilateral Mistake",
        "Fraud Cases"
    ],
    "YEAR": "1897",
    "NUMBER": "291",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A fraudster called Wallis obtained a quotation for brass rivet wire from King&#8217;s Norton Metal Co Ltd, and later the goods themselves. He represented that he was carrying on business as \u201cHallam &amp; Co\u201d of Sheffield, and used headed paper which included a design showing a large factory with a number of chimneys, and a statement that Hallam &amp; Co had depots and agencies in Belfast, Lille and Ghent. It appeared that Wallis had previously ordered goods in the same way and paid for them with a cheque drawn on \u201cHallam &amp; Co\u201d. On this occasion, when Wallis received the goods, he did not pay for them but sold them on to Edridge. The plaintiffs sued Edridge in the tort of conversion. The judge at first instance held that they could not maintain this action, since property in the goods had passed to Wallis and so to Edridge.<br>&emsp;&emsp;The Court of Appeal upheld this ruling. The question was, with whom did the plaintiffs intend to contract? The only possible answer was that they intended to contract with the writer of the letters. If it could have been shown that there was a separate and real entity called \u201cHallam &amp; Co\u201d, the case might have been governed by <i>Cundy v Lindsay</i>. Cave J identified the device used by Wallis as a \u201clong firm fraud\u201d, and asked rhetorically whether anybody had ever heard of an attempt being made by a person who had delivered goods to a \u201clong firm\u201d to get his goods back on the ground that he had made no contract with the long firm. The remedy on these facts lay in fraud, but property had passed to the fraudster under a voidable contract and so on to the innocent third party.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;A \u201clong firm fraud\u201d is of course one in which the fraudster builds confidence by paying, but with a view to a later default on his credit.<br>&emsp;&emsp;This case is authority for the proposition that where the fraudster proceeds by the adoption of a purely invented identity, the contract will be found to be with the fraudster. It is currently regarded as good law.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">It is difficult to accept that such a clear distinction can be logically drawn. If the question is \u201cfor whom was the plaintiff&#8217;s offer meant?\u201d, then to answer by reference to the fact that it must have been Wallis since \u201cHallam &amp; Co\u201d did not exist is to short-circuit a proper analysis. The test should be one of objective appearance. On the objective appearance of the paperwork here, the plaintiff&#8217;s contractual partner was to be \u201cHallam &amp; Co\u201d. One wonders whether the rule in King&#8217;s Norton Metal v Edridge may be meant to teach a lesson. To be duped by the assumption of an identity which has no real existence is to be badly duped, or so it is perhaps natural to suppose. That carelessness prevents the assertion that the assumed identity was so important as to condition the deal. </span><br>&emsp;&emsp;<span class=\"it\">The problem with this is the usual one. Care or carelessness is not usually a determinative factor in the analysis of contract formation, and it should not be here. It is at most some evidence tending to qualify the importance or otherwise of the question of identity to the deal. What is more, it would be rash to suppose that a person duped in these circumstances will always have been particularly careless. A fraud of the type in King&#8217;s Norton may actually be extremely sophisticated and liable to take in the most vigilant. </span><br>&emsp;&emsp;<span class=\"it\">The following trio of cases concern face-to-face dealings. As stated above, here there is a strong presumption that a contract will be found between the parties (seller and fraudster) who were physically present to each other. As the law currently stands, that presumption can be rebutted. Unfortunately the case which illustrates successful rebuttal is almost universally regarded as indistinguishable on its facts from others in which the presumption was not rebutted. </span>"
    ],
    "NAME": "King's Norton Metal v Edridge",
    "CATEGORY": "Mistake &mdash; Unilateral Mistake &mdash; Fraud Cases",
    "CITATION": "King&#8217;s Norton Metal Co Ltd v Edridge, Merrett &amp; Co (1897) 14 TLR 98",
    "RELATED": [
        "Phillips v Brooks",
        "Ingram v Little",
        "Shogun Finance v Hudson",
        "Lewis v Averay",
        "Cundy v Lindsay",
        "Boulton v Jones",
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Bell v Lever Bros Ltd",
        "Falck v Williams",
        "Denny v Hancock",
        "Cooper v Phibbs",
        "McRae v Commonwealth Disposals Commission"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Mistake",
        "Unilateral Mistake",
        "Fraud Cases"
    ],
    "YEAR": "1919",
    "NUMBER": "292",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview </span></span><br>&emsp;&emsp;A fraudster called North visited the plaintiff&#8217;s jewellery shop, and selected pearls priced at \u00a32550 and a ring for \u00a3450. As he wrote out and signed a cheque for the total, he said to the plaintiff \u201cYou see who I am, I am Sir George Bullough\u201d, and gave an address in St James&#8217;s Square. The plaintiff had heard of Sir George Bullough, and consulted a directory to check the address given. He asked North if he would like to take the articles with him; North replied that the plaintiff had better let the cheque clear first, but that he would like to take the ring with him since it was his wife&#8217;s birthday the following day. He took the ring, and pledged it with a pawnbroker who gave him \u00a3350 for it. His cheque was dishonoured.",
        "<span class=\"ud\"><span class=\"bd\">Detail </span></span><br>&emsp;&emsp;The basis for this decision was explained by Horridge J: \u201cI have carefully considered the evidence of the plaintiff, and have come to the conclusion that, although he believed the person to whom he was handing the ring was Sir George Bullough, he in fact contracted to sell and deliver it to the person who came into his shop, and who was not Sir George Bullough, but a man in the name of North, who obtained the sale and delivery by means of the false pretence that he was Sir George Bullough. It is quite true the plaintiff in re-examination said he had no intention of making any contract with any other person than Sir George Bullough; but I think I have myself to decide what is the proper inference to draw where a verbal contract is made and an article delivered to an individual describing himself as somebody else\u2026\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The correctness of this decision is never doubted, but Professor Wade points out one of its troubling aspects. The present state of the law means that the distance seller is relatively protected by comparison with the <i>inter praesentes</i> seller. Arguably, the law&#8217;s protection is misplaced. The distance seller has time to verify the facts on which he relies. The <i>inter praesentes</i> seller is put on the spot.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The reservation mentioned above is based on a policy ground. Arguably, there is a more pressing objection based on principles of contract formation. The fraudster is purporting to accept an offer which he knows cannot represent the true intention of its maker. Why is this not a snapping-up case, disclosing a mismatch of offer and acceptance?</span><br>&emsp;&emsp;<span class=\"it\">Perhaps the only way of resisting that conclusion is to revisit the snapping-up cases (lecture 2) and recall that the mistake operating there to disrupt offer and acceptance had to relate to the terms of the contract. If Phillips v Brooks is not a wrongly-decided snapping-up case, that must be because the fact of the buyer&#8217;s true identity was not contractual.</span><br>&emsp;&emsp;<span class=\"it\">This proposition does seem to be maintainable. The deceit with regard to identity was a vital misrepresentation inducing the contract, but the presumed identity of the buyer was not a term of that contract. This explanation may technically justify the correctness of the two lines of cases, but it seems inadequate on a broader view.</span><br>&emsp;&emsp;<span class=\"it\">The next case, severely criticized, is one in which the <i>inter praesentes</i> presumption was rebutted in the judgments of the majority of the Court of Appeal.</span>"
    ],
    "NAME": "Phillips v Brooks",
    "CATEGORY": "Mistake &mdash; Unilateral Mistake &mdash; Fraud Cases",
    "CITATION": "Phillips v Brooks Ltd [1919] 2 KB 243",
    "RELATED": [
        "King's Norton Metal v Edridge",
        "Lewis v Averay",
        "Shogun Finance v Hudson",
        "Ingram v Little",
        "Cundy v Lindsay",
        "Boulton v Jones",
        "McRae v Commonwealth Disposals Commission",
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Falck v Williams",
        "Raffles v Wichelhaus",
        "Associated Japanese Bank (International) Ltd v Credit du Nord",
        "Bell v Lever Bros Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Mistake",
        "Unilateral Mistake",
        "Fraud Cases"
    ],
    "YEAR": "1960",
    "NUMBER": "293",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview </span></span><br>&emsp;&emsp;The plaintiffs, Elsie and Hilda Ingram, and Miss Badger, were joint owners of a car which they had advertised for sale. They were visited by a fraudster, who said that his name was Hutchinson and that he lived in Caterham. After some negotiations, a price of \u00a3717 was agreed for the car. \u201cHutchinson\u201d then produced a cheque book, but Elsie Ingram said that under no circumstances would she take a cheque. That led to a discussion which it later fell to the judge at first instance (Slade J) to interpret. He took the view that the deal failed at this point, since the parties were not <i>ad idem</i> with regard to payment terms. The negotiations resumed; \u201cHutchinson\u201d gave more information about himself to establish his respectableness, saying that he was P.G.M.Hutchinson of Stanstead House, Caterham, and that he had local business interests. Hilda Ingram meanwhile went to the post office to check that there was a person of that name living at that address. Since there was, the vendors parted with the car in return for a cheque which was later dishonoured. They sued a third party recipient of the car in conversion.<br>&emsp;&emsp;The Court of Appeal upheld the judgment at first instance, holding by a majority (Devlin LJ dissenting) that no contract had come into existence.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The following passages are taken from the majority judgment of Pearce LJ. A fairly lengthy extract is given in total so that the reasoning behind this now notorious decision can be fairly evaluated.<br>&emsp;&emsp;\u201cAt the beginning of the negotiations, always an important consideration, the name or personality of the false Hutchinson were of no importance and there was no other identity competing with his physical presence. The plaintiffs were content to sell the car for cash to any purchaser. The contractual conversation was orally addressed to the physical identity of the false Hutchinson. The identity was the man present, and his name was merely one of his attributes. Had matters continued thus, there would clearly have been a valid but voidable contract.<br>&emsp;&emsp;I accept the judge&#8217;s view that there was no contract at the stage when the man pulled out his cheque book. From a practical point of view negotiations reached an impasse at that stage\u2026.<br>&emsp;&emsp;Thereafter, the negotiations were of a different kind from what the vendor mistakenly believed them to be hitherto. The parties were no longer concerned with a cash sale of goods where the identity of the purchaser was prima facie unimportant. They were concerned with a credit sale in which both parties knew that the identity of the purchaser was one of the utmost importance. She now realized that she was being asked to give him possession of the car on the faith of his cheque.<br>&emsp;&emsp;This was an important stage of the transaction because it demonstrated quite clearly that she was not prepared to sell on credit to the mere physical man in her drawing-room though he presented himself as a man of substance\u2026.<br>&emsp;&emsp;It is not easy to decide whether the vendor was selling to the man in her drawing-room (fraudulently misrepresented as being a man of substance with the attributes of the real Hutchinson) or to P.G.M.Hutchinson of Stanstead House (fraudulently misrepresented as being the man in her drawing-room)\u2026.<br>&emsp;&emsp;The judge said: \u201cI have not the slightest hesitation in reaching the conclusion that the offer which the plaintiffs made to accept the cheque of \u00a3717 was one made only to, and one which was capable of being accepted by, the honest Hutchinson\u2026\u201d. In view of the experience of the judge and the care which he devoted to the present case, I should hesitate long before interfering with that finding of fact, and I would only do so if compelled by the evidence or by the view that the judge drew some erroneous inference. Where, as here, a borderline case is concerned with ascertaining the intention of the parties, the view of the trial judge who hears the witnesses should not lightly be discarded. I am not persuaded that on the evidence he should have found otherwise\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;For this view to work, it would seem necessary to credit Elsie Ingram with having made the following offer: \u201cThe car is for sale on credit to P.G.M.Hutchinson\u201d. It is equally necessary to find that she did <i>not</i> mean \u201cThe car is for sale to you on credit (and the reason for my change of mind is that you have convinced me you are honest and will pay)\u201d.<br>&emsp;&emsp;Devlin LJ, in his dissenting judgment, based himself on the presumption that a person intends to contract with the individual to whom he is actually speaking. He did not deny that the presumption could be rebutted, but declined to speculate what facts might justify that outcome. He acknowledged that the dividing line between voidness and voidability was a very fine one, but added that the drawing of fine distinctions was not necessarily any reproach to the law. However, he considered that the true spirit of the common law lay in overriding technical distinctions when they stood in the way of doing practical justice. The question in cases such as this was which of two innocent parties was to suffer for another&#8217;s fraud. Devlin LJ proposed that a power to apportion the loss between them could appropriately be introduced by Parliament.<br>&emsp;&emsp;The Law Reform Committee considered this proposal in 1966, but rejected it as likely to lead to complex difficulties in practice. It recommended that there should be a general rule for application to cases of mistaken identity; such contracts should be voidable. Parliament did not act.<br>&emsp;&emsp;The next case is invariably cited together with <i>Phillips v Brooks</i> and <i>Ingram v Little</i>, but can be given briefly."
    ],
    "NAME": "Ingram v Little",
    "CATEGORY": "Mistake &mdash; Unilateral Mistake &mdash; Fraud Cases",
    "CITATION": "Ingram v Little [1960] 3 WLR 504",
    "RELATED": [
        "Phillips v Brooks",
        "Cundy v Lindsay",
        "Lewis v Averay",
        "King's Norton Metal v Edridge",
        "Shogun Finance v Hudson",
        "Boulton v Jones",
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Cooper v Phibbs",
        "Denny v Hancock",
        "Associated Japanese Bank (International) Ltd v Credit du Nord",
        "McRae v Commonwealth Disposals Commission",
        "Bell v Lever Bros Ltd"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1972",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The owner of a car made an agreement for its sale to a man who said he was Richard Greene, a well-known actor (well-known, incidentally, in the role of \u201cRobin Hood\u201d). The fraudster wrote out a cheque in the name \u201cR.A.Green\u201d. When it became clear that he wanted to take the car away immediately, the seller asked him if he had anything to prove his identity. The fraudster produced an entry pass to Pinewood Studios in the name of Richard Green, which included a photograph of him and an official stamp. He took the car, sold it to a third party, and the cheque was dishonoured.<br>&emsp;&emsp;The Court of Appeal unanimously allowed the third party&#8217;s appeal against the seller&#8217;s successful action for conversion in the County Court. The contract had been voidable, not void.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord <span class=\"bd\">Denning MR</span> took the view that <i>Ingram v Little</i> was wrongly decided, since it was indistinguishable from <i>Phillips v Brooks</i>. In his opinion the rights of the innocent third party purchaser were to be preferred in principle, so that contracts should be held merely voidable in all such cases. Phillimore LJ distinguished <i>Ingram v Little</i>. Megaw LJ doubted <i>Ingram v Little</i>, in part because it appeared to have applied a test making the status of the deal depend on what the fraudster knew of the intentions of the seller. He seems to have regarded such a test as absurd.<br>&emsp;&emsp;The next case, decided relatively recently by the House of Lords, has gone into the matter in detail but unfortunately, in the view of many, failed to resolve it."
    ],
    "CATEGORY": "Mistake &mdash; Unilateral Mistake &mdash; Fraud Cases",
    "CITATION": "Lewis v Averay [1972] 1 QB 198",
    "CATEGORIES": [
        "Mistake",
        "Unilateral Mistake",
        "Fraud Cases"
    ],
    "RELATED": [
        "King's Norton Metal v Edridge",
        "Ingram v Little",
        "Shogun Finance v Hudson",
        "Phillips v Brooks",
        "Cundy v Lindsay",
        "Boulton v Jones",
        "Bell v Lever Bros Ltd",
        "Cooper v Phibbs",
        "Denny v Hancock",
        "Associated Japanese Bank (International) Ltd v Credit du Nord",
        "Falck v Williams",
        "McRae v Commonwealth Disposals Commission"
    ],
    "NUMBER": "294",
    "TYPE": "Case",
    "NAME": "Lewis v Averay",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Mistake",
        "Unilateral Mistake",
        "Fraud Cases"
    ],
    "YEAR": "2003",
    "NUMBER": "295",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case concerned the validity of a written hire-purchase contract between the finance claimant finance company and the party who was named in the contract as Durlabh Patel. Pursuant to the contract, the company was to receive hire purchase payments from that person, who meanwhile would have the use of the car which he would ultimately buy by this means. In fact the finance company had been induced to enter into the agreement by a fraudster, who had purported to be Durlabh Patel (a real person wholly unconnected with the transaction). The company&#8217;s willingness to be party to the agreement was based on credit checks it had run on the real Durlabh Patel. The fraudster sold the car to the defendant, and the claimant finance company sued the defendant in conversion.<br>&emsp;&emsp;The House of Lords held by a bare majority that the ratio of <i>Cundy v Lindsay</i> applied to this case. The correct approach was to construe the agreement to discover who the parties to it were, rejecting extraneous evidence on the authority of the parol evidence rule. It was clear, taking that approach, that the fraudster was not a party to the agreement. The only person qualified to enter into the agreement with the finance company was the real Durlabh Patel, who had not in reality or in law done so. In the opinion of the minority, however, <i>Cundy v Lindsay</i> led to the drawing of unreasonable and unprincipled distinctions between modes of contract formation, and should be departed from. The finance company&#8217;s contractual partner was the fraudster, so that the contract had been voidable for fraudulent misrepresentation until the time when the fraudster passed the goods on to the innocent third party.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Phillips, in the majority, favoured maintaining the strong presumption that in cases of personal contact, the parties should be deemed to have contracted with each other in their true identities. He explained the relationship between this assumption and the construction-based rule traditionally applied to written contracts. In the latter instance there was no need for the presumption. The contract was to be consulted in order to discover the identity of the parties to it. Since it identified Durlabh Patel as the hirer but had been made without that person&#8217;s authority, it was a nullity and void.<br>&emsp;&emsp;Lord Hobhouse, also in the majority, was of opinion that the identity of the hirer was of fundamental importance to a consumer credit contract, since the hirer&#8217;s creditworthiness was a pre-condition of the company&#8217;s willingness to contract. The checks carried out by the company were specific to the customer named as Durlabh Patel. The company would not have been prepared to contract with a different person whose credit rating it had not checked.<br>&emsp;&emsp;Lord Nicholls, dissenting, said that the legal principles to be applied could not sensibly differ according to the means by which the deal was concluded. In every case the owner of goods agreed to part with them before receiving valid payment. The essence of the transaction was the same in each case, and the law should therefore apply a single analysis (that of <i>Phillips v Brooks</i> and <i>Lewis v Averay</i>).",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Given the views of the majority of their lordships, Shogun Finance does not change the law. Nevertheless, the difference of opinion between Lords Nicholls and Millett (the minority) and Lords Phillips, Hobhouse and Walker (the majority) is real, and begs the question which view is the better or indeed the right one. Material which may be helpful towards tackling that question can be found in the speech of Lord Hobhouse, where he takes it upon himself to summarise \u201cwhy the argument of the appellant&#8217;s counsel was so mistaken\u201d:</span><br>&emsp;&emsp;<span class=\"it\"> \u201cThe first reason was that they approached the question as if it was simply a matter of sorting out the common law authorities relating to the sale of goods. They did not treat it as a matter of applying a statutory exception to the basic common law rule, nemo dat quod non habet. Further, they did not analyse the structure of the overall transaction and the consumer credit agreement within it. Accordingly, they misrepresented the role of the dealer, wrongly treating him as the contracting agent of the finance company which he was not. They never analysed the terms of the written document and had no regard at all to the offer and acceptance clause it contained which, if there was any contract between a &#8216;debtor&#8217; and the finance company, governed their relationship and which expressly set out the only way in which such a contract could come into existence. They made submissions which contradicted the express written contract and were therefore contrary to principle and long established English mercantile law. They submitted that Cundy v Lindsay (1878) 3 App Cas 459 was wrongly decided and should be overruled, substituting for it a general rule which, in disregard of the document or documents which constitute the agreement (if any), makes everything depend upon a factual enquiry into extraneous facts not known to both of the parties thus depriving documentary contracts of their certainty. They sought to convert a direct documentary contract with the finance company into a face to face oral contract made through the dealer as the contracting agent of the finance company, notwithstanding that the dealer was never such an agent of the finance company. Finally they sought, having by-passed the written contract, to rely upon authorities on oral contracts for the sale of goods, made face to face and where the title to the goods had passed to the &#8216;buyer&#8217;, notwithstanding that this was a documentary consumer credit transaction not a sale and, on any view, no title had ever passed to R. In the result they have invited a review of those authorities by reference to the particular facts of each of them. They have sought to draw your Lordships into a discussion of the evidential tools, eg rebuttable presumptions of fact and the so-called face-to-face &#8216;principle&#8217;, used by judges in those cases to assist them in making factual decisions (see also the dictum of Gresson P in Fawcett v Star Car Sales [1960] NZLR at 413), notwithstanding that the present case concerns the construction of a written contract. They forget that the, presently relevant, fundamental principles of law to be applied - consensus ad idem, the correspondence of the contractual offer and the contractual acceptance, the legal significance of the use of a written contract - are clear and are not in dispute. Inevitably over the course of time there have been decisions on the facts of individual &#8216;mistaken identity&#8217; cases which seem now to be inconsistent; the further learned, but ultimately unproductive, discussion of them will warm academic hearts. But what matters is the principles of law. They are clear and sound and need no revision. To cast doubt upon them can only be a disservice to English law. Similarly, to attempt to use this appeal to advocate, on the basis of continental legal systems which are open to cogent criticism, the abandonment of the soundly based nemo dat quod non habet rule (statutorily adopted) would be not only improper but even more damaging\u201d.</span>"
    ],
    "NAME": "Shogun Finance v Hudson",
    "CATEGORY": "Mistake &mdash; Unilateral Mistake &mdash; Fraud Cases",
    "CITATION": "Shogun Finance Ltd v Hudson [2003] UKHL 62",
    "RELATED": [
        "Phillips v Brooks",
        "Lewis v Averay",
        "King's Norton Metal v Edridge",
        "Ingram v Little",
        "Cundy v Lindsay",
        "Boulton v Jones",
        "McRae v Commonwealth Disposals Commission",
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Denny v Hancock",
        "Falck v Williams",
        "Solle v Butcher",
        "Associated Japanese Bank (International) Ltd v Credit du Nord"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Mistake"
    ],
    "NUMBER": "296",
    "FLAGS": [
        "Denning"
    ],
    "TYPE": "Concept",
    "NAME": "Common Mistake",
    "CATEGORY": "Mistake",
    "RELATED": [
        "Mistake - Introduction",
        "The fraud cases",
        "Moving on from Bell",
        "The special cases",
        "Common mistake as to the subject-matter of the contract",
        "Unilateral Mistake",
        "Lord Denning's invention of common mistake in equity",
        "Mutual Mistake",
        "Doctrine of Implied Assumpsit",
        "Negligent Misrepresentation",
        "The contractual nature of the document / expectations of the parties",
        "Misrepresentation (2) - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Common Mistake</span></span><br>&emsp;&emsp;\u201cCommon mistake\u201d is not a well chosen label for this area of the law. It instantly requires a gloss. The label is used to denote cases in which the parties do not misunderstand each other, nor is one misled by the other. They contract on a basis which proves to have been fallacious, because they share a mistaken assumption about some basic aspect of the contract&#8217;s subject matter.<br>&emsp;&emsp;Two sub-categories of common mistake are covered by long-standing rules. These are the cases (a) of <i>res extincta</i> (agreeing to deal in something which in fact has no existence); and (b) <i>res sua</i> (agreeing to deal in something which transpires already to belong to the party which is to acquire it). In these cases, the contract will be void. This makes sense, because performance of such agreements is in fact impossible.<br>&emsp;&emsp;Other shared mistakes as to the subject matter of the contract may make it void even though it is not literally impossible of performance, provided the mistake is of a wholly fundamental character. This in itself is a slightly puzzling idea if one pauses to give it thought; why should such contracts be void? It is said that mistakes of this sort do not <i>negative</i> agreement, but <i>nullify consent</i>. This means that there is no disruption on the level of contract formation of the type which explains the outcome in cases of true mutual mistake or unilateral mistake where offer and acceptance fail to match. Agreement is present, but the law applies a rule to cancel its effect because of the parties&#8217; mistake. The contract is void. One explanation of this outcome is that the parties lacked the necessary contractual intention to make the agreement which in form they made.<br>&emsp;&emsp;The main themes within this area are (a) the gravity of the mistake which must be shown for the contract to be void; and (b) the discovery by Lord <span class=\"bd\">Denning</span> of an equitable jurisdiction to rescind contracts for somewhat less grave mistakes \u2013 before that jurisdiction was declared by the Court of Appeal to be illusory."
    ]
},
{
    "CATEGORIES": [
        "Mistake"
    ],
    "NUMBER": "297",
    "TYPE": "Concept",
    "NAME": "The special cases",
    "CATEGORY": "Mistake",
    "RELATED": [
        "The fraud cases",
        "Moving on from Bell",
        "Mistake - Introduction",
        "Mutual Mistake",
        "Common mistake as to the subject-matter of the contract",
        "Common Mistake",
        "Lord Denning's invention of common mistake in equity",
        "Unilateral Mistake",
        "Conditional Agreements",
        "Beyond section 3",
        "Innominate terms",
        "Substantial performance"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The special cases</span></span><br>&emsp;&emsp;If the subject matter of the contract does not exist at the time the contract is concluded, then the contract is void. This principle is codifed by section 6 of the Sale of Goods Act 1979:<br>&emsp;&emsp;\u201cWhere there is a contract for the sale of specific goods, and the goods without the knowledge of the seller have perished at the time when the contract is made, the contract is void\u201d.<br>&emsp;&emsp;This principle found its way into the Sale of Goods Act from the difficult mid-nineteenth century case of <i>Couturier v Hastie</i> (1856). Here, one party agreed to sell and the other to buy a cargo of corn, both unaware that at the date of the contract the corn had deteriorated and had already been sold in Tunis. The seller argued that the buyer had acquired all the risks associated with the sale, and should pay the contract price upon receipt of the shipping documents. The court held that the buyer was not liable since the contract supposed there to be something in existence which was capable of being sold/bought, when in fact there was not.<br>&emsp;&emsp;Does it follow from this case that when parties share a mistaken belief in the existence of the contract&#8217;s subject matter the contract will be void? The following very well-known Australian case shows that it cannot be that simple."
    ]
},
{
    "CATEGORIES": [
        "Mistake",
        "Common Mistake",
        "Res Extincta"
    ],
    "YEAR": "1951",
    "NUMBER": "298",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The Commission invited tenders for the purchase of a wrecked oil tanker said to be lying off Jourmand Reef, Papua, together with its cargo of oil. The plaintiff&#8217;s tender of \u00a3285 was accepted. Upon consulting a map, the plaintiff found that Jourmand Reef was not marked, and therefore requested precise latitude and longitude. These were provided. The plaintiff then spent a large sum of money equipping and employing an expedition to find the tanker. In reality there was no tanker nor any location known as Jourmand Reef. The Commission was found to have been grossly negligent in asserting that there was.<br>&emsp;&emsp;The High Court of Australia held that the contract was not void for non-existence of the contract&#8217;s subject matter at the time of its conclusion. <i>Couturier v Hastie</i> and section 6 of the Sale of Goods Act were carefully considered, and found to have no application to this situation. The parties had not shared a mistaken assumption that the tanker existed. The Commission had warranted that it did, and had breached the contract since it did not exist. The only mistake made by the plaintiffs had been to believe what the Commission had warranted. <i>Couturier v Hastie</i> was explained as a case which by no means led inexorably to the principle which the draftsman of the Sale of Goods Act had taken from it. The plaintiffs were entitled to damages.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The point to take from this case is that one should not too readily hold an ostensibly shared mistake as to the existence of a contract&#8217;s subject matter to make the contract void. A different legal submission may be more compelling in all the circumstances. The crucial fact here is that the Commission was found, through its conduct, to have undertaken the risk that its assumption would be false. The claimant had only the Commission upon which to rely, and could not be judged to have taken on an equal share of the risk. Application of the <i>res extincta</i> doctrine here would have caused injustice. Therefore it was circumvented.<br>&emsp;&emsp;Where a contract purports to grant rights to a person who already has those rights, it will be void. It is simplest to think of this principle as existing in parallel to the <i>res extincta</i> rule, even though it may have been quite separate in its genesis."
    ],
    "NAME": "McRae v Commonwealth Disposals Commission",
    "CATEGORY": "Mistake &mdash; Common Mistake &mdash; Res Extincta",
    "CITATION": "McRae v Commonwealth Disposals Commission (1951) 84 CLR 377",
    "RELATED": [
        "Solle v Butcher",
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Bell v Lever Bros Ltd",
        "Associated Japanese Bank (International) Ltd v Credit du Nord",
        "Cooper v Phibbs",
        "Phillips v Brooks",
        "Denny v Hancock",
        "Cundy v Lindsay",
        "King's Norton Metal v Edridge",
        "Lewis v Averay",
        "Falck v Williams",
        "Raffles v Wichelhaus"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1867",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This case concerned the three year lease of a salmon fishery in County Sligo, Ireland. It later emerged that, as a result of multiple confusions, the party who was to become the lessee of the fishery already held the life interest in it. He had no need of the lease and, more to the point, the other had no power to grant the lease.<br>&emsp;&emsp;The House of Lords held that the agreement had been entered into upon a common mistake. It was therefore \u201cliable to be set aside\u201d on such terms as the court thought fit to impose.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The main significance of <i>Cooper v Phibbs</i> lies in the development which Lord <span class=\"bd\">Denning</span> was later to base upon it, and it will be necessary to return to it in due course. For the moment it is sufficient to make two points about the case. The first is that most analysts have concluded that the contract in <i>Cooper</i> was void, rather than voidable. That is to say that the rule applied was the common law rule that consent had been nullified.<br>&emsp;&emsp;The second point, however, is that the language used by their Lordships in describing the impact of that mistake upon the contract is not consistent, and includes use of the word \u201cvoidable\u201d. Furthermore, reference to \u201csetting aside\u201d a contract suggests rescinding it because it is voidable, and setting it aside on terms is distinctly redolent of the court&#8217;s equitable jurisdiction. This, at least, is what Lord Denning was later to maintain."
    ],
    "CATEGORY": "Mistake &mdash; Common Mistake &mdash; Res Sua",
    "CITATION": "Cooper v Phibbs (1867) LR 2 HL 149",
    "CATEGORIES": [
        "Mistake",
        "Common Mistake",
        "Res Sua"
    ],
    "RELATED": [
        "McRae v Commonwealth Disposals Commission",
        "Solle v Butcher",
        "Associated Japanese Bank (International) Ltd v Credit du Nord",
        "Bell v Lever Bros Ltd",
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "King's Norton Metal v Edridge",
        "Cundy v Lindsay",
        "Shogun Finance v Hudson",
        "Boulton v Jones",
        "Raffles v Wichelhaus",
        "Falck v Williams",
        "Denny v Hancock"
    ],
    "NUMBER": "299",
    "TYPE": "Case",
    "NAME": "Cooper v Phibbs",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Mistake"
    ],
    "NUMBER": "300",
    "TYPE": "Concept",
    "NAME": "Common mistake as to the subject-matter of the contract",
    "CATEGORY": "Mistake",
    "RELATED": [
        "Unilateral Mistake",
        "The special cases",
        "Lord Denning's invention of common mistake in equity",
        "The fraud cases",
        "Mistake - Introduction",
        "Common Mistake",
        "Moving on from Bell",
        "Mutual Mistake",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "The Parol Evidence Rule",
        "Law Reform (Frustrated Contracts) Act 1943",
        "Rules of Sufficiency"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Common mistake as to the subject-matter of the contract</span></span><br>&emsp;&emsp;Where the parties make a fundamental mistake about the subject-matter of their contract, it may be found to be void. However, as the leading case in this area shows, a mistake must be singularly grave before it will have this effect. If a mistake can be regarded as going only to the \u201cquality\u201d of the subject-matter, as opposed to its identity, it is doubtful whether it will be regarded as sufficient to overcome the contract."
    ]
},
{
    "YEAR": "1932",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Bell, and his co-defendant Snelling, had been employed by Lever Brothers as chairman and vice chairman respectively of the Niger Company (a subsidiary of Lever Brothers). Following a merger of the Niger Company with another business, the services of Bell and Snelling were no longer required, and Lever Brothers agreed to pay them \u00a330,000 and \u00a320,000 each in severance. In fact, both men had speculated privately in cocoa during their employment; this constituted a breach of contract which would have entitled Lever Brothers to dismiss them without paying any compensation. When the company discovered the breaches of contract, it sued Bell and Snelling for fraudulent misrepresentation. At first instance the jury found these allegations were not proven, since it appeared that the breaches of contract had not been present to the minds of the two men when they negotiated their severance (it is for this reason that the case is not one of unilateral mistake as the facts may initially suggest).<br>&emsp;&emsp;The House of Lords considered the argument that the severance agreements were void for common mistake. By a bare majority their Lordships held that the mistake made here was not sufficiently fundamental to overcome the contract.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord <span class=\"bd\">Atkin</span> explained his view of the relevant law, and gave examples to illustrate it:<br>&emsp;&emsp;\u201cMistake as to the quality of the thing contracted for raises more difficult questions. In such a case a mistake will not affect assent unless it is the mistake of both parties, and is as to the existence of some quality which makes the thing without the quality essentially different from the thing as it was believed to be. Of course it may appear that the parties contracted that the article should possess the quality which one or other or both mistakenly believed it to possess. But in such a case there is a contract and the inquiry is a different one, being whether the contract as to quality amounts to a condition or a warranty, a different branch of the law\u2026<br>&emsp;&emsp;We are now in a position to apply to the facts of this case the law as to mistake so far as it has been stated. It is essential on this part of the discussion to keep in mind the finding of the jury acquitting the defendants of fraudulent misrepresentation or concealment in procuring the agreements in question. Grave injustice may be done to the defendants and confusion introduced into the legal conclusion unless it is quite clear that in considering mistake in this case no suggestion of fraud is admissible and cannot strictly be regarded by the judge who has to determine the legal issues raised\u2026 [O]n the whole I have come to the conclusion that it would be wrong to decide that an agreement to terminate a definite specific contract is void if it turns out that the agreement had already been broken and could have been terminated otherwise. The contract released is the identical contract in both cases, and the party paying for release gets exactly what he bargains for. It seems immaterial that he could have got the same result in another way, or that if he had known the true facts he would not have entered into the bargain. A buys B&#8217;s horse; he thinks the horse is sound and he pays the price of a sound horse; he would certainly not have bought the horse if he had known as the fact is that the horse is unsound. If B has made no representation as to soundness and has not contracted that the horse is sound, A is bound and cannot recover back the price. A buys a picture from B; both A and B believe it to be the work of an old master, and a high price is paid. It turns out to be a modern copy. A has no remedy in the absence of representation or warranty. A agrees to take on lease or to buy from B an unfurnished dwelling-house. The house is in fact uninhabitable. A would never have entered into the bargain if he had known the fact. A has no remedy and the position is the same whether B knew the facts or not, so long as he made no representation or gave no warranty. A buys a roadside garage business from B abutting on a public thoroughfare: unknown to A but known to B, it has already been decided to construct a bypass road which will divert substantially the whole of the traffic from passing A&#8217;s garage. Again A has no remedy. All these cases involve hardship on A and benefit to B, as most people would say, unjustly. They can be supported on the ground that it is of paramount importance that contracts should be observed, and that if parties honestly comply with the essentials of the formation of contracts \u2013 ie. agree in the same terms on the same subject matter \u2013 they are bound, and must rely on the stipulations of the contract for protection from the effect of facts unknown to them\u201d.<br>&emsp;&emsp;Lord Warrington, dissenting, took a diametrically opposed view of the facts:<br>&emsp;&emsp;\u201cThe real question, therefore, is whether the erroneous assumption on the part of both parties to the agreements that the service contracts were undeterminable except by agreement was of such a fundamental character as to constitute an underlying assumption without which the parties would never have made the contract they in fact made, or whether it was only a common error affecting the substance of the consideration.<br>&emsp;&emsp;It is true that the error was not one as to the terms of the service agreements, but it was one which, having regard to the matter on which the parties were negotiating \u2013 namely, the terms on which the service agreements were to be prematurely determined and the compensation to be paid therefor, was in my opinion as fundamental to the bargain as any error one can imagine\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Bell v Lever Brothers</i> presents a difficulty for two reasons. The first is entirely clear from the difference between Lords Atkin and Warrington, set out above. On the view of Lord Atkin, the severance agreements could be but were not here overcome by a fundamental common mistake. On the view of Lord Warrington, it was difficult to imagine a more fundamental mistake relating to agreements essentially as to compensation than the one of thinking that compensation was payable when in fact it was not. A great deal of effort has been expended by commentators on research into the facts of <i>Bell</i> (chiefly by Catherine MacMillan) in order to re-assess the correctness of the majority&#8217;s decision. <span class=\"bd\">McKendrick</span> provides a summary.<br>&emsp;&emsp;The second difficulty arises from the examples given by Lord Atkin of common mistakes which would not overcome a contract. One of them \u2013 that of the mistakenly attributed painting \u2013 is notorious in that it seems to set the bar for common mistake as to subject-matter impossibly high. To the retort that the painting in question is the painting, never mind who painted it and when, the answer must be that that view is hopelessly distant from the reality of people&#8217;s motivation for entering contracts of the type in question. The example appears to come close to stifling the doctrine."
    ],
    "CATEGORY": "Mistake &mdash; Common Mistake &mdash; Mistake as to Subject-Matter of Contract",
    "CITATION": "Bell v Lever Bros Ltd [1932] AC 161",
    "CATEGORIES": [
        "Mistake",
        "Common Mistake",
        "Mistake as to Subject-Matter of Contract"
    ],
    "RELATED": [
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Solle v Butcher",
        "Associated Japanese Bank (International) Ltd v Credit du Nord",
        "Cooper v Phibbs",
        "McRae v Commonwealth Disposals Commission",
        "Falck v Williams",
        "Lewis v Averay",
        "Cundy v Lindsay",
        "Denny v Hancock",
        "Boulton v Jones",
        "Ingram v Little",
        "Raffles v Wichelhaus"
    ],
    "NUMBER": "301",
    "TYPE": "Case",
    "NAME": "Bell v Lever Bros Ltd",
    "FLAGS": [
        "Atkin",
        "McKendrick"
    ]
},
{
    "CATEGORIES": [
        "Mistake"
    ],
    "NUMBER": "302",
    "FLAGS": [
        "Atkin"
    ],
    "TYPE": "Concept",
    "NAME": "Moving on from Bell",
    "CATEGORY": "Mistake",
    "RELATED": [
        "Lord Denning's invention of common mistake in equity",
        "Unilateral Mistake",
        "Mistake - Introduction",
        "Common mistake as to the subject-matter of the contract",
        "Common Mistake",
        "The special cases",
        "The fraud cases",
        "Mutual Mistake",
        "Incorporation of Terms - Introduction",
        "Innocent Misrepresentation",
        "Contract and tort measures compared",
        "Communication of Acceptance - Intro"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Moving on from Bell</span></span><br>&emsp;&emsp;Could there ever be a common mistake as to the subject-matter of a contract so serious as to destroy the contract? Perhaps not, as long as the facts enable one party to maintain that in some sense, however narrow, the other party obtained exactly what it bargained for. This could be said of <i>Bell v Lever Brothers</i>, and it is available as an explanation of the painting example used by Lord <span class=\"bd\">Atkin</span> in that case.<br>&emsp;&emsp;It cannot be said where the common mistake makes performance of the contract literally impossible. Courts have found contracts to be void for common mistake where, for instance, land was to be cropped or mined at rates which have subsequently proved to have been impossible from the outset: see <i>Sheikh Brothers Ltd v Ochsner</i> (1957), and <i>Clifford (Lord) v Watts</i> (1870). These cases are analogous to the <i>res extincta</i> and <i>res sua</i> situations.<br>&emsp;&emsp;As for common mistakes which do not render performance impossible, the sufficient gravity has occasionally been found when the subject-matter of the contract is a legal obligation rather than a thing. The next case provides an illustration."
    ]
},
{
    "YEAR": "1989",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;In order to obtain a large sum of money a fraudster, Bennett, agreed with Associated Japanese Bank that he would sell them four valuable machines for approximately one million pounds, and rent them back from the bank. The bank obtained the agreement of Credit du Nord to guarantee Bennett&#8217;s obligation to pay. Security for the contract of guarantee was stated to be the machines. In fact they did not exist and never had done. When Bennett defaulted, the bank sued Credit du Nord on the contract of guarantee.<br>&emsp;&emsp;In the High Court <span class=\"bd\">Steyn J</span> gave various grounds for finding in favour of Credit du Nord. His principal reason was that the contract was rendered inoperative because it contained (in his view) either an express or an implied condition precedent that the machines did exist. He went on to explain that if he were wrong about that, he would have decided the case the same way on the basis that the parties&#8217; misapprehension as to the character of the guarantee was fundamental. It was thought to be secured, and in fact was not. This was enough to \u201crender the subject matter of the contract essentially and radically different from the subject matter which the parties believed to exist\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The order in which Steyn J states these grounds of decision is instructive, and explained by him in his judgment. The first question in a case of this type is whether the risk at issue has been allocated by the contract. The finding of an express or implied condition precedent in this contract of guarantee was one means by which that could be shown to have been done. If the risk has been allocated as between the parties, there is no room for a mistake analysis because the contract takes account of the danger of mistake. Mistake is relevant if the risk cannot be held to have been allocated. Steyn J&#8217;s finding as to common mistake in this context can best be understood as an alternative or secondary ratio.</span><br>&emsp;&emsp;<span class=\"it\">An understandable confusion lurks within the facts of this case (and in some others on common mistake). Since the machines turned out never to have existed, why was this not simply a case of res extincta? If one considers the contract which was actually the subject of this litigation (the contract of guarantee, not that of sale and lease-back) it will be seen that the subject-matter of that contract was not non-existent machines. It was the promise to underwrite Bennett&#8217;s obligations under the main contract. These obligations continued to exist on any view. The common mistake consisted in thinking that a guarantee was secured by collateral when in reality it was unsecured. </span>"
    ],
    "CATEGORY": "Mistake &mdash; Common Mistake &mdash; Mistake as to Subject-Matter of Contract",
    "CITATION": "Associated Japanese Bank (International) Ltd v Credit du Nord [1989] 1 WLR 255",
    "CATEGORIES": [
        "Mistake",
        "Common Mistake",
        "Mistake as to Subject-Matter of Contract"
    ],
    "RELATED": [
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Bell v Lever Bros Ltd",
        "Solle v Butcher",
        "Cooper v Phibbs",
        "McRae v Commonwealth Disposals Commission",
        "Denny v Hancock",
        "King's Norton Metal v Edridge",
        "Phillips v Brooks",
        "Boulton v Jones",
        "Shogun Finance v Hudson",
        "Raffles v Wichelhaus",
        "Ingram v Little"
    ],
    "NUMBER": "303",
    "TYPE": "Case",
    "NAME": "Associated Japanese Bank (International) Ltd v Credit du Nord",
    "FLAGS": [
        "Steyn"
    ]
},
{
    "CATEGORIES": [
        "Mistake"
    ],
    "NUMBER": "304",
    "FLAGS": [
        "Denning",
        "Atkin"
    ],
    "TYPE": "Concept",
    "NAME": "Lord Denning's invention of common mistake in equity",
    "CATEGORY": "Mistake",
    "RELATED": [
        "Common Mistake",
        "Common mistake as to the subject-matter of the contract",
        "Mutual Mistake",
        "Unilateral Mistake",
        "The special cases",
        "Moving on from Bell",
        "The fraud cases",
        "Mistake - Introduction",
        "Enrichment by subtraction",
        "Materiality and reliance",
        "\u201cProblem\u201d Cases",
        "Rebuttal of Presumption"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Lord Denning&#8217;s invention of common mistake in equity</span></span><br>&emsp;&emsp;What follows, until the case of <i>Great Peace </i>below, is now essentially of historical interest only.<br>&emsp;&emsp;Lord <span class=\"bd\">Denning</span>&#8216;s reaction to what arguably was an impasse brought about by the rigour of Lord <span class=\"bd\">Atkin</span>&#8216;s speech in <i>Bell v Lever Brothers</i> was imaginative and entirely characteristic. It consisted in proposing that <i>Bell </i>was no more than the common law&#8217;s view of common mistake. Equity, according to Lord <span class=\"bd\">Denning</span>, would take somewhat less fundamental common mistakes as grounds for finding a contract voidable (not void), and would set aside such contracts on terms. This equitable jurisdiction was said to have been recognized by the House of Lords in <i>Cooper v Phibbs</i> (see above). Lord <span class=\"bd\">Denning</span> introduced his doctrine in the following case."
    ]
},
{
    "YEAR": "1950",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview </span></span><br>&emsp;&emsp;Butcher leased a flat to Solle for \u00a3250 a year. Before the war, the flat had been let to a third party for \u00a3140 a year. The block was damaged in the war, and renovated before Solle moved in. Both parties believed (on the basis of counsel&#8217;s advice) that one legal effect of the renovation was to enable the landlord to fix a rent free from any interference by the Rent Acts. The parties later fell out, and Solle brought an action claiming that the rent was statutorily pegged at its previous level. Butcher counterclaimed for rescission of the contract on the ground of common mistake.<br>&emsp;&emsp;The Court of Appeal held by a majority that the contract should be set aside on the terms that Solle be free either to agree to pay the higher rent under a new lease or to leave. Lord <span class=\"bd\">Denning</span> based the court&#8217;s power to do this on <i>Cooper v Phibbs</i>, pointing to the fact that Lord Westbury had used language in that case consistent with the contract there being voidable rather than void. In his Lordship&#8217;s judgment, this equitable jurisdiction had been overlooked by the House of Lords in <i>Bell v Lever Brothers</i>, which might otherwise have been decided differently. <i>Bell</i>, according to Lord <span class=\"bd\">Denning</span>, really decided that the only type of common mistake capable of rendering a contract void at common law was one which had acquired contractual status by being made a condition precedent. Equity would take account of less fundamental mistakes (though they did still need to be \u201cfundamental\u201d).",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Lord Denning&#8217;s proposition could be judged to several effects. Perhaps the first, often now left out of account, is that it is clever. It deftly exploits the terminological confusion which undoubtedly besets <i>Cooper v Phibbs</i>. His reinterpretation of the ratio of <i>Bell v Lever Brothers</i> is less convincing. In suggesting that the House of Lords in <i>Foakes v Beer</i> overlooked the equitable doctrine of <i>Hughes v Metropolitan Railway</i>, Lord Denning may be taken to have got away with it. Here, he was again suggesting that the House of Lords overlooked equity, when in fact Lord <span class=\"bd\">Atkin</span> in <i>Bell</i> stated his view of <i>Cooper v Phibbs</i> in terms which considered but ruled out an equitable input into that decision. Lord Denning was arguing against legal facts. They were House of Lords facts, and he was mounting his attack on them from the Court of Appeal.<br>&emsp;&emsp;Solle v Butcher</i> was taken as good law in certain subsequent cases, sometimes despite the expression of judicial doubt but sometimes without any qualms. It had the merit of allowing a more finely-tuned justice to be delivered than did the common law doctrine. Furthermore, the idea that a common mistake made a contract voidable was attractive, because the orthodox view that it makes the contract void is not altogether easily explained. On the other hand, Lord Denning&#8217;s doctrine was less than certain in its application, since it depended on the notion of a common mistake which was fundamental but not so fundamental as the sort of mistake which Lord Atkin had in mind in <i>Bell.</i> Puzzlement at this gave way to condemnation when the Court of Appeal came to reconsider <i>Solle v Butcher</i> in the next case."
    ],
    "CATEGORY": "Mistake &mdash; Common Mistake &mdash; Mistake as to Subject-Matter of Contract",
    "CITATION": "Solle v Butcher [1950] 1 KB 671",
    "CATEGORIES": [
        "Mistake",
        "Common Mistake",
        "Mistake as to Subject-Matter of Contract"
    ],
    "RELATED": [
        "Associated Japanese Bank (International) Ltd v Credit du Nord",
        "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "Bell v Lever Bros Ltd",
        "Cooper v Phibbs",
        "McRae v Commonwealth Disposals Commission",
        "King's Norton Metal v Edridge",
        "Cundy v Lindsay",
        "Falck v Williams",
        "Shogun Finance v Hudson",
        "Phillips v Brooks",
        "Ingram v Little",
        "Raffles v Wichelhaus"
    ],
    "NUMBER": "305",
    "TYPE": "Case",
    "NAME": "Solle v Butcher",
    "FLAGS": [
        "Denning",
        "Atkin"
    ]
},
{
    "CATEGORIES": [
        "Mistake",
        "Common Mistake",
        "Mistake as to Subject-Matter of Contract"
    ],
    "YEAR": "2002",
    "NUMBER": "306",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A ship sustained damage in the South Indian Sea. The defendants undertook to arrange salvage, and received the names of four ships in the area from an information service. They chartered the<i> \u201cGreat Peace\u201d</i>, which belonged to the claimants, believing it to be 35 miles away from the ship in distress. That contract provided for a cancellation fee. The defendants later realized that the \u201c<i>Great Peace\u201d</i> was in fact 410 miles away. They subsequently chartered a nearer vessel and cancelled the contract with the claimants (but did not do so immediately). The claimants sued the defendants for the cancellation fee. The defendants argued that the contract for the charter of the \u201c<i>Great Peace\u201d</i> was either void at common law, or voidable in equity.<br>&emsp;&emsp;Lord Phillips MR delivered judgment on behalf of himself and the other two members of the court (May and Laws LJJ), affirming the first instance judgment of Toulson J. On the facts, the mistake made here was not sufficiently fundamental to engage the common law doctrine of common mistake. The supposed equitable doctrine promulgated by Lord <span class=\"bd\">Denning</span> in the Court of Appeal in <i>Solle v Butcher</i> could not stand with the House of Lords&#8217; decision in <i>Bell v Lever Brothers</i>. It was therefore the duty of the Court of Appeal to refuse to follow it.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The analysis of the facts of the present case by Lord Phillips MR must now be accepted as a classic example of the correct approach to a common mistake of the type in question:<br>&emsp;&emsp;a name=\"para162\">\u201cWe revert to the question that we left unanswered at paragraph 94. It was unquestionably a common assumption of both parties when the contract was concluded that the two vessels were in sufficiently close proximity to enable the \u201c<i>Great Peace</i>\u201d to carry out the service that she was engaged to perform. Was the distance between the two vessels so great as to confound that assumption and to render the contractual adventure impossible of performance? If so, the appellants would have an arguable case that the contract was void under the principle in <i>Bell v Lever Brothers Ltd.</i> </a<br>&emsp;&emsp;a name=\"para163\">Toulson J addressed this issue in the following paragraph: </a<br>&emsp;&emsp;\u201cWas the \u201c<i>Great Peace</i>\u201d so far away from the \u201c<i>Cape Providence</i>\u201d at the time of the contract as to defeat the contractual purpose - or in other words to turn it into something essentially different from that for which the parties bargained? This is a question of fact and degree, but in my view the answer is no. If it had been thought really necessary, the \u201c<i>Cape Providence</i>\u201d could have altered course so that both vessels were heading toward each other. At a closing speed of 19 knots, it would have taken them about 22 hours to meet. A telling point is the reaction of the defendants on learning the true positions of the vessels. They did not want to cancel the agreement until they knew if they could find a nearer vessel to assist. Evidently the defendants did not regard the contract as devoid of purpose, or they would have cancelled at once.\u201d<br>&emsp;&emsp;a name=\"para165\"> [T]he fact that the vessels were considerably further apart than the appellants had believed did not mean that the services that the \u201c<i>Great Peace</i>\u201d was in a position to provide were essentially different from those which the parties had envisaged when the contract was concluded. The \u201c<i>Great Peace</i>\u201d would arrive in time to provide several days of escort service. The appellants would have wished the contract to be performed but for the adventitious arrival on the scene of a vessel prepared to perform the same services. The fact that the vessels were further apart than both parties had appreciated did not mean that it was impossible to perform the contractual adventure. </a<br>&emsp;&emsp;a name=\"para166\">The parties entered into a binding contract for the hire of the \u201c<i>Great Peace</i>\u201d. That contract gave the appellants an express right to cancel the contract subject to the obligation to pay the \u2018cancellation fee&#8217; of 5 days hire. When they engaged the \u201c<i>Nordfarer</i>\u201d they cancelled the \u201c<i>Great Peace</i>\u201d. They became liable in consequence to pay the cancellation fee. There is no injustice in this result. </a<br>&emsp;&emsp;a name=\"para167\">For the reasons that we have given, we would dismiss this appeal\u201d. </a",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;It would of course be possible to quote from this judgment at far greater length to illustrate the means by which Lord Phillips showed <i>Solle v Butcher</i> to be contrary to precedent. This is not the place for it. The subject is a difficult one, and now chiefly of interest from the historical point of view, as suggested at the outset.<br>&emsp;&emsp;Some textbooks suggest (with varying degrees of conviction) that since <i>Great Peace</i> is itself merely a Court of Appeal decision, so that the Supreme Court may in future make its own choice between the two opposing authorities, it is too early to consign <i>Solle v Butcher</i> to history. Whatever may be said in favour of the remedial flexibility which Lord Denning asserted in <i>Solle</i>, it seems extremely improbable that the Supreme Court would turn the clock back and risk the appearance of confusion by preferring the overruled case."
    ],
    "NAME": "Great Peace Shipping Ltd v Tsavliris (International) Ltd",
    "CATEGORY": "Mistake &mdash; Common Mistake &mdash; Mistake as to Subject-Matter of Contract",
    "CITATION": "Great Peace Shipping Ltd v Tsavliris (International) Ltd [2002] EWCA Civ 1407",
    "RELATED": [
        "Bell v Lever Bros Ltd",
        "Associated Japanese Bank (International) Ltd v Credit du Nord",
        "Solle v Butcher",
        "McRae v Commonwealth Disposals Commission",
        "Cooper v Phibbs",
        "Shogun Finance v Hudson",
        "Cundy v Lindsay",
        "Raffles v Wichelhaus",
        "Phillips v Brooks",
        "Ingram v Little",
        "Falck v Williams",
        "Lewis v Averay"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration"
    ],
    "NUMBER": "307",
    "FLAGS": [
        "Denning"
    ],
    "TYPE": "Concept",
    "NAME": "Frustration - Introduction",
    "CATEGORY": "Frustration",
    "RELATED": [
        "The effects of frustration",
        "The Law Reform (Frustrated Contracts) Act 1943",
        "Self-induced frustration",
        "Frustration of common purpose",
        "The rationale for frustration",
        "The circumstances of frustration",
        "The role of foresight",
        "Law Reform (Frustrated Contracts) Act 1943",
        "The assessment of delay",
        "Intention to Create Legal Relations - Introduction",
        "Classification of Terms - Introduction",
        "Common Mistake"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;There is a good deal of interest within the law of frustration, but the doctrine itself is of minor importance to most areas of contract law \u2013 arguably with the exception of shipping. If a contract is frustrated, then in a sense it has failed. Most contracts do not fail. If circumstances change during their performance, contracts will very often be found adequately to have allocated the risk of the consequences to one or the other party.<br>&emsp;&emsp;The effect of frustration is to terminate a contract which was capable of performance at the time it was made, but has since been overtaken by the impossibility, or the effective impossibility, of performance.<br>&emsp;&emsp;Frustration therefore resembles the last topic, common mistake. The difference is that common mistake is operative at the time the contract is concluded, whereas frustration occurs later, before or during the period for performance.<br>&emsp;&emsp;The comparison between common mistake and frustration is of some further value. The peculiarity of common mistake is that only a mistake so fundamental as to be somewhat difficult of definition will render the contract void (see <i>Bell v Lever Brothers</i>). This is mirrored by the reluctance of courts to find frustration in most circumstances.<br>&emsp;&emsp;Various reasons for this reluctance are worth noting. The first is that contractual liability is normally strict; the failure to perform a contract is a breach for which damages must be paid, irrespective of an absence of fault. Frustration can be seen as an anomalous deviation from this principle (and as the first case shows, the law once applied the principle itself). A second reason is that frustration has historically been a singularly blunt instrument, enabling one party to walk away from a loss which is borne in its entirety by the other. This situation has been mitigated by the Law Reform (Frustrated Contracts) Act 1943.<br>&emsp;&emsp;A third reason is that from one perspective frustration could be judged theoretically impossible. In a sense, each and every contract pre-allocates every conceivable risk. In so far as it is silent about where the risk is placed, it can be seen to be impliedly providing that the loss should lie where in fact it falls. If the parties had wished otherwise, no doubt they would have agreed a provision to alter the default outcome. Where a risk has been foreseen by the parties even though it has not been expressly allocated, this view is thought by most (but not Lord <span class=\"bd\">Denning</span>) to be all but inescapable.<br>&emsp;&emsp;Given these impediments to a doctrine of frustration, it is quite surprising that the doctrine exists. Nevertheless it does, and it occasionally assumes considerable importance when numerous commercial contracts are gravely disrupted by war (and in particular by the closure of international waterways). The cases which result from such events show how closely English courts and arbitrators will adapt the law to the realities of commercial activity."
    ]
},
{
    "CATEGORIES": [
        "Frustration"
    ],
    "NUMBER": "308",
    "TYPE": "Concept",
    "NAME": "The rationale for frustration",
    "CATEGORY": "Frustration",
    "RELATED": [
        "The circumstances of frustration",
        "Frustration of common purpose",
        "The effects of frustration",
        "The Law Reform (Frustrated Contracts) Act 1943",
        "Frustration - Introduction",
        "Law Reform (Frustrated Contracts) Act 1943",
        "Self-induced frustration",
        "The role of foresight",
        "The assessment of delay",
        "Acceptance By Silence/Inactivity",
        "Mutual Mistake",
        "Over-extending the \u201cmatrix of fact\u201d"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The rationale for frustration</span></span><br>&emsp;&emsp;The following memorable case invariably heads the line of decisions which have shaped the doctrine of frustration. It illustrates the law&#8217;s original position, before the doctrine began to develop. Frustration, quite simply, was not an available excuse for non-performance of a contractual duty, whatever the circumstances."
    ]
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Rationale For Frustration"
    ],
    "YEAR": "1647",
    "NUMBER": "309",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant was sued for failure to pay rent due under the lease of a farm. His answer was that he had been expelled from his land by Prince Rupert of the Rhine, head of the Royalist armies, so that he was unable to profit from it.<br>&emsp;&emsp;The court held that his plea was insufficient. Where a duty was assumed by contract, it was to be performed notwithstanding \u201cany accident by inevitable necessity\u201d. The opportunity to take account of such risks had been there for both parties at the time they negotiated their contract. The court remarked obiter that even if the land were surrounded (ie. cut off), or gained by the sea or made barren by wildfire, yet the lessor was entitled to his rent. It would be otherwise where a duty was created not by private agreement but by general law. In that case, impossibility of performance without fault would function as an excuse. There would have been no opportunity to bargain for protection to accompany the duty.<br>&emsp;&emsp;The next is a leading case, because it is normally taken to have introduced an express doctrine of frustration into English law. The conceptual basis given for it, however, is no longer favoured."
    ],
    "NAME": "Paradine v Jane",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Rationale For Frustration",
    "CITATION": "Paradine v Jane (1647) Aleyn 26",
    "RELATED": [
        "Davis Contractors Ltd v Fareham Urban District Council",
        "National Carriers Ltd v Panalpina (Northern) Ltd",
        "Taylor v Caldwell",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Krell v Henry",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Herne Bay Steam Boat Co v Hutton",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "Bank Line Ltd v Arthur Capel & Co",
        "Chandler v Webster"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Rationale For Frustration"
    ],
    "YEAR": "1863",
    "NUMBER": "310",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The parties had agreed that the defendants were to have the use of the plaintiffs&#8217; property, the Surrey Gardens and Music Hall, on four dates in summer for the purpose of giving a series of grand concerts and fetes. After the agreement was made, but before the time came for performance, the Music Hall was destroyed by a fire for which neither party was to blame.<br>&emsp;&emsp;Blackburn J examined the civil (Roman) law, and found traces of its approach in English authorities as well. The contract had been made on the footing that what was necessary for its performance would continue to exist. Since the subject matter had perished, the parties were discharged from their respective duties.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;\u201c...[W]here, from the nature of the contract, it appears that the parties must from the beginning have known that it could not be fulfilled unless when the time came for the fulfilment of the contract some particular specified thing continued to exist, so that, when entering into the contract they must have contemplated such continuing existence as the foundation of what was to be done; there, in the absence of any express or implied warranty that the thing shall exist, the contract is not to be construed as a positive contract, but as subject to an implied condition that the parties shall be excused in case, before breach, performance becomes impossible from the perishing of the thing without default of the contractor\u201d."
    ],
    "NAME": "Taylor v Caldwell",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Rationale For Frustration",
    "CITATION": "Taylor v Caldwell (1863) 3 B &amp; S 826",
    "RELATED": [
        "Paradine v Jane",
        "National Carriers Ltd v Panalpina (Northern) Ltd",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Bank Line Ltd v Arthur Capel & Co",
        "Herne Bay Steam Boat Co v Hutton",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "Chandler v Webster",
        "Krell v Henry",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Rationale For Frustration"
    ],
    "YEAR": "1956",
    "NUMBER": "311",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Contractors undertook to build 78 houses for the council at a fixed price. Because of a shortage of skilled labour, the work took considerably longer and cost the contractors more than had been expected. They claimed that a pre-contractual statement had been incorporated which made the contract subject to adequate labour and materials being available; that the unavailability discharged the contract; and that they were therefore entitled to recover a sum larger than the agreed price by way of quantum meruit action.<br>&emsp;&emsp;The House of Lords held that the statement had not been incorporated, and that the contract had not been frustrated. The possibility of inadequate supplies of labour had been to some extent foreseen, and the risk lay with the contractors. They were in an unfortunate predicament, but it would be a wrong use of the doctrine of frustration to rescue them from it.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Radcliffe took the opportunity to re-examine the conceptual basis of frustration, and criticised the \u201cimplied term\u201d theory as hopelessly artificial:<br>&emsp;&emsp;\u201cLord Loreburn [in <i>Tamplin Steamship Co v Anglo-Mexican Petroleum</i> [1916] 2 AC 397] ascribes the dissolution to an implied term of the contract.... This approach is in line with the tendency of English courts to refer all consequences of a contract to the will of those who made it. But there is something of a logical difficulty in seeing how the parties could even impliedly have provided for something which <i>ex hypothesi</i> they neither expected nor foresaw; and the ascription of frustration to an implied term of the contract has been criticised as obscuring the true action of the court <b>which consists in applying an objective rule of the law of contract to the contractual obligations that the parties have imposed upon themselves </b>[emphasis added]. So long as each theory produces the same result as the other, as normally it does, it matters little which theory is avowed.... But it may still be of some importance to recall that, if the matter is to be approached by way of implied term, the solution of any particular case is not to be found by inquiring what the parties themselves would have agreed on had they been, as they were not, forewarned. It is not merely that no one can answer that hypothetical question: it is also that the decision must be given \u201cirrespective of the individuals concerned, their temperaments and failings, their interest and circumstances (<i>Hirji Mulji v Cheong Yue Steamship Co Ltd</i> (1926)). The legal effect of frustration \u201cdoes not depend on their intention or their opinions, or even knowledge, as to the event\u201d.<br>&emsp;&emsp;By this time it might seem that the parties themselves have become so far disembodied spirits that their actual persons should be allowed to rest in peace. In their place there arises the figure of the fair and reasonable man. And the spokesman of the fair and reasonable man, who represents after all no more than the anthropomorphic conception of justice, is and must be the court itself. So perhaps it would be simpler to say at the outset that frustration occurs wherever the law recognises that without default of either party a contractual obligation has become incapable of being performed because the circumstances in which performance is called for would render it a thing radically different from that which was undertaken by the contract. <i>Non haec in foedera veni</i>. It was not this that I promised to do\u201d.<br>&emsp;&emsp;Lord Radcliffe&#8217;s understanding of the foundation of frustration was fully considered and approved by the House of Lords in the next case, which also stands as authority affirming the once doubted proposition that a lease could in theory be frustrated."
    ],
    "NAME": "Davis Contractors Ltd v Fareham Urban District Council",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Rationale For Frustration",
    "CITATION": "Davis Contractors Ltd v Fareham Urban District Council [1956] AC 696",
    "RELATED": [
        "Paradine v Jane",
        "Taylor v Caldwell",
        "National Carriers Ltd v Panalpina (Northern) Ltd",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Krell v Henry",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Bank Line Ltd v Arthur Capel & Co",
        "Herne Bay Steam Boat Co v Hutton",
        "Chandler v Webster"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Rationale For Frustration"
    ],
    "YEAR": "1981",
    "NUMBER": "312",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The appellants had leased a warehouse from the respondents for a term of 10 years. After 5 years, the local authority closed the only means of access to the warehouse because of the dangerous state of a listed building. It seemed likely that the closure would continue for more than 18 months, because work to the listed building required ministerial consent. The appellants claimed that the lease had been frustrated, and therefore stopped paying rent.<br>&emsp;&emsp;The House of Lords held unanimously that on these facts the lease was not frustrated, but by a majority that frustration of a lease was possible in rare circumstances. This had traditionally been doubted because a lease is an interest in land, which endures notwithstanding events which in fact deprive the lessee of the land&#8217;s practical usefulness. The majority of their lordships were of the view that a rigid distinction between leases on the one hand and all other types of contract on the other would lead to anomalies. On the facts, however, an interruption of some two years to a contract which was to last for 10 was not sufficient to constitute frustration.<br>&emsp;&emsp;Lord Russell, dissenting, was of opinion that short of the physical destruction of land, for instance through coastal erosion, a lease could not be frustrated. The bargain between the parties had passed the land and all its disadvantages and advantages to the lessee for the term of the lease. To pass such land back to the lessor, if it should become useless, was not a just solution."
    ],
    "NAME": "National Carriers Ltd v Panalpina (Northern) Ltd",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Rationale For Frustration",
    "CITATION": "National Carriers Ltd v Panalpina (Northern) Ltd [1981] AC 675",
    "RELATED": [
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Paradine v Jane",
        "Taylor v Caldwell",
        "Krell v Henry",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Chandler v Webster",
        "Bank Line Ltd v Arthur Capel & Co",
        "Herne Bay Steam Boat Co v Hutton",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration"
    ],
    "NUMBER": "313",
    "TYPE": "Concept",
    "NAME": "The circumstances of frustration",
    "CATEGORY": "Frustration",
    "RELATED": [
        "The effects of frustration",
        "The rationale for frustration",
        "Law Reform (Frustrated Contracts) Act 1943",
        "Self-induced frustration",
        "Frustration of common purpose",
        "The role of foresight",
        "The Law Reform (Frustrated Contracts) Act 1943",
        "Frustration - Introduction",
        "The assessment of delay",
        "Misrepresentation (2) - Introduction",
        "Insistence on performance",
        "Warranties"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The circumstances of frustration</span></span><br>&emsp;&emsp;Frustration is likely to be present where performance of the contract has become literally impossible or illegal. Its subject matter may be destroyed (as in <i>Taylor v Caldwell</i>); the party who is to render the contractual performance may die or become incapacitated; performance of the contract may be rendered illegal (for example where it would amount to trading with the enemy in wartime).<br>&emsp;&emsp;However, these situations can easily shade into others in which similar difficulties do not literally rule out performance, but rather make it more difficult. The fact that the contract has become more inconvenient or expensive or even very much more expensive for one party to perform does not normally amount to its frustration. Rather, it has become a bad bargain, though still a valid one. The policy of the law obviously is to uphold bargains irrespective of whether they are good or bad."
    ]
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Circumstances of Frustration"
    ],
    "YEAR": "1918",
    "NUMBER": "314",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendants, timber merchants, contracted with the plaintiffs to deliver to them a quantity of Finnish birch timber \u201cfree on rail at Hull\u201d. Before any deliveries could be made under the contract, the outbreak of the Great War made it impossible to ship timber from Finland because of the presence of German warships in the Baltic. The defendants claimed that the contract was frustrated, and the plaintiffs sued for damages for non-delivery.<br>&emsp;&emsp;The Court of Appeal held that the means by which the defendants were to obtain the timber was a matter wholly immaterial to the plaintiffs. For the interruption to supplies to be a frustrating event, the normal procedures for shipping timber from Finland would have had to be in the contemplation of both parties as necessary for the fulfilment of the contract."
    ],
    "NAME": "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Circumstances of Frustration",
    "CITATION": "Blackburn Bobbin Co Ltd v T W Allen &amp; Sons Ltd [1918] 2 KB 467",
    "RELATED": [
        "Krell v Henry",
        "Paradine v Jane",
        "Bank Line Ltd v Arthur Capel & Co",
        "Taylor v Caldwell",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "National Carriers Ltd v Panalpina (Northern) Ltd",
        "Chandler v Webster",
        "Herne Bay Steam Boat Co v Hutton",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration"
    ],
    "NUMBER": "315",
    "FLAGS": [
        "Atkin"
    ],
    "TYPE": "Concept",
    "NAME": "Frustration of common purpose",
    "CATEGORY": "Frustration",
    "RELATED": [
        "Law Reform (Frustrated Contracts) Act 1943",
        "Self-induced frustration",
        "The role of foresight",
        "The effects of frustration",
        "The Law Reform (Frustrated Contracts) Act 1943",
        "The assessment of delay",
        "The rationale for frustration",
        "The circumstances of frustration",
        "Frustration - Introduction",
        "The contractual nature of the document / expectations of the parties",
        "Lord Denning's invention of common mistake in equity",
        "Warranties"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Frustration of common purpose</span></span><br>&emsp;&emsp;Beyond the clear cases in which performance of the contract has become literally impossible or illegal, and those in which the contract has merely become a bad bargain, there exists an interesting class of case in which it can be contended that the underlying <b>purpose </b>of the contract has been destroyed. These cases will be the main focus of the central part of this lecture.<br>&emsp;&emsp;The problem here is akin to the one which centres on Lord <span class=\"bd\">Atkin</span>&#8216;s example in <i>Bell v Lever Brothers</i> of the painting believed to be by an old master, in fact valueless but a painting nonetheless. Is an equally reductive or unilateral a view taken of what the subject matter or purpose of the contract actually was? Changed circumstances are not likely to affect both parties equally, since one may very well have a relatively active and the other a relatively passive role within the contract. How far may the passive one maintain that his interest (eg. to continue to receive hire for a vessel) is unaffected by the change, even though the other protests that his commercial adventure has been altered out of all recognition and its purpose destroyed?"
    ]
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Frustration of Common Purpose"
    ],
    "YEAR": "1919",
    "NUMBER": "316",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview </span></span><br>&emsp;&emsp;A ship was to be chartered for 12 months from April 1915 to April 1916. In fact the vessel was requisitioned and not released until September 1915. The charterer brought an action for non-delivery.<br>&emsp;&emsp;The House of Lords held that the charterparty had been frustrated. The difference between a charter from April to April, and one from September to September (as this would now be) was said to be fundamental in business terms. It seems that freight rates had risen in the interim, so that the owner would have been prejudiced by being held to the original contract.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Can this case be distinguished from <i>Blackburn Bobbin</i>? It seems necessary to conclude that there a single adventure was in issue, whether viewed before or after the change in circumstances (a sale of timber). Here, the House of Lords proceeded to compare two different adventures, separated in time. The ship was the same, and the use which the charterer wished to make of it was presumably unchanged. However, in the prevailing circumstances its charter was now a wholly different business proposition from the one which the parties originally transacted. The distinction is not completely convincing, and it is hard to escape the conclusion that courts may take a more tender view of certain types of dealing (those about which the law has most to say, such as hirings of ships) than they do of others.<br>&emsp;&emsp;There is another feature of <i>Bank Line v Arthur Capel</i> which is important but not very often noticed. The case includes a principled boundary to the reductive argument that a passive contracting party is not concerned with difficulties encountered by his active counterpart. The case included an airing of the argument (once thought correct) that delay will not frustrate a time charter because while the charterer&#8217;s interest may be affected, the shipowner is interested only in receiving hire for the vessel. The House of Lords preferred the view that the \u201ccommon object\u201d of such a contract \u2013 and presumably other types of contract as well \u2013 is to be found in the exchange of services for payment. If an interruption makes it impossible for the ship to provide the contemplated services, that is deemed to affect the interests of both parties.<br>&emsp;&emsp;It is surprising that this principle is not better known. Possibly it has been obscured or even put in some doubt by a series of cases in which its application leads to seemingly inconsistent conclusions. The two best known from this line of cases are given below. In common with several others, they arose from the postponement of the coronation of King Edward VII when the king suffered a bout of appendicitis."
    ],
    "NAME": "Bank Line Ltd v Arthur Capel & Co",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Frustration of Common Purpose",
    "CITATION": "Bank Line Ltd v Arthur Capel &amp; Co [1919] AC 435",
    "RELATED": [
        "Krell v Henry",
        "Herne Bay Steam Boat Co v Hutton",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Chandler v Webster",
        "Taylor v Caldwell",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "National Carriers Ltd v Panalpina (Northern) Ltd",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Paradine v Jane"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Frustration of Common Purpose"
    ],
    "YEAR": "1903",
    "NUMBER": "317",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant replied to a newspaper advertisement stating that rooms to view the coronation processions were for hire in the plaintiff&#8217;s flat at 56a Pall Mall. He spoke to the housekeeper at the premises, who pointed out to him how good the view was. A contract for the hire of the rooms on 26 and 27 June was then concluded in writing. It did not mention the processions. The defendant paid \u00a325 in advance, and agreed to pay \u00a350 on 24 June. When the processions were postponed, the plaintiff sued for \u00a350 and the defendant counterclaimed for the return of the \u00a325 (a claim later withdrawn).<br>&emsp;&emsp;Vaughan Williams LJ in the Court of Appeal held that the contract was frustrated. It was to be interpreted as a licence to use the rooms for a specific purpose. The coronation procession and the relative position of the rooms were the basis of the contract, both for the lessor and the hirer.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;An example in the judgment of Vaughan Williams LJ has given rise to debate, but is seems defensible:<br>&emsp;&emsp;\u201cIt was suggested ... that if a cabman was engaged to take someone to Epsom on Derby Day at a suitable enhanced price for such a journey, say \u00a310, both parties to the contract would be discharged in the contingency of the race at Epsom for some reason becoming impossible; but I do not think this follows, for I do not think that in the cab case the happening of the race would be the foundation of the contract. No doubt the purpose of the engager would be to go to see the Derby, and the price would be proportionately high; but the cab had no special qualifications for the purpose which led to the selection of the cab for this particular occasion. Any other cab would have done as well. Moreover, I think that, under the cab contract, the hirer, even if the race went off, could have said, \u201cDrive me to Epsom; I will pay you the agreed sum; you have nothing to do with the purpose for which I hired the cab,\u201d and that if the cabman refused he would have been guilty of a breach of contract, there being nothing to qualify his promise to drive the hirer to Epsom on a particular day. Whereas in the case of the coronation, there is not merely the purpose of the hirer to see the coronation procession, but it is the coronation procession and the relative position of the rooms which is the basis of the contract as much for the lessor as the hirer; and I think that if the King, before the coronation day and after the contract, had died, the hirer could not have insisted on having the rooms on the days named\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">It is possible to doubt this decision by arguing reductively against the \u201ccommon purpose\u201d doctrine most clearly stated in Bank Line v Arthur Capel. In what sense must the provision of facilities to view the processions be taken to be the lessor&#8217;s purpose as well as that of the hirer? Vaughan Williams LJ emphasises that it is, but nowhere in his judgment is this conclusively shown. How is it possible to ascribe anything more to the lessor than the purpose of getting paid, quite irrespective of the hirer&#8217;s motive for contracting to pay?</span><br>&emsp;&emsp;<span class=\"it\">An answer to this can be based on the distinction between the facts and Vaughan Williams LJ&#8217;s example of the cab to Epsom. There was only one conceivable reason for which 56a Pall Mall was being made available. In the contrasting cab case, there could be many reasons apart from watching the Derby for which the hirer might have wished to go to Epsom. Where there may be a multiplicity of (unexpressed) reasons for one side&#8217;s decision to enter the contract, it would seem arbitrary to identify any one of them as necessarily the shared purpose of the parties. Where, on the other hand, the contract has only one objective beyond its propensity to earn one party a profit, it seems more difficult to isolate that party from the other&#8217;s sole objective. Nevertheless, this is ultimately a matter of policy, which is why the clear statement of the law&#8217;s policy in Bank Line v Arthur Capel is so helpful.</span>"
    ],
    "NAME": "Krell v Henry",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Frustration of Common Purpose",
    "CITATION": "Krell v Henry [1903] 2 KB 740",
    "RELATED": [
        "Bank Line Ltd v Arthur Capel & Co",
        "Herne Bay Steam Boat Co v Hutton",
        "Taylor v Caldwell",
        "National Carriers Ltd v Panalpina (Northern) Ltd",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Chandler v Webster",
        "Paradine v Jane"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Frustration of Common Purpose"
    ],
    "YEAR": "1903",
    "NUMBER": "318",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant chartered a steamboat, the <i>Cynthia</i>, for two days \u201cfor the purpose of viewing the naval review and for a day&#8217;s cruise around the fleet\u201d as the contract specified. His intention was to take passengers on board for payment. A deposit of \u00a350 was paid, with another \u00a3200 to be payable before sailing. The review was cancelled in consequence of the king&#8217;s illness, but the fleet remained anchored off Spithead on the two days in question. When the cancellation was announced, the plaintiff wired to the defendant \u201cWhat about Cynthia? She ready to start six tomorrow\u201d, but received no reply. The plaintiff sued for \u00a3200.<br>&emsp;&emsp;The Court of Appeal held that the contract was not frustrated and that the plaintiff was entitled to that sum less profits made on substituted sailings on the two days. There was no particular connection between the <i>Cynthia</i> and the purpose of the contract; other ships would have done as well. Vaughan Williams LJ therefore regarded this case as covered by his cab to Epsom example.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;It has been pointed out that these cases cannot reliably be distinguished on the presence or absence of unique qualities fitting the contact&#8217;s subject matter to the achievement of the contract&#8217;s purpose; there may have been as many suitable rooms with views along the route of the coronation processions as there were suitable ships in the vicinity of Spithead. The key to justifying the contrasting decisions in these cases (and in the cab example) is surely multiplicity of contractual purposes. There was every reason to pay to cruise around the fleet at anchor even without the naval review, as contemporary commentators attest, just as there may have been many reasons to hire a cab to Epsom despite the cancellation of the Derby. There could only, realistically, have been one reason for a 48 hour hiring of the rooms at 56a Pall Mall."
    ],
    "NAME": "Herne Bay Steam Boat Co v Hutton",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Frustration of Common Purpose",
    "CITATION": "Herne Bay Steam Boat Co v Hutton [1903] 2 KB 683",
    "RELATED": [
        "Krell v Henry",
        "Bank Line Ltd v Arthur Capel & Co",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Paradine v Jane",
        "National Carriers Ltd v Panalpina (Northern) Ltd",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Taylor v Caldwell",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Chandler v Webster",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration"
    ],
    "NUMBER": "319",
    "TYPE": "Concept",
    "NAME": "Self-induced frustration",
    "CATEGORY": "Frustration",
    "RELATED": [
        "The assessment of delay",
        "The effects of frustration",
        "The rationale for frustration",
        "Frustration - Introduction",
        "The role of foresight",
        "Frustration of common purpose",
        "Law Reform (Frustrated Contracts) Act 1943",
        "The Law Reform (Frustrated Contracts) Act 1943",
        "The circumstances of frustration",
        "Implication from the parties' legal relationship (\u201cterms implied in law\u201d)",
        "Commercial Agreements",
        "Interpretation and precedent"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Self-induced frustration</span></span><br>&emsp;&emsp;A fundamental bar to a plea of frustration is the responsibility of the party claiming it for the purportedly frustrating event. Frustration releases contracting parties from their obligations; on any view this is an exceptional and rarely granted release, and where it is claimed by a party who is to blame for the supervening event, the plea fails as a matter of policy. The same tends to be true where non-performance is not due to fault but to a commercial decision about which of several incompatible contracts to abandon.<br>&emsp;&emsp;Questions have arisen over issues including (a) what counts as responsibility for the event which puts it out of one party&#8217;s power to perform; and (b) the degree of responsibility which the law will regard as rendering frustration unavailable."
    ]
},
{
    "YEAR": "1990",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A drilling rig had been built in Japan for the plaintiffs. They contracted with the defendants to transport it to Rotterdam. The defendants had two vessels capable of carrying out this contract \u2013 the <i>Super Servant One</i> and the <i>Super Servant Two</i>. The defendants decided to use the <i>Super Servant Two</i> for the contract, and the other vessel was booked for other contracts. Some months before the time for performance, the <i>Super Servant Two</i> was lost in the Zaire River. The defendants informed the plaintiffs that they were not able to carry out the contract, and the plaintiffs sued for the additional cost of transporting the drilling rig by a different contract.<br>&emsp;&emsp;The Court of Appeal held that the contract between the parties was not frustrated. If the contract had specifically provided for the <i>Super Servant Two</i> to be used, then it would have been frustrated by the sinking of that vessel. The contract had left the choice of vessel to the defendant. It was the defendant&#8217;s decision to allocate the <i>Super Servant One</i> to other contracts which put it out of its power to perform. It even appeared that the defendant had entered into some of these contracts after the other vessel sank.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;The argument for Wijsmuller, the defendant, was that the sinking of the <i>Super Servant Two</i> and its inability to perform the present contract formed a single succession of events not interrupted by its decision to allocate the <i>Super Servant One</i> elsewhere. This was based on the submission that its decision was a reasonable one in the circumstances, and therefore did not break a chain of causation beginning with the loss of the <i>Super Servant Two</i> and ending with the abandonment of the contract with the plaintiffs. On this view the sinking had automatically rendered the performance of at least one of Wijsmuller&#8217;s contracts impossible. Wijsmuller placed reliance on Professor <span class=\"bd\">Treitel</span>&#8216;s opinion that a force majeure clause would not be deprived of effect simply because the party seeking its protection acted reasonably in deciding which of its obligations it would honour and which abandon.<br>&emsp;&emsp;The Court of Appeal&#8217;s response was to draw a distinction between consensual force majeure clauses and claims of frustration (the first arising from agreement, and the second from independent operation of law). The court regarded itself as bound by the decision of the Privy Council in <i>Maritime National Fish Ltd v Ocean Trawlers Ltd</i> [1935] AC 524 to hold that the interposition of human choice ousted frustration.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Unsurprisingly this is a case on which Professor Treitel has strong views. He argues that Maritime National Fish was distinguishable, because there it would have been possible for the party claiming frustration to perform all his contracts, though at some disadvantage to his own interests. In the Super Servant Two, a contract was inevitably going to be unperformable. Treitel states his dislike of the rule that frustration, if it occurs at all, occurs automatically. He correctly points out that it is not applied in all cases, and considers it to have been wrongly extended in the Super Servant Two. He counters the reasoning that the risk of having too many contracts to perform is properly allocated to the party who here claims frustration; the same risk exists where only one contract is undertaken, and to regard this as disapplying frustration would be to strike at the very root of the defence. The actual decision in the Super Servant Two may have been influenced by indications that Wijsmuller astutely protected its own self-interest through its actions after the vessel was lost. Professor Treitel&#8217;s answer to this is that a rule of law should apply to such situations; incompatible contracts should rank in the order in which they were entered, so that the first should be performed and the last deemed frustrated.</span><br>&emsp;&emsp;<span class=\"it\">Where self-inducement of frustration is raised, it is for the party making that allegation to prove it, as the next case shows.</span>"
    ],
    "CATEGORY": "Frustration",
    "CITATION": "J. Lauritzen AS v Wijsmuller BV, The Super Servant Two [1990] 1 Lloyds Rep 1",
    "CATEGORIES": [
        "Frustration"
    ],
    "RELATED": [
        "Paradine v Jane",
        "National Carriers Ltd v Panalpina (Northern) Ltd",
        "Krell v Henry",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Taylor v Caldwell",
        "Herne Bay Steam Boat Co v Hutton",
        "Chandler v Webster",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "Bank Line Ltd v Arthur Capel & Co"
    ],
    "NUMBER": "320",
    "TYPE": "Case",
    "NAME": "The Super Servant Two",
    "FLAGS": [
        "Treitel"
    ]
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Self-Induced Frustration"
    ],
    "YEAR": "1942",
    "NUMBER": "321",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;An explosion seriously damaged a chartered steamship, putting an end to the commercial purpose of the charterparty. The charterers claimed damages from the shipowner. On the facts found by an arbitrator, the cause of the explosion was unclear. The Court of Appeal held that the shipowner was liable to pay damages since he could not prove that the explosion was not caused by his negligence (the frustration was therefore regarded as potentially self-induced).",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Simon considered what would follow if the judgment of the Court of Appeal were allowed to stand:<br>&emsp;&emsp;\u201c...if this were correct there must be many cases in which, although in truth frustration is complete and unavoidable, the defendant will be held liable because of his inability to prove a negative \u2013 in some cases, indeed, a whole series of negatives. Suppose that a vessel while on the high seas disappears completely during a storm. Can it be that the defence of frustration of the adventure depends on the owner&#8217;s ability to prove that all his servants on board were navigating the ship with adequate skill and that there was no \u201cdefault\u201d which brought about the catastrophe? Suppose that a vessel in convoy is torpedoed by the enemy and sinks immediately with all hands. Does the application of the doctrine require that the owners shall affirmatively prove that those on board were keeping a good look-out, were obscuring lights, were steering as directed, and so forth? There is no reported case which requires us so to hold. The doctrine on which the defence of frustration depends is nowhere so stated as to place this onus of proof on the party relying on it.<br>&emsp;&emsp;If the cargo owner wants to defeat [a plea of frustration] it is for him by rejoinder to allege and prove either negligence or unseaworthiness\u201d."
    ],
    "NAME": "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Self-Induced Frustration",
    "CITATION": "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd [1942] AC 154",
    "RELATED": [
        "Taylor v Caldwell",
        "Krell v Henry",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Bank Line Ltd v Arthur Capel & Co",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Chandler v Webster",
        "Paradine v Jane",
        "Herne Bay Steam Boat Co v Hutton",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "National Carriers Ltd v Panalpina (Northern) Ltd"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration"
    ],
    "NUMBER": "322",
    "FLAGS": [
        "Treitel"
    ],
    "TYPE": "Concept",
    "NAME": "The role of foresight",
    "CATEGORY": "Frustration",
    "RELATED": [
        "Frustration of common purpose",
        "The Law Reform (Frustrated Contracts) Act 1943",
        "Self-induced frustration",
        "Frustration - Introduction",
        "The assessment of delay",
        "Law Reform (Frustrated Contracts) Act 1943",
        "The circumstances of frustration",
        "The rationale for frustration",
        "The effects of frustration",
        "Consideration Distinguished From Conditional Gifts",
        "Incorporation of Terms - Introduction",
        "2. Terms which supplement the contract (warranties etc)"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The role of foresight</span></span><br>&emsp;&emsp;If a contract expressly allocates the risk of an event which would otherwise have such an impact as to frustrate the contract, there is no frustration \u2013 the contract clearly governs.<br>&emsp;&emsp;If the contract contains no such provision but the parties when making it did foresee the event in question, it is easy to infer that they meant the loss to lie where it has in fact fallen. If they meant otherwise, the contract would presumably say so.<br>&emsp;&emsp;In other words, it has normally been thought that the foresight or even foreseeability (deemed foresight) of an event prevents its occurrence from frustrating a contract. It justifies the inference that the parties have contracted with reference, as it were, to the event.<br>&emsp;&emsp;The principal spokesman for this view is Professor <span class=\"bd\">Treitel</span>. He points out that there are many dicta which support it, but admits that there is no English case in which foresight was the sole ground for rejecting a plea of frustration (para 19-076). He goes on to qualify the principle, however, by requiring that the parties should have had actual foresight of the event, or that it should have been highly foreseeable, and foreseeable in some detail."
    ]
},
{
    "YEAR": "1964",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The <i>Eugenia</i> was chartered to carry iron and steel goods from the Russian Black Sea port of Odessa to India. This voyage would naturally take the ship through the Suez Canal. When the charterparty was negotiated, the parties were aware of a risk that the canal might be closed. They were unable to agree on a provision to meet the risk. The contract nevertheless contained a clause which forbade the charterers from taking the ship into a \u201cdangerous zone\u201d without the permission of the owner. The <i>Eugenia</i>, in breach of this clause, entered the Suez Canal and became trapped there when the canal was closed. The charterers claimed that the contract was frustrated, not because the ship was trapped (this was self-induced), but because even if she had remained outside the canal the contract would have been radically changed and consequently frustrated. The only sea route to India would now have lain round the Cape of Good Hope.<br>&emsp;&emsp;The Court of Appeal held that the necessity of proceeding round the Cape did not have such an impact on the contract as to frustrate it (other courts hearing cases on similar facts generally reached the same conclusion). The voyage was obviously longer and more expensive than the one contemplated, but the additional time it would take had to be judged against the overall duration of the sailing; seen in this context it was not so excessive as to produce frustration. The cargo was not perishable and the vessel (apart from the fact that she was actually trapped in the canal) would have been ready and able to proceed via the Cape.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;\u201cIt has frequently been said that the doctrine of frustration only applies when the new situation is \u201cunforeseen\u201d or \u201cunexpected\u201d or \u201cuncontemplated\u201d, as if that were an essential feature. But it is not so. The only thing that is essential is that the parties should have made no provision for it in their contract. The only relevance of it being \u201cunforeseen\u201d is this: If the parties did not foresee anything of the kind happening, you can readily infer that they have made no provision for it: whereas if they did foresee it, you would expect them to make provision for it. But cases have occurred where the parties have foreseen the danger ahead, and yet made no provision for it in the contract. Such was the case in the Spanish Civil War when a ship was let on charter to the republican government. The purpose was to evacuate refugees. The parties foresaw that she might be seized by the nationalists. But they made no provision for it in their contract. Yet, when she was seized, the contract was frustrated, see <i>W.J.Tatem Ltd v Gamboa</i> [1939] 1 KB 132. So here the parties foresaw that the canal might become impassable: it was the very thing they feared. But they made no provision for it. So there is room for the doctrine to apply if it be a proper case for it\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;<span class=\"bd\">Treitel</span> counters that these remarks are obiter; that the same decision could have been reached on the basis that the canal closure did not have the high degree of foreseeability he requires; and that the charter should have been taken to allocate the risk since it was to be paid for by the time the voyage took.<br>&emsp;&emsp;However, Lord <span class=\"bd\">Denning</span>&#8216;s view is characteristically attractive. It amounts to taking foresight into account as raising a presumption that the contract will be found to have allocated the risk. However, the presumption is rebuttable; the contract, when construed, may be found not to allocate the risk despite the foresight. By contrast, Treitel creates an irrebuttable presumption which he then attenuates. The two positions are not ultimately so very different, but Lord <span class=\"bd\">Denning</span>&#8216;s seems the more straightforward.<br>&emsp;&emsp;Closure of the Suez Canal is now generally dealt with by an express clause in shipping contracts."
    ],
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Role of Foresight",
    "CITATION": "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia [1964] 2 QB 226",
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Role of Foresight"
    ],
    "RELATED": [
        "Krell v Henry",
        "Chandler v Webster",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Bank Line Ltd v Arthur Capel & Co",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Taylor v Caldwell",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Paradine v Jane",
        "National Carriers Ltd v Panalpina (Northern) Ltd",
        "Herne Bay Steam Boat Co v Hutton"
    ],
    "NUMBER": "323",
    "TYPE": "Case",
    "NAME": "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
    "FLAGS": [
        "Treitel",
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Frustration"
    ],
    "NUMBER": "324",
    "TYPE": "Concept",
    "NAME": "The assessment of delay",
    "CATEGORY": "Frustration",
    "RELATED": [
        "The circumstances of frustration",
        "Law Reform (Frustrated Contracts) Act 1943",
        "The rationale for frustration",
        "The Law Reform (Frustrated Contracts) Act 1943",
        "The role of foresight",
        "Self-induced frustration",
        "Frustration - Introduction",
        "The effects of frustration",
        "Frustration of common purpose",
        "Conditions",
        "Common Law Bars to Rescission",
        "Fact, as opposed to opinion, belief, intention, or (formerly) law"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The assessment of delay</span></span><br>&emsp;&emsp;A problem frequently arising in the interruption of charterparties (the hiring of ships) is the assessment of a period of delay. If it is very great (\u201cinordinate\u201d), it clearly may produce frustration. Of course it is likely to be otherwise if it is comparatively short. Where one party asserts that the contract is frustrated and the other contests this, the nature of the interruption will almost certainly appear quite different by the time the case reaches trial from how it appeared to the parties at the time. One question is whether the law adopts the parties&#8217; contemporary assessment of the situation, or uses the benefit of hindsight. The answer is that the law is very closely aligned with the parties&#8217; contemporaneous perspective, as the following passage from the judgment of Lord Sumner in <i>Bank Line v Arthur Capel</i> shows."
    ]
},
{
    "NUMBER": "325",
    "NAME": "Bank Line Ltd v Arthur Capel & Co.",
    "TYPE": "Case",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;\u201cBailhache J [in <i>Anglo-Northern Trading Co Ltd v Emlyn Jones &amp; Williams</i> [1917] 2 KB 78 at 84] says that the main thing to be considered is the probable length of the total deprivation of the use of the chartered vessel compared with the unexpired duration of the charterparty, and I agree in the importance of this feature, though it may not be the main and certainly is not the only matter to be considered. The probabilities as to the length of the deprivation and not the certainty arrived at after the event are also material. The question must be considered at the trial as it had to be considered by the parties, when they came to know of the cause and the probabilities of the delay and had to decide what to do. On this the judgments in the above cases substantially agree. Rights ought not to be left in suspense or to hang on the chances of subsequent events. The contract binds or it does not bind, and the law ought to be that the parties can gather their fate then and there. What happens afterwards may assist in showing what the probabilities really were, if they had been reasonably forecasted, but when the causes of frustration have operated so long or under such circumstances as to raise a presumption of inordinate delay, the time has arrived at which the fate of the contract falls to be decided. The fate is dissolution or continuance and, if the charter ought to be held to be dissolved, it cannot be revived without a new contract. The parties are free\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;This aspect of the assessment of frustration is a prime example of the way in which English law, at its best, strives to keep close to the way reasonable people in commerce actually react in real situations. It does not seek to trump their decisions made, inevitably, without the benefit of hindsight.<br>&emsp;&emsp;Nor does it force the making of decisions where there is so little information that it would be rash to reach a judgment. Various cases, such as <i>Pioneer Shipping Ltd v BTP Dioxide Ltd, The Nema</i> [1981] 2 All ER 1030 show that where a situation is too unclear to call, the courts will allow the parties to wait until a sensible commercial prognosis can be made before they decide for (or against) frustration. This contrasts with the impression which could very fairly be derived from the cases on self-inducement, where it seemed that frustration had to arise automatically and without the interposition of any choice. In cases of delay, that is simply not the attitude of the courts, since it would place the parties in an intolerable position.<br>&emsp;&emsp;The next case is not a vital one as far as the law is concerned. It is dealt with here at length because it gives a particularly vivid insight into the way in which frustration is handled by the Commercial Court in what is perhaps the one setting where it sometimes features largely \u2013 the interruption of charterparties by war.<br>&emsp;&emsp;It also gives an indication that many frustration \u201crules\u201d within this area are actually deduced from the awards of arbitrators who, as Mustill J explains below, are not expected to explain their decisions in the same way as judges. The excerpts below can be read through quite quickly, because the point is not to pore over the dates but to appreciate (a) how grass-roots adjudication applies the concept of frustration, and (b) how commercial judges defer to the arbitrator&#8217;s role."
    ]
},
{
    "YEAR": "1983",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The charterers took delivery of the <i>Chrysalis</i> at Rotterdam on time charter terms, redelivery to be made on passing Muscat (a favoured drop-off point). The ship sailed to North America to load a cargo of grain, and then to the Iraqi port of Basrah at the head of the Shatt al-Arab waterway, docking there on 14 September 1980. On 22 September open war broke out between Iran and Iraq over control of the Shatt al-Arab. On 1 October the <i>Chrysalis</i> completed unloading and was ready to sail to Muscat, but the Shatt al-Arab was the focus of active conflict between the belligerents and was already blocked by sunken vessels. On 14 November the charterers purported to cancel the charterparty (in order to avoid paying any more hire for the ship). By 24 November it was the view of most informed people in shipping circles that the waterway would remain dangerous for several more months, if not longer. A dispute arose between the parties; the shipowners claimed that the charterparty was not frustrated until 24 November, while the charterers contended that the charterparty had in fact been automatically frustrated by the declaration of war between the belligerents on 22 September. The dispute was referred to arbitration, the arbitrator holding that the date of frustration was 24 November. In his view this was the point at which to continue to hold the parties to the contract would be to impose on them radically different obligations from those they had undertaken. The charterers appealed.<br>&emsp;&emsp;In the Commercial Court, Mustill J held that the arbitrator&#8217;s award was not open to criticism. A declaration of war did not automatically frustrate affected contracts. Instead, there was a rebuttable legal presumption that a war would continue for an indefinite period. The arbitrator&#8217;s choice of 24 November as the date on which frustration took place was within a permissible range, and it was not necessary for him to spell out the precise reasons for his choice. To hold otherwise would be to mistake the nature of an arbitrator&#8217;s award.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Mustill J stated that he would quote from the arbitrator&#8217;s award at length, rather than risk distorting it by compressing it:<br>&emsp;&emsp;10. \u201cBy the third week of October a number of the trapped vessels at Basrah had suffered physical damage from military action. The foreign crew members of them were being repatriated and arrangements were being made for substitute crew members to be placed on board. By then it had become widely felt that there would be no quick victory for either side. The prospects of a settlement also receded, both sides being apparently unyielding if not fanatical. Nevertheless, during the ensuing days and months attempts were made (notably by the U.N.Envoy, Mr Olaf Palme) to negotiate a cease-fire, or at all events the release of the several score foreign vessels trapped in the Shatt al-Arab. At first hopes of their release were quite high. On 14<sup>th</sup> October, 1980, it had been reported that Iran had expressed willingness to cooperate in freeing the ships. By 27<sup>th</sup> October, 1980 Iraq, for its part appears to have indicated that it would be willing to allow the vessels to leave if they did so under the auspices of the International Red Cross flag (it was not until the end of December that it emerged that the Red Cross were not at that stage willing to lend their support to this).<br>&emsp;&emsp;11. On 14<sup>th</sup> November, 1980 the charterers purported without prejudice to the question of frustration to cancel the charterparty under Clause 42. By 24<sup>th</sup> November, 1980, various peace bids had been rejected, and it became clear beyond reasonable doubt that the war would not end rapidly. On that date Mr Olaf Palme expressed the opinion that there would be no rapid end to the war. A struggle of indefinite duration now seemed inevitable. There remained, it is true, some possibility that without further inordinate delay the trapped vessels might, despite this, be allowed by the belligerents to depart if they could. They were still precluded from sailing by the Iraqi authorities on any conditions which the vessels were in a position to satisfy. In addition already by that date it had become necessary that the river be dredged and cleared of sunken craft before it could be safely navigated. Whether either side would be willing to undertake this at its own expense, or to allow the other to undertake it, and how long such operations would take, were all wholly uncertain. By 24<sup>th</sup> November 1980 it was the view of most informed people in shipping circles that the obstacles were such that vessels were unlikely to be able safely to leave for several more months at best, and probably much longer\u201d.<br>&emsp;&emsp;Mustill J explained that the only basis on which the arbitrator&#8217;s choice of 24 November could be challenged was if it was wrong in law (a supervisory jurisdiction). He went on to consider other cases which had arisen out of the same conflict:<br>&emsp;&emsp;\u201cThis is not the only Shatt al-Arab dispute in which an arbitrator&#8217;s award has been before the court.<br>&emsp;&emsp;The Evia</i> ... concerned a time charter for a period of 18 months, two months more or less. By the beginning of October 1980 it had between six and ten months left to run, depending on how the option would have been exercised. The vessel had completed discharge on 22 November 1980. The arbitrator held that the charter was frustrated on 4 October. The House of Lords declined to intervene.<br>&emsp;&emsp;In <i>International Sea Traders Inc v Hemisphere Shipping Co Ltd, The Wenjiang</i> ... the charterparty was for 12 months, one month more or less, and had four to six months left of the charter period to run at the beginning of October 1980. The arbitrator held that the contract was frustrated on 24 November. An appeal against this decision was dismissed by <span class=\"bd\">Bingham J</span>.<br>&emsp;&emsp;Finally, in <i>Uni-Ocean Lines Pte Ltd v C-Trade SA, The Lucille</i> ... the arbitrators held that the charter was frustrated on 9 December. The contract was a time charter, which had been running since 14 July 1980. It is not clear how long the charter was to continue.... Discharge was completed on 23 October. The charterers sought leave to appeal against the award, on the ground that 24 November [sic: read 9 December?] was too late, and that 23 October was the right date. Parker J declined to grant leave\u201d.<br>&emsp;&emsp;Towards the end of his judgment, Mustill J dealt firmly with a subsidiary objection made by the charterers to the arbitral award:<br>&emsp;&emsp;\u201cThe second general question relates to the submission made by counsel for the charterers that the award is open to objection because the arbitrator has not given reasons for what he (the arbitrator) described as his visceral reaction. I cannot accept this at all.... [T]he argument is, in my view, misconceived. The whole point of the judgmental task performed at the third stage of the arbitrator&#8217;s process of thought [his making of a decision in light of the ascertained facts and law] is that it does not and indeed cannot involve detailed ratiocination and the very reason why the parties choose arbitration is that they prefer the \u201chunch\u201d or \u201cfeel\u201d or call it what one will of the arbitrator to that of the court. To force the arbitrator to give reasons for a conclusion which in truth is not reasoned would merely create opportunities for an exercise in spurious logic. The court does, I have said, retain a supervisory control, so as to make sure that the arbitrator&#8217;s reaction to the problem is not based on a false premise of law. Beyond this it must not go\u201d."
    ],
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Assessment of Delay",
    "CITATION": "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis [1983] 2 All ER 658",
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Assessment of Delay"
    ],
    "RELATED": [
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "Bank Line Ltd v Arthur Capel & Co",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Taylor v Caldwell",
        "Krell v Henry",
        "Paradine v Jane",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Herne Bay Steam Boat Co v Hutton",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Chandler v Webster",
        "National Carriers Ltd v Panalpina (Northern) Ltd"
    ],
    "NUMBER": "326",
    "TYPE": "Case",
    "NAME": "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
    "FLAGS": [
        "Bingham"
    ]
},
{
    "CATEGORIES": [
        "Frustration"
    ],
    "NUMBER": "327",
    "TYPE": "Concept",
    "NAME": "The effects of frustration",
    "CATEGORY": "Frustration",
    "RELATED": [
        "Self-induced frustration",
        "The circumstances of frustration",
        "The rationale for frustration",
        "The Law Reform (Frustrated Contracts) Act 1943",
        "Law Reform (Frustrated Contracts) Act 1943",
        "Frustration - Introduction",
        "Frustration of common purpose",
        "The role of foresight",
        "The assessment of delay",
        "Innocent Misrepresentation",
        "Objective view of Intention and Agreement",
        "Fact, as opposed to opinion, belief, intention, or (formerly) law"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The effects of frustration</span></span><br>&emsp;&emsp;Frustration, if found, terminates the contract. However, prior to the passing of the Law Reform (Frustrated Contracts) Act 1943 this was capable of creating new problems to replace the ones to which termination gave the answer. Since termination, unlike, rescission, is not retroactive, everything done pursuant to the contract up until its discharge is unaffected. Where one party has made a payment to the other prior to discharge, it was difficult to argue that anything could be done to get the money back even though this state of affairs might seem entirely unjust.<br>&emsp;&emsp;The problem, and the partial solution developed to it by the common law, are now of historical interest since the 1943 Act imposes a scheme of solutions."
    ]
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Effects of Frustration"
    ],
    "YEAR": "1904",
    "NUMBER": "328",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;This was another Coronation Case, with facts very similar to those of <i>Krell v Henry</i> (above). Here, the contract for the hire of a room to view the procession made the fee of \u00a3141 15s payable immediately. The hirer had paid \u00a3100 on account. When the procession was cancelled, the hirer sued to recover the \u00a3100 as on a total failure of consideration. The defendant counterclaimed for \u00a341 15s.<br>&emsp;&emsp;The Court of Appeal held that the claim failed and the counterclaim succeeded. Everything done pursuant to a contract up to the time of its discharge by frustration was to be treated as \u201crightly done\u201d. Here, the contract had required the hirer to pay before the date of the procession. It had therefore passed to him the risk that the procession might not take place and that he would have spent his money to no good. A claim for recovery on the basis of total failure of consideration could have been maintained if the contract were found to be void ab initio. However, frustration merely released the parties from the obligations of future performance.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The reasoning which would be taken at the time to justify this harsh decision \u2013 in so far as it can be justified \u2013 is this. There is no total failure of consideration on these facts. In return for payment, the hirer did obtain something. He obtained the benefit of the other&#8217;s promise that he would have the use of the room (if the procession went ahead). The fact is that he made a thoroughly unwise bargain, but that is no reason to deprive the more prudent party of his contractual due.</span>"
    ],
    "NAME": "Chandler v Webster",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Effects of Frustration",
    "CITATION": "Chandler v Webster [1904] 1 KB 493",
    "RELATED": [
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Paradine v Jane",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Krell v Henry",
        "Herne Bay Steam Boat Co v Hutton",
        "National Carriers Ltd v Panalpina (Northern) Ltd",
        "Taylor v Caldwell",
        "Bank Line Ltd v Arthur Capel & Co"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Effects of Frustration"
    ],
    "YEAR": "1943",
    "NUMBER": "329",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;An English engineering company agreed in July 1939 to manufacture certain machinery and to sell and deliver it to a Polish company within three or four months at Gdynia. One third of the contract price was payable in advance (in fact \u00a31000, somewhat less than a third, was actually paid). On 3 September Britain declared war on Germany, and on 23 September Gdynia was occupied by the German Army. The contract was therefore frustrated. The London agent of the Polish company requested repayment of the \u00a31000. The English company refused on the basis that considerable work had already been done. The High Court and the Court of Appeal held in favour of the English company, applying <i>Chandler v Webster</i>.<br>&emsp;&emsp;The House of Lords allowed the Polish company&#8217;s appeal, and overruled <i>Chandler v Webster</i>. In the opinion of Lord Simon, a distinction was to be drawn between what could constitute consideration with regard to contract formation, and what constituted it in the law of total failure of consideration (this distinction has since been doubted). The mere promise of consideration was viewed as consideration in the first context, but should not be so regarded in the second context. Furthermore, to allow a restitutionary claim for total failure of consideration was possible whilst preserving the principle that everything done up to the moment of frustration was rightly done and not to be unsettled. It was not an action which purported to be based on the contract, but an action outside the contract."
    ],
    "NAME": "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Effects of Frustration",
    "CITATION": "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd [1943] AC 32",
    "RELATED": [
        "Chandler v Webster",
        "Paradine v Jane",
        "National Carriers Ltd v Panalpina (Northern) Ltd",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "Bank Line Ltd v Arthur Capel & Co",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Herne Bay Steam Boat Co v Hutton",
        "Krell v Henry",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Davis Contractors Ltd v Fareham Urban District Council",
        "Ocean Tramp Tankers Corporation v V/O Sovfracht, The Eugenia",
        "Taylor v Caldwell"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Frustration"
    ],
    "NUMBER": "330",
    "TYPE": "Concept",
    "NAME": "The Law Reform (Frustrated Contracts) Act 1943",
    "CATEGORY": "Frustration",
    "RELATED": [
        "The role of foresight",
        "The circumstances of frustration",
        "Frustration of common purpose",
        "Frustration - Introduction",
        "Law Reform (Frustrated Contracts) Act 1943",
        "Self-induced frustration",
        "The assessment of delay",
        "The rationale for frustration",
        "The effects of frustration",
        "The construction of exemption clauses",
        "Further aspects of the remedial scheme",
        "Common Law Bars to Rescission"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The Law Reform (Frustrated Contracts) Act 1943</span></span><br>&emsp;&emsp;For the purposes of the GDL year it is not necessary to know the workings of the Act in detail, or the limited but highly complex caselaw on it.<br>&emsp;&emsp;The main points which should be noted are that (a) the Act goes beyond <i>Fibrosa v Fairbairn</i> in so far as it allows the recovery of a sum paid before frustration even though there has admittedly been no total failure of consideration; and (b) it allows a party who has done work to the other&#8217;s benefit before frustration without any accrued right to payment nevertheless to claim compensation from the other.<br>&emsp;&emsp;The Act does not alter the circumstances in which frustration will or will not be found by a court."
    ]
},
{
    "CATEGORIES": [
        "Frustration",
        "Introduction",
        "Law Reform (Frustrated Contracts) Act 1943"
    ],
    "NUMBER": "331",
    "TYPE": "Concept",
    "NAME": "Law Reform (Frustrated Contracts) Act 1943",
    "CATEGORY": "Frustration &mdash; Introduction &mdash; Law Reform (Frustrated Contracts) Act 1943",
    "RELATED": [
        "Frustration of common purpose",
        "The role of foresight",
        "The circumstances of frustration",
        "The Law Reform (Frustrated Contracts) Act 1943",
        "Self-induced frustration",
        "The rationale for frustration",
        "Frustration - Introduction",
        "Anticipatory Breach",
        "The effects of frustration",
        "The assessment of delay",
        "The intention with which the statement was made",
        "Implication of Terms - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Law Reform (Frustrated Contracts) Act 1943</span></span><br>&emsp;&emsp;1 Adjustment of rights and liabilities of parties to frustrated contracts.<b>E+W+S+N.I.</b<br>&emsp;&emsp;(1) Where a contract governed by English law has become impossible of performance or been otherwise frustrated, and the parties thereto have for that reason been discharged from the further performance of the contract, the following provisions of this section shall, subject to the provisions of section two of this Act, have effect in relation thereto.<br>&emsp;&emsp;(2) All sums paid or payable to any party in pursuance of the contract before the time when the parties were so discharged (in this Act referred to as \u201cthe time of discharge\u201d) shall, in the case of sums so paid, be recoverable from him as money received by him for the use of the party by whom the sums were paid, and, in the case of sums so payable, cease to be so payable:<br>&emsp;&emsp;Provided that, if the party to whom the sums were so paid or payable incurred expenses before the time of discharge in, or for the purpose of, the performance of the contract, the court may, if it considers it just to do so having regard to all the circumstances of the case, allow him to retain or, as the case may be, recover the whole or any part of the sums so paid or payable, not being an amount in excess of the expenses so incurred.<br>&emsp;&emsp;(3) Where any party to the contract has, by reason of anything done by any other party thereto in, or for the purpose of, the performance of the contract, obtained a valuable benefit (other than a payment of money to which the last foregoing subsection applies) before the time of discharge, there shall be recoverable from him by the said other party such sum (if any), not exceeding the value of the said benefit to the party obtaining it, as the court considers just, having regard to all the circumstances of the case and, in particular,\u2014<br>&emsp;&emsp;(a) the amount of any expenses incurred before the time of discharge by the benefited party in, or for the purpose of, the performance of the contract, including any sums paid or payable by him to any other party in pursuance of the contract and retained or recoverable by that party under the last foregoing subsection, and<br>&emsp;&emsp;(b) the effect, in relation to the said benefit, of the circumstances giving rise to the frustration of the contract.<br>&emsp;&emsp;(4) In estimating, for the purposes of the foregoing provisions of this section, the amount of any expenses incurred by any party to the contract, the court may, without prejudice to the generality of the said provisions, include such sum as appears to be reasonable in respect of overhead expenses and in respect of any work or services performed personally by the said party.<br>&emsp;&emsp;(5) In considering whether any sum ought to be recovered or retained under the foregoing provisions of this section by any party to the contract, the court shall not take into account any sums which have, by reason of the circumstances giving rise to the frustration of the contract, become payable to that party under any contract of insurance unless there was an obligation to insure imposed by an express term of the frustrated contract or by or under any enactment.<br>&emsp;&emsp;(6) Where any person has assumed obligations under the contract in consideration of the conferring of a benefit by any other party to the contract upon any other person, whether a party to the contract or not, the court may, if in all the circumstances of the case it considers it just to do so, treat for the purposes of subsection (3) of this section any benefit so conferred as a benefit obtained by the person who has assumed the obligations as aforesaid.<br>&emsp;&emsp;(1) This Act shall apply to contracts, whether made before or after the commencement of this Act, as respects which the time of discharge is on or after the first day of July, nineteen hundred and forty-three, but not to contracts as respects which the time of discharge is before the said date.<br>&emsp;&emsp;(2) This Act shall apply to contracts to which the Crown is a party in like manner as to contracts between subjects.<br>&emsp;&emsp;(3) Where any contract to which this Act applies contains any provision which, upon the true construction of the contract, is intended to have effect in the event of circumstances arising which operate, or would but for the said provision operate, to frustrate the contract, or is intended to have effect whether such circumstances arise or not, the court shall give effect to the said provision and shall only give effect to the foregoing section of this Act to such extent, if any, as appears to the court to be consistent with the said provision.<br>&emsp;&emsp;(4)Where it appears to the court that a part of any contract to which this Act applies can properly be severed from the remainder of the contract, being a part wholly performed before the time of discharge, or so performed except for the payment in respect of that part of the contract of sums which are or can be ascertained under the contract, the court shall treat that part of the contract as if it were a separate contract and had not been frustrated and shall treat the foregoing section of this Act as only applicable to the remainder of that contract.<br>&emsp;&emsp;(a) to any charterparty, except a time charterparty or a charterparty by way of demise, or to any contract (other than a charterparty) for the carriage of goods by sea; or<br>&emsp;&emsp;(b) to any contract of insurance, save as is provided by subsection (5) of the foregoing section; or<br>&emsp;&emsp;(c) to any contract to which section 7 of the Sale of Goods Act 1979(which avoids contracts for the sale of specific goods which perish before the risk has passed to the buyer) applies, or to any other contract for the sale, or for the sale and delivery, of specific goods, where the contract is frustrated by reason of the fact that the goods have perished.<br>&emsp;&emsp;Annotations are used to give authority for changes and other effects on the legislation you are viewing and to convey editorial information. They appear at the foot of the relevant provision or under the associated heading. Annotations are categorised by annotation type, such as F-notes for textual amendments and I-notes for commencement information (a full list can be found in the Editorial Practice Guide). Each annotation is identified by a sequential reference number. For F-notes, M-notes and X-notes, the number also appears in bold superscript at the relevant location in the text. All annotations contain links to the affecting legislation."
    ]
},
{
    "CATEGORIES": [
        "Breach of Contract"
    ],
    "NUMBER": "332",
    "TYPE": "Concept",
    "NAME": "Breach of Contract - Introduction",
    "CATEGORY": "Breach of Contract",
    "RELATED": [
        "Anticipatory Breach",
        "Tender of performance",
        "Substantial performance",
        "Insistence on performance",
        "Contractual quantum meruit",
        "Breach of contract \u2013 the basic rights",
        "The election to terminate",
        "Entire and severable obligations",
        "Penalties/Agreed sums payable on breach",
        "Effect of Promissory Estoppel",
        "Implication of Terms - Introduction",
        "Comments"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;This lecture examines the rights which arise upon breach of contract. The subject overlaps with the classification of terms of the contract. For that reason the lecture has been kept brief; the basic concepts should already be familiar.<br>&emsp;&emsp;The cases cited have been chosen either because they are usefully illustrative of a doctrine, or because they are leading cases (the last three are in the latter category). It would not have been difficult to give entire lines of authority around each of them, but nor would it have been obviously helpful at this stage of the course.<br>&emsp;&emsp;It is necessary to bear in mind that if, after this year, you encounter a point on one of these topics, the material provided here gives only the briefest of working introductions."
    ]
},
{
    "CATEGORIES": [
        "Breach of Contract"
    ],
    "NUMBER": "333",
    "FLAGS": [
        "Denning",
        "Diplock"
    ],
    "TYPE": "Concept",
    "NAME": "Breach of contract \u2013 the basic rights",
    "CATEGORY": "Breach of Contract",
    "RELATED": [
        "Contractual quantum meruit",
        "Penalties/Agreed sums payable on breach",
        "Insistence on performance",
        "Substantial performance",
        "Anticipatory Breach",
        "Tender of performance",
        "Breach of Contract - Introduction",
        "Entire and severable obligations",
        "The election to terminate",
        "Acceptance By Conduct",
        "2. Terms which supplement the contract (warranties etc)",
        "The contractual nature of the document / expectations of the parties"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Breach of contract \u2013 the basic rights</span></span><br>&emsp;&emsp;When the time for performance of the contract has come, and one party&#8217;s performance is either withheld or deficient, various remedies may be available to the other. Those of specific performance and injunction arise from the court&#8217;s equitable discretion, and not from any mechanism triggered by breach. For that reason they will not be further considered in this lecture. The remedies of termination and damages do derive from the contract which has been breached.<br>&emsp;&emsp;The basic position has already been set out in lecture 11. Termination of the contract is available for breach of any of its terms which the parties have agreed (and the court confirms) to be conditions, or for breaches which deprive the innocent party of substantially the whole benefit of his bargain (the innominate term analysis). Damages, however, are available for breach of any contractual terms, including less important ones (warranties).<br>&emsp;&emsp;Where the right to terminate exists, the innocent party may elect to forego it, suing only for damages. For breach of warranty, the innocent party is entitled only to damages.<br>&emsp;&emsp;One may wonder by what reasoning a contract, which may well have nothing to say about termination or payment of damages, affords these rights when breached. This is given a principled explanation by Lord <span class=\"bd\">Diplock</span> in a case already cited in lecture 12. In <i>Photo Productions v Securicor</i> the House of Lords swept away Lord <span class=\"bd\">Denning</span>&#8216;s doctrine of fundamental breach, which had been based on the notion that such a breach disapplies the contract in all its aspects. The true position is that the contract continues to govern in the matter of remedies, at least by implication of the common law."
    ]
},
{
    "YEAR": "1980",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;By a contract made in 1968, Securicor agreed to provide its Night Patrol Service to Photo Productions. A number of visits were to be made each night, seven days of the week. The weekly charge was low: \u00a38 15s. One of the clauses in the contract stated that \u201cunder no circumstances shall [Securicor] be responsible for any injurious act or default by any employee of [Securicor] unless such act or default could have been foreseen and avoided by the exercise of due diligence on the part of [Securicor] as his employer...\u201d. One of Securicor&#8217;s duty employees, in the course of a visit to the premises, decided to light a fire by throwing a match onto some cartons. The fire got out of control, and burnt down a substantial part of Photo Productions&#8217; premises, causing damage amounting to \u00a3615,000. Photo Productions sued for damages. Securicor relied on its clause.<br>&emsp;&emsp;The House of Lords held that the exemption applied notwithstanding the gravity of the breach.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord <span class=\"bd\">Diplock</span> said the following about the relationship between the contract&#8217;s express terms and the remedies which arise on their breach:<br>&emsp;&emsp;\u201cA basic principle of the law of contract, to which there are no exceptions that are relevant in the instant case, is that parties to a contract are free to determine for themselves what primary obligations they will accept. They may state these in express words in the contract itself and, where they do, the statement is determinative; but in practice a commercial contract never states all the primary obligations of the parties in full; many are left to be incorporated by implication of law from the legal nature of the contract into which the parties are entering. But if the parties wish to reject or modify primary obligations which would otherwise be so incorporated, they are fully at liberty to do so by express words.<br>&emsp;&emsp;Leaving aside those comparatively rare cases in which the court is able to enforce a primary obligation by decreeing specific performance of it, breaches of primary obligations give rise to substituted or secondary obligations on the part of the party in default, and, in some cases, may entitle the other party to be relieved from further performance of his own primary obligations.<br>&emsp;&emsp;Every failure to perform a primary obligation is a breach of contract. The secondary obligation on the part of the contract breaker to which it gives rise by implication of the common law is to pay monetary compensation to the other party for the loss sustained by him in consequence of the breach; but, with two exceptions, the primary obligations of both parties so far as they have not yet been performed remain unchanged. This secondary obligation to pay compensation (damages) for non-performance of primary obligations I will call the \u201cgeneral secondary obligation\u201d. It applies in the cases of the two exceptions as well.<br>&emsp;&emsp;The exceptions are: (1) Where the event resulting from the failure by one party to perform a primary obligation has the effect of depriving the other party of substantially the whole benefit which it was the intention of the parties that he should obtain from the contract, the party not in default may elect to put an end to all primary obligations of both parties remaining unperformed.... (2) Where the contracting parties have agreed, whether by express words or by implication of law, that any failure by one party to perform a particular primary obligation (\u201ccondition\u201d in the nomenclature of the Sale of Goods Act 1893), irrespective of the gravity of the event that has in fact resulted from the breach, shall entitle the other party to elect to put an end to all primary obligations of both parties remaining unperformed....<br>&emsp;&emsp;Where such an election is made (a) there is substituted by implication of law for the primary obligations of the party in default which remain unperformed a secondary obligation to pay monetary compensation to the other party for the loss sustained by him in consequence of their non-performance in the future and (b) the unperformed primary obligations of the other party are discharged...\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;A breach of the type envisaged by Lord Diplock in his \u201cexception (1)\u201d above, being so serious as to deprive the innocent party of effectively the whole benefit of his bargain, might be given various labels. The accepted and uncontroversial term to use is \u201crepudiatory breach\u201d. For reasons which should be obvious, \u201cfundamental breach\u201d would not be a happy description even though it is factually accurate.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">It is tempting to take the test for repudiatory breach (loss of effectively the whole benefit of the bargain) and interpret it as fixing a threshold already established for common mistake and frustration. Where the true situation at the time of contracting, unbeknown to the parties, has that effect upon the bargain, common mistake renders the contract void. Where events produce that effect without either party&#8217;s fault, and the contract cannot be taken to govern the situation, the contract is frustrated. Where effective loss of the whole bargain is the one party&#8217;s responsibility, that is a repudiatory breach. </span>"
    ],
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Breach of Contract \u2013 Basic Rights",
    "CITATION": "Photo Production Ltd v Securicor Transport Ltd [1980] AC 827",
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Breach of Contract \u2013 Basic Rights"
    ],
    "RELATED": [
        "Hochster v De la Tour",
        "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
        "Frost v Knight",
        "Startup v MacDonald",
        "Sumpter v Hedges",
        "Dunlop v New Garage",
        "Cutter v Powell",
        "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "White & Carter (Councils) Ltd v McGregor",
        "Bolton v Mahadeva",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd",
        "Bisset v Wilkinson"
    ],
    "NUMBER": "334",
    "TYPE": "Case",
    "NAME": "Photo Production Ltd v Securicor Transport Ltd",
    "FLAGS": [
        "Diplock"
    ]
},
{
    "CATEGORIES": [
        "Breach of Contract"
    ],
    "NUMBER": "335",
    "FLAGS": [
        "Steyn"
    ],
    "TYPE": "Concept",
    "NAME": "The election to terminate",
    "CATEGORY": "Breach of Contract",
    "RELATED": [
        "Penalties/Agreed sums payable on breach",
        "Breach of Contract - Introduction",
        "Anticipatory Breach",
        "Breach of contract \u2013 the basic rights",
        "Substantial performance",
        "Insistence on performance",
        "Entire and severable obligations",
        "Contractual quantum meruit",
        "Tender of performance",
        "Transmission of Acceptance",
        "The basics",
        "Acceptance By Silence/Inactivity"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The election to terminate</span></span><br>&emsp;&emsp;The law does not impose a formal requirement. In the next case (cited already as an authority on acceptance by silence in lecture 3), Lord <span class=\"bd\">Steyn</span> states that all that is required by way of election is that the fact of the one party&#8217;s decision should come clearly and unequivocally to the notice of the other."
    ]
},
{
    "NUMBER": "336",
    "FLAGS": [
        "Steyn"
    ],
    "NAME": "Vitol SA v Norelf Ltd.",
    "TYPE": "Case",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The intending buyers of a cargo of propane sent a telex to the sellers in which they recorded that since the vessel would complete loading outside the contractually agreed period, they were terminating the contract. The sellers made no response to this message. An arbitrator later held that the sellers&#8217; silence and failure to take further steps to perform the contract had amounted to an acceptance of the buyers&#8217; repudiation. This decision was upheld by the House of Lords.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord <span class=\"bd\">Steyn</span> \u201cIt is now possible to turn directly to the first issue posed, namely whether non-performance of an obligation is ever as a matter of law capable of constituting an act of acceptance. On this aspect I found the judgment of Phillips J [at first instance] entirely convincing. One cannot generalise on the point. It all depends on the particular contractual relationship and the particular circumstances of the case. But, like Phillips J, I am satisfied that a failure to perform may sometimes signify to a repudiating party an election by the aggrieved party to treat the contract as at an end. Postulate the case where an employer at the end of a day tells a contractor that he, the employer, is repudiating the contract and that the contractor need not return the next day. The contractor does not return the next day or at all. It seems to me that the contractor&#8217;s failure to return may, in the absence of any other explanation, convey a decision to treat the contract as at an end. Another example may be an overseas sale providing for shipment on a named ship in a given month. The seller is obliged to obtain an export licence. The buyer repudiates the contract before loading starts. To the knowledge of the buyer the seller does not apply for an export licence with the result that the transaction cannot proceed. In such circumstances it may be that an ordinary businessman, circumstanced as the parties were, would conclude that the seller was treating the contract as at an end\u201d."
    ]
},
{
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Anticipatory Breach"
    ],
    "NUMBER": "337",
    "TYPE": "Concept",
    "NAME": "Anticipatory Breach",
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Anticipatory Breach",
    "RELATED": [
        "Breach of Contract - Introduction",
        "Entire and severable obligations",
        "Tender of performance",
        "Penalties/Agreed sums payable on breach",
        "Breach of contract \u2013 the basic rights",
        "Substantial performance",
        "Insistence on performance",
        "Law Reform (Frustrated Contracts) Act 1943",
        "The election to terminate",
        "Contractual quantum meruit",
        "Timing",
        "Section 1: treating a contract term as a misrepresentation"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Anticipatory Breach</span></span><br>&emsp;&emsp;Anticipatory breach occurs where one party to an executory contract (one not yet performed) either renounces future performance or puts it out of his power to perform. On one view this cannot accurately be described as a breach of the contract, since no obligation to perform has yet arisen. However, the common law has adopted the position that an anticipatory breach gives rise immediately to rights for the innocent party. This can be explained on the basis, approved in the next case, that the breach is of an implied contract that neither party will do anything inconsistent with the substantive contract in the time between entry into it and performance.<br>&emsp;&emsp;The rights arising on anticipatory breach are to elect to treat the contract as repudiated and sue for damages forthwith, or to disregard the repudiation. It should be noted that if the latter course is adopted, and the other party does in fact perform, there will be no remedy for the earlier indication that he was not going to do so.<br>&emsp;&emsp;An anticipatory breach only occurs where the threshold for repudiation is reached (see above). It must be apparent that the breach would deprive the innocent party of effectively his entire bargain."
    ]
},
{
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Anticipatory Breach"
    ],
    "YEAR": "1853",
    "NUMBER": "338",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff had been engaged to act for the defendant as a travel courier for three months starting on 1 June 1852. The contract was made in April of that year. On 11 May, the defendant informed that plaintiff in breach of contract that his services would no longer be required. On 22 May the plaintiff brought an action claiming damages for breach of contract.<br>&emsp;&emsp;The Court of Queen&#8217;s Bench held that this claim could properly be initiated even before the date for performance of the contract had arrived. It was not necessary for the plaintiff to prove that he had still been ready to carry out his side of the bargain on the due date for the commencement of contractual performance.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Campbell CJ: \u201cIf the plaintiff has no remedy for breach of the contract unless he treats the contract as in force, and acts upon it down to the 1<sup>st</sup> June 1852, it follows that, until then, he must enter into no employment which will interfere with his promise \u201cto start with the defendant on such travels on the day and year,\u201d and that he must then be properly equipped in all respects as a courier for a three months&#8217; tour on the continent of Europe. But it is surely much more rational, and more for the benefit of both parties, that, after the renunciation of the agreement by the defendant, the plaintiff should be at liberty to consider himself absolved from any future performance of it, retaining his right to sue for any damage he has suffered from the breach of it. Thus, instead of remaining idle and laying out money in preparations which must be useless, he is at liberty to seek service under another employer, which would go in mitigation of the damages to which he would otherwise be entitled for a breach of the contract. It seems strange that the defendant, after renouncing the contract, and absolutely declaring that he will never act under it, should be permitted to object that faith is given to his assertion, and that an opportunity is not left to him of changing his mind\u201d.<br>&emsp;&emsp;The law is particularly clearly explained in the next case, which is authority for the innocent party&#8217;s freedom to accept or reject the other&#8217;s repudiation."
    ],
    "NAME": "Hochster v De la Tour",
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Anticipatory Breach",
    "CITATION": "Hochster v De la Tour (1853) 2 E &amp; B 678",
    "RELATED": [
        "Frost v Knight",
        "Sumpter v Hedges",
        "Bolton v Mahadeva",
        "Dunlop v New Garage",
        "Cutter v Powell",
        "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
        "Photo Production Ltd v Securicor Transport Ltd",
        "Startup v MacDonald",
        "White & Carter (Councils) Ltd v McGregor",
        "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "Pankhania v Hackney Borough Council",
        "Attwood v Small"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Anticipatory Breach"
    ],
    "YEAR": "1872",
    "NUMBER": "339",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The defendant made a contract of engagement (then binding) with the plaintiff by which he promised to marry her when his father died. Before that event occurred, the defendant made it clear that he would not perform the contract. The plaintiff sued.<br>&emsp;&emsp;The Court of Exchequer Chamber applied <i>Hochster v De la Tour</i>, holding that an immediate action for damages lay.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Cockburn CJ: \u201cThe law with reference to a contract to be performed at a future time, where the party bound to performance announces prior to the time his intention not to perform it \u2026 may be thus stated. The promisee, if he pleases, may treat the notice of intention as inoperative, and await the time when the contract is to be executed, and then hold the other party responsible for all the consequences of non-performance: but in that case he keeps the contract alive for the benefit of the other party as well as his own; he remains subject to all his own obligations and liabilities under it, and enables the other party not only to complete the contract, if so advised, notwithstanding his previous repudiation of it, but also to take advantage of any supervening circumstances which would justify him in declining to complete it.<br>&emsp;&emsp;On the other hand, the promisee may, if he thinks proper, treat the repudiation of the other party as a wrongful putting an end to the contract, and may at once bring his action as on a breach of it; and in such action he will be entitled to such damages as would have arisen from the non-performance of the contract at the appointed time, subject, however, to abatement in respect of any circumstances which may have afforded him the means of mitigating his loss\u201d."
    ],
    "NAME": "Frost v Knight",
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Anticipatory Breach",
    "CITATION": "Frost v Knight (1872) LR Exch 111",
    "RELATED": [
        "Hochster v De la Tour",
        "Startup v MacDonald",
        "White & Carter (Councils) Ltd v McGregor",
        "Sumpter v Hedges",
        "Bolton v Mahadeva",
        "Dunlop v New Garage",
        "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
        "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "Cutter v Powell",
        "Photo Production Ltd v Securicor Transport Ltd",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Caparo Industries plc v Dickman"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Breach of Contract"
    ],
    "NUMBER": "340",
    "TYPE": "Concept",
    "NAME": "Entire and severable obligations",
    "CATEGORY": "Breach of Contract",
    "RELATED": [
        "Insistence on performance",
        "Substantial performance",
        "Anticipatory Breach",
        "The election to terminate",
        "Breach of contract \u2013 the basic rights",
        "Tender of performance",
        "Contractual quantum meruit",
        "Penalties/Agreed sums payable on breach",
        "Breach of Contract - Introduction",
        "Exclusion and limitation clauses",
        "Unilateral Mistake",
        "Towards Promissory Estoppel - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Entire and severable obligations</span></span><br>&emsp;&emsp;This topic is linked to the preceding one in the following way. The question whether a breach of contract is such as to deprive the innocent party of substantially their entire bargain depends not only on the magnitude of the breach, but also upon the purpose and structure of the contract. In some instances it will easily be shown that a given breach leaves little or nothing of value for the other party (for example, wholly defective goods are delivered). Statute confirms the traditional view of the common law that in this situation the contact may be terminated.<br>&emsp;&emsp;However, if the contract is for the delivery of several consignments of goods, and one such consignment proves wholly defective, it is not so obvious that this would justify termination of the overall contract. No doubt the affected consignment could be rejected, but a common sense view of the breach in the context of the broader relationship between the parties tends to confine its impact to one part of the contract. The rest is not affected.<br>&emsp;&emsp;This shift in perspective is particularly significant where the contract specifies a sum of money to be paid by one party in return for the other&#8217;s performance. If that performance is regarded as entire, then the innocent party may withhold his own performance (the making of payment). If the contract is divisible, payment must be made, though it may be reduced to take account of the other&#8217;s default.<br>&emsp;&emsp;The next case is a well-known example of an \u201centire\u201d contract, and the injustice to which that analysis is capable of leading."
    ]
},
{
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Entire and Severable Obligations"
    ],
    "YEAR": "1795",
    "NUMBER": "341",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview </span></span><br>&emsp;&emsp;The master of the <i>Governor Parry</i> had agreed \u201c...to pay to Mr T. Cutter the sum of 30 guineas, provided he proceeds, continues and does his duty as second mate in the said ship from [Kingston, Jamaica] to the port of Liverpool\u201d. Cutter, after performing his duties for somewhat more than half the voyage, died. His widow, who was his executrix, sued for payment of a proportionate part of 30 guineas.<br>&emsp;&emsp;The court held that she could recover no part of the money. On its true construction, the contract made payment dependent on completed performance, and it had not been rendered. The fact that the agreed sum was very much higher than normal wages appeared to amount to a form of insurance or an inducement to Cutter to complete his duties, allocating to him the risk of non-performance. The plaintiff had attempted to mount a restitutionary claim for reasonable and proportionate remuneration on an implied contract. No contract could be implied against the express one.<br>&emsp;&emsp;There exist two routes away from the harshness of this outcome, even where a contract is regarded as indivisible. They will be examined in turn."
    ],
    "NAME": "Cutter v Powell",
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Entire and Severable Obligations",
    "CITATION": "Cutter v Powell (1795) 6 TR 320",
    "RELATED": [
        "Frost v Knight",
        "Hochster v De la Tour",
        "Startup v MacDonald",
        "Dunlop v New Garage",
        "Photo Production Ltd v Securicor Transport Ltd",
        "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
        "White & Carter (Councils) Ltd v McGregor",
        "Bolton v Mahadeva",
        "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "Sumpter v Hedges",
        "Attwood v Small",
        "Herne Bay Steam Boat Co v Hutton"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Breach of Contract"
    ],
    "NUMBER": "342",
    "TYPE": "Concept",
    "NAME": "Contractual quantum meruit",
    "CATEGORY": "Breach of Contract",
    "RELATED": [
        "Breach of contract \u2013 the basic rights",
        "The election to terminate",
        "Penalties/Agreed sums payable on breach",
        "Substantial performance",
        "Entire and severable obligations",
        "Anticipatory Breach",
        "Tender of performance",
        "Breach of Contract - Introduction",
        "Insistence on performance",
        "Artificially limiting the matrix of fact",
        "Characteristics of Promissory Estoppel",
        "The Consumer Rights Act 2015"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Contractual quantum meruit</span></span><br>&emsp;&emsp;The first (alluded to in the case above) is the more complex of the two. Where performance of an entire contract has been left incomplete, the contract price cannot be claimed, but it may be possible to imply a fresh contract. Into this implied contract there can be implied in turn a \u201cquantum meruit\u201d; in other words a promise to pay a reasonable sum for a benefit conferred.<br>&emsp;&emsp;For this device to work, it will be necessary for the party in default to show that the other exercised a free choice to take the benefit of as much work as the first had done, by building on it in some sense and thereby adopting it. The partial performance of the contract is regarded as the offer of a fresh contract, and the other&#8217;s adoption of it is regarded as an acceptance."
    ]
},
{
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Contractual Quantum Meruit"
    ],
    "YEAR": "1898",
    "NUMBER": "343",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff, a builder, contracted to erect two houses and a stable on the defendant&#8217;s land for payment of \u00a3565. After he had done work to the value of approximately \u00a3333, and received payment of part of the overall price, he announced that he had run out of money and was unable to complete the work. The defendant finished the buildings himself, using materials which the plaintiff had left on site. The plaintiff sued for the value of the work done and the materials used. At first instance he recovered a sum in respect of the materials, but not the work.<br>&emsp;&emsp;The Court of Appeal dismissed his appeal. It was not possible, on these facts, to regard the defendant as having had a choice whether or not to leave the buildings in their unfinished state. He had, however, exercised choice in making use of the materials left by the plaintiff, and was rightly held liable to pay for those on the quantum meruit basis.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;This outcome was more fully explained by Collins LJ: \u201cThere are cases in which, though the plaintiff has abandoned the performance of a contract, it is possible for him to raise the inference of a new contract to pay for the work done on a <i>quantum meruit</i> from the defendant&#8217;s having taken the benefit of that work, but, in order that that may be done, the circumstances must be such as to give an option to the defendant to take or not to take the benefit of the work done. It is only where the circumstances are such as to give that option that there is any evidence on which to ground the inference of a new contract. Where, as in the case of work done on land, the circumstances are such as to give the defendant no option whether he will take the benefit of the work or not, then one must look to other facts than the mere taking the benefit of the work in order to ground the inference of a new contract. In this case I see no other facts on which such an inference can be founded. The mere fact that a defendant is in possession of what he cannot help keeping, or even has done work upon it, affords no ground for such an inference. He is not bound to keep unfinished a building which in an incomplete state would be a nuisance on his land. I am therefore of opinion that the plaintiff was not entitled to recover for the work which he had done\u201d."
    ],
    "NAME": "Sumpter v Hedges",
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Contractual Quantum Meruit",
    "CITATION": "Sumpter v Hedges [1898] 1 QB 673",
    "RELATED": [
        "Dunlop v New Garage",
        "Bolton v Mahadeva",
        "Cutter v Powell",
        "White & Carter (Councils) Ltd v McGregor",
        "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
        "Frost v Knight",
        "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "Photo Production Ltd v Securicor Transport Ltd",
        "Hochster v De la Tour",
        "Startup v MacDonald",
        "Spice Girls Ltd v Aprilia World Service BV",
        "Hedley Byrne & Co Ltd v Heller & Partners"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Breach of Contract"
    ],
    "NUMBER": "344",
    "TYPE": "Concept",
    "NAME": "Substantial performance",
    "CATEGORY": "Breach of Contract",
    "RELATED": [
        "Breach of contract \u2013 the basic rights",
        "Tender of performance",
        "Entire and severable obligations",
        "Breach of Contract - Introduction",
        "Contractual quantum meruit",
        "The election to terminate",
        "Insistence on performance",
        "Anticipatory Breach",
        "Penalties/Agreed sums payable on breach",
        "Enrichment by subtraction",
        "Rescission",
        "Atiyah's Understanding of Consideration"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Substantial performance</span></span><br>&emsp;&emsp;Even where a contract is found to be entire and indivisible, the party breaching it may still be able to claim payment provided he has rendered \u201csubstantial performance\u201d. The principle is normally derived from the judgment of Lord Mansfield in <i>Boone v Eyre</i> (1779).<br>&emsp;&emsp;This seems to be an application of the distinction between conditions and warranties. If the contract breaker&#8217;s default amounts to breach of condition, then in not paying any part of the contract price the other is merely asserting his right to withhold further performance of his own contractual duties, and specifically, the obligation he would otherwise have to pay the contract price. If the default amounts only to a breach of warranty, then substantial performance has been rendered. The innocent party is not free to elect termination of the contract, and must therefore pay the contract price less the amount by which he can show the value of the performance to have been reduced by reason of the breach.<br>&emsp;&emsp;If the matter comes to litigation, then the innocent party will seek to raise the breach of warranty by way of set-off to the price claimed by the other."
    ]
},
{
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Substantial Performance"
    ],
    "YEAR": "1972",
    "NUMBER": "345",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff undertook to install central heating in the defendant&#8217;s house for payment of \u00a3560. The finished system did not heat the house properly (the shortfall in heat output was 10%), and it emitted fumes. The county court judge held that the contract had been substantially performed, but assessed the cost of putting the deficiencies right at \u00a3174.50.<br>&emsp;&emsp;The Court of Appeal held that the contract had not been substantially performed on the basis that the system did not work properly and emitted fumes. The defendant was therefore justified in withholding payment in its entirety, even though work of some value had been done for him. The court commented that this outcome was not unjust; the plaintiff had been asked to remedy the defects, but had refused to do so.<br>&emsp;&emsp;There may be a failure of substantial performance even if the work performed by one party is not objectively of poor quality. The next case gives quite a striking example."
    ],
    "NAME": "Bolton v Mahadeva",
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Substantial Performance",
    "CITATION": "Bolton v Mahadeva [1972] 1 WLR 1009",
    "RELATED": [
        "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
        "Photo Production Ltd v Securicor Transport Ltd",
        "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "Hochster v De la Tour",
        "Startup v MacDonald",
        "Frost v Knight",
        "Cutter v Powell",
        "Sumpter v Hedges",
        "White & Carter (Councils) Ltd v McGregor",
        "Dunlop v New Garage",
        "Pankhania v Hackney Borough Council",
        "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Substantial Performance"
    ],
    "YEAR": "1900",
    "NUMBER": "346",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;After the \u201cLiddesdale\u201d ran aground off the coast of Western Australia, the shipowner agreed a programme of repair work with the plaintiffs for a fixed sum. Work was done, competently, and it increased the value of the ship. However, it was not the contractually specified work. Iron instead of steel girders had been used; iron girders were more expensive, and the plaintiffs maintained that they were to the advantage of the ship.<br>&emsp;&emsp;The Privy Council held that the contract had not been substantially performed, so that the plaintiffs could not mount an action based on the agreed price. They were not able to recover on a quantum meruit basis, because no implied contract could be found in these circumstances; the shipowner had had no option but to take back his ship. The case was to be distinguished from one in which non-contractual goods were delivered and then kept after the discrepancy had been realised."
    ],
    "NAME": "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Substantial Performance",
    "CITATION": "Forman &amp; Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d [1900] AC 190",
    "RELATED": [
        "Bolton v Mahadeva",
        "Hochster v De la Tour",
        "Dunlop v New Garage",
        "Sumpter v Hedges",
        "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "White & Carter (Councils) Ltd v McGregor",
        "Photo Production Ltd v Securicor Transport Ltd",
        "Frost v Knight",
        "Cutter v Powell",
        "Startup v MacDonald",
        "Pankhania v Hackney Borough Council",
        "Bank Line Ltd v Arthur Capel & Co"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Breach of Contract"
    ],
    "NUMBER": "347",
    "TYPE": "Concept",
    "NAME": "Tender of performance",
    "CATEGORY": "Breach of Contract",
    "RELATED": [
        "The election to terminate",
        "Anticipatory Breach",
        "Substantial performance",
        "Contractual quantum meruit",
        "Penalties/Agreed sums payable on breach",
        "Breach of Contract - Introduction",
        "Insistence on performance",
        "Breach of contract \u2013 the basic rights",
        "Entire and severable obligations",
        "Unilateral Mistake",
        "Special types of loss",
        "Consideration Must Be Requested"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Tender of performance</span></span><br>&emsp;&emsp;There is one circumstance (apart from frustration, etc.) in which a failure to perform contractual duties will not amount to breach. One party may be wrongfully prevented from performing by the default of the other, in which case the law will give him a measure of protection. The doctrine of \u201ctender of performance\u201d is akin to an estoppel."
    ]
},
{
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Tender of Performance"
    ],
    "YEAR": "1843",
    "NUMBER": "348",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;A contract for the sale of 10 tons of linseed oil required the seller to deliver it to the buyer \u201cwithin the last fourteen days of March\u201d. The oil was delivered within that period, although at 8.30pm on 31 March, a Saturday. The buyer refused to take delivery of it at that hour. A jury found that the conduct of the seller was unreasonable, but that had the buyer taken delivery, he would have had the opportunity to inspect the oil before the delivery period expired at midnight.<br>&emsp;&emsp;The court held that the buyer was wrong to refuse to take delivery, so that the seller could maintain an action for breach of contract.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Baron Rolfe&#8217;s statement of the law is rightly regarded by the editors of <i>Cheshire &amp; Fifoot</i> as a model of lucidity: \u201cIn every contract by which a party binds himself to deliver goods or pay money to another, he in fact engages to do an act which he cannot completely perform without the concurrence of the party to whom the delivery or the payment is to be made. Without acceptance on the part of him who is to receive, the act of him who is to deliver can amount only to a tender. But the law considers a party who has entered into a contract to deliver goods or pay money to another as having, substantially, performed it if he has tendered the goods or the money... provided only that the tender has been made under such circumstances that the party to whom it has been made has had a reasonable opportunity of examining the goods, or the money, tendered, in order to ascertain that the thing tendered really was what it purported to be. Indeed, without such an opportunity an offer to deliver or to pay does not amount to a tender. Now to apply this principle to the present case. The contract was to deliver the oil before the end of March. The plaintiffs did in pursuance of that contract tender the oil to the defendant at a time which, according to the express finding of the jury, left him full opportunity to examine, weigh and receive it before the end of March. If he had then accepted it ... the contract would have been literally performed; and the neglect of the defendant to perform his part of the contract ... cannot in my opinion in any manner affect the rights of the plaintiffs ...They fulfilled all they had contracted to do.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">Only the last sentence of the passage quoted above requires qualification. The seller had not, of course, fulfilled all he had contracted to do because he still had the oil. Therefore, an action for the contract price could not be maintained, because it would amount to \u201cdouble recovery\u201d.</span><br>&emsp;&emsp;<span class=\"it\">In fact, the maxim that \u201ctender of performance is as good as performance\u201d needs to be applied with care. Its effect here is not to put the seller in the position in which he would have been but for the buyer&#8217;s default. Rather, it provides a complete defence to an action by the buyer for non-delivery, and it enables the seller to bring a claim for damages. The measure of that claim would be the difference between the market value of the oil, and the price (if it was indeed higher) which would have been payable pursuant to the contract. The seller would be under no further obligation to attempt to deliver the oil, since the buyer&#8217;s default would amount to a repudiatory breach of contract.</span><br>&emsp;&emsp;<span class=\"it\">In the case of an attempt to pay a debt, the \u201ctender of performance\u201d doctrine would work rather differently. The debtor, having tendered payment, clearly could not be sued for non-payment. However, the debtor would have no action for damages, and the debt would still be owed. The difference between the two situations consists in this; in the second, the debtor continues in possession of something belonging to the creditor, so that his obligation to restore it remains. In the case of a sale of goods, the same analysis cannot be applied.</span><br>&emsp;&emsp;<span class=\"it\">In the case of a contract of employment, the situation is again different. Here, the doctrine of \u201ctender of performance\u201d simply has no application. This is a matter of policy. The courts&#8217; distaste at the prospect of an employee pointlessly holding himself available for work when his services have (albeit wrongfully) been refused is apparent in Hochster v De la Tour above, and will be met with again below. Here, its effect is to disapply the doctrine of tender of performance. </span>"
    ],
    "NAME": "Startup v MacDonald",
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Tender of Performance",
    "CITATION": "Startup v MacDonald (1843) 6 Man &amp; G 593",
    "RELATED": [
        "Hochster v De la Tour",
        "Cutter v Powell",
        "Photo Production Ltd v Securicor Transport Ltd",
        "Sumpter v Hedges",
        "Bolton v Mahadeva",
        "White & Carter (Councils) Ltd v McGregor",
        "Dunlop v New Garage",
        "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "Frost v Knight",
        "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
        "Keates v The Earl of Cadogan",
        "Henderson v Merrett Syndicates"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Breach of Contract"
    ],
    "NUMBER": "349",
    "TYPE": "Concept",
    "NAME": "Insistence on performance",
    "CATEGORY": "Breach of Contract",
    "RELATED": [
        "Breach of contract \u2013 the basic rights",
        "Breach of Contract - Introduction",
        "Substantial performance",
        "Anticipatory Breach",
        "Penalties/Agreed sums payable on breach",
        "Contractual quantum meruit",
        "Entire and severable obligations",
        "The election to terminate",
        "Tender of performance",
        "The old principles of \u201clegal\u201d interpretation",
        "Mistake - Introduction",
        "The intention with which the statement was made"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Insistence on performance</span></span><br>&emsp;&emsp;The \u201ctender of performance\u201d doctrine provides fair protection to a party who has sought to perform but been prevented from doing so by the other&#8217;s default. Where performance is in fact possible, notwithstanding the fact that the other no longer wants it, is it possible to insist on providing it in order to claim the agreed price for it?<br>&emsp;&emsp;In certain circumstances it is. This answer derives from basic contractual principle, but has caused a degree of consternation."
    ]
},
{
    "YEAR": "1962",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The appellants supplied litter bins to councils, and obtained income by contracting with third parties to advertise their businesses on plates attached to the sides of the bins. The respondents&#8217; garage had been advertised in this way for three years. The respondent&#8217;s sales manager then made a new contract with the appellants for a further three years of advertising. He had apparent authority to do so (and the contract was therefore valid) but no actual authority. His employer immediately wrote to the appellants to cancel the contract \u2013 an anticipatory repudiation. The appellants declined to accept this repudiation, and began to advertise the garage business on the bins. When the respondent failed to pay any instalments as they fell due, the appellant took advantage of a clause in the contract entitling them to bring an action immediately for the entirety of the agreed price.<br>&emsp;&emsp;The House of Lords held, by a bare majority, that basic contractual principle gave the appellants the right which they were asserting. The respondent&#8217;s repudiation of the contract allowed the other party to elect whether to accept that breach and sue for damages or, as they had opted to do, refuse to accept it and continue to perform. It could not be objected that the appellants had failed to mitigate, because the doctrine of mitigation applied only to claims for damages. This was an action for an agreed sum.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Reid, in the majority, recognised that in some circumstances the right claimed here by the appellants might be defeated on the grounds of policy, or by equitable considerations:<br>&emsp;&emsp;\u201cThe other ground [in preference to a case which his lordship considered wrongly decided] would be that there is some general equitable principle or element of public policy which requires this limitation of the contractual rights of the innocent party. It may well be that, if it can be shown that a person has no legitimate interest, financial or otherwise, in performing the contract rather than claiming damages, he ought not to be allowed to saddle the other party with an additional burden with no benefit to himself. If a party has no interest to enforce a stipulation, he cannot in general enforce it: so it might be said that, if a party has no interest to insist on a particular remedy, he ought not to be allowed to insist on it. And, just as a party is not allowed to enforce a penalty, so he ought not to be allowed to penalise the other party by taking one course when another is equally advantageous to him. If I may revert to the example which I gave of a company engaging an expert to prepare an elaborate report and then repudiating before anything was done, it might be that the company could show that the expert had no substantial or legitimate interest in carrying out the work rather than accepting damages: I would think that the <i>de minimis</i> principle would apply in determining whether his interest was substantial, and that he might have a legitimate interest other than an immediate financial interest. But if the expert had no such interest then that might be regarded as a proper case for the exercise of the general equitable jurisdiction of the court. But that is not this case. Here the respondent did not set out to prove that the appellants had no legitimate interest in completing the contract and claiming the contract price rather than claiming damages; there is nothing in the findings of fact to support such a case, and it seems improbable that any such case could have been proved. It is, in my judgment, impossible to say that the appellants should be deprived of their right to claim the contract price merely because the benefit to them, as against claiming damages and reletting their advertising space, might be small in comparison with the loss to the respondent: that is the most that can be said in favour of the respondent\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;White &amp; Carter</i> is a curious case, showing that extrapolation from basic contractual principles will not invariably yield attractive results. Yet the extrapolation is irresistible; repudiatory breach of contract (specifically, breach of condition) does give the innocent party a choice, and in the making of that choice there is no rule that the interests of the contract breaker must be protected.<br>&emsp;&emsp;It has been remarked that this situation will not arise where performance requires the other party&#8217;s co-operation. The co-operation will not be forthcoming, so performance will not take place and the innocent party will be restricted to damages for breach by way of remedy. However, that is merely a practical limitation on the applicability of the rule in <i>White &amp; Carter</i>, not a principled one.<br>&emsp;&emsp;A principled limitation on the rule was advocated by Lord <span class=\"bd\">Denning</span>, among others, who was stridently critical of <i>White &amp; Carter</i>. He said (in <i>The Puerto Buitrago</i> (1976)) that he would follow it only because it was House of Lords authority, but added that in his view the rule could not be reconciled with principle governing the availability of specific performance. Specific performance issues only at the discretion of the court, and will not be granted where damages would be an adequate remedy. To invoke the rule in <i>White v Carter</i> is to extort the equivalent of specific performance which, if it had depended on the court, would have been refused.<br>&emsp;&emsp;In employment cases, Lord Denning&#8217;s doubts have hardened into legal fact. An employee, dismissed in breach of contract, cannot rely on <i>White &amp; Carter</i> in any circumstances, any more than he would be able to obtain specific performance (or invoke the doctrine of tender of performance)."
    ],
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Insistence on Performance",
    "CITATION": "White &amp; Carter (Councils) Ltd v McGregor [1962] AC 413",
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Insistence on Performance"
    ],
    "RELATED": [
        "Startup v MacDonald",
        "Dunlop v New Garage",
        "Cutter v Powell",
        "Bolton v Mahadeva",
        "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
        "Hochster v De la Tour",
        "Photo Production Ltd v Securicor Transport Ltd",
        "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "Sumpter v Hedges",
        "Frost v Knight",
        "Blackburn Bobbin Co Ltd v T W Allen & Sons Ltd",
        "Hedley Byrne & Co Ltd v Heller & Partners"
    ],
    "NUMBER": "350",
    "TYPE": "Case",
    "NAME": "White & Carter (Councils) Ltd v McGregor",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Breach of Contract"
    ],
    "NUMBER": "351",
    "TYPE": "Concept",
    "NAME": "Penalties/Agreed sums payable on breach",
    "CATEGORY": "Breach of Contract",
    "RELATED": [
        "Breach of Contract - Introduction",
        "Entire and severable obligations",
        "The election to terminate",
        "Tender of performance",
        "Substantial performance",
        "Insistence on performance",
        "Breach of contract \u2013 the basic rights",
        "Contractual quantum meruit",
        "Anticipatory Breach",
        "Exclusion and limitation clauses",
        "Deferred Agreements",
        "Importance of Interpretation"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Penalties/Agreed sums payable on breach</span></span><br>&emsp;&emsp;Where there has been performance, or at least substantial performance, the agreed (or \u201cliquidated\u201d) sum for which the claimant sues is the contract price. On fundamental principles of consideration the court cannot concern itself with the question of whether the relationship between performance and price represents a bad or an extravagantly good bargain for either party. This is a matter of freedom of contract.<br>&emsp;&emsp;However, the contract may prescribe a sum to be paid, not upon completed performance, but upon breach. Here, it has traditionally been thought that the court may take a close and a comparatively paternalistic interest in the parties&#8217; deal.<br>&emsp;&emsp;If a sum made payable in these circumstances is nothing more than a pre-agreed estimate of the damage likely to be caused by the breach, then there is no objection. This feature of a contract is known as \u201cliquidated damages\u201d. If, however, it appears that the agreed sum is so disproportionate to the innocent party&#8217;s actual loss that it must have been included in the contract \u201c<i>in terrorem</i>\u201d of the other (to \u201cterrify\u201d the other into not committing a breach) then it is a penalty. The policy of the law is to disallow penalty clauses."
    ]
},
{
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Penalties/Agreed Sums Payable on Breach"
    ],
    "YEAR": "1915",
    "NUMBER": "352",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Dunlop supplied tyres to the defendant dealers subject to a price maintenance agreement. The contract provided that the tyres were not to be resold at less than a stipulated price, and stated that for every tyre sold in breach of this requirement the dealer would pay Dunlop \u00a35 (a substantial sum at the time) \u201cby way of liquidated damages and not as a penalty\u201d. When breaches of this agreement were discovered, Dunlop brought an action for liquidated damages. It was allowed by the trial judge, but his decision was reversed by the Court of Appeal on the ground that the payment clause was a penalty.<br>&emsp;&emsp;The House of Lords reversed the Court of Appeal&#8217;s decision. The \u00a35 payment was a genuine pre-estimate of loss. It was necessary to bear in mind the extent of the harm which Dunlop would be likely to suffer from under-cutting. The agreement of an admittedly large sum by way of compensation was not unreasonable, given the further fact that actual loss of this extended type would be difficult to quantify.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Lord Dunedin gave guidelines for distinguishing between penalties and genuine pre-estimates of loss, which have since become very well known. They are paraphrased here.<br>&emsp;&emsp;1. The sum payable is a penalty if it is extravagantly large in comparison with the greatest loss which the breach could possibly cause.<br>&emsp;&emsp;2. The sum is a penalty if the breach consists in failing to pay money, and the forfeit is larger than the amount which was to be paid.<br>&emsp;&emsp;3. If the sum is made payable on only one specified breach (rather than many), there is a presumption that it represents a genuine pre-estimate of loss.<br>&emsp;&emsp;4. If the sum is made payable for a range of breaches, there is a presumption that it is a penalty.<br>&emsp;&emsp;As seen in <i>Dunlop</i> itself, the guidance above will not prevent a court from taking a lenient view of a payment clause if it is apparent that actual loss would be difficult to assess.<br>&emsp;&emsp;It remains to be pointed out that the burden of proof lies on the party from whom payment is demanded to show that the obligation should be disallowed as a penalty. This is reasonable, since the clause has been the subject of agreement. However, the parties&#8217; description of the clause will be taken into account by the court. If it is described as a pre-estimate of loss, it will be presumed to be so. If (somewhat naively) it has been described as a penalty, the burden shifts to one of disproof.<br>&emsp;&emsp;A recent Supreme Court case, decided exactly 100 years after <i>Dunlop</i>, has examined the question of penalty clauses in detail. The account below gives no more than an introduction to it."
    ],
    "NAME": "Dunlop v New Garage",
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Penalties/Agreed Sums Payable on Breach",
    "CITATION": "Dunlop Pneumatic Tyre Co Ltd v New Garage and Motor Co Ltd [1915] AC 79",
    "RELATED": [
        "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "Sumpter v Hedges",
        "Frost v Knight",
        "Bolton v Mahadeva",
        "Startup v MacDonald",
        "Hochster v De la Tour",
        "Cutter v Powell",
        "White & Carter (Councils) Ltd v McGregor",
        "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
        "Photo Production Ltd v Securicor Transport Ltd",
        "Smith v Land and House Property Corporation",
        "Spice Girls Ltd v Aprilia World Service BV"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Breach of Contract",
        "Introduction",
        "Penalties/Agreed Sums Payable on Breach"
    ],
    "YEAR": "2015",
    "NUMBER": "353",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The first appeal arose from the sale of Mr Makdessi of a business founded by him which had grown to be the largest advertising and marketing communications group in the Middle East. The contract of sale relevantly stipulated that if, after sale, Mr Makdessi were to be in breach of restrictive covenants designed to prevent him from competing against the business (a) he would not be paid the final two instalments of the sale price (clause 5.1); and (b) he could be required to sell his remaining shares in the business at a price which excluded the value of its goodwill (clause 5.6). He breached the covenants, but argued that the two clauses were unenforceable against him since they were penalties. The Court of Appeal upheld his case.<br>&emsp;&emsp;The second appeal arose from the imposition of a \u00a385 charge upon Mr Beavis for leaving his car for about one hour longer than the two hour limit in a car park managed by ParkingEye Ltd on behalf of a retail park in Chelmsford. He argued that the charge was invalid at common law as a penalty, and breached the provisions of the Unfair Terms in Consumer Contracts Regulations 1999, then in force, since it was unfair. The Court of Appeal rejected both his arguments.<br>&emsp;&emsp;The Supreme Court found against Makdessi and, (by a majority of 6:1, Lord Toulson dissenting) against Beavis. In Makdessi&#8217;s case, the two clauses in question were primary obligations of the contract of sale, serving to fix the price (see the distinction between primary and secondary or remedial obligations as explained by L. <span class=\"bd\">Diplock</span> in <i>PhotoProductions v Securicor</i> <i>(1980</i>)). Primary contractual obligations cannot be impugned as penalties. In Beavis, the charge notice was secondary, but was not penal in view of the amount payable and the fact that ParkingEye had a legitimate interest in levying it on overstayers. Lord Toulson, dissenting, was of opinion that that charging notice fell foul of the 1999 Regulations.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The problem with the penalty rule is that on the one hand it is an infringement upon freedom of contract, whilst on the other hand it has been deemed contrary to public policy to permit parties albeit by agreement to set up private punitive regimes.<br>&emsp;&emsp;Lords Neuberger and Sumption begin their joint speech by observing that the penalty rule is \u201can ancient, haphazardly constructed edifice which has not weathered well...\u201d. They trace its emergence from the inclination of equity to consider relief against forfeiture and against the inordinate penalties inherent within the device (encountered in <i>Pinnel&#8217;s Case</i>) of the penal bond with conditional defeasance. The common law appears to have taken over the latter concern, staying the action on a penalty provided that the original debt were paid with interest and costs.<br>&emsp;&emsp;The four tests proposed by Lord Dunedin in the <i>Dunlop</i> case for identifying penalties were observed to have \u201cachieved the status of a quasi-statutory code in the subsequent case-law\u201d. This was not said by way of approval, but rather to introduce the need to consider the rationale of the penalty rule at a more fundamental level. The appropriate level was found in the speech of Lord <span class=\"bd\">Atkin</span>son: what was the nature and extent of the innocent party&#8217;s interest in the performance of the relevant primary obligation? Lords Neuberger and Sumption formulated the following test: \u201c... whether the impugned provision is a secondary obligation which imposes a detriment on the contract-breaker out of all proportion to any legitimate interest of the innocent party in the enforcement of the primary obligation\u201d.<br>&emsp;&emsp;Their Lordships had been invited by the respective parties either to abrogate or to extend the rule, but declined to do so. Against abrogation, some equivalent to the rule was to be found in almost all major western systems of law. Against extension to circumstances not involving a strict breach of contract, the rule was already an inroad upon freedom of contracting, and not therefore to be broadened by judicial decision-making."
    ],
    "NAME": "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
    "CATEGORY": "Breach of Contract &mdash; Introduction &mdash; Penalties/Agreed Sums Payable on Breach",
    "CITATION": "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis [2015] UKSC 67",
    "RELATED": [
        "Dunlop v New Garage",
        "Startup v MacDonald",
        "Sumpter v Hedges",
        "Hochster v De la Tour",
        "Cutter v Powell",
        "Frost v Knight",
        "Bolton v Mahadeva",
        "Forman & Co Proprietary Ltd v The Ship \u201cLiddesdale\u201d",
        "White & Carter (Councils) Ltd v McGregor",
        "Photo Production Ltd v Securicor Transport Ltd",
        "Joseph Constantine Steamship Line Ltd v Imperial Smelting Corporation Ltd",
        "Bank Line Ltd v Arthur Capel & Co"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Remedies"
    ],
    "NUMBER": "354",
    "TYPE": "Concept",
    "NAME": "Remedies - Introduction",
    "CATEGORY": "Remedies",
    "RELATED": [
        "Enrichment without subtraction",
        "A new basis for deciding questions of remoteness?",
        "The basis of quantification",
        "Enrichment by subtraction",
        "The purpose for which damages are awarded",
        "Contract and tort measures compared",
        "The rule in Hadley v Baxendale",
        "Special types of loss",
        "Comments.",
        "Reduction of the contract to writing",
        "Mutual Mistake",
        "Timing."
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Introduction</span></span><br>&emsp;&emsp;This brief, final lecture aims to provide an introduction to contractual remedies apportioned to the syllabus and the expectations of this year. The subject of remedies is extensive, and cannot be treated in detail within the confines of the GDL.<br>&emsp;&emsp;The first section, on damages, is limited to the presentation of basic principles together with some supporting cases. The cases, given as bare citations, are provided only as signposts to lines of authority, and may be useful in the future. There is no expectation, at this stage of the year, that you will read and learn them.<br>&emsp;&emsp;The second section of the lecture deals with the rules on \u201cremoteness of loss\u201d, or \u201cconsequential loss\u201d. They apply to distinguish between those of the claimant&#8217;s losses for which the defendant must compensate in damages, and those for which compensation is not payable even though they were caused by the defendant&#8217;s breach of contract. They cannot simply be set out but need to be taught, and that is the approach which has been taken here.<br>&emsp;&emsp;Recovery for certain types of loss is barred primarily to facilitate contracting. Bishop, Beale &amp; Furmston posit the case of the taxi-driver booked to take Furmston to New York the following morning to negotiate a multi-million dollar deal. The taxi-driver oversleeps, so that Furmston misses his plane \u2013 and the deal. The taxi-driver cannot reasonably be made to stand the loss. If taxis are to be available for hire, and at reasonable prices, there has to be a rule that prevents that activity leading to inordinate liability.<br>&emsp;&emsp;The central issue within the area has been the test for remoteness, and whether there is a valid distinction between the rule as it operates in tort and within contract. The matter is not fully resolved.<br>&emsp;&emsp;The last two sections of the lecture address specific performance and restitution. They consist merely of elementary overviews meant to provide a basic grasp of the major issues within these areas.<br>&emsp;&emsp;For the purposes of the GDL Contract exam there is no expectation that you will have read widely beyond the material set out here."
    ]
},
{
    "CATEGORIES": [
        "Remedies"
    ],
    "NUMBER": "355",
    "TYPE": "Concept",
    "NAME": "The purpose for which damages are awarded",
    "CATEGORY": "Remedies",
    "RELATED": [
        "The basis of quantification",
        "The rule in Hadley v Baxendale",
        "Contract and tort measures compared",
        "Remedies - Introduction",
        "Special types of loss",
        "A new basis for deciding questions of remoteness?",
        "Enrichment without subtraction",
        "Enrichment by subtraction",
        "Frustration - Introduction",
        "Intention to Create Legal Relations - Conclusion",
        "Rescission",
        "Unilateral Mistake"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The purpose for which damages are awarded</span></span><br>&emsp;&emsp;Damages are awarded to compensate the claimant for loss caused by the defendant&#8217;s breach of contract.<br>&emsp;&emsp;In some cases, and perhaps many, this over-arching principle alone will be a sufficient basis to begin the quantification of loss. However, certain important sub-rules are also present within it, either explicitly or implicitly, and should be noted.<br>&emsp;&emsp;An award of damages is compensatory; punitive or \u201cexemplary\u201d or \u201caggravated\u201d damages are not awarded in contract. See <i>Perera v Vandiyar</i> (1953).<br>&emsp;&emsp;Loss must be strictly proven; if no loss can be shown, merely nominal damages will be awarded. However, as long as loss can clearly be shown, mere difficulty in quantifying it need not be fatal to a claim; see further below.<br>&emsp;&emsp;Compensation for loss is the criterion for quantification of damages; the fact that the defendant has coincidentally profited from the breach is not <b>normally</b> relevant. See <i>The Golden Victory</i> (2007)."
    ]
},
{
    "CATEGORIES": [
        "Remedies"
    ],
    "NUMBER": "356",
    "TYPE": "Concept",
    "NAME": "The basis of quantification",
    "CATEGORY": "Remedies",
    "RELATED": [
        "Enrichment by subtraction",
        "Contract and tort measures compared",
        "The rule in Hadley v Baxendale",
        "A new basis for deciding questions of remoteness?",
        "The purpose for which damages are awarded",
        "Remedies - Introduction",
        "Special types of loss",
        "Enrichment without subtraction",
        "Interpretation and precedent",
        "The fraud cases",
        "Making the election to affirm or terminate",
        "Penalties/Agreed sums payable on breach"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The basis of quantification</span></span><br>&emsp;&emsp;The usual claim in breach of contract cases is for the \u201cperformance interest\u201d or \u201cexpectation loss\u201d or \u201closs of bargain\u201d, which is the loss caused by the defendant&#8217;s failure to perform according to the contract&#8217;s terms. See <i>Robinson v Harman</i> (1848) per Parke B.<br>&emsp;&emsp;Expectation loss is usually measured by the diminution in value of what the claimant has received as against the value he would have received if the contract had been correctly performed. The claimant is entitled to the difference between the two.<br>&emsp;&emsp;It follows that if this calculation discloses no loss (because the claimant made a bad bargain), then only nominal damages will be awarded.<br>&emsp;&emsp;Expectation damages may cover the cost of procuring the benefit intended to be provided by the contract \u2013 the cost of cure \u2013 but only where the cost of cure is proportionate to the disadvantage produced by the breach. See <i>Ruxley Electronics v Forsyth</i> (1996).<br>&emsp;&emsp;Instead of claiming expectation loss, the claimant may elect to claim reliance loss. Reliance loss consists of expenditure on the performance of the contract which has been wasted because of the defendant&#8217;s breach. See <i>Anglia TV v Reed</i> (1972).<br>&emsp;&emsp;A reliance claim will not succeed if it would clearly improve the claimant&#8217;s position over what it would have been if the contract had been performed. In other words, it cannot be used to escape the consequences of a bad bargain. See <i>C &amp; P Haulage v Middleton</i> (1983). A reliance claim is likely to appeal where the claimant&#8217;s expectation, albeit substantial and genuine, is difficult to prove.<br>&emsp;&emsp;Claims for expectation and reliance loss can be combined, subject to the fundamental principle that the combination must not produce \u201cdouble recovery\u201d (eg. recovery of profit and the expenses which would have been incurred in earning it). See <i>Millar&#8217;s Machinery v David Way &amp; Son</i> (1935)."
    ]
},
{
    "CATEGORIES": [
        "Remedies"
    ],
    "NUMBER": "357",
    "TYPE": "Concept",
    "NAME": "Special types of loss",
    "CATEGORY": "Remedies",
    "RELATED": [
        "Contract and tort measures compared",
        "Enrichment by subtraction",
        "Enrichment without subtraction",
        "The purpose for which damages are awarded",
        "Remedies - Introduction",
        "The rule in Hadley v Baxendale",
        "A new basis for deciding questions of remoteness?",
        "The basis of quantification",
        "Offers - Introduction",
        "The contractual nature of the document / expectations of the parties",
        "Over-extending the \u201cmatrix of fact\u201d",
        "Assumption of responsibility / advice to verify"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Special types of loss</span></span><br>&emsp;&emsp;If only a chance has been lost, so that damages cannot be assessed with certainty, the defendant is still required to pay compensation quantified on the basis of good sense. See <i>Chaplin v Hicks</i> (1911).<br>&emsp;&emsp;Damages for mental distress arising from breach of contract will not be awarded unless a major purpose of the contract was to provide pleasure and peace of mind. See <i>Farley v Skinner (No 2)</i> (2001)."
    ]
},
{
    "CATEGORIES": [
        "Remedies"
    ],
    "NUMBER": "358",
    "TYPE": "Concept",
    "NAME": "The rule in Hadley v Baxendale",
    "CATEGORY": "Remedies",
    "RELATED": [
        "Remedies - Introduction",
        "The basis of quantification",
        "Contract and tort measures compared",
        "The purpose for which damages are awarded",
        "Enrichment by subtraction",
        "A new basis for deciding questions of remoteness?",
        "Enrichment without subtraction",
        "Special types of loss",
        "Commercial Agreements",
        "Intention to Create Legal Relations - Conclusion",
        "Acceptance By Silence/Inactivity",
        "Incorporation of Terms - Introduction"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">The rule in Hadley v Baxendale</span></span>"
    ]
},
{
    "YEAR": "1854",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff was the owner of a mill in Gloucester. The defendant, a carrier, was engaged by him to take the mill&#8217;s crank-shaft to Greenwich as a pattern for a new shaft, and to re-deliver it. The defendant promised that delivery at Greenwich would take place the next day, but delayed so that a further five days passed. During this time the mill was at a standstill, because there was no spare crank-shaft. The plaintiff sued the defendant for damages for breach of contract, including damages for loss of profits which the mill would have earned if active.<br>&emsp;&emsp;The Court of Exchequer held that the lost profits were not recoverable from the carrier. The loss arose from the unusual circumstance that the mill had only the one crank-shaft. Therefore, although the loss was a consequence of the defendant&#8217;s breach, it could not be regarded as arising in the ordinary course of things; most mills would have had a spare. Nor had the unusual circumstance been known to the defendant. If it had been, then that would have fixed him with liability for it.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;Alderson B explained these two rationales for recovery in the following passage, thought by Professor Burrows to be the most cited in English contract law:<br>&emsp;&emsp;\u201cNow we think the proper rule in such a case as the present is this:- Where two parties have made a contract which one of them has broken, the damages which the other party ought to receive in respect of such breach should be such as may fairly and reasonably be considered either arising naturally, ie. according to the usual course of things, from such breach of contract itself, or such as may reasonably be supposed to have been in the contemplation of both parties, at the time they made the contract, as the probable result of the breach of it\u201d.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;<span class=\"bd\">McKendrick</span> helpfully elucidates three points of importance to an understanding of <i>Hadley v Baxendale</i>. The first is that the rule focuses attention on the parties&#8217; state of mind at the time of entry into the contract. That is because the court, at least in principle, is concerned to gauge the contractual allocation of risk (out of deference to the parties&#8217; intention and to the principle of freedom of contract). Liability for unusual loss cannot be sprung on a defendant who had no opportunity to bargain for protection against it or for compensation for running the risk of it.<br>&emsp;&emsp;The second point relates simply to how much the carrier knew. The third point is that <i>Hadley v Baxendale</i> crucially leaves it unclear whether contemplation of special circumstances is sufficient to fix the defendant with liability for the loss arising from them, or whether something more akin to an agreement to accept liability is required. This question is the subject of the important and recent House of Lords case \u201c<i>The Achilleas</i>\u201d.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">The traditional understanding of the rule in Hadley v Baxendale, and more particularly its second limb, is that if the defendant gains knowledge of a risk of unusual loss that will render him liable if the loss occurs through his breach of contract. Professor Richard Danzig has made the interesting point that the relationship between this principle and the facts underlying Hadley v Baxendale is somewhat ironic.</span><br>&emsp;&emsp;<span class=\"it\">Most short accounts of the case describe the defendant, Baxendale, as a common carrier, and so he was. More to the point, however, Joseph Baxendale was a senior partner in the firm of Pickfords. In his article \u201cHadley v Baxendale: a Study in the Industrialization of the Law\u201d, Danzig explains that the size and complexity of Pickfords&#8217; operations were such as to cause astonishment even before the date of this case (Joseph Baxendale himself had played a major role in building the firm up). Pickfords&#8217; internal organisation was so sophisticated that it required study before it could be grasped by the firm&#8217;s employees. Danzig&#8217;s observation is that the judgment in the case lags behind the fact; in the context of a modern mass-transaction business it was simply unrealistic to formulate a rule fitted to custom-made dealing. In Danzig&#8217;s view, it is specifically the protectionism of Alderson B&#8217;s approach which is irrelevant to mass-transactional business. Abnormal loss, for such a firm, will be averaged out across thousands of contracts and, in any event, covered by insurance.</span><br>&emsp;&emsp;<span class=\"it\">The next case narrows the distinction between the two limbs of the rule in <i>Hadley v Baxendale,</i> treating the two types of loss as existing upon a continuum of foreseeability. Its greater significance lies in the terminology used by Asquith LJ to discuss remoteness of loss. This was later taken by the House of Lords to have strayed from the contractual into the tortious approach to consequential loss.</span>"
    ],
    "CATEGORY": "Remedies &mdash; Remoteness of Loss &mdash; Rule In |Hadley v Baxendale|",
    "CITATION": "Hadley v Baxendale (1854) 9 Exch 341",
    "CATEGORIES": [
        "Remedies",
        "Remoteness of Loss",
        "Rule In |Hadley v Baxendale|"
    ],
    "RELATED": [
        "Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "Koufos v Czarnikow Ltd (The Heron II)",
        "H Parsons (Livestock) Ltd v Uttley Ingham & Co",
        "Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "Waltons Stores v Maher",
        "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "Stevenson, Jacques & Co v MacLean",
        "Attorney General of Belize v Belize Telecom Ltd",
        "Ward v Byham",
        "Re Selectmove Ltd - Promissory Estoppel",
        "Stilk v Myrick",
        "Fibrosa SA v Fairbairn Lawson Combe Barbour Ltd"
    ],
    "NUMBER": "359",
    "TYPE": "Case",
    "NAME": "Hadley v Baxendale",
    "FLAGS": [
        "McKendrick"
    ]
},
{
    "CATEGORIES": [
        "Remedies",
        "Remoteness of Loss",
        "Rule In |Hadley v Baxendale|"
    ],
    "YEAR": "1949",
    "NUMBER": "360",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs, who were launderers and dyers, wished to expand their business. They ordered a new and larger boiler from the defendants, who were aware that the plaintiffs&#8217; intention was to put the boiler to use as soon as possible. For delivery, the boiler had to be dismantled, and in the course of that it was badly damaged. It was finally delivered five months late. The plaintiffs claimed (a) loss of profits which they said they would have earned through developing their business during this period; and (b) loss of profits on certain highly lucrative dyeing contracts with the Ministry of Supply which they would have taken on with the new boiler. At first instance no damages were awarded in respect of lost profits.<br>&emsp;&emsp;The Court of Appeal approached the matter on the footing that loss had to be reasonably foreseeable to the defendant at the time of contracting. The claim for general profits was therefore allowed. It would have been obvious to a reasonable person in the defendants&#8217; position that a business prepared to pay some \u00a32000 for new plant, and wishing to obtain it as quickly as possible at a time of scarce laundry facilities, was expecting to operate it for profit. The claim for profits under the special Ministry contracts was held rightly to have been refused, since the boiler manufacturers had no knowledge of the prospects and terms of such contracts.",
        "<span class=\"ud\"><span class=\"bd\">Detail</span></span><br>&emsp;&emsp;In giving judgment, Asquith LJ stated as a general principle that \u201c[i]n cases of breach of contract the aggrieved party is only entitled to recover such part of the loss actually resulting as was at the time of the contract reasonably foreseeable as liable to result from the breach\u201d. The question of foreseeability depended upon the defendant&#8217;s knowledge, which consisted in what he actually knew, and what he would be deemed to have known as a reasonable person. The expression \u201con the cards\u201d aptly indicated the requisite likelihood of loss occurring.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;In order to appreciate the criticism levelled against this language by the House of Lords in the next case, it is enough to take from it Asquith LJ&#8217;s use of the phrase \u201creasonably foreseeable\u201d."
    ],
    "NAME": "Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
    "CATEGORY": "Remedies &mdash; Remoteness of Loss &mdash; Rule In |Hadley v Baxendale|",
    "CITATION": "Victoria Laundry (Windsor) Ltd v Newman Industries Ltd [1949] 2 KB 528",
    "RELATED": [
        "Hadley v Baxendale",
        "H Parsons (Livestock) Ltd v Uttley Ingham & Co",
        "Koufos v Czarnikow Ltd (The Heron II)",
        "Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "Henthorn v Fraser",
        "AEG (UK( Ltd v Logic Resource",
        "Nicolene v Simmonds",
        "Tilden Rent-A-Car Co v Clendinning",
        "Denny v Hancock",
        "Dunlop v New Garage",
        "Dimmock v Hallett",
        "Misrepresentation - Glossary"
    ],
    "TYPE": "Case"
},
{
    "CATEGORIES": [
        "Remedies"
    ],
    "NUMBER": "361",
    "TYPE": "Concept",
    "NAME": "Contract and tort measures compared",
    "CATEGORY": "Remedies",
    "RELATED": [
        "Enrichment without subtraction",
        "Enrichment by subtraction",
        "The purpose for which damages are awarded",
        "A new basis for deciding questions of remoteness?",
        "Remedies - Introduction",
        "The basis of quantification",
        "The rule in Hadley v Baxendale",
        "Special types of loss",
        "Comments",
        "Incomplete and Vague Agreements - Introduction",
        "Over-extending the \u201cmatrix of fact\u201d",
        "The effects of frustration"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Contract and tort measures compared</span></span>"
    ]
},
{
    "CATEGORIES": [
        "Remedies",
        "Remoteness of Loss",
        "Contract and Tort Measures Compared"
    ],
    "YEAR": "1969",
    "NUMBER": "362",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiff chartered the defendant&#8217;s ship, The Heron II, to load 3000 tons of sugar in Constanta, Romania, for shipment to Basrah (or, at the charterers&#8217; option, to Jeddah). In breach of contract the defendants caused the ship to deviate during the voyage, arriving nine days late at Basrah. The market price of sugar at Basrah fell during the nine days, and the plaintiff claimed the price fall in damages. At first instance, the judge found that the defendant had not known of the plaintiff&#8217;s intention to sell the sugar in the market on arrival at Basrah, but had known that there was a sugar market at Basrah. The loss caused by the fall in market price was regarded as too remote. The Court of Appeal reversed this decision.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;The significance of this case lies chiefly in its explanation of the different horizons of recovery of loss in contract and tort respectively. The judgment of Asquith LJ is criticised for its use of phraseology which could be misunderstood as importing the tortious test for remoteness into contract, and for vagueness in describing the level of foreseeability proper to contract. The words \u201creasonably foreseeable\u201d are too redolent of the horizon of recovery in tort established by the leading case of <i>Wagon Mound (No 2)</i> (1976). There, they include results which are far from likely, but which on ordinary tortious principles must nevertheless be deemed foreseeable.<br>&emsp;&emsp;It has rightly been said that their Lordships&#8217; speeches in <i>The Heron II</i> are unedifying in their repeated and none too persuasive attempts to compare and select phrases best suited to summing up the greater likelihood of loss required in contract than in tort. Professor Burrows suggests that the nub of the distinction sought to be drawn in the case amounts to no more than this: a slight possibility of loss is sufficient for tortious liability, whereas contract law requires the risk to be a serious one. There are several indications in the case that the defendant&#8217;s \u201ccontemplation\u201d of a serious risk is required rather than mere \u201cforesight\u201d, but it is questionable whether that distinction amounts to much.<br>&emsp;&emsp;In the face of the House of Lords&#8217; insistence that contract and tort losses are to be treated differently, the next case is a rather surprising foray in the opposite direction."
    ],
    "NAME": "Koufos v Czarnikow Ltd (The Heron II)",
    "CATEGORY": "Remedies &mdash; Remoteness of Loss &mdash; Contract and Tort Measures Compared",
    "CITATION": "Koufos v Czarnikow Ltd (The Heron II) [1969] 1 AC 350",
    "RELATED": [
        "H Parsons (Livestock) Ltd v Uttley Ingham & Co",
        "Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "Hadley v Baxendale",
        "Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "Ward v Byham",
        "Fisher v Bell",
        "Whittington v Seale-Hayne",
        "Brogden v Metropolitan Railway",
        "Hyde v Wrench",
        "L J Korbetis v Transgrain Shipping BV",
        "Birmingham and District Land Co v LNWR",
        "Hartley v Ponsonby"
    ],
    "TYPE": "Case"
},
{
    "YEAR": "1978",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;The plaintiffs ordered a feed hopper from the defendants for the purpose of storing pig nuts. The hopper&#8217;s ventilated top was sealed shut for the purposes of transport, and the defendants failed to unseal it. The nuts stored in the hopper went mouldy, but the plaintiffs continued to feed them to the pigs in the belief that no harm would come of this. In fact a large number of the pigs contracted E coli from eating the mouldy nuts, and died. The plaintiffs sued for the value of the pigs. The defendant argued that this was too remote a consequence of the breach of contract.<br>&emsp;&emsp;The Court of Appeal, affirming the judgment at first instance, unanimously held that the loss was recoverable. However, Lord <span class=\"bd\">Denning MR</span> on the one hand, and on the other hand Scarman and Orr LLJ differed in their reasoning about remoteness of loss in contract and tort. Lord <span class=\"bd\">Denning MR</span> proposed that the \u201ccontemplation of a serious possibility\u201d test from <i>The Heron II</i> was appropriate in the case of loss of profits, whereas the tortious test of reasonable foreseeability should be used in cases of physical damage whether brought in contract or tort. Scarman and Orr LLJ denied that this resolution of the problem was supported by the caselaw, and instead attempted to argue that the type of loss in question must have been a serious possibility, even if the manner of its occurrence was markedly less foreseeable.",
        "<span class=\"ud\"><span class=\"bd\">Discussion</span></span><br>&emsp;&emsp;Neither the approach of Lord Denning MR nor that of the other two judges is easily reconciled with <i>The Heron II</i>. Furthermore, it has been doubted whether the majority&#8217;s analysis can stand with the <i>Victoria Laundry</i> case. If the (unlikely) death of the pigs is brought within the horizon of recovery because the likelihood of mild illness from consuming mouldy feed was a serious possibility, then on a similar analysis the contemplation of loss of some profits in the earlier case should have qualified the loss of exceptional profits as recoverable. It was loss of the same kind.<br>&emsp;&emsp;Perhaps the more general problem brought to light by <i>Parsons v Uttley Ingham</i>, however, is that the test may produce varying results according to the degree of specificity with which the risk is stated. This, of course, is why the <i>Victoria Laundry</i> case was able to distinguish between two types of profit. Similarly it is one thing to ask whether it is likely that the storage of food in a container unfit for the purpose could endanger the livestock which was to eat it. To enquire as to the likelihood of an unventilated hopper causing an outbreak of E Coli may produce a different answer. The greater the specificity with which the question is posed, the more likely it is that answer will insulate the defendant from liability."
    ],
    "CATEGORY": "Remedies &mdash; Remoteness of Loss &mdash; Contract and Tort Measures Compared",
    "CITATION": "H Parsons (Livestock) Ltd v Uttley Ingham &amp; Co [1978] QB 791",
    "CATEGORIES": [
        "Remedies",
        "Remoteness of Loss",
        "Contract and Tort Measures Compared"
    ],
    "RELATED": [
        "Koufos v Czarnikow Ltd (The Heron II)",
        "Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "Hadley v Baxendale",
        "Partridge v Crittenden",
        "Entores v Miles Far East Corporation",
        "Simpkins v Pays",
        "Combe v Combe",
        "Andrews Bros (Bournemouth) Ltd v Singer & Co Ltd",
        "Rose v Pim",
        "Byrne & Co v Van Tienhoven",
        "Grogan v Robin Meredith Plant Hire"
    ],
    "NUMBER": "363",
    "TYPE": "Case",
    "NAME": "H Parsons (Livestock) Ltd v Uttley Ingham & Co",
    "FLAGS": [
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Remedies"
    ],
    "NUMBER": "364",
    "TYPE": "Concept",
    "NAME": "A new basis for deciding questions of remoteness?",
    "CATEGORY": "Remedies",
    "RELATED": [
        "Enrichment without subtraction",
        "Contract and tort measures compared",
        "Special types of loss",
        "Remedies - Introduction",
        "Enrichment by subtraction",
        "The purpose for which damages are awarded",
        "The basis of quantification",
        "The rule in Hadley v Baxendale",
        "Common mistake as to the subject-matter of the contract",
        "The Parol Evidence Rule",
        "The intention with which the statement was made",
        "Innominate terms"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">A new basis for deciding questions of remoteness?</span></span>"
    ]
},
{
    "YEAR": "2008",
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Overview</span></span><br>&emsp;&emsp;Charterers were bound to re-deliver a ship by 2 May 2004. A follow-on charter of the vessel to a third party had been agreed, with a latest delivery date of 8 May. When it became apparent as a result of the charterers&#8217; delay that the ship would not be available by 8 May, the shipowners renegotiated the follow-on charter, and were obliged to agree to a reduction in hire to a significantly lower rate (the market rate having fallen sharply). Redelivery took place on 11 May. The charterers admitted liability for the difference between the originally agreed rate and the new market rate between 2 and 11 May, but the shipowners claimed the difference between the two rates for the entire duration of the follow-on fixture, which was four years. The charterers argued that this loss was too remote.<br>&emsp;&emsp;Arbitrators, by a majority, found that the full loss followed naturally from the breach and therefore fell within the first limb of <i>Hadley v Baxendale</i>. The House of Lords held unanimously that it was too remote, but for differing reasons.",
        "<span class=\"ud\"><span class=\"bd\">Detail </span></span><br>&emsp;&emsp;Lord <span class=\"bd\">Hoffmann</span> and Lord Hope approached the matter by enquiring whether the charterers could be said to have <i>assumed responsibility</i> for all loss arising from the delayed start to the follow-on fixture. This was to be decided by interpretation of the contract in its commercial context; and the apparent understanding of industry experts was that loss would be limited to the overrun period. The rules in <i>Hadley v Baxendale</i> and <i>The Heron II</i> were designed to give effect to the intention of the parties, and to that end should be interpreted flexibly if necessary.<br>&emsp;&emsp;Lord Rodger and Baroness Hale adopted an analysis akin to that of the <i>Victoria Laundry</i> case, distinguishing between the type of loss which had foreseeably arisen from the delay, and the further loss which was not within the charterers&#8217; contemplation.<br>&emsp;&emsp;Lord Walker considered that the purpose of the <i>Hadley v Baxendale</i> rules was to identify the common basis on which the parties were contracting, and denied that the charterers were undertaking liability for any loss whatsoever arising from a situation beyond their knowledge or control. The application of the <i>Hadley v Baxendale</i> rules was general, but could be expected to vary between specialised areas of contracting. Lord Walker approved the analyses of Lords Hoffmann, Hope and Rodger.",
        "<span class=\"ud\"><span class=\"bd\">A closer look</span></span><br>&emsp;&emsp;<span class=\"it\">There are two levels of difficulty in this case. One is to assess what its ratio is, since there is a fairly clear contrast between addressing the problem as one of contextual interpretation of the contract, and applying a default legal rule. Lord Walker&#8217;s speech does not align him definitively with either of these camps.</span><br>&emsp;&emsp;<span class=\"it\">The second level of difficulty lies in determining what the better resolution of such a case would be. Lord Hoffmann&#8217;s approach has the rather impressive characteristic of being entirely in keeping with his attitude to implied terms and to contractual interpretation generally \u2013 see lecture 10. When he points out that the quantification of compensation for loss must be preceded by a principled decision as to the kind of loss which is to be compensated, this has the ring of a good contractual analysis However, it has been criticised because of the risk that it will often lead to uncertainty. On the facts of The Achilleas, there was an industry consensus limiting the charterers&#8217; liability, but that will not be so in every case.</span><br>&emsp;&emsp;<span class=\"it\">Furthermore, it may be doubted as a matter of principle whether the rules on consequential loss can invariably be derived from the parties&#8217; agreement. This would seem to depend on whether they are seen as establishing how much loss can be recovered from the defendant, or whether they exist to protect the defendant from inordinate loss as a matter of policy. Sometimes they may be applied to the first of these ends, and sometimes to the second. To choose in the absence of facts may well be mistaken. </span><br>&emsp;&emsp;<span class=\"it\"> In the case of frustration of common purpose it was once thought possible to have the contract govern even in circumstances which the parties had not remotely envisaged (the implied term theory of frustration). Davis Contractors v Fareham gave the quietus to that notion, replacing it by the candid recognition that frustration was a matter of legal policy rather than the parties&#8217; fictitious intentions \u2013 see lecture 16. Remoteness of loss is arguably similar, though the rules can be displaced by express agreement between the parties just as frustration can be displaced by contractual provisions. Perhaps the most appropriate attitude is one akin to Lord <span class=\"bd\">Denning</span>&#8216;s in The Eugenia; by all means see if the contract has allocated the risk in question, but stop short of insisting that the oracle has spoken if in fact it has not. </span><br>&emsp;&emsp;<span class=\"it\">Cases still more recent than <i>The Achilleas</i> concur in attributing little precedental force to Lord Hoffmann&#8217;s suggested \u201cassumption of responsibility\u201d test, and emphasise the continued relevance of the long-standing rules on remoteness of loss.</span><br>&emsp;&emsp;<span class=\"it\">The bulk of this lecture has concerned damages, since this is the standard remedy for breach of contract in English law.</span><br>&emsp;&emsp;<span class=\"it\">Specific performance, a separate remedy, consists in the court ordering the defendant to carry out a contractual obligation.</span><br>&emsp;&emsp;<span class=\"it\">Beyond the obviously different objectives of damages and specific performance, the two remedies can be contrasted in various other ways. Damages (even if only nominal) are available as of right where a breach can be proven and there is no defence to it. Specific performance issues only at the discretion of the court. The award of damages is a common law remedy; specific performance is an exercise of the court&#8217;s equitable jurisdiction. What is more, the relationship between the two remedies is essentially antithetical since specific performance has traditionally been withheld where damages would be an adequate remedy.</span><br>&emsp;&emsp;<span class=\"it\">Further limitations on the availability of specific performance derive from its equitable origins, and from considerations of practicality and policy. </span><br>&emsp;&emsp;<span class=\"it\">Examples of the first type include the withholding of specific performance where the remedy would cause disproportionate hardship to the defendant; where the remedy would not be granted to enforce the claimant&#8217;s own performance; and where the claimant has not acted equitably. In this last respect the handling of specific performance requires a type of awareness normally associated with legal ethics.</span><br>&emsp;&emsp;<span class=\"it\">Examples of the second type (there is perhaps some overlap) include the principle that specific performance will not normally be ordered if its effect would be to bind the defendant to perform personal services in the context of a failed relationship; or where the court would effectively have to supervise compliance over a lengthy period. A complex regime of supervision is all the more unattractive in view of the fact that default would amount to contempt of court and could therefore result in the imposition of disproportionate sanctions.</span><br>&emsp;&emsp;<span class=\"it\">The classic setting for specific performance is contracts for the sale of land. Land has traditionally been regarded by the courts as unique, so that it follows that an award of damages would not enable a claimant to acquire <i>equivalent land</i>. This reasoning has been extended to other property which can be shown on the evidence to be unique or particularly difficult to obtain.</span><br>&emsp;&emsp;<span class=\"it\">All restitutionary claims are based on the assertion that the defendant has acquired some benefit which ought in fairness to be returned to the claimant. They seek to prevent the defendant&#8217;s unjust enrichment. </span><br>&emsp;&emsp;<span class=\"it\">The major question within restitution concerns the availability of the remedy where the defendant has been enriched, but not at the expense of the claimant.</span><br>&emsp;&emsp;<span class=\"it\">The terminology in common use contrasts \u201cenrichment by subtraction\u201d with \u201cenrichment without subtraction\u201d. </span>"
    ],
    "CATEGORY": "Remedies &mdash; Remoteness of Loss &mdash; a New Basis For Deciding Questions of Remoteness?",
    "CITATION": "Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas) [2008] UKHL 48",
    "CATEGORIES": [
        "Remedies",
        "Remoteness of Loss",
        "a New Basis For Deciding Questions of Remoteness?"
    ],
    "RELATED": [
        "Koufos v Czarnikow Ltd (The Heron II)",
        "Hadley v Baxendale",
        "H Parsons (Livestock) Ltd v Uttley Ingham & Co",
        "Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "Herne Bay Steam Boat Co v Hutton",
        "Thornton v Shoe Lane Parking",
        "Attorney General of Belize v Belize Telecom Ltd",
        "Hillas v Arcos",
        "Dunlop v New Garage",
        "Felthouse v Bindley",
        "Tilden Rent-A-Car Co v Clendinning",
        "Lewis v Averay"
    ],
    "NUMBER": "365",
    "TYPE": "Case",
    "NAME": "Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
    "FLAGS": [
        "Hoffman",
        "Denning"
    ]
},
{
    "CATEGORIES": [
        "Remedies"
    ],
    "NUMBER": "366",
    "TYPE": "Concept",
    "NAME": "Enrichment by subtraction",
    "CATEGORY": "Remedies",
    "RELATED": [
        "Contract and tort measures compared",
        "The basis of quantification",
        "A new basis for deciding questions of remoteness?",
        "The rule in Hadley v Baxendale",
        "The purpose for which damages are awarded",
        "Enrichment without subtraction",
        "Special types of loss",
        "Remedies - Introduction",
        "Objective view of Intention and Agreement",
        "Characteristics of Promissory Estoppel",
        "Control of Exemption Clauses Ucta 1997, Cra 2015 - Introduction",
        "Implication from the parties' legal relationship (\u201cterms implied in law\u201d)"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Enrichment by subtraction</span></span><br>&emsp;&emsp;In the first of these situations, the claimant has suffered loss by reliance, and the defendant has made a corresponding gain. This may come about because of the defendant&#8217;s breach of contract, or it may occur where a contract fails. For instance, the contract may be found too uncertain to be enforced, or it may be defeated by illegality, or terminated by frustration.<br>&emsp;&emsp;The quantum meruit action is a means of obtaining restitution where a contract has failed but the claimant has conferred a valuable benefit on the defendant. Where the claimant has paid a sum of money to the defendant but received nothing in return because of the contract&#8217;s failure, the money may be recovered on a total failure of consideration. In the case of frustration, these restitutionary remedies are effectively codified and refined by the Law Reform (Frustrated Contracts) Act 1943 \u2013 see lecture 16."
    ]
},
{
    "CATEGORIES": [
        "Remedies"
    ],
    "NUMBER": "367",
    "TYPE": "Concept",
    "NAME": "Enrichment without subtraction",
    "CATEGORY": "Remedies",
    "RELATED": [
        "Remedies - Introduction",
        "The basis of quantification",
        "The rule in Hadley v Baxendale",
        "Special types of loss",
        "The purpose for which damages are awarded",
        "Enrichment by subtraction",
        "A new basis for deciding questions of remoteness?",
        "Contract and tort measures compared",
        "Transmission of Acceptance",
        "The intention with which the statement was made",
        "Implication from the parties' legal relationship (\u201cterms implied in law\u201d)",
        "The assessment of delay"
    ],
    "SUMMARY": [
        "<span class=\"ud\"><span class=\"bd\">Enrichment without subtraction</span></span><br>&emsp;&emsp;In the second situation set out above, the case for restitution seems markedly less compelling. The defendant may have made a profit out of breaching a contract, but that has caused no loss to the claimant. Clearly, the compensation principle does not function well as a rationale for requiring the disgorgement of profit here, <b>unless</b> the defendant has breached a fiduciary duty, a duty of confidence, or the claimant&#8217;s proprietary rights.<br>&emsp;&emsp;Where there is no such breach of duty, disgorgement of profits may nevertheless exceptionally be ordered. The leading case is <i>Attorney General v Blake [2001] 1 AC 268</i>, in which the Government successfully prevented the payment of royalties to the defendant on the publication of his memoirs (a breach of contract) in the circumstance that he had been found guilty of treason as a KGB double agent, and had fled to Moscow after escaping prison.<br>&emsp;&emsp;The government suffered no loss by Blake&#8217;s profit, but was nevertheless held by a majority of the House of Lords to have an interest in performance such as to make it just and equitable that the defendant should retain no benefit from his breach of contract.<br>&emsp;&emsp;Although the juristic basis for requiring the disgorgement of profits is controversial, the general adoption of this approach has been suggested as a means of introducing some flexibility into remedial quantification. Two government reports have examined the issue, concluding that it should be left to be worked out by the common law rather than by legislation."
    ]
},
{
    "RELATED": [
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Nicolene v Simmonds",
        "(wl) Parker v Clark",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Sudbrook Trading Estate Ltd v Eggleton",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Alpenstow v Regalian Properties"
    ],
    "YEAR": "1953",
    "COURT": "EWCA",
    "SUMMARY": [
        "as to subject matter",
        "At the present day, since the fusion of law and equity, the position appears to be that when the parties to a contract are to all outward appearances in full and certain agreement, neither of them can set up his own mistake, or the mistake of both of them, so as to make the contract a nullity from the beginning. Even a common mistake as to the subject-matter is good unless and until it is set aside for failure of some condition on which the existence of the contract depends, or for fraud, or on some equitable ground."
    ],
    "CATEGORY": "Contracts",
    "JUDGE": "Singleton LJ; Denning LJ; Morris LJ",
    "CATEGORIES": [
        "Contracts"
    ],
    "NUMBER": "368",
    "TYPE": "Headnotes",
    "NAME": "(wl) Rose v Pim",
    "CITATION": "Rose v Pim [1953] 2 QB 450",
    "CIT": "[1953] 2 QB 450",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Holwell Securities Ltd v Hughes",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) Edwards v Skyways",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Ingram v Little",
        "(wl) Combe v Combe",
        "(wl) Tekdata Interconnections Ltd v Amphenol Ltd",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Pao On v Lau Yiu Long"
    ],
    "YEAR": "1983",
    "COURT": "EWCA",
    "SUMMARY": [
        "Offer and acceptance; mistake; whether bound by acceptance",
        "Where an offerer makes an unambiguous offer to a third party, under a mistake of which the latter is unaware, he is bound by an acceptance of that offer, so long as good consideration is offered."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Landlord and Tenant &mdash; Consideration &mdash; Mistake &mdash; Offer and Acceptance",
    "JUDGE": "Slade LJ; Robert Goff LJ",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Landlord and Tenant",
        "Consideration",
        "Mistake",
        "Offer and Acceptance"
    ],
    "NUMBER": "369",
    "TYPE": "Headnotes",
    "NAME": "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
    "CITATION": "Centrovincial Estates v Merchant Investors Assurance Company Ltd [1983] Com LR 158",
    "CIT": "[1983] Com LR 158"
},
{
    "RELATED": [
        "(wl) Tekdata Interconnections Ltd v Amphenol Ltd",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Ingram v Little",
        "(wl) Daulia Ltd v Four Millbank Nominees Ltd",
        "(wl) Parker v Clark",
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) Chappell & Co v Nestle Co Ltd",
        "(wl) Entores v Miles Far East Corporation",
        "(wl) William Sindall plc v Cambridgeshire County Council",
        "(wl) Kleinwort Benson Ltd v Malaysia Mining Corporation"
    ],
    "YEAR": "1968",
    "COURT": "EWHC",
    "SUMMARY": [
        "Wild birds; protection; offer for sale",
        "There is no offer for sale of a wild bird contrary to the Protection of Birds Act 1954 s.6(1) and Sch.4 when an advertisement constitutes in law merely an invitation to treat. P inserted an advertisement in a periodical named Cage and Aviary Birds under the general heading &#8220;Classified Advertisements&#8221; containing the words &#8220;. . .Bramblefinch cocks, bramblefinch hens, 25s. each.&#8221; T sent 25s. for a hen which he duly received. On P&#8217;s appeal against conviction of unlawfully offering a wild bird for sale, held that the appeal be allowed. ( Fisher v Bell [1961] 1 Q.B. 394 applied, Mella v Monahan [1961] Crim. L.R. 175 applied and dictum of Lord Herschell in Grainger &amp; Son v Gough (Surveyor of Taxes) [1896] A.C. 325 applied)."
    ],
    "CATEGORY": "Animals Other Related Subjects: Commercial Law &mdash; Advertisements &mdash; Birds &mdash; Conservation &mdash; Formation of Contract &mdash; Offers For Sale",
    "JUDGE": "Lord Parker LCJ; Ashworth J; Blain J",
    "CATEGORIES": [
        "Animals Other Related Subjects: Commercial Law",
        "Advertisements",
        "Birds",
        "Conservation",
        "Formation of Contract",
        "Offers For Sale"
    ],
    "NUMBER": "370",
    "TYPE": "Headnotes",
    "NAME": "(wl) Partridge v Crittenden",
    "CITATION": "Partridge v Crittenden [1968] 1 WLR 1204",
    "CIT": "[1968] 1 WLR 1204",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Couchman v Hill",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Car & Universal Finance Co Ltd v Caldwell",
        "(wl) Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Lewis v Averay",
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) Bolton v Mahadeva",
        "(wl) Crossley v Faithful & Gould Holdings"
    ],
    "COURT": "EWHC",
    "SUMMARY": [
        "Restriction of offensive weapons",
        "A shopkeeper who exposes an offensive weapon for sale in his window does not offer it for sale contrary to the Restriction of Offensive Weapons Act 1959 s.1(1) . A shopkeeper put a flick-knife in his window with a ticket saying &#8220;ejector knife - 4s.&#8221;"
    ],
    "CATEGORY": "Criminal Law &mdash; Offensive Weapons &mdash; Sale of Goods",
    "CITATION": "Fisher v Bell [1961] 1 QB 394",
    "YEAR": "1961",
    "CATEGORIES": [
        "Criminal Law",
        "Offensive Weapons",
        "Sale of Goods"
    ],
    "HELD": [
        "the knife was not offered for sale since, in the absence of any definition in the Restriction of Offensive Weapons Act, 1959, extending the meaning of that term, it must be given the meaning attributed to it in the ordinary law of contract. ( Magor and St Mellons Rural DC v Newport Corp [1947-51] C.L.Y. 5812 followed; Keating v Horwood (1926) 135 L.T. 29 distinguished and Wiles v Maddison [1943] 1 All E.R. 315 distinguished)."
    ],
    "NUMBER": "371",
    "TYPE": "Headnotes",
    "NAME": "(wl) Fisher v Bell",
    "JUDGE": "Lord Parker LCJ; Ashworth J; Elwes J",
    "CIT": "[1961] 1 QB 394",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Fisher v Bell",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) Lewis v Averay",
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "(wl) Car & Universal Finance Co Ltd v Caldwell",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Couchman v Hill",
        "(wl) Rose v Pim",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Poisons; sale by or under supervision of registered pharmacist",
        "Where goods are displayed in a shop and it is intended that customers shall go and choose what they want, the contract is not completed until the customer has indicated the article which he needs and the shopkeeper or someone on his behalf accepts that offer, and it makes no difference that the shop is a &#8220;self-service&#8221; shop. The defendants had adopted a &#8220;self-service&#8221; system in their shop, which consisted in allowing persons who resorted to the shop to go to shelves where goods were exposed for sale and marked with the price. They took the article required and went to the cash desk, where the cashier or assistant saw the article, stated the price, and took the money. In one of their departments there were on certain shelves ointments and drugs coming within Part I of the Poisons List. Before any person could leave with what he had bought in that department he had to pass the scrutiny and supervision of a qualified pharmacist. The question for the opinion of the court was whether each sale was effected in accordance with the Pharmacy and Poisons Act 1933 s.18(1)(a)(iii) which provides that the sale of any poison included in Part I of the Poisons List shall not be lawful unless &#8220;the sale is effected by, or under the supervision of, a registered pharmacist.&#8221;"
    ],
    "CATEGORY": "Health Other Related Subjects: Sale of Goods &mdash; Pharmacists &mdash; Poisons &mdash; Sale of Goods",
    "CITATION": "Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd [1953] 1 QB 401",
    "YEAR": "1953",
    "CATEGORIES": [
        "Health Other Related Subjects: Sale of Goods",
        "Pharmacists",
        "Poisons",
        "Sale of Goods"
    ],
    "HELD": [
        "a sale was not completed until the customer&#8217;s offer to buy had been accepted by the defendants by their acceptance of the purchase price, which acceptance took place under the supervision of a registered pharmacist as required by the Pharmacy and Poisons Act 1933 s.18(1)(a)(iii) ."
    ],
    "NUMBER": "372",
    "TYPE": "Headnotes",
    "NAME": "(wl) Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
    "JUDGE": "Romer LJ",
    "CIT": "[1953] 1 QB 401",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Nicolene v Simmonds",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) McCutcheon v David MacBrayne Ltd",
        "(wl) White & Carter (Councils) Ltd v McGregor",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Parker v Clark"
    ],
    "YEAR": "1971",
    "COURT": "EWCA",
    "SUMMARY": [
        "Exemption clause; automatic ticket machine; whether conditions noticeable",
        "A customer, who receives from an automatic machine a ticket stated to be issued subject to conditions, is only bound by them if reasonably sufficient steps have been taken to bring them to his notice. Per curiam: The nature of the intended exemption is a factor to be taken into account in deciding as to the reasonableness of what has been done to bring it to the other party&#8217;s notice. T drove his car into a new automatic car park where he had never been before. A notice outside gave the charges and stated that all cars were &#8220;parked at owner&#8217;s risk.&#8221; A traffic light on the entrance lane showed red and a machine produced a ticket when the car stopped beside it. T took this and, the light having turned green, drove into the garage where the car was parked. On returning to collect it there was an accident in which he was injured. In his action against the garage for damages the garage contended inter alia that the ticket incorporated a condition exempting them from liability. The ticket stated the car&#8217;s time of arrival and that it was to be presented when the car was claimed. In the bottom left-hand corner in small print it was said to be &#8220;issued subject to conditions . . . displayed on the premises.&#8221; On a pillar opposite the ticket machine were displayed eight lengthy conditions, one of which stated that the garage owners were not responsible for injury to a customer. On appeal by the garage against the award of damages to T, held, dismissing the appeal, that, since T did not know of the exemption condition and the garage had not done what was reasonably sufficient to bring it to his notice, it did not exempt them from liability. (Dicta of Mellish L.J. in Parker v South Eastern Railway Co (1877) 2 C.P.D. 416 applied, and of Lord Hodson in McCutcheon v David MacBrayne Ltd [1964] 1 W.L.R. 125 applied)."
    ],
    "CATEGORY": "Contracts &mdash; Car Parks &mdash; Exclusion Clauses &mdash; Liabilities &mdash; Notice &mdash; Tickets",
    "JUDGE": "Buckley J",
    "CATEGORIES": [
        "Contracts",
        "Car Parks",
        "Exclusion Clauses",
        "Liabilities",
        "Notice",
        "Tickets"
    ],
    "NUMBER": "373",
    "TYPE": "Headnotes",
    "NAME": "(wl) Thornton v Shoe Lane Parking",
    "CITATION": "Thornton v Shoe Lane Parking [1971] 2 QB 163",
    "CIT": "[1971] 2 QB 163",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Combe v Combe",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) McCutcheon v David MacBrayne Ltd",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Barry v Davies"
    ],
    "COUNSEL": "For the appellant: Mr Finlay QC, T Terrell. For the respondent: Mr Dickens QC, WB Allen.",
    "COURT": "EWCA",
    "SUMMARY": [
        "An advertisement amounted to an offer to the world which could be accepted by anyone who performed the conditions set out in it. The claimant did not have to notify the advertiser of her intention to accept the offer prior to her performance of the conditions."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Commercial Law &mdash; Advertisements &mdash; Conditional Offers &mdash; Consideration &mdash; Inconvenience &mdash; Notice &mdash; Offer and Acceptance &mdash; Performance &mdash; Unilateral Contracts",
    "CITATION": "Carlill v Carbolic Smoke Ball Company [1893] 1 QB 256",
    "YEAR": "1893",
    "ABSTRACT": [
        "The appellant company (B) appealed against a decision that it was liable for a claim for damages brought by the respondent (C).",
        "B was the manufacturer of a medical preparation called the carbolic smoke ball, which was designed to prevent the user from contracting flu. B placed an advertisement in newspapers which stated that a reward of \u00a3100 would be paid to anyone who contracted flu or a cold after using the smoke ball three times per day for two weeks according to the directions supplied with each ball. The advertisement further stated that B had deposited \u00a31,000 with a named bank to show the sincerity of its offer. C purchased a ball in reliance on B&#8217;s advert and used it as directed but contracted flu whilst using it.",
        "B argued that its advertisement did not amount to a contractually binding promise as it was addressed to the world in general, it was too vague, and was not limited by time. B further argued that if the advert was an offer, C had not communicated her intention to accept it."
    ],
    "CATEGORIES": [
        "Contracts Other Related Subjects: Commercial Law",
        "Advertisements",
        "Conditional Offers",
        "Consideration",
        "Inconvenience",
        "Notice",
        "Offer and Acceptance",
        "Performance",
        "Unilateral Contracts"
    ],
    "HELD": [
        "Appeal dismissed.",
        "(1) The advertisement stated that \u00a31,000 was lodged at a bank. Therefore it could not be said that the statement that \u00a3100 would be paid was intended to be mere puff. It was an offer made to all the world, but there was no reason why an offer should not be made to all the world which was to ripen into a contract when anyone came forward and performed the condition required, Spencer v Harding (1869-70) L.R. 5 C.P. 561 considered. (2) Generally, when an offer was made, in order to make a binding contract it was necessary not only that it was accepted but that the acceptance was notified. However, the instant case was an exception to that rule; the notification of acceptance did not have to precede the performance. The person who made the offer could dispense with notice if he thought it desirable to do so. B had shown by its language and from the nature of the transaction that it did not expect and did not require notice of acceptance, apart from notice of the performance. Anyone who performed the conditions set out in the advertisement had accepted the offer, Williams v Carwardine 110 E.R. 590 and Brogden v Metropolitan Railway Co (1877) 2 App. Cas. 666 applied. The advertisement therefore contained all of the necessary elements to form a binding contract enforceable in law, save for two potential problems: firstly, it was not limited by time, and secondly the question of consideration. (3) A reasonable person would not understand B&#8217;s advertisement to mean that if a person used a smoke ball three times daily for two weeks they were guaranteed against contracting flu for the rest of their life. There were a number of reasonable constructions to be put on the advertisement but the preferred construction was that the reward was offered to any person who contracted flu in the current epidemic within a reasonable time after having used the smoke ball, or whilst using the ball. (4) A use by the public of the smoke ball as a result of the advertisement was directly beneficial to B. Therefore, B received an advantage which was enough to constitute a consideration. In addition, inconvenience sustained by one party at the request of the other was enough to create a consideration, Gerhard v Bates 118 E.R. 845 considered. The person who acted upon the advertisement put himself to some inconvenience at B&#8217;s request. That was ample consideration for B&#8217;s promise."
    ],
    "NUMBER": "374",
    "TYPE": "Headnotes",
    "NAME": "(wl) Carlill v Carbolic Smoke Ball Company",
    "JUDGE": "Lindley LJ; Bowen LJ; AL Smith LJ",
    "CIT": "[1893] 1 QB 256",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Branca v Cobarro",
        "(wl) Daulia Ltd v Four Millbank Nominees Ltd",
        "(wl) Alpenstow v Regalian Properties",
        "(wl) Holwell Securities Ltd v Hughes",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Liverpool City Council v Irwin",
        "(wl) Edmonds v Lawson",
        "(wl) Ramsgate Victoria Hotel v Montefiore",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Brogden v Metropolitan Railway",
        "(wl) Bolton v Mahadeva",
        "(wl) Couchman v Hill"
    ],
    "YEAR": "1978",
    "COURT": "EWCA",
    "SUMMARY": [
        "Specific performance; contract to sell council house; whether enforceable; correspondence and conduct of parties",
        "In deciding whether the parties have reached a binding agreement, the court should look at the correspondence between the parties as a whole and at the conduct of the parties to see if they have agreed on all material terms. G was the tenant and occupier of a council house owned by M Corp, by whom he had been employed for 16 years. In November 1970, M Corp sent G a form and a brochure giving details of how he could buy the house. G completed the form and returned it, requesting information as to its price. In February 1971, M Corp wrote informing G of the price, and saying that if he wished to purchase the house, he should return the enclosed application. G completed the form, leaving the price blank, and returned it with a covering letter asking for consideration to be given to defects in the path to the house. M Corp replied that the price had been fixed according to the condition of the property. G wrote back asking the corporation to &#8220;carry on with the purchase as per my application.&#8221; M Corp took the house off the list of tenant-occupied houses and G did some work on the house. The political control of M Corp changed and they resolved not to sell council houses except where legally binding contracts had been previously concluded. G was notified that the sale would not proceed. On G&#8217;s claim, the county court judge found that the contract for sale was complete and ordered specific performance. On appeal by M Corp, held, dismissing the appeal (Geoffrey Lane L.J. dissenting), that in the light of the correspondence as a whole, and the conduct of the parties, there was a concluded agreement for the sale of the house. ( Brogden v Metropolitan Railway Co (1877) 2 App. Cas. 666 considered and Storer v Manchester City Council [1974] 1 W.L.R. 1403 considered)."
    ],
    "CATEGORY": "Real Property Other Related Subjects: Contracts &mdash; Contract For Sale of Land &mdash; Specific Performance",
    "JUDGE": "Lord Denning MR; Ormrod LJ; Geoffrey Lane LJ",
    "CATEGORIES": [
        "Real Property Other Related Subjects: Contracts",
        "Contract For Sale of Land",
        "Specific Performance"
    ],
    "NUMBER": "375",
    "TYPE": "Headnotes",
    "NAME": "(wl) Gibson v Manchester City Council",
    "CITATION": "Gibson v Manchester City Council [1978] 1 WLR 520",
    "CIT": "[1978] 1 WLR 520",
    "FLAGS": [
        "Overruled",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Tekdata Interconnections Ltd v Amphenol Ltd",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "(wl) Entores v Miles Far East Corporation",
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Holwell Securities Ltd v Hughes",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co"
    ],
    "COUNSEL": "For H: Vincent Moran. For B: Adrian Iles.",
    "COURT": "EWCA",
    "SUMMARY": [
        "H, an auctioneer, appealed the grant of judgment to a bidder, B, following H&#8217;s withdrawal of items from an auction without reserve. H contended that an auction without reserve did not create an obligation to sell to the highest bidder, alternatively that there was no consideration for the auctioneer&#8217;s promise and finally, that as an agent for a disclosed principal, the auctioneer could not be held liable in contract. The court held that (1) there was a contract to sell to the highest bidder and a failure to do so amounted to a breach; (2) the detriment to the bidder arising from the fact that his bid could be accepted unless withdrawn and benefit to the auctioneer arising from the fact that the sale price was driven up by the bid, was adequate consideration, and (3) although the contract of sale existed between vendor and purchaser, a collateral agreement existed between H and B.",
        "H, a firm of auctioneers, appealed against a judgment requiring it to pay B, a bidder, a sum of GBP 27,600, following H&#8217;s withdrawal of items from an auction without reserve. B had bid GBP 200 for each of two engine analysers, being auctioned without reserve, which were worth GBP 14,000. H&#8217;s agent refused to sell the machines on the ground that the bid was too low and the machines were sold a few days later. B claimed damages on the basis that he was the highest bidder. H contended that (1) an auction without reserve did not create an obligation to sell to the highest bidder; (2) there was no consideration for the auctioneer&#8217;s promise, and (3) as an agent for a disclosed principal, the auctioneer could not be held liable in contract."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Damages &mdash; Agency &mdash; Auctions &mdash; Collateral Contracts &mdash; Offer and Acceptance",
    "CITATION": "Barry v Davies [2000] 1 WLR 1962",
    "YEAR": "2000",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Damages",
        "Agency",
        "Auctions",
        "Collateral Contracts",
        "Offer and Acceptance"
    ],
    "HELD": [
        "dismissing the appeal, that (1) the highest bidder at an auction without reserve could not be rejected simply because the bid was too low, Warlow v Harrison 120 E.R. 920 followed. The auctioneer was obliged, by virtue of a collateral warranty, to sell to the highest bidder and a failure to do so amounted to a breach; (2) the detriment to the bidder arising from the fact that his bid could be accepted unless withdrawn and the benefit to the auctioneer arising from the fact that the sale price was driven up by the bid, was adequate consideration, and (3) although the contract of sale existed between vendor and purchaser, a collateral agreement existed between H and B. Where the seller refused to continue with the sale, the measure of damages was to be determined with reference to the difference between the contract price and the current market value of the goods by virtue of the Sale of Goods Act 1979 s.51(3)."
    ],
    "NUMBER": "376",
    "TYPE": "Headnotes",
    "NAME": "(wl) Barry v Davies",
    "JUDGE": "Pill LJ; Sir Murray Stuart-Smith",
    "CIT": "[2000] 1 WLR 1962"
},
{
    "RELATED": [
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Nicolene v Simmonds",
        "(wl) Karsales (Harrow) Ltd v Wallis",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Rose v Pim",
        "(wl) Parker v Clark",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Alpenstow v Regalian Properties"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "intention to create legal relations; invitation to tender; failure by local authority to consider timely, conforming tender; whether contractually liable to tenderer for failure",
        "BBC appealed against a decision that it was liable for breach of contract to BFAC. BBC had invited BFAC and others to submit tenders for a pleasure flight concession from Blackpool airport. The tender deadline was 12 noon on 17 March. BFAC posted their tender at 11am on that day in the Town Hall post box which was cleared each day at noon. That did not occur and BFAC&#8217;s tender was dismissed as late."
    ],
    "CATEGORY": "Contracts &mdash; Implied Terms &mdash; Tenders",
    "CITATION": "Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council [1990] 1 WLR 1195",
    "YEAR": "1990",
    "CATEGORIES": [
        "Contracts",
        "Implied Terms",
        "Tenders"
    ],
    "HELD": [
        "Appeal dismissed. The invitation to tender prescribed the procedure for the submission of tenders. BFAC complied with those terms. The invitation provided impliedly that if BFAC conformed to its terms they were entitled to have their tender considered."
    ],
    "NUMBER": "377",
    "TYPE": "Headnotes",
    "NAME": "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
    "JUDGE": "Stocker LJ; Bingham LJ; Farquharson LJ",
    "CIT": "[1990] 1 WLR 1195",
    "FLAGS": [
        "Approved",
        "Bingham"
    ]
},
{
    "RELATED": [
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Rose v Pim",
        "(wl) Entores v Miles Far East Corporation",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Shogun Finance Ltd v Hudson",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Re Selectmove Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) White & Carter (Councils) Ltd v McGregor"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Formation; offer and acceptance; sealed tender; referential bid",
        "Where sellers indicate that they wish to accept the highest offer and that the offers are to remain confidential, this is only consistent with a presumed intention to create a fixed bid sale, and not an auction sale where one bidder&#8217;s bid can be adjusted by reference to another. D1, a Jersey trust company, was the registered holder of shares in a company in which the plaintiff company and D2 and his family owned shares. Whichever of the two groups acquired the trustees&#8217; shares would acquire control of the company. The trustees by telex invited P and D2 to make offers by sealed tender or confidential telex for the shares by 3 p.m. on September 16, 1981. The offers were to be confidential until that time, and were to be a single offer for all the shares. In the event of closing not taking place within 30 days &#8220;other than by reason of delay on the trustees&#8217; part&#8221; interest should be payable by the purchaser on the purchase price and the trustees agreed to accept the highest offer. P&#8217;s offer was CUSD 2,175,000 and D2&#8217;s CUSD 2,100,000 or CUSD 101,000 in excess of any other offer expressed as a fixed monetary amount, whichever is the higher. Calculated by reference to P&#8217;s offer, D2&#8217;s alternative offer (the referential bid) was CUSD 2,276,000. D1 accepted D2&#8217;s offer but P obtained an injunction preventing them doing so. The judge gave judgment for P on their claim for the shares and held that they were not liable to pay interest. The Court of Appeal allowed D2&#8217;s appeal. P&#8217;s appeal to the House of Lords was allowed."
    ],
    "CATEGORY": "Contracts &mdash; Offer and Acceptance &mdash; Share Sales &mdash; Tender Offers",
    "CITATION": "Harvela Investments Ltd v Royal Trust of Canada Ltd [1986] AC 207",
    "YEAR": "1986",
    "CATEGORIES": [
        "Contracts",
        "Offer and Acceptance",
        "Share Sales",
        "Tender Offers"
    ],
    "HELD": [
        "that whether D1 had invited P and D2 to take part in a fixed bid or an auction sale (where the price could be adjusted by reference to the other bid) depended upon their presumed intention, which was deduced from the terms of the invitation read as a whole. Their undertaking to accept the highest offer, the fact that the same invitation had been given to both, and their insistence on confidentiality showed that they wished to obtain the best price on a fixed bidding scale. The use of the word &#8220;offer&#8221; did not displace that presumed intention. D2 had not been entitled to submit or D1 to accept a referential bid ( South Hetton Coal Co v Haswell Shotton and Easington Coal and Coke Co [1898] 1 Ch. 465 approved; SSI Investors Ltd v Korea Tungsten Mining Co Ltd 449 N.Y.S.2d 173 applied). Although D1&#8217;s conduct in declining to complete with P was not blameworthy, since they thought mistakenly that they were under an obligation to accept D2&#8217;s referential bid, the failure to complete had been due to delay on their part within the meaning of the invitation and so they were not entitled to interest at the contractual penal rate imposed by the invitation. However P should not, in all the circumstances, have the benefit of the interest attributable to the purchase money as well as the profits attributable to the shares since October 15, 1981, and accordingly, as a condition of being granted specific performance, they should be required to pay interest to D1 on the purchase price of GBP 2,175,000 from that date until actual payment at the short term interest rate."
    ],
    "NUMBER": "378",
    "TYPE": "Headnotes",
    "NAME": "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
    "JUDGE": "Lord Fraser of Tullybelton; Lord Diplock; Lord Edmund-Davies; Lord Bridge of Harwich; Lord Templeman",
    "CIT": "[1986] AC 207",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Eliason v Henshaw",
        "(wl) Olley v Marlborough Court Hotel",
        "(wl) Henderson v Merrett Syndicates",
        "(wl) McCullough v Lane Fox and Partners Ltd",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Hedley Byrne & Co Ltd v Heller & Partners",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Caparo Industries plc v Dickman",
        "(wl) Re Selectmove Ltd",
        "(wl) Pettitt v Pettitt",
        "(wl) Societe Italo-Belge v Palm and Vegetable Oils, Malaysia (The Post Chaser)"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Bailment for reward; duty of bailee to safeguard property",
        "The plaintiffs, carriers, transported by road a lorry load of whisky and delivered it to the defendants&#8217; warehouse for safe keeping overnight. In the warehouse the whisky (worth some GBP 9,000) was unloaded and placed on a trailer hitched to a tractor unit ready to be further transported the next morning. It stood in full view of passers-by. At night the warehouse was guarded by a mobile security officer who normally visited the warehouse four times nightly and for whose services the defendants contracted with the third parties. On the night in question, however, the security officer visited the warehouse three times only, his last visit finishing at 2.18 a.m. His fourth visit, if he had made it, would have been at about 5 a.m. At a time probably not long after the security officer&#8217;s third visit thieves broke into the warehouse and stole the whisky. The plaintiffs compensated the owners of the whisky in full and then sued the defendants for damages for negligence, the security officer&#8217;s employer company being joined as third parties."
    ],
    "CATEGORY": "Negligence &mdash; Compensatory Damages &mdash; Theft",
    "CITATION": "BRS v Arthur Crutchley Ltd [1968] 1 All ER 811",
    "YEAR": "1968",
    "CATEGORIES": [
        "Negligence",
        "Compensatory Damages",
        "Theft"
    ],
    "HELD": [
        "(1) that the defendant&#8217;s system of protection was not adequate in the circumstances and the defendants had failed to prove that the loss was not due to their negligence; (2) that the defendants, therefore, were liable in damages to the plaintiffs; (3) that the defendant&#8217;s liability was limited to GBP 800 per ton, the defendants&#8217; conditions of carriage being incorporated in the contract; and (4) that the judge&#8217;s finding that the third parties had been negligent, but that this negligence had not caused loss, would not be disturbed. Per curiam: apart from their original liability under (1) above, the defendants were liable for any negligence of the third parties. (Decision of Cairns J. [1967] C.L.Y. 2695 reversed; dictum of Fenton Atkinson, Q.C. in Adams (Durham) Ltd v Trust Houses Ltd [1960] 1 Lloyd&#8217;s Rep. 380 applied)."
    ],
    "NUMBER": "379",
    "TYPE": "Headnotes",
    "NAME": "(wl) BRS v Arthur Crutchley Ltd",
    "JUDGE": "Lord Pearson; Danckwerts LJ; Sachs LJ",
    "CIT": "[1968] 1 All ER 811",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Entores v Miles Far East Corporation",
        "(wl) Davis Contractors Ltd v Fareham Urban District Council",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Photo Production Ltd v Securicor Transport"
    ],
    "YEAR": "1979",
    "COURT": "EWCA",
    "SUMMARY": [
        "Offer and acceptance; order to be accepted on sellers&#8217; terms; acknowledgment of order on buyers&#8217; terms",
        "Where parties to a contract have made offer and counter-offer, the documents passing between the parties must be construed as a whole, but the rules set out in Hyde v Wrench 49 E.R. 132 still apply. The plaintiff sellers offered to deliver a machine tool on condition that orders were only to be accepted on the terms set out in the quotation. The sellers&#8217; terms included a price variation clause. The defendant buyers replied with an order containing different terms and no price variation clause. The order had a tear-off slip of acknowledgment on those terms, which acknowledgment was duly signed by the sellers. Due to the buyers&#8217; delay in accepting delivery the sellers invoked the price variation clause. The sellers were successful at first instance but on appeal, held, allowing the appeal, that the buyers&#8217; reply was a counter offer which the sellers had accepted by their acknowledgment (Hyde v Wrench 49 E.R. 132 applied and Trollope &amp; Colls Ltd (t/a Nuclear Civil Constructions) v Atomic Power Constructions Ltd [1963] 1 W.L.R. 333 applied)."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Construction Law &mdash; Contract Terms &mdash; Offer and Acceptance",
    "JUDGE": "Lord Denning MR; Lawton LJ; Bridge LJ",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Construction Law",
        "Contract Terms",
        "Offer and Acceptance"
    ],
    "NUMBER": "380",
    "TYPE": "Headnotes",
    "NAME": "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
    "CITATION": "Butler Machine Tool Co Ltd v Ex-Cell-O Corp [1979] 1 WLR 401",
    "CIT": "[1979] 1 WLR 401",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Entores v Miles Far East Corporation",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Parker v Clark",
        "(wl) Barry v Davies",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Partridge v Crittenden",
        "(wl) Ingram v Little",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "(wl) Holwell Securities Ltd v Hughes"
    ],
    "COUNSEL": "For the appellant: Alastair Tomson. For the respondent: Malcolm Chapple.",
    "COURT": "EWCA",
    "SUMMARY": [
        "A judge had erred in not applying a traditional offer and acceptance analysis to determine which of the parties&#8217; terms and conditions applied to the contracts between them."
    ],
    "CATEGORY": "Sale of Goods Other Related Subjects: Contracts &mdash; Conduct &mdash; Formation of Contract &mdash; Offer and Acceptance &mdash; Standard Terms",
    "CITATION": "Tekdata Interconnections Ltd v Amphenol Ltd [2009] EWCA Civ 1209",
    "YEAR": "2009",
    "ABSTRACT": [
        "The appellant seller (S) appealed against a decision that the parties&#8217; dealings were on the terms of the respondent buyer (B).",
        "The parties were part of a chain of suppliers to Rolls Royce as ultimate purchaser. Rolls Royce needed engine control systems for installation in its aero engines. It bought such systems from Goodrich which itself bought cable assembly items such as cable harnesses for internal wiring from B. In order to manufacture the harnesses B acquired connectors from S. The parties had been doing business for over 20 years. For most, if not all, of that time the supply of connectors had been controlled by Goodrich which required B to purchase the connectors from S to a specification required by Goodrich and at a price determined by Goodrich. S had also had a long term contract with Goodrich pursuant to which it agreed to supply connectors to B for the price determined by Goodrich. B sent purchase orders to S containing B&#8217;s own terms and conditions. S acknowledged the purchase orders by sending an acknowledgment which stated that S&#8217;s own terms and conditions applied. Although an offer to buy on the purchaser&#8217;s terms which was followed by an acknowledgement of purchase on the seller&#8217;s terms and then delivery would normally result in a contract on the seller&#8217;s terms, the judge held that B&#8217;s terms applied because it was never intended that S&#8217;s terms should apply and the parties had always intended that B&#8217;s terms were to apply.",
        "S submitted that the judge should not have analysed the overall relationship between the parties and come to the conclusion which he did, but should have applied the traditional offer and acceptance analysis resulting in a contract on S&#8217;s terms."
    ],
    "CATEGORIES": [
        "Sale of Goods Other Related Subjects: Contracts",
        "Conduct",
        "Formation of Contract",
        "Offer and Acceptance",
        "Standard Terms"
    ],
    "HELD": [
        "Appeal allowed.",
        "The traditional offer and acceptance analysis had to be adopted unless the documents passing between the parties and their conduct showed that their common intention was that some other terms were intended to prevail, Butler Machine Tool Co v Ex-cell-o Corp (England) [1979] 1 W.L.R. 401 considered. The traditional analysis would conclude that the terms on S&#8217;s acknowledgment would be the terms on which the parties contracted. The judge gave weight to the fact that the connectors were items of considerable sophistication which were to be fitted into aero engine control systems so that delivery times and quality control were important; the pre-existing agreement between S and Goodrich which committed S to make supplies on terms which largely corresponded to those of B; and the fact that S did not mention its own terms before the service of the defence. The context of the parties&#8217; relationship was important but the factors on which the judge relied did not justify his conclusion. The fact that delivery times and quality control were essential was true in many commercial relationships and could be no more than a background factor. There was no precise matching between the terms of the agreement between S and Goodrich and B&#8217;s terms. The parties had had an opportunity to agree a single set of terms but did not do so. The terms of the post-dispute correspondence were not as significant as the judge thought. It could not be inferred from the correspondence that S&#8217;s never intended its terms and conditions to apply. Although the context of a long term relationship and the conduct of the parties might be strong enough to displace the result which a traditional offer and acceptance analysis would dictate, the circumstances were not strong enough to do so in the instant case. The judge should have held that S&#8217;s terms and conditions applied."
    ],
    "NUMBER": "381",
    "TYPE": "Headnotes",
    "NAME": "(wl) Tekdata Interconnections Ltd v Amphenol Ltd",
    "JUDGE": "Pill LJ; Dyson LJ; Longmore LJ",
    "CIT": "[2009] EWCA Civ 1209",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Henderson v Merrett Syndicates",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) McCutcheon v David MacBrayne Ltd",
        "(wl) Societe Italo-Belge v Palm and Vegetable Oils, Malaysia (The Post Chaser)",
        "(wl) Re Selectmove Ltd",
        "(wl) King's Norton Metal Co Ltd v Edridge, Merrett & Co",
        "(wl) Scally v Southern Health and Social Services Board",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) Gibson v Manchester City Council",
        "(wl) Doyle v Olby (Ironmngers) Ltd"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Immigration; illegal immigrant; detained pending deportation; right to marry not unlimited",
        "An illegal immigrant detained in custody pending his deportation has no right to insist upon facilities being made available for him to marry a person lawfully resident here. The appellant was arrested and detained in custody, having in 1973 entered the United Kingdom illegally. He applied unsuccessfully to the Secretary of State for facilities to be arranged for him to marry a girl at a local registry office, claiming that the marriage had been arranged by the respective families and that the arrangement had only come to his knowledge after his arrest in April 1975. He claimed that Art.12 of the European Convention on Human Rights conferred on him an inalienable right to marry. The Divisional Court having refused an application for mandamus, he appealed."
    ],
    "CATEGORY": "Administrative Law Other Related Subjects: Human Rights &mdash; Deportation &mdash; Detention &mdash; Illegal Entrants &mdash; Marriage",
    "CITATION": "Mountford v Scott [1976] QB 198",
    "YEAR": "1976",
    "CATEGORIES": [
        "Administrative Law Other Related Subjects: Human Rights",
        "Deportation",
        "Detention",
        "Illegal Entrants",
        "Marriage"
    ],
    "HELD": [
        "dismissing the appeal, that the right to marry given in Art.12(1) could be restricted by the circumstances and in particular by the circumstance of the appellant being lawfully detained under Art.5(1)(f); the Secretary of State was entitled to refuse to facilitate the marriage."
    ],
    "NUMBER": "382",
    "TYPE": "Headnotes",
    "NAME": "(wl) Mountford v Scott",
    "JUDGE": "Lord Denning MR; Lord Widgery LCJ; James LJ; May J",
    "CIT": "[1976] QB 198",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Schawel v Reade",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) Shogun Finance Ltd v Hudson",
        "(wl) Car & Universal Finance Co Ltd v Caldwell",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Carlill v Carbolic Smoke Ball Company"
    ],
    "COUNSEL": "For the claimants: Gregory Jones QC, Charles Streeten. For the defendant: Nigel Giffin QC, Christopher Knight.",
    "COURT": "EWHC",
    "SUMMARY": [
        "The Broads Authority had been entitled to re-brand &#8220;the Broads&#8221; as &#8220;the Broads National Park&#8221; without changing the legal status of the area and without becoming subject to the legal duties imposed upon National Parks by the National Parks and Access to the Countryside Act 1949."
    ],
    "CATEGORY": "Environment Other Related Subjects: Administrative Law &mdash; Administrative Decision-Making &mdash; Names &mdash; National Park Authorities &mdash; National Parks &mdash; Public Authorities &mdash; Rebranding",
    "CITATION": "Ramsgate Victoria Hotel v Montefiore [2016] EWHC 799 (Admin)",
    "YEAR": "2016",
    "ABSTRACT": [
        "The claimants, residents of the Broads, applied for judicial review of a resolution by the defendant to re-brand the area as &#8220;The Broads National Park&#8221; for the purposes of attracting tourists.",
        "The Broads was not designated as a National Park under the National Parks and Access to the Countryside Act 1949, nor was the defendant a National Park Authority. It was constituted under the Norfolk and Suffolk Broads Act 1988, which imposed various duties upon it for the management of the Broads. However, the area had been treated for many years as forming part of the &#8220;family&#8221; of National Parks. It was common ground that the defendant had not sought to re-brand itself or describe itself as a National Park Authority. By its resolution it purported only to re-brand the area known as &#8220;the Broads&#8221; by describing it as &#8220;The Broads National Park&#8221;. The claimants&#8217; main concern was to ensure that the biodiversity and environmental value of the Broads was conserved, either by it fully becoming a National Park or, at the very least confirming its application of the &#8220;Sandford Principle&#8221;, encapsulated in s.11A(2) of the 1949 Act, which required National Parks to put the preservation and natural beauty of such areas before the promotion of public enjoyment where there was a conflict between the two.",
        "The issue was whether a public body which was not a National Park could represent itself as a National Park, and enjoy the benefits of such a status without being subject to the legal duties imposed upon National Parks.",
        "The claimants submitted that the defendant&#8217;s resolution was:",
        "(1) irrational and invalid because it was outside the scope of the Local Government Act 1972 s.111, and because it attributed to the Broads a statutory term which could only be employed for areas statutorily designated as National Parks under the 1949 Act;",
        "(2) misleading as to the scope of the defendant&#8217;s statutory functions because it led the public into thinking that the Sandford Principle was applicable within the Broads when it was not;",
        "(3) procedurally unfair because it involved a decision not to pursue the long term vision of the Broads Plan 2011 to become a National Park (and thereby adopt the Sandford Principle) without any consultation on that point."
    ],
    "CATEGORIES": [
        "Environment Other Related Subjects: Administrative Law",
        "Administrative Decision-Making",
        "Names",
        "National Park Authorities",
        "National Parks",
        "Public Authorities",
        "Rebranding"
    ],
    "HELD": [
        "Application refused.",
        "(1) The Broads shared many of the statutory characteristics of a National Park, as was evident from the 1949 and 1988 Acts, and from the fact that a circular issued to National Parks by the Department of the Environment, Food and Rural Affairs was said to apply equally to the Broads on account of its similarities with National Parks. The defendant&#8217;s resolution did not breach the legislation because it did not seek to treat the Broads as a National Park, only to adopt the name for marketing purposes. The code contained in the 1949 Act was not specifically directed to the use of a brand name for a National Park. By virtue of the Local Government Act 1972 s.144 and s.265A, the defendant was empowered to encourage persons to visit the Broads for recreation. By s.2(7) of the 1988 Act and s.111 of the 1972 Act it could do anything necessary or expedient for enabling it to carry out its functions. Such functions included &#8220;promotion&#8221;; which included marketing the Broads to the public. The defendant&#8217;s objectives in adopting the brand name fell within the ambit of those provisions. Furthermore, it was legally possible to separate the use of &#8220;National Park&#8221; as a brand name from the legal status of a National Park. The phrase &#8220;National Park&#8221; had become established as an ordinary part of English language and National Park legislation had no legal monopoly over the use of the term. There was no basis on which to imply a Parliamentary intention to prohibit the use of the term &#8220;National Park&#8221; outside the code based upon the 1949 Act (see paras 26, 61, 67-69, 73, 75, 77 of judgment).",
        "(2) Whether a statement or decision by a public body had the effect of misleading the public was an objective question; the court&#8217;s role was not limited to reviewing the decision on Wednesbury principles. The defendant&#8217;s branding decision had not had a misleading effect with regard to the Sandford Principle, and was not irrational. Even within a National Park, conservation did not have to be the uppermost consideration. Section 11A(2) of the 1949 Act only required the relevant authority to &#8220;have regard&#8221; to the twin purposes. It did not deal with all relevant considerations such as the need for development. The claimants&#8217; reliance upon the Sandford Principle as the key difference between the Broads and National Parks was unsustainable. Introducing the Sandford Principle into the Broads would involve amending legislation, and such amendments could not be contemplated without Parliament considering a number of matters. As the defendant was only adopting a brand name, and the legal regime within the Broads remained unaltered, the resolution was only concerned with how the Broads should be marketed. In order to make a lawful name choice, it had not been necessary for the defendant to decide about the introduction of the Sandford Principle (paras 6, 81-82, 85, 87, 91-92, 95, 97).",
        "(3) The 2011 Plan did not seek to promote the adoption of the Sandford Principle. For that reason and others, the claimants&#8217; submissions regarding defective consultation failed (paras 104-112)."
    ],
    "NUMBER": "383",
    "TYPE": "Headnotes",
    "NAME": "(wl) Ramsgate Victoria Hotel v Montefiore",
    "JUDGE": "Holgate J",
    "CIT": "[2016] EWHC 799 (Admin)"
},
{
    "RELATED": [
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Schawel v Reade",
        "(wl) Koufos v Czarnikow Ltd (The Heron II)",
        "(wl) Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "(wl) East v Maurer",
        "(wl) Branca v Cobarro",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) McCutcheon v David MacBrayne Ltd",
        "(wl) Royscot Trust v Rogerson",
        "(wl) Photo Production Ltd v Securicor Transport Ltd"
    ],
    "COUNSEL": "For the claimant: Nevil Phillips, Natalie Moore. For the defendant: Michael Coburn QC.",
    "COURT": "EWHC",
    "SUMMARY": [
        "Payment of hire by the charterers was not a condition of NYPE 1993 charterparties. In so deciding, the Commercial Court declined to follow the decision in Kuwait Rocks Co v AMN Bulkcarriers Inc [2013] EWHC 865 (Comm), [2013] 2 All E.R. (Comm) 689 (The Astra)."
    ],
    "CATEGORY": "Shipping Other Related Subjects: Contracts &mdash; Authority &mdash; Conditions &mdash; Guarantees &mdash; Intermediate Terms &mdash; Measure of Damages &mdash; Time Charters",
    "CITATION": "Tinn v Hoffman &amp; Co [2015] EWHC 718 (Comm)",
    "YEAR": "2015",
    "ABSTRACT": [
        "The claimant shipowner claimed under guarantees given by the defendant guarantor in respect of three charterparties.",
        "The shipowner owned three vessels which it had let on long-term NYPE 1993 charterparties to the charterer, a subsidiary of the guarantor. After a year, the charterer fell into arrears in payment of hire. The shipowner withdrew the vessels, terminated the charterparties and began arbitration proceedings against the charterer. Those proceedings were stayed when the charterer went into liquidation. The shipowner began the instant proceedings against the guarantor, claiming the balance due under the charters, damages for loss of bargain in respect of the unexpired terms, and the costs of the arbitration proceedings. The guarantor asserted that it was not bound by the guarantees because they had been signed, without authority, by its executive board chairman (J), and because they had not been registered by the State Administration of Foreign Exchange (SAFE). Alternatively, it claimed that it was not liable in respect of the unexpired periods because the right of withdrawal was a contractual option and there had been no repudiatory breach or renunciation. The central issues were (i) whether the guarantor was bound by the guarantees; (ii) whether payment of hire was a condition of the charterparties; (iii) if not, whether the charterer had repudiated or renounced the charterparties; (iv) the correct method of assessing damages where there was no market for a replacement time charter for the duration of the unexpired term; (v) whether the arbitration costs fell within the scope of the guarantees."
    ],
    "CATEGORIES": [
        "Shipping Other Related Subjects: Contracts",
        "Authority",
        "Conditions",
        "Guarantees",
        "Intermediate Terms",
        "Measure of Damages",
        "Time Charters"
    ],
    "HELD": [
        "Judgment for claimant.",
        "(1) J had had actual authority to bind the guarantor. Actual authority was governed by Chinese law and was established if the guarantor had expressly authorised J to sign the guarantees, had known that he was signing but had done nothing to repudiate his assertion of authority, or if J had been performing a duty-related activity in signing. The evidence showed that all those conditions were established. In any event, J had had ostensible authority, or the guarantor had ratified the guarantees by adopting them. The SAFE provisions were not applicable, Emeraldian Ltd Partnership v Wellmix Shipping Ltd (The Vine) [2010] EWHC 1411 (Comm), [2011] 1 Lloyd&#8217;s Rep. 301 applied (see paras 67-70, 78-91 of judgment). (2) The authorities were divided as to whether the payment of hire was a condition. Faced with the conflicting decisions of Tenax Steamship Co v Owners of the Motor Vessel Brimnes (The Brimnes) [1973] 1 W.L.R. 386 and Kuwait Rocks Co v AMN Bulkcarriers Inc [2013] EWHC 865 (Comm), [2013] 2 All E.R. (Comm) 689 (The Astra), the instant court followed the former, The Brimnes applied, The Astra not applied. In the absence of clear language, a contractual termination clause was to be treated as an option to cancel which did not confer greater rights to damages at common law than would otherwise exist, Financings Ltd v Baldock [1963] 2 Q.B. 104 followed. There was no such clear language in the instant charterparties, and so the withdrawal clause did not make payment of hire a condition. Nor would payment of hire be treated as a condition without the withdrawal clause. First, providing for an express right of withdrawal for non-payment suggested that, without such provision, there would be no such right. Second, there was a presumption in mercantile contracts that stipulations as to the time of payment were not conditions unless indicated in the contract. Third, breaches might range from the trivial to the serious, which pointed towards the withdrawal term being innominate, Bunge Corp v Tradax Export SA [1981] 1 W.L.R. 711 considered and Federal Commerce &amp; Navigation Co Ltd v Molena Alpha Inc (The Nanfri) [1979] A.C. 757 followed. Fourth, it could not have been intended that, without express agreement, fractionally late payment would entitle the owners to terminate the charter. Considerations of commercial certainty did not point to a different conclusion. Until The Astra , shipowners and charterers had operated on the footing that the payment of hire was not a condition, and the standard forms of time charter had not been altered to indicate that it was. Insofar as the dicta in A/S Tankexpress v Compagnie Financiere Belge des Petroles SA [1949] A.C. 76, Bunge , and Afovos Shipping Co SA v R Pagnan &amp; Fratelli (The Afovos) [1983] 1 W.L.R. 195 stated that payment of hire was a condition, they had not been made after argument and were counterbalanced by The Brimnes ; The Petrofina, Bunge and The Afovos considered (paras 92-95, 188-207). (3) The charterer had renounced the charterparties. Conduct falling short of repudiation might amount to renunciation if a reasonable observer would conclude that the charterer intended not to perform so as to deprive the shipowner of substantially its whole benefit (paras 208-212). (4) Where a charterer repudiated a time charter and, at the date of termination, there was an available market in which to let the vessel on for the full length of the unexpired term on materially equivalent terms save as to hire, damages were assessed by reference to the difference between the charterparty rate and the rate for the substitute charter. Where there was no such available market, the owner had to mitigate his loss by employing the vessel in a different way, and his loss was the difference between his actual earnings and what he would have earned under the original charterparty, Zodiac Maritime Agencies Ltd v Fortescue Metals Group Ltd (The Kildare) [2010] EWHC 903 (Comm), [2011] 2 Lloyd&#8217;s Rep. 360 and Glory Wealth Shipping Pte Ltd v Korea Line Corp (The Wren) [2011] EWHC 1819 (Comm), [2012] 1 All E.R. (Comm) 402 applied. The availability of shorter charters did not constitute an available market (paras 216-227). (5) The arbitration costs fell within the scope of the guarantees. They were losses incurred &#8220;as a result or arising out of&#8221; the charterer&#8217;s default within the meaning of the guarantees (paras 241-246)."
    ],
    "NUMBER": "384",
    "TYPE": "Headnotes",
    "NAME": "(wl) Tinn v Hoffman & Co",
    "JUDGE": "Popplewell J",
    "CIT": "[2015] EWHC 718 (Comm)",
    "FLAGS": [
        "appeal-outstanding"
    ]
},
{
    "RELATED": [
        "(wl) City and Westminster Properties v Mudd",
        "(wl) Daulia Ltd v Four Millbank Nominees Ltd",
        "(wl) Solle v Butcher",
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Liverpool City Council v Irwin",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Couchman v Hill",
        "(wl) Gibson v Manchester City Council",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Ingram v Little",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd"
    ],
    "YEAR": "1952",
    "COURT": "EWCA",
    "SUMMARY": [
        "Licence; lease or; tenancy at will",
        "&#8220;It is of the essence of a tenancy at will that it should be determinable by either party on demand.&#8221; &#8220;The difference between a tenancy and a licence is, therefore, that in a tenancy an interest passes in the land, whereas in a licence it does not. . . . Although a person who is let into exclusive possession is, prima facie, to be considered to be a tenant, nevertheless he will not be held to be so if the circumstances negative any intention to create a tenancy. Words alone may not suffice. Parties cannot turn a tenancy into a licence merely by calling it one. But if the circumstances and the conduct of the parties show that all that was intended was that the occupier should be granted a personal privilege with no interest in the land, he will be held only to be a licensee&#8221;: per Denning, L.J. In 1936 a father bought a house for his son and daughter-in-law to live in. The father put down GBP 250 in cash and borrowed GBP 500 from a building society on the security of the house, repayable with interest by instalments of 15s. a week. He took the house in his own name and made himself responsible for the instalments. The father told the daughter-in-law that the GBP 250 was a present for them, but he left them to pay the building society instalments of 15s. a week themselves. He handed the building society book to the daughter-in-law and said to her: &#8220;Don&#8217;t part with this book. The house will be your property when the mortgage is paid.&#8221; He said that when he retired he would transfer it into their names. The daughter-in-law paid the instalments regularly from that date onwards with the result that much of the mortgage had been repaid. The father, on being informed that the couple could not pay the rates, paid those also. In 1945 the father died leaving the house to his widow. Soon after, the son left his wife. The widow sued her daughter-in-law for possession of the house. Held, (1) there was no tenancy at will as the father could not revoke his promise once the couple entered on performance of the act: his promise would only cease to bind him if they left it incomplete and unperformed, which they had not done; (2) the 15s. which the couple paid was not rent as they were not bound to pay it: the father could not sue for it or distrain for it; he could only refuse to transfer the house to them; (3) the couple were licensees, having a permissive occupation short of a tenancy, but with a contractual right or, at any rate, an equitable right to remain so long as they paid the instalments, which would grow into a good equitable title to the house itself as soon as the mortgage was paid. Lynes v Snaith [1899] 1 Q.B. 486 doubted; Thompson v Earthy [1951] 2 K.B. 596 doubted; and dictum in Foster v Robinson [1951] 1 K.B. 149 doubted"
    ],
    "CATEGORY": "Landlord and Tenant &mdash; Contractual Rights &mdash; Equitable Interests &mdash; Licences &mdash; Tenancies at Will &mdash; Unilateral Contracts",
    "JUDGE": "Somervell LJ; Denning LJ; Hodson LJ",
    "CATEGORIES": [
        "Landlord and Tenant",
        "Contractual Rights",
        "Equitable Interests",
        "Licences",
        "Tenancies at Will",
        "Unilateral Contracts"
    ],
    "NUMBER": "385",
    "TYPE": "Headnotes",
    "NAME": "(wl) Errington v Errington and Woods",
    "CITATION": "Errington v Errington and Woods [1952] 1 KB 290",
    "CIT": "[1952] 1 KB 290",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Gibson v Manchester City Council",
        "(wl) Branca v Cobarro",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Alpenstow v Regalian Properties",
        "(wl) Holwell Securities Ltd v Hughes",
        "(wl) Partridge v Crittenden",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Ingram v Little",
        "(wl) Parker v Clark",
        "(wl) Tekdata Interconnections Ltd v Amphenol Ltd",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Entores v Miles Far East Corporation"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Sale of land; whether contract existed; requirement of writing; enforceability",
        "A contract to do something which has the effect of disposing of an interest in land is a contract to dispose of an interest in land within s.40 of the Act. D Ltd negotiated with F Ltd for the sale of certain properties. D Ltd alleged that there was an oral agreement that F Ltd would exchange contracts for the sale of the properties if D Ltd attended at their offices with a draft contract in terms already agreed and a banker&#8217;s draft for the deposit. D Ltd complied with those conditions, but F Ltd refused to exchange contracts. D Ltd claimed damages for breach of the oral agreements. The judge struck out the statement of claim as disclosing no cause of action in that there was no note or memorandum of the agreement sufficient to satisfy s.40(1) of the Act. D Ltd appealed."
    ],
    "CATEGORY": "Real Property Other Related Subjects: Contracts &mdash; Contract For Sale of Land &mdash; Formation of Contract &mdash; Unilateral Contracts",
    "CITATION": "Daulia Ltd v Four Millbank Nominees Ltd [1978] Ch 231",
    "YEAR": "1978",
    "CATEGORIES": [
        "Real Property Other Related Subjects: Contracts",
        "Contract For Sale of Land",
        "Formation of Contract",
        "Unilateral Contracts"
    ],
    "HELD": [
        "dismissing the appeal, that (1) D Ltd, having satisfied the conditions specified, there was a valid unilateral contract of which F Ltd were in breach; although the unilateral contract was not for the sale of land or an interest in land, s.40 of the Act applied to it and, in the absence of a memorandum in writing, there had to be an act of part performance before it could be enforced; (2) D Ltd&#8217;s acts did not point to there being some contract so there was no act of part performance to exclude the provisions of s.40(1) of the Act. (Warlow v Harrison 120 E.R. 920 distinguished and Johnston v Boyes [1899] 2 Ch. 73 distinguished; Steadman v Steadman [1976] A.C. 536 applied)."
    ],
    "NUMBER": "386",
    "TYPE": "Headnotes",
    "NAME": "(wl) Daulia Ltd v Four Millbank Nominees Ltd",
    "JUDGE": "Goff LJ; Buckley LJ; Orr LJ",
    "CIT": "[1978] Ch 231",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Tekdata Interconnections Ltd v Amphenol Ltd",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Edwards v Skyways",
        "(wl) Chappell & Co v Nestle Co Ltd",
        "(wl) McCutcheon v David MacBrayne Ltd",
        "(wl) Pao On v Lau Yiu Long"
    ],
    "COUNSEL": "For the appellant: Mr Finlay QC, T Terrell. For the respondent: Mr Dickens QC, WB Allen.",
    "COURT": "EWCA",
    "SUMMARY": [
        "An advertisement amounted to an offer to the world which could be accepted by anyone who performed the conditions set out in it. The claimant did not have to notify the advertiser of her intention to accept the offer prior to her performance of the conditions."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Commercial Law &mdash; Advertisements &mdash; Conditional Offers &mdash; Consideration &mdash; Inconvenience &mdash; Notice &mdash; Offer and Acceptance &mdash; Performance &mdash; Unilateral Contracts",
    "CITATION": "Carlill v Carbolic Smoke Ball Co [1893] 1 QB 256",
    "YEAR": "1893",
    "ABSTRACT": [
        "The appellant company (B) appealed against a decision that it was liable for a claim for damages brought by the respondent (C).",
        "B was the manufacturer of a medical preparation called the carbolic smoke ball, which was designed to prevent the user from contracting flu. B placed an advertisement in newspapers which stated that a reward of \u00a3100 would be paid to anyone who contracted flu or a cold after using the smoke ball three times per day for two weeks according to the directions supplied with each ball. The advertisement further stated that B had deposited \u00a31,000 with a named bank to show the sincerity of its offer. C purchased a ball in reliance on B&#8217;s advert and used it as directed but contracted flu whilst using it.",
        "B argued that its advertisement did not amount to a contractually binding promise as it was addressed to the world in general, it was too vague, and was not limited by time. B further argued that if the advert was an offer, C had not communicated her intention to accept it."
    ],
    "CATEGORIES": [
        "Contracts Other Related Subjects: Commercial Law",
        "Advertisements",
        "Conditional Offers",
        "Consideration",
        "Inconvenience",
        "Notice",
        "Offer and Acceptance",
        "Performance",
        "Unilateral Contracts"
    ],
    "HELD": [
        "Appeal dismissed.",
        "(1) The advertisement stated that \u00a31,000 was lodged at a bank. Therefore it could not be said that the statement that \u00a3100 would be paid was intended to be mere puff. It was an offer made to all the world, but there was no reason why an offer should not be made to all the world which was to ripen into a contract when anyone came forward and performed the condition required, Spencer v Harding (1869-70) L.R. 5 C.P. 561 considered. (2) Generally, when an offer was made, in order to make a binding contract it was necessary not only that it was accepted but that the acceptance was notified. However, the instant case was an exception to that rule; the notification of acceptance did not have to precede the performance. The person who made the offer could dispense with notice if he thought it desirable to do so. B had shown by its language and from the nature of the transaction that it did not expect and did not require notice of acceptance, apart from notice of the performance. Anyone who performed the conditions set out in the advertisement had accepted the offer, Williams v Carwardine 110 E.R. 590 and Brogden v Metropolitan Railway Co (1877) 2 App. Cas. 666 applied. The advertisement therefore contained all of the necessary elements to form a binding contract enforceable in law, save for two potential problems: firstly, it was not limited by time, and secondly the question of consideration. (3) A reasonable person would not understand B&#8217;s advertisement to mean that if a person used a smoke ball three times daily for two weeks they were guaranteed against contracting flu for the rest of their life. There were a number of reasonable constructions to be put on the advertisement but the preferred construction was that the reward was offered to any person who contracted flu in the current epidemic within a reasonable time after having used the smoke ball, or whilst using the ball. (4) A use by the public of the smoke ball as a result of the advertisement was directly beneficial to B. Therefore, B received an advantage which was enough to constitute a consideration. In addition, inconvenience sustained by one party at the request of the other was enough to create a consideration, Gerhard v Bates 118 E.R. 845 considered. The person who acted upon the advertisement put himself to some inconvenience at B&#8217;s request. That was ample consideration for B&#8217;s promise."
    ],
    "NUMBER": "387",
    "TYPE": "Headnotes",
    "NAME": "(wl) Carlill v Carbolic Smoke Ball Co",
    "JUDGE": "Lindley LJ; Bowen LJ; AL Smith LJ",
    "CIT": "[1893] 1 QB 256",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Jones v Padavatton",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Entores v Miles Far East Corporation",
        "(wl) Shogun Finance Ltd v Hudson",
        "(wl) Karsales (Harrow) Ltd v Wallis",
        "(wl) Solle v Butcher",
        "(wl) Merritt v Merritt",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) White & Carter (Councils) Ltd v McGregor",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)"
    ],
    "COUNSEL": "For the claimant: William Webb. For the defendant: Ben Pilling QC, Alexander Wright.",
    "COURT": "EWHC",
    "SUMMARY": [
        "A claimant&#8217;s application for summary judgment on a claim to enforce an adjudicator&#8217;s award was granted, even though there was a dispute concerning the correct terms of the construction contract. The possible difference in substantive outcome that might arise from identifying the contract correctly did not affect the adjudicator&#8217;s jurisdiction."
    ],
    "CATEGORY": "Construction Law Other Related Subjects: Dispute Resolution &mdash; Adjudication &mdash; Adjudication &mdash; Adjudicators' Powers and Duties &mdash; Construction Contracts &mdash; Enforcement &mdash; Jurisdiction",
    "CITATION": "Brogden v Metropolitan Railway [2015] EWHC 3737 (TCC)",
    "YEAR": "2015",
    "ABSTRACT": [
        "A claimant applied for summary judgment on its claim to enforce an adjudicator&#8217;s award.",
        "The claimant had carried out groundworks for the defendant under a construction contract. There was a dispute between the parties as to how the contract was formed. The claimant&#8217;s case was that it was formed by the defendant&#8217;s acceptance of its price breakdown. The defendant had emailed the claimant on 5 December 2014, stating that it would &#8220;place the order for the agreed value as attached [in the claimant&#8217;s breakdown]&#8220; and would &#8220;raise the letter of intent for this value on Monday&#8221;. It was the defendant&#8217;s case that the contract was formed either by the letter of intent, or by the letter of intent plus emails and the placing of a sub-contract order which incorporated a standard form of JCT wording. The defendant had sent the letter of intent on 8 December, but the claimant denied receiving it. Some months later, the defendant sent the sub-contract order to the claimant, specifying various contract terms. The claimant did not sign or return it. However, the claimant later raised a number of issues by email concerning payment, and the defendant asserted that the sub-contract order had been accepted by conduct. Following a payment dispute, an adjudicator found that a pay less notice was invalid as it had not been made in time, and that the full amount claimed was due.",
        "The claimant submitted that the adjudicator would have acquired jurisdiction by the same procedural route whichever contractual interpretation was preferred, and even if he had misinterpreted the substantive contractual provisions that was no bar to enforcement of his decision."
    ],
    "CATEGORIES": [
        "Construction Law Other Related Subjects: Dispute Resolution",
        "Adjudication",
        "Adjudication",
        "Adjudicators' Powers and Duties",
        "Construction Contracts",
        "Enforcement",
        "Jurisdiction"
    ],
    "HELD": [
        "Application granted.",
        "(1) It was reasonably arguable that the parties had proceeded on the basis of the promised letter of intent and subsequently on the basis of the letter of intent plus the emails. Under either of those routes, the Scheme for Construction Contracts (England and Wales) Regulations 1998 would have applied, with no specified adjudicator nominating body, so that the procedural route to adjudication would have been the same as if the 5 December 2014 email had formed the basis of the contract. However, there were a number of problems with the letter of intent. It referred to a form of JCT contract which did not exist. While it was clear that something had gone wrong with the language, it was not clear what a reasonable person would have understood the parties to have meant, Chartbrook Ltd v Persimmon Homes Ltd [2009] UKHL 38, [2009] 1 A.C. 1101 followed. The JCT terms were not incorporated. In addition, no valuation schedule had been attached to the letter of intent, so there was no way of identifying the dates for payment. The mechanism provided by the letter was inoperable and inadequate. The defendant relied on emails to plug the gap left by the failure to provide a valuation schedule. However, even if the letter plus the emails was the proper basis for the parties&#8217; contractual obligations, they made payment conditional upon the performance of obligations under the main contract, which was an inadequate mechanism pursuant to the Housing Grants, Construction and Regeneration Act 1996 s.110. Therefore, the Scheme applied to establish the requisite date for payment and pay less notices. That meant there would have been no substantive difference in the adjudicator&#8217;s decision on the absence of a valid pay less notice (see paras 12-17, 20, 37 of judgment).",
        "(2) It was also reasonably arguable that the claimant had accepted the sub-contract order by conduct. The Scheme would have applied with no specified nominating body so that the procedural route to adjudication would have been the same as if the December email formed the basis of the contract. It was reasonably arguable that, if operative, the sub-contract order made provision for payment, which meant that the adjudicator&#8217;s substantive decision was wrong (para.37).",
        "(3) The court therefore had to consider what the position would be if the adjudicator had concluded that he had jurisdiction, but the proper contractual basis of jurisdiction could make a difference to the substantive outcome. The legal policy was that reasonably arguable challenges to an adjudicator&#8217;s jurisdiction might be a reason for not enforcing a decision, but the mere assertion that he had misunderstood the factual or legal basis for his substantive decision was not, Purton (t/a Richwood Interiors) v Kilker Projects Ltd [2015] EWHC 2624 (TCC), [2015] B.L.R. 754 applied. In the instant case, the adjudicator had jurisdiction because, however the contractual arrangements were correctly to be described, they mandated the use of the Scheme and he was properly appointed by the Scheme&#8217;s procedure. The possible difference in substantive outcome that could arise from identifying the contract correctly did not go to jurisdiction, but to substantive outcome only. If the adjudicator had made an error of law in referring to the wrong contractual provisions when deciding the substantive question referred to him, that fell within the category of errors of procedure, fact or law, which the Court of Appeal had repeatedly emphasised should not prevent enforcement, Carillion Construction Ltd v Devonport Royal Dockyard Ltd [2005] EWHC 778 (TCC), [2005] B.L.R. 310 applied and C&amp;B Scene Concept Design Ltd v Isobars Ltd [2002] EWCA Civ 46, [2002] C.L.C. 652 followed. The claimant was therefore entitled to enforce the award and summary judgment was entered in the claimant&#8217;s favour (paras 44-45, 52-54)."
    ],
    "NUMBER": "388",
    "TYPE": "Headnotes",
    "NAME": "(wl) Brogden v Metropolitan Railway",
    "JUDGE": "Stuart-Smith J",
    "CIT": "[2015] EWHC 3737 (TCC)"
},
{
    "RELATED": [
        "(wl) Pao On v Lau Yiu Long",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Bolton v Mahadeva",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Rose v Pim",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) Spice Girls Ltd v Aprilia World Service BV"
    ],
    "COURT": "EWHC",
    "SUMMARY": [
        "Quantum meruit; work done in anticipation of contract; no contract concluded",
        "Where one party does work at the request of another in anticipation of a contract, but where on the facts no contract is created, then that party is entitled to payment on a quantum meruit basis. D successfully tendered for the fabrication of steel work in the construction of a building. The parties entered into complicated negotiations and D eventually sent a letter of intent requiring P to commence work on the construction of various items pending contract. P began construction of the items. Further negotiations took place for some time during which P continued to manufacture steel nodes. Eventually negotiations broke down and D refused to make any payment for the nodes. P sued on a quantum meruit basis, D counterclaimed for breach of contract."
    ],
    "CATEGORY": "Contracts &mdash; Contracts &mdash; Letters of Intent &mdash; Quantum Meruit",
    "CITATION": "British Steel Corporation v Cleveland Bridge and Engineering Co Ltd [1984] 1 All ER 504",
    "YEAR": "1984",
    "CATEGORIES": [
        "Contracts",
        "Contracts",
        "Letters of Intent",
        "Quantum Meruit"
    ],
    "HELD": [
        "that no contract had in fact been made by the letter of intent, nor had an executory contract been created by P acceeding to the request to begin work on the nodes; in the circumstances D were liable to pay a reasonable sum for work done at their request (Hick v Raymond &amp; Reid [1893] A.C. 22 applied)."
    ],
    "NUMBER": "389",
    "TYPE": "Headnotes",
    "NAME": "(wl) British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
    "JUDGE": "Robert Goff J",
    "CIT": "[1984] 1 All ER 504",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Collier v Wright (Holdings) Ltd",
        "(wl) Edwards v Skyways",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Rose v Pim",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Bolton v Mahadeva",
        "(wl) Shogun Finance Ltd v Hudson"
    ],
    "COUNSEL": "For S: Christopher Nugee. For Inland Revenue: A.W.H. Charles.",
    "COURT": "EWCA",
    "SUMMARY": [
        "Consideration; agency; winding up; petition debt disputed; company alleged agreement with Revenue to pay tax arrears in instalments; whether agreement supported by consideration; whether substantial grounds to dispute winding up",
        "The Inland Revenue petitioned for the winding-up of the company, S, on the basis of arrears of tax under the PAYE system. The winding-up order was made and S appealed on the ground that, in October 1991 at a meeting with the Revenue, it was agreed that due to S&#8217;s cash flow problems the tax due would be paid in arrears. S therefore contended that the petition debt was disputed and the order should be set aside. The issues were whether the tax collector was entitled to accept the instalment proposal, whether there was consideration for the agreement and whether, if there was no agreement, estoppel prevented the Revenue from claiming the debt."
    ],
    "CATEGORY": "Contracts &mdash; Agreements &mdash; Arrears &mdash; Consideration &mdash; Instalments &mdash; Tax &mdash; Winding-Up",
    "CITATION": "Re Selectmove Ltd [1995] 1 WLR 474",
    "YEAR": "1995",
    "CATEGORIES": [
        "Contracts",
        "Agreements",
        "Arrears",
        "Consideration",
        "Instalments",
        "Tax",
        "Winding-Up"
    ],
    "HELD": [
        "dismissing S&#8217;s appeal, that (1) the collector of taxes who met with S did not have actual authority to make such an agreement or otherwise bind the Revenue. Further, there was no representation by the Revenue that the tax collector had the Revenue&#8217;s authority to accept the offered instalment proposal ( Armagas Ltd v Mundogas SA (The Ocean Frost) [1986] A.C. 717 applied); (2) an agreement to pay the arrears of tax in instalments would not have been enforceable because there was no consideration on the part of the Revenue ( Foakes v Beer (1884) 9 App. Cas. 605 applied); (3) as the tax collector had no authority to make the agreement, neither could he make the promise on which the estoppel argument was based; and (4) as S had failed to pay the instalments it was entirely fair of the Revenue to seek to enforce the debt."
    ],
    "NUMBER": "390",
    "TYPE": "Headnotes",
    "NAME": "(wl) Re Selectmove Ltd",
    "JUDGE": "Balcombe LJ; Stuart-Smith LJ; Peter Gibson LJ",
    "CIT": "[1995] 1 WLR 474",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Crossley v Faithful & Gould Holdings",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Household Fire Insurance Co v Grant",
        "(wl) H Parsons (Livestock) Ltd v Uttley Ingham & Co",
        "(wl) Entores v Miles Far East Corporation",
        "(wl) Brogden v Metropolitan Railway"
    ],
    "COUNSEL": "For the appellants: Thomas Linden QC, Martin Chamberlain, Oliver Jones. For the first respondent: Nigel Tozzi QC, Kate Livesey. For the second respondents: Andrew Hochhauser QC, David Craig.",
    "COURT": "EWCA",
    "SUMMARY": [
        "The court determined that an employer who had made an oral promise in a &#8220;town hall&#8221; meeting to pay relevant employees a guaranteed performance-based bonus had done so in accordance with powers of unilateral variation set out in the employee handbook and with the intention that the promise would be legally binding."
    ],
    "CATEGORY": "Employment Other Related Subjects: Contracts &mdash; Banking and Finance &mdash; Bonus Payments &mdash; Contracts of Employment &mdash; Investment Banks &mdash; Mutual Trust and Confidence &mdash; Promises &mdash; Staff Handbooks &mdash; Terms and Conditions",
    "CITATION": "Dresdner Kleinwort Ltd v Attrill [2013] EWCA Civ 394",
    "YEAR": "2013",
    "ABSTRACT": [
        "The appellants (D and C) appealed against a decision ([2012] EWHC 1189 (QB), [2012] I.R.L.R. 553) that D had wrongfully denied the respondents, its employees and former employees, their contractual entitlement to certain discretionary bonuses.",
        "D was an investment bank in Dresdner Bank group (DB). On August 18, 2008, shortly before a takeover by C, D announced to its employees in a &#8220;town hall&#8221; meeting broadcast over the company intranet that DB&#8217;s board had approved a &#8220;guaranteed&#8221; minimum bonus pool, which would be allocated to individuals on a discretionary basis according to individual performance &#8220;in the usual way&#8221;. The aim was to retain employees at a time of speculation about DB&#8217;s future. In December 2008, a letter to each employee confirmed that a discretionary bonus for 2008 had been provisionally awarded at a specified sum, subject to a &#8220;material adverse change clause&#8221; (MAC clause). On the same day, employees were reassured at a further town hall meeting that the MAC clause was unlikely to be invoked. In January 2009, after the acquisition of DB by C, the MAC clause was invoked and D&#8217;s employees were told that their bonus awards would be cut by 90 per cent. The issues were (i) whether the August 18 announcement created an obligation to pay the bonus sums claimed; (ii) whether the introduction of the MAC clause was a breach of the implied duty of mutual trust and confidence. The first question involved consideration of three sub-issues: first, whether the announcement was an exercise of D&#8217;s power to unilaterally vary its employees&#8217; terms and conditions under cl.1.4 of the employee handbook, which allowed such variation if the changes were made by a member of the human resources department and notified in writing, and also provided that a change affecting a group of people could be notified by &#8220;display&#8221; on the company intranet; second, whether the announcement was intended to be legally binding so as to be capable of having contractual effect; third, whether the employees had been obliged to communicate acceptance of the bonus offer. The judge found that D&#8217;s communications amounted to a variation under cl.1.4 and were intended to be legally binding, and that the introduction of the MAC clause was a breach of the implied duty of mutual trust and confidence."
    ],
    "CATEGORIES": [
        "Employment Other Related Subjects: Contracts",
        "Banking and Finance",
        "Bonus Payments",
        "Contracts of Employment",
        "Investment Banks",
        "Mutual Trust and Confidence",
        "Promises",
        "Staff Handbooks",
        "Terms and Conditions"
    ],
    "HELD": [
        "Appeal dismissed.",
        "(1) (a) The variation had been effected in accordance with cl.1.4. D&#8217;s communications had been made with the approval of the board of the remuneration committee. Since the HR director was a member of that board, no further endorsement by HR was necessary. Moreover, there was no reason why compliance could not be achieved by two documents. A change affecting a group of people did not need to be in writing, but needed only to be displayed on the company intranet. The August 18 announcement could be said to have been &#8220;displayed&#8221; on D&#8217;s intranet by reason of its having been broadcast, even if the broadcast could not be viewed after the event (see paras 52-54 of judgment); (b) there was overwhelming evidence that D had intended its promise to be legally binding. Where a term was being introduced into a pre-existing contractual relationship, there was a very strong presumption that it was intended to be legally binding, and the onus was on the party asserting that there was no intention to create legal relations to establish that fact. The natural inference was that any promises made to staff relating to the terms of their employment would take effect in the same way as other contractual terms. That was supported by a number of matters: D&#8217;s chief executive officer had made the promise, which implied that it must have been approved at the highest level; it was part of a vitally important staff retention strategy to prevent the potential collapse of the investment banking division; the nature of the promise assured staff that the fund was guaranteed come what may; and it was related to pay, the most fundamental obligation under the employment contract (paras 80-81, 89, 96); (c) D&#8217;s employees were under no obligation to communicate acceptance of the bonus offer. D had plainly dispensed with the need for any response: it had made a promise without any disadvantage to its employees, and nobody hearing the announcement would expect that an employee could only benefit if he positively accepted the offer. That would have had the bizarre result that even if only a minority of the relevant employees accepted the offer, D would have had to pay them the whole of the bonus pool. Even if there was no unilateral change pursuant to cl.1.4, there was a binding contractual obligation to pay bonus payments in the usual way, at least to the limits of the guaranteed fund (paras 97-100). (2) The introduction of the MAC clause was a breach of the implied duty of mutual trust and confidence. The judge had been entitled to find that the MAC clause had been introduced as a result of pressure from C, which had been concerned about the public&#8217;s negative perception of large bonus payments. He had objectively analysed the question of whether trust and confidence had been undermined and there was ample evidence to support his conclusion that it had (paras 130-140)."
    ],
    "NUMBER": "391",
    "TYPE": "Headnotes",
    "NAME": "(wl) Dresdner Kleinwort Ltd v Attrill",
    "JUDGE": "Maurice Kay LJ; Elias LJ; Beatson LJ",
    "CIT": "[2013] EWCA Civ 394",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "(wl) Branca v Cobarro",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) Caparo Industries plc v Dickman",
        "(wl) Canada Steamship Lines Ltd v The King",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) Henderson v Merrett Syndicates",
        "(wl) McCullough v Lane Fox and Partners Ltd",
        "(wl) BRS v Arthur Crutchley Ltd",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd"
    ],
    "COUNSEL": "For G: RBS Mcfarlan Q.C. and PC King. For M: AJ Sullivan Q.C. and NG Rein.",
    "COURT": "EWHC",
    "SUMMARY": [
        "cargo; damage to cargo in violent storm; bad weather foreseen; availability of immunity under &#8220;perils of the sea&#8221; in Hague Rules",
        "G&#8217;s cargo of aluminium coils was damaged while being carried by sea by M, shipowners, in heavy weather across the Great Australian Bight. M&#8217;s central planner had been responsible for the organisation of stowage of the freight on board ship. Only coils stowed in a particular part of the vessel, close to the hull of the ship had been damaged. The security and safety of the vessel itself had been the responsibility of the ship&#8217;s master. The contract of carriage incorporated the Hague Rules and M sought to rely on the Hague Rules Art.IV r.2c which precluded liability resulting from the perils of the sea. G contended that M had been negligent in ignoring the master&#8217;s advice as to stowage. G&#8217;s appeal against the dismissal of its claim was dismissed and it appealed."
    ],
    "CATEGORY": "Shipping Other Related Subjects: Negligence &mdash; Cargo &mdash; Damage &mdash; Hague Rules &mdash; Interpretation &mdash; Negligence",
    "CITATION": "Eliason v Henshaw [1999] 1 Lloyd&#8217;s Rep 512",
    "YEAR": "1999",
    "CATEGORIES": [
        "Shipping Other Related Subjects: Negligence",
        "Cargo",
        "Damage",
        "Hague Rules",
        "Interpretation",
        "Negligence"
    ],
    "HELD": [
        "dismissing the appeal, that the evidence demonstrated no negligence on the part of M in effecting stability calculations. All such calculations had been within the parameters set by the master, who had operated the vessel adequately in the conditions. In considering whether or not events resulted from perils of the sea, it was necessary to have regard to the condition of the vessel, whether the events asserted as &#8220;perils&#8221; were unexpected or a &#8220;freak occurrence&#8221;, and the intensity of the conditions which had caused the damage. On the facts there was no evidence that M had been negligent in preparing the vessel for the voyage. Foreseeability of adverse weather did not preclude the operation of the immunity contained in Art.IV r.2(c)."
    ],
    "NUMBER": "392",
    "TYPE": "Headnotes",
    "NAME": "(wl) Eliason v Henshaw",
    "JUDGE": "Callinan, J.; Hayne J; Gummow J; Gaudron J",
    "CIT": "[1999] 1 Lloyd&#8217;s Rep 512",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Tekdata Interconnections Ltd v Amphenol Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Daulia Ltd v Four Millbank Nominees Ltd",
        "(wl) Barry v Davies",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Ingram v Little",
        "(wl) Parker v Clark",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Brogden v Metropolitan Railway",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd"
    ],
    "YEAR": "1955",
    "COURT": "EWCA",
    "SUMMARY": [
        "Acceptance; place where contract made; telex communications",
        "The rule about instantaneous communications between the parties is different from the rule about the post. The contract is only complete when the acceptance is received by the offeror; and the contract is made at the place where the acceptance is received. Thus, in the case of telex communications, the place where the contract is made is the place where the offeror receives the notification of the acceptance by the offeree. An English company and a Dutch company in Amsterdam concluded a contract by means of the telex system of communication whereby a message can be typed on a teleprinter in one country and be instantly recorded in another. An offer was sent by telex from England offering to pay GBP 239 a ton for 100 tons of Japanese cathodes and accepted by telex from Holland. On the question whether leave should be given to serve notice of the writ out of the jurisdiction, held, the contract was made in England and leave should be given for service out of the jurisdiction."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Civil Procedure &mdash; Formation of Contract &mdash; Jurisdiction &mdash; Offer and Acceptance &mdash; Telex",
    "JUDGE": "Denning LJ; Birkett LJ; Parker LJ",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Civil Procedure",
        "Formation of Contract",
        "Jurisdiction",
        "Offer and Acceptance",
        "Telex"
    ],
    "NUMBER": "393",
    "TYPE": "Headnotes",
    "NAME": "(wl) Entores v Miles Far East Corporation",
    "CITATION": "Entores v Miles Far East Corporation [1955] 2 QB 327",
    "CIT": "[1955] 2 QB 327",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) White & Carter (Councils) Ltd v McGregor",
        "(wl) Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd",
        "(wl) Koufos v Czarnikow Ltd (The Heron II)",
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) Albert v Motor Insurers' Bureau",
        "(wl) City and Westminster Properties v Mudd",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "(wl) Bolton v Mahadeva",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Carriage by sea; charterparty; repudiation; late payment",
        "Failure to pay punctually on a charterparty will not amount to a repudiation in the absence of evidence of such an intention by the charterers. Payment is made when money is received by the creditor. The charterers hired a vessel &#8220;hire to be paid on the first day of each month.&#8221; Payments were always late and the charterers were asked to ensure that payments were punctual. In April 1970 the charterers made payments on April 2. The shipowners withdrew the vessel from service as soon as they heard that payment had not been made on April 1."
    ],
    "CATEGORY": "Shipping &mdash; Charterparties &mdash; Hiring &mdash; Payments &mdash; Repudiation &mdash; Shipowners &mdash; Shipping Contracts",
    "CITATION": "The Brimnes [1975] QB 929",
    "YEAR": "1975",
    "CATEGORIES": [
        "Shipping",
        "Charterparties",
        "Hiring",
        "Payments",
        "Repudiation",
        "Shipowners",
        "Shipping Contracts"
    ],
    "HELD": [
        "that (1) the charterers&#8217; failure to pay on the due date did not amount to a repudiation since no such intention had been evinced; but (2) the shipowners had validly exercised their right of withdrawal as they had not received payment on the due date and they had probably withdrawn before payment had been made. (Car &amp; Universal Finance Co Ltd v Caldwell [1965] 1 Q.B. 525 referred to and Empresa Cubana de Fletes v Lagonisi Shipping Co Ltd (The Georgios C) [1971] 1 Q.B. 488 referred to)."
    ],
    "NUMBER": "394",
    "TYPE": "Headnotes",
    "NAME": "(wl) The Brimnes",
    "JUDGE": "Edmund Davies LJ; Megaw LJ; Cairns LJ",
    "CIT": "[1975] QB 929",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Dresdner Kleinwort Ltd v Attrill",
        "(wl) Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd",
        "(wl) Davis Contractors Ltd v Fareham Urban District Council",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "(wl) Barry v Davies",
        "(wl) City and Westminster Properties v Mudd"
    ],
    "COUNSEL": "For the appellant: Mr Finlay, Mr Dillwyn.",
    "COURT": "EWCA",
    "SUMMARY": [
        "Where it was expressly or impliedly authorised by the contractual parties that acceptance of an offer could be posted, the contract was completed on posting the acceptance, irrespective of whether delivery was delayed or failed to take place at all."
    ],
    "CATEGORY": "Company Law Other Related Subjects: Contracts &mdash; Acceptance &mdash; Letters of Allotment &mdash; Non-Delivery &mdash; Postal Services",
    "JUDGE": "Thesiger LJ; Baggallay LJ; Bramwell LJ",
    "YEAR": "1879",
    "ABSTRACT": [
        "The appellant (G) appealed against a decision finding him to be a shareholder in the respondent company (H).",
        "G had applied for shares in H and a letter was posted to him containing the notice of allotment. G never received the letter. H went into liquidation and the liquidator brought proceedings seeking payment from G for the shares. G denied being a shareholder.",
        "G argued that for him to be a shareholder the allotment of shares had to have been communicated to him and a letter posted but not received did not amount to &#8216;communication&#8217;.",
        "(Bramwell L.J. dissenting) G was a shareholder. He had made an application for shares in H in circumstances which had to imply that he authorised H to send the allotment notice by post. The contract was made from the time the acceptance was posted by H and there was no distinction between a delay in delivery by the Post Office and its failure to deliver at all, Dunlop v Higgins 9 E.R. 805 followed, British &amp; American Telegraph Co Ltd v Colson (1870-71) L.R. 6 Ex. 108 disapproved. Although on occasions inconvenience and hardship may follow from having a binding contract being formed when an offer was posted, it was impossible to adjust conflicting rights of the parties such that the consequences following a mistake on the part of a mutual agent, being the Post Office in the instant case, were borne equally by all parties. Further, there would not necessarily be great inconvenience or hardship because the offeror could always choose to make the formation of the contract dependent upon actual communication of the acceptance. (Per Bramwell L.J) posting a letter did not differ from other forms of communication in that for a person to be affected by a communication, it must have reached him."
    ],
    "CATEGORIES": [
        "Company Law Other Related Subjects: Contracts",
        "Acceptance",
        "Letters of Allotment",
        "Non-Delivery",
        "Postal Services"
    ],
    "NUMBER": "395",
    "TYPE": "Headnotes",
    "NAME": "(wl) Household Fire Insurance Co v Grant",
    "CITATION": "Household Fire Insurance Co v Grant (1879) 4 Ex D 216",
    "CIT": "(1879) 4 Ex D 216"
},
{
    "RELATED": [
        "(wl) William Sindall plc v Cambridgeshire County Council",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Barry v Davies",
        "(wl) Entores v Miles Far East Corporation",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Alpenstow v Regalian Properties",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "(wl) Tekdata Interconnections Ltd v Amphenol Ltd",
        "(wl) Daulia Ltd v Four Millbank Nominees Ltd",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Option; exercisable by notice in writing; letter never received; whether validly exercised",
        "An option, exercisable by notice in writing, is not validly exercised by the posting of a letter which is not received. D granted P an option to purchase land, exercisable by notice in writing within six months. Shortly before the expiration of the period, P posted a notice of the exercise of the option, which never arrived. P contended that the option was validly exercised by the posting of the notice."
    ],
    "CATEGORY": "Real Property &mdash; Contract For Sale of Land &mdash; Document Exchanges &mdash; Offer and Acceptance &mdash; Options &mdash; Postal Service",
    "CITATION": "Holwell Securities Ltd v Hughes [1974] 1 WLR 155",
    "YEAR": "1974",
    "CATEGORIES": [
        "Real Property",
        "Contract For Sale of Land",
        "Document Exchanges",
        "Offer and Acceptance",
        "Options",
        "Postal Service"
    ],
    "HELD": [
        "different considerations applied from the mere acceptance of an offer, and the option was not validly exercised. ( Henthorn v Fraser [1892] 2 Ch. 27 distinguished and Bruner v Moore [1904] 1 Ch. 305 distinguished)."
    ],
    "NUMBER": "396",
    "TYPE": "Headnotes",
    "NAME": "(wl) Holwell Securities Ltd v Hughes",
    "JUDGE": "Russell LJ; Buckley LJ; Lawton LJ",
    "CIT": "[1974] 1 WLR 155",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "(wl) Entores v Miles Far East Corporation",
        "(wl) British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Rose v Pim",
        "(wl) Parker v Clark",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd"
    ],
    "COUNSEL": "For the applicant: D Lewis. For the respondent: R Aswani.",
    "COURT": "EWHC",
    "SUMMARY": [
        "Arbitrators; Appointments; Misdirected acceptance of offer to agree to appoint arbitrator; Acceptance within reasonable time; Extension of time requiring circumstances outside reasonable contemplation of parties",
        "The applicant ship owners (O) applied for a determination that an arbitrator had been validly appointed under a charterparty, alternatively for an extension of time to commence arbitral proceedings. O had chartered a vessel to the respondent charterers (C) on an amended Centricon form for the carriage of a cargo of maize from Argentina to Algeria. A dispute had arisen about demurrage. C had failed to pay O&#8217;s claim for demurrage in full, and O decided to refer the dispute to arbitration under the charterparty arbitration clause and proposed the name of an arbitrator. C had put forward three other names. Within the 12 months permitted for appointment of an arbitrator under the charterparty arbitration clause, O had composed a reply by fax agreeing to the appointment of one of the arbitrators put forward by C. That fax and another fax chasing the matter some four months later had been sent to a wrong number and were never received by C. After another four months O had made contact with C and the proposed arbitrator (R) who had accepted the appointment. C disputed R&#8217;s jurisdiction on the basis that he had not been appointed within the 12 month period from final discharge prescribed by the charterparty arbitration clause. O submitted that (1) C&#8217;s offer to agree to the appointment of R as sole arbitrator had been accepted at the moment when the fax was sent to the wrong number; (2) alternatively, the offer to agree to the appointment of R as sole arbitrator had remained open for acceptance until O had purported to accept it; (3) there should if necessary be an extension of time under the Arbitration Act 1996 s.12(3)(a) ."
    ],
    "CATEGORY": "Arbitration Other Related Subjects: Shipping &mdash; Contracts &mdash; Appointments &mdash; Arbitrators &mdash; Charterparties &mdash; Demurrage &mdash; Extensions of Time &mdash; Jurisdiction &mdash; Offer and Acceptance",
    "CITATION": "L J Korbetis v Transgrain Shipping BV [2005] EWHC 1345 (QB)",
    "YEAR": "2005",
    "CATEGORIES": [
        "Arbitration Other Related Subjects: Shipping",
        "Contracts",
        "Appointments",
        "Arbitrators",
        "Charterparties",
        "Demurrage",
        "Extensions of Time",
        "Jurisdiction",
        "Offer and Acceptance"
    ],
    "HELD": [
        "refusing the applications, that (1) rules about offer and acceptance should be clear so that parties knew where they stood. A situation in which it was unclear whether a contract had been formed until a court decided the issue in the exercise of some form of general discretion would be unsatisfactory. Acceptance by post was complete as soon as the letter, properly addressed, was put into the post-box, Adams v Lindsell 106 E.R. 250 and Entores Ltd v Miles Far East Corp [1955] 2 Q.B. 327 considered. If the letter was wrongly addressed different considerations applied. It was unfair to the intended recipient that he should be bound by something which he was unlikely to receive because of the fault of the sender. Any such rule had the potential of givng a careless would-be acceptor an unfair advantage. The postal rule should not apply to misdirected letters of acceptance. A misdirected acceptance should take effect, if at all, at the time which was least favourable to the party responsible for the misdirection. (2) The letter of offer was implicitly open for acceptance only within a reasonable period. The fax to R, which was copied to C, was sent approximately eight months after C&#8217;s offer to agree to the appointment of R. In the circumstances eight months was far in excess of a reasonable period for acceptance of C&#8217;s offer. It followed that there had been no agreement to the appointment of R, and that he had no jurisdiction under the charterparty. (3) An extension of time for commencement of the arbitral proceedings under s.12 was refused. The clerical error in failing to send the fax to the right number and an omission to chase matters up with any promptitude were not within the reasonable contemplation of the parties at the time when the contract was made as the kind of circumstance that might trigger an extension of time, Harbour &amp; General Works Ltd v Environment Agency [2000] 1 W.L.R. 950 considered. It would not be just to extend the time for commencing arbitration proceedings in circumstances where C had the benefit of a contractual time bar."
    ],
    "NUMBER": "397",
    "TYPE": "Headnotes",
    "NAME": "(wl) L J Korbetis v Transgrain Shipping BV",
    "JUDGE": "Toulson J",
    "CIT": "[2005] EWHC 1345 (QB)",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Daulia Ltd v Four Millbank Nominees Ltd",
        "(wl) Gibson v Manchester City Council",
        "(wl) Tinn v Hoffman & Co",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Holwell Securities Ltd v Hughes",
        "(wl) Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "(wl) Eliason v Henshaw",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) McCutcheon v David MacBrayne Ltd",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds"
    ],
    "YEAR": "1947",
    "COURT": "EWCA",
    "SUMMARY": [
        "Contract for sale; &#8220;subject to contract&#8221;",
        "Where a document which is signed by the vendor and by the purchaser and which contains all the material terms of the contract concludes with the phrase: &#8220;This is a provisional agreement until a fully legalised agreement drawn up by a solicitor and embodying all the conditions herewith stated is signed&#8221;, the effect of such a provision is not that the drawing up and signature of a formal document was to be a condition of there coming into existence a binding contract. On the contrary, it is something which, when it happens, will bring to an end a document which the parties clearly treat as being an operative document. The word &#8220;until&#8221; is not the right word to import a condition or a stipulation as to the event referred to, and the word &#8220;provisional&#8221; in this context does not mean &#8220;tentative&#8221; but means something which is going to operate until something else happens."
    ],
    "CATEGORY": "Real Property Other Related Subjects: Contracts &mdash; Conditions &mdash; Contract For Sale of Land &mdash; Interpretation",
    "JUDGE": "Lord Greene MR",
    "CATEGORIES": [
        "Real Property Other Related Subjects: Contracts",
        "Conditions",
        "Contract For Sale of Land",
        "Interpretation"
    ],
    "NUMBER": "398",
    "TYPE": "Headnotes",
    "NAME": "(wl) Branca v Cobarro",
    "CITATION": "Branca v Cobarro [1947] KB 854",
    "CIT": "[1947] KB 854",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Branca v Cobarro",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Collier v Wright (Holdings) Ltd",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Holwell Securities Ltd v Hughes",
        "(wl) Edwards v Skyways",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Re Selectmove Ltd",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "(wl) Shogun Finance Ltd v Hudson"
    ],
    "COURT": "EWHC",
    "SUMMARY": [
        "Formation; &#8220;subject to contract&#8221;; whether binding contract; motion to vacate cautions",
        "An order vacating a caution or an estate contract can be made on motion if there is no fair arguable case in support of registration which ought to go to trial. Where letters constituted a detailed document cancelling and replacing a binding agreement this provided a very strong and exceptional context in which the words &#8220;subject to contract&#8221; should not be given their prima facie meaning. The plaintiffs acquired certain land and agreed to appoint the defendants as development consultants in connection with a planning permission and undertook that if on the grant of the planning permission they wished to dispose of their interest in whole or part they would either grant them the right to purchase or pay them GBP 500,000. By an exchange of letters, that agreement was cancelled and a fresh agreement entered into whereby the plaintiffs undertook, if they wished, following grant of planning permission, to dispose of any interest in the land, to serve on the defendants a notice of their willingness to sell a 51 per cent. interest in the freehold or to pay them GBP 500,000 and the defendants agreed to accept the notice in 28 days &#8220;subject to contract.&#8221; The letters provided a detailed timetable for submission, approval, exchange of contracts and completion. The defendants registered cautions against the plaintiffs&#8217; titles on the register in respect of the agreement. Planning permission was granted and the plaintiffs served a notice of willingness to sell a 51 per cent. stake. The defendants duly accepted the notice subject to contract and asked for a draft contract to be submitted to them. The plaintiffs then contended that the letters amounted only to an agreement to agree and not a binding contract to convey a legal or beneficial interest in land. The defendants lodged a further caution to protect their &#8220;crystallised&#8221; interest. The plaintiffs issued an originating summons and by notice of motion sought to have the cautions vacated from the register."
    ],
    "CATEGORY": "Contracts &mdash; Contract For Sale of Land &mdash; Formalities",
    "CITATION": "Alpenstow v Regalian Properties [1985] 1 WLR 721",
    "YEAR": "1985",
    "CATEGORIES": [
        "Contracts",
        "Contract For Sale of Land",
        "Formalities"
    ],
    "HELD": [
        "that an order vacating a caution or an estate contract could and ought to be made on motion if there was no fair arguable case in support of registration which ought to go to trial. If the issues were defined and their resolution depended only on ascertained documents and affidavit evidence, they could and ought to be decided, even though they involved a difficult question of construction or law. Accordingly, although the construction of the letters was difficult, they should be decided on the motion (Heywood v BDC Properties Ltd (No.1) [1963] 1 W.L.R. 975, Rawlplug Co Ltd v Kamvale Properties Ltd (1969) 20 P. &amp; C.R. 32, Clearbrook Property Holdings Ltd v Verrier [1974] 1 W.L.R. 243 and Tiverton Estates Ltd v Wearwell Ltd [1975] Ch. 146 applied). The motion was dismissed since on their true construction the letters which constituted a detailed document replacing a previous binding agreement provided a very strong and exceptional context in which the words &#8220;subject to contract&#8221; should not be given their prima facie meaning whereby either party could withdraw before contracts were exchanged. Accordingly when the defendants accepted the plaintiffs&#8217; notice of willingness to sell, there was an agreement for the sale of the plaintiffs&#8217; interest in the land under which the defendants took an equitable interest (Chillingworth v Esche [1924] 1 Ch. 97 considered)."
    ],
    "NUMBER": "399",
    "TYPE": "Headnotes",
    "NAME": "(wl) Alpenstow v Regalian Properties",
    "JUDGE": "Nourse J",
    "CIT": "[1985] 1 WLR 721",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Parker v Clark",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) Nicolene v Simmonds",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) Shogun Finance Ltd v Hudson",
        "(wl) White & Carter (Councils) Ltd v McGregor",
        "(wl) Tekdata Interconnections Ltd v Amphenol Ltd",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Sudbrook Trading Estate Ltd v Eggleton"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Formation; agreement to enter into negotiations; major terms not agreed; whether binding contract",
        "An agreement to negotiate is not an enforceable contract where a fundamental matter, such as the price, has not been agreed. The plaintiff building contractors agreed to introduce a financier to D if, on a successful introduction, D would instruct their quantity surveyor to negotiate &#8220;fair and reasonable sums&#8221; based on agreed estimates of net costs and overheads, with a profit margin of five per cent"
    ],
    "CATEGORY": "Contracts &mdash; Building and Engineering Contracts &mdash; Formation of Contract &mdash; Pricing",
    "CITATION": "Courtney &amp; Fairbairn Ltd v Tolaini Bros (Hotels) Ltd [1975] 1 WLR 297",
    "YEAR": "1975",
    "CATEGORIES": [
        "Contracts",
        "Building and Engineering Contracts",
        "Formation of Contract",
        "Pricing"
    ],
    "HELD": [
        "allowing D&#8217;s appeal, that because there was no agreement as to price, which went to the very root of a building contract, this was only a contract to negotiate, and not enforceable in law."
    ],
    "NUMBER": "400",
    "TYPE": "Headnotes",
    "NAME": "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
    "JUDGE": "Lord Denning MR; Lord Diplock; Lawton LJ",
    "CIT": "[1975] 1 WLR 297",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) King's Norton Metal Co Ltd v Edridge, Merrett & Co",
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) Olley v Marlborough Court Hotel",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Solle v Butcher",
        "(wl) D & C Builders Ltd v Rees",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Societe Italo-Belge v Palm and Vegetable Oils, Malaysia (The Post Chaser)",
        "(wl) Rose v Pim"
    ],
    "COUNSEL": "For W: Philip Naughton Q.C. and Angus Moon. For M: Stanley Brodie Q.C. and Edward Cohen.",
    "COURT": "UKHL",
    "SUMMARY": [
        "Enforceability; contract to negotiate with named party and no other; no specific time limit on agreement; whether enforceable",
        "An agreement whereby one party for consideration agrees for a specified period of time not to negotiate with anyone else in relation to a sale of property can be enforceable but an agreement that is open-ended in terms of time is not enforceable. M owned a company and premises which he decided to sell. He received an offer of GBP 1.9 million from a third party and GBP 2 million from W. It was agreed in principle to sell to W and M warranted that the profits in the first year would be GBP 300,000. It was also agreed that if W provided a letter of comfort from their bank confirming the loan facilities to raise the GBP 2 million, then M would &#8220;terminate negotiations with any third party&#8221;. W provided the letter but M, concerned that staff would not co-operate with W and hence not make GBP 300,000 profit, withdrew from negotiations. W brought an action for breach of the &#8220;lock-out&#8221; agreement which gave W exclusive opportunity to come to terms with M. The agreement was collateral to the main agreement and the consideration was the letter of comfort and W&#8217;s continuation with true negotiations. M argued that the agreement was unenforceable. The judge upheld W&#8217;s claim but the Court of Appeal found in favour of M."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Torts &mdash; Lockout Agreements &mdash; Negotiations &mdash; Sale of Business",
    "CITATION": "Walford v Miles [1992] 2 AC 128",
    "YEAR": "1992",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Torts",
        "Lockout Agreements",
        "Negotiations",
        "Sale of Business"
    ],
    "HELD": [
        "dismissing W&#8217;s appeal, that a &#8220;lock-out&#8221; agreement could be enforceable but this agreement was not as it amounted to an agreement to negotiate for an unspecified period and so a vendor was not obliged to conclude the contract and would not know when he was entitled to withdraw from negotiations. The courts could not be expected to decide subjectively whether a proper reason for ending negotiations existed (Courtney &amp; Fairbairn Ltd v Tolaini Brothers (Hotels) Ltd [1975] 1 W.L.R. 297 approved)."
    ],
    "NUMBER": "401",
    "TYPE": "Headnotes",
    "NAME": "(wl) Walford v Miles",
    "JUDGE": "Lord Keith of Kinkel; Lord Ackner; Lord Goff of Chieveley; Lord Jauncey of Tullichettle; Lord Browne-Wilkinson",
    "CIT": "[1992] 2 AC 128",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Collier v Wright (Holdings) Ltd",
        "(wl) Re Selectmove Ltd",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Nicolene v Simmonds",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) Sudbrook Trading Estate Ltd v Eggleton",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen"
    ],
    "YEAR": "1949",
    "COURT": "EWCA",
    "SUMMARY": [
        "Implied term; payment of commission",
        "The principle to be deducted from the cases as to whether or not there is an enforceable contract is that, if there is an essential term which has yet to be agreed and there is no express or implied provision for its solution, the result in point of law is that there is no binding contract. In seeing whether there is an implied provision for its solution, however, there is a difference between an arrangement which is wholly executory on both sides, and one which has been executed on one side or the other. In the ordinary way, if there is an arrangement to supply goods at a price &#8220;to be agreed&#8221;, or to perform services on terms &#8220;to be agreed&#8221;, then, although while the matter is still executory there may be no binding contract, nevertheless, if it is executed on one side, that is, if the one does his part without having come to an agreement as to the price or the terms, then the law will say that there is necessarily implied from the conduct of the parties a contract that, in default of agreement, a reasonable sum is to be paid. The defendants had agreed to buy 20,000 oilskins from the plaintiffs&#8217; friends at 5s. 6d. each. By letter to the plaintiffs they wrote: &#8220;We confirm that we have agreed to cover you on this transaction with a commission of 4d. per oilskin suit. We also undertake to cover you with an agreed commission on any other business transacted with your friends&#8221;. In return for this you are to put us in direct touch with your friends&#8221;. The plaintiffs thereupon put the defendants in direct touch with their friends and the defendants purchased first 1,000 oilskins and later 20,000 oilskins from one of these friends. When the plaintiffs claimed their commission on these transactions, the defendants repudiated liability on the ground that there was no legally enforceable bargain arising out of the letter, it being an agreement to pay a commission to be agreed and no further agreement having been reached, and that, even if the arrangement constituted an enforceable bargain, it was only a contract to pay commission on business arising directly from the introduction by the plaintiffs and the second transaction arose from an advertisement in a newspaper. Held, (1) there was nothing in the agreement limiting the commission to commission on orders directly attributable to the introduction, and, therefore, it included a transaction arising from an advertisement in a newspaper; (2) the commission was payable in respect of every subsequent transaction with friends who had originally been introduced by the plaintiffs; (3) the agreement was not confined to oilskins but also applied to entirely different commodities; and (4) &#8220;to cover you with an agreed commission&#8221; meant in the circumstances of the case to cover you with a reasonable commission and such a condition was not too vague to be enforceable, because a jury properly directed would be able to arrive at a proper conclusion as to what in the circumstances of this case was a reasonable commission."
    ],
    "CATEGORY": "Contracts &mdash; Agreements &mdash; Certainty &mdash; Commission &mdash; Implied Terms &mdash; Letters &mdash; Sale of Goods",
    "JUDGE": "Singleton LJ",
    "CATEGORIES": [
        "Contracts",
        "Agreements",
        "Certainty",
        "Commission",
        "Implied Terms",
        "Letters",
        "Sale of Goods"
    ],
    "NUMBER": "402",
    "TYPE": "Headnotes",
    "NAME": "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
    "CITATION": "British Bank for Foreign Trade Ltd v Novinex Ltd [1949] 1 KB 623",
    "CIT": "[1949] 1 KB 623",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Nicolene v Simmonds",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Holwell Securities Ltd v Hughes",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Edwards v Skyways",
        "(wl) British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) White & Carter (Councils) Ltd v McGregor"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Option to purchase; refusal to appoint valuer",
        "Where a lessee exercises an option to purchase but the lessor refuses to appoint a valuer, the court may intervene to ascertain a fair and reasonable price and order specific performance of the contract. Various industrial premises were demised by four separate leases all due to expire in 1997, and all with clauses granting the lessees an option to purchase the reversion in fee simple at a price to be agreed by valuers appointed by both parties. The lessees exercised their options to purchase, but the lessors refused to appoint a valuer."
    ],
    "CATEGORY": "Landlord and Tenant Other Related Subjects: Contracts &mdash; Contracts &mdash; Options &mdash; Valuation",
    "CITATION": "Sudbrook Trading Estate Ltd v Eggleton [1983] 1 AC 444",
    "YEAR": "1983",
    "CATEGORIES": [
        "Landlord and Tenant Other Related Subjects: Contracts",
        "Contracts",
        "Options",
        "Valuation"
    ],
    "HELD": [
        "allowing the lessee&#8217;s appeal, that since the price was capable of being ascertained, a complete contract was constituted; the court could and would, if the machinery of ascertaining a price broke down, substitute its own to ascertain a fair and reasonable price (Vickers v Vickers (1867) L.R. 4 Eq. 529 and Agar v Macklew 57 E.R. 405 overruled)."
    ],
    "NUMBER": "403",
    "TYPE": "Headnotes",
    "NAME": "(wl) Sudbrook Trading Estate Ltd v Eggleton",
    "JUDGE": "Lord Diplock; Lord Fraser; Lord Russell; Lord Scarman; Lord Bridge",
    "CIT": "[1983] 1 AC 444",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Sudbrook Trading Estate Ltd v Eggleton",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Chappell & Co v Nestle Co Ltd",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "(wl) Schawel v Reade"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Intention to create legal relations; consensus ad idem; uncertainty of term",
        "A distinction must be drawn between a clause which is meaningless and a clause which is yet to be agreed. A clause which is meaningless can often be ignored while still leaving the contract good, whereas a clause which has yet to be agreed may mean that there is no contract at all because the parties have not agreed on all the essential terms. If one of the parties to a contract inserts into it an exempting condition in his own favour with which the other side agrees, and it afterwards appears that that condition is meaningless or is so ambiguous that no ascertainable meaning can be given to it, that does not render the whole contract a nullity. The only result is that the exempting condition is a nullity and must be rejected. On August 10, 1951, the plaintiff company sent the defendant a letter asking for written confirmation of an order for 3,000 tons of reinforcing bars of West German origin. The enclosed order specified the price and quality of the goods, the mode of payment and shipment, and certain other stipulations. By a letter dated August 16, the defendant acknowledged receipt of the order and stated: &#8220;As you have made the order direct to me, I am unable to confirm on my usual printed form which would have the usual force majeure and war clauses, but I assume that we are in agreement that the usual conditions of acceptance apply.&#8221; The letter then gave particulars of the proposed shipment of the goods. By a letter dated August 29, the plaintiff company replied giving particulars of arrangements for the provision of shipping space and the opening of credit in respect of the goods. In answer to an allegation that the defendant had broken the contract by his failure to make the necessary deliveries, the defendant denied that there was a concluded contract between the parties."
    ],
    "CATEGORY": "Contracts &mdash; Acquiescence &mdash; Breach of Contract &mdash; Exclusion Clauses &mdash; Force Majeure &mdash; Uncertainty",
    "CITATION": "Nicolene v Simmonds [1953] 1 QB 543",
    "YEAR": "1953",
    "CATEGORIES": [
        "Contracts",
        "Acquiescence",
        "Breach of Contract",
        "Exclusion Clauses",
        "Force Majeure",
        "Uncertainty"
    ],
    "HELD": [
        "the letter of August 16 was an acceptance of the contract, both parties assuming that the usual conditions of acceptance applied; the words: &#8220;I assume we are in agreement that the usual conditions of acceptance apply&#8221; were meaningless, and ought to be ignored; consequently, there was a contract between the parties which was broken by the defendant, British Electrical and Associated Industries (Cardiff) Ltd v Patley Pressings Ltd [1953] 1 W.L.R. 280 distinguished and G Scammell and Nephew Ltd v HC&amp;JG Ouston [1941] A.C. 251 distinguished."
    ],
    "NUMBER": "404",
    "TYPE": "Headnotes",
    "NAME": "(wl) Nicolene v Simmonds",
    "JUDGE": "Hodson LJ",
    "CIT": "[1953] 1 QB 543",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Sudbrook Trading Estate Ltd v Eggleton",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Nicolene v Simmonds",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Re Selectmove Ltd",
        "(wl) Collier v Wright (Holdings) Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Company"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Gramophone record; retail sale",
        "N. Co. entered into a contract with a company manufacturing gramophone records to purchase a number of recordings of a piece of dance music, the copyright of which was vested in the plaintiffs. On the cards on which the records were mounted there was an advertisement that the records could be obtained by sending to N. Co. for each record 1s. 6d. together with three wrappers from N. Co.&#8217;s 6d. milk chocolate bars. The wrappers when received were worthless and were thrown away. The plaintiffs sought an injunction restraining the two companies from manufacturing and selling the records on the ground that the transactions involved breaches of copyright."
    ],
    "CATEGORY": "Intellectual Property &mdash; Advertisements &mdash; Contracts &mdash; Copyright &mdash; Musical Works &mdash; Price Marking &mdash; Royalties",
    "CITATION": "Chappell &amp; Co v Nestle Co Ltd [1960] AC 87",
    "YEAR": "1960",
    "CATEGORIES": [
        "Intellectual Property",
        "Advertisements",
        "Contracts",
        "Copyright",
        "Musical Works",
        "Price Marking",
        "Royalties"
    ],
    "HELD": [
        "there was no &#8220;ordinary retail selling price&#8221; within the Copyright Act 1956 s.8 because the 1s. 6d. was not the whole consideration for the sale of the records; accordingly, neither N. Co. nor the record manufacturers were protected by the provisions of Copyright Act 1956 s.8."
    ],
    "NUMBER": "405",
    "TYPE": "Headnotes",
    "NAME": "(wl) Chappell & Co v Nestle Co Ltd",
    "JUDGE": "Viscount Simonds; Lord Reid; Lord Tucker; Lord Somervell of Harrow",
    "CIT": "[1960] AC 87",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Re Selectmove Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Edwards v Skyways",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) Hedley Byrne & Co Ltd v Heller & Partners",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) William Sindall plc v Cambridgeshire County Council",
        "(wl) Societe Italo-Belge v Palm and Vegetable Oils, Malaysia (The Post Chaser)",
        "(wl) Merritt v Merritt"
    ],
    "YEAR": "1951",
    "COURT": "EWCA",
    "SUMMARY": [
        "Maintenance; agreement; consideration",
        "The principle stated by Denning, J., in Central London Property Trust v. High Trees House [1947-51] C.L.Y. 5601 , does not create new causes of action where none existed before. It only prevents a party from insisting on his strict legal rights when it would be unjust to allow him to do so having regard to the dealings which have taken place between the parties. In none of the decided cases was the defendant sued on a promise, assurance or assertion as a cause of action in itself. He was sued for some other cause, for example, a pension or a breach of contract, or possession, and the promise, assurance or assertion only played a supplementary role, though, no doubt, an important one. That is its true function. It may be part of a cause of action, but it is not a cause of action in itself. The principle is that where one party has, by his words or conduct, made to the other a promise or assurance which was intended to affect the legal relations between them and to be acted on accordingly, then, once the other party has taken him at his word and acted on it, the one who gave the promise or assurance cannot afterwards be allowed to revert to their previous legal relations as if no such promise or assurance had been made by him, but must accept their legal relations subject to the qualification which he himself has so introduced, even though the promise or assurance is not supported in point of law by any consideration. A divorced husband agreed in writing in 1943 to allow his former wife GBP 100 a year free of tax by way of permanent maintenance. Being aware that he was not then in good financial circumstances, she made no claim to permanent maintenance then. But in 1950 she brought an action on the agreement claiming arrears under it. Held, the wife could only enforce the agreement in writing for the payment of maintenance if there was consideration for it; there was no evidence of any intention by the husband that the wife should forbear from applying to the Court for maintenance, or, in other words, any request by the husband, express or implied, that the wife should so forbear; her forbearance was not intended by him, nor was it done at his request; therefore, it did not amount to consideration for the husband&#8217;s promise. As a result the wife could not recover the arrears. Hyman v Hyman [1929] A.C. 601 applied and Gaisberg v Storr [1950] 1 K.B. 107 applied; Emanuel v Emanuel [1946] P. 115 considered; Central London Property Trust v. High Trees House distinguished and Robertson v Minister of Pensions [1949] 1 K.B. 227 distinguished; Scott v Scott [1921] P. 107 criticised)."
    ],
    "CATEGORY": "Family Law Other Related Subjects: Civil Procedure &mdash; Causes of Action &mdash; Consideration &mdash; Divorce &mdash; Maintenance Agreements",
    "CITATION": "Combe v Combe [1951] 2 KB 215",
    "CATEGORIES": [
        "Family Law Other Related Subjects: Civil Procedure",
        "Causes of Action",
        "Consideration",
        "Divorce",
        "Maintenance Agreements"
    ],
    "NUMBER": "406",
    "TYPE": "Headnotes",
    "NAME": "(wl) Combe v Combe",
    "CIT": "[1951] 2 KB 215",
    "FLAGS": [
        "Criticised"
    ]
},
{
    "RELATED": [
        "(wl) Societe Italo-Belge v Palm and Vegetable Oils, Malaysia (The Post Chaser)",
        "(wl) Bolton v Mahadeva",
        "(wl) White & Carter (Councils) Ltd v McGregor",
        "(wl) The Brimnes",
        "(wl) Re Selectmove Ltd",
        "(wl) Pettitt v Pettitt",
        "(wl) Albert v Motor Insurers' Bureau",
        "(wl) Schawel v Reade",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Lewis v Averay",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) East v Maurer"
    ],
    "YEAR": "1969",
    "COURT": "EWHC",
    "SUMMARY": [
        "Schedule D; Case VI; introduction of sale",
        "The taxpayer received several approaches from persons interested in buying farmland for the purpose of extracting gravel therefrom. He himself had no interest in the land which was vested in a bank as trustee of the will of his wife&#8217;s grandfather. His wife had no interest under the will but he was a practical farmer and he dealt with matters concerning the life tenant&#8217;s occupation of the farm. He passed on to the bank the enquiries as to sale. One company was prepared to offer GBP 100,000 for the land, and in answer to the taxpayer&#8217;s question &#8220;What&#8217;s in it for me?&#8221; a director of the company said that the taxpayer would be paid GBP 10,000 if the company purchased the land for GBP 100,000 or less. The reference to the GBP 10,000 was not passed on to the bank. When the bank asked the taxpayer for his comments on the offer of GBP 100,000 for the sale, he replied that he personally would accept it, but he made no further recommendations. The sale for GBP 100,000 was completed and the taxpayer received the promised GBP 10,000 from the company. He was assessed to income tax on this sum. The general commissioners found (a) that on the facts there was no contractual basis for the GBP 10,000 at all, (b) that this sum was not therefore a payment for services and (c) that the assessment ought therefore to be discharged. On appeal by the Revenue, held that the appeal be dismissed."
    ],
    "CATEGORY": "Tax &mdash; Assessment &mdash; Payments &mdash; Sale of Land",
    "JUDGE": "Pennycuick J",
    "CATEGORIES": [
        "Tax",
        "Assessment",
        "Payments",
        "Sale of Land"
    ],
    "NUMBER": "407",
    "TYPE": "Headnotes",
    "NAME": "(wl) Dickinson v Abel",
    "CITATION": "Dickinson v Abel [1969] 1 WLR 295",
    "CIT": "[1969] 1 WLR 295"
},
{
    "RELATED": [
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Edwards v Skyways",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Re Selectmove Ltd",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) White & Carter (Councils) Ltd v McGregor",
        "(wl) Combe v Combe",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd"
    ],
    "COURT": "UKPC",
    "SUMMARY": [
        "Consideration; subsidiary agreements; commercial pressure",
        "An agreement made in consideration of an act done before the making of the agreement may be enforceable where, inter alia, such act was done at the provisor&#8217;s request. Per curiam: Economic duress is capable of vitiating an agreement where it is such as to negative consent. The plaintiffs agreed to sell their shares in a private company to a company of which the defendants were majority shareholders in consideration of the issue to them of shares in the purchasing company. So as not to depress the market value of such shares the plaintiffs further agreed with the defendants that they would not sell 60 per cent of the newly issued shares until April 1974, the defendants agreeing, so that the plaintiffs might be protected against a fall in the value of the shares during such period, to purchase them at the end of that period at USD 2.50 each. Shortly afterwards the plaintiffs realised that the effect of such subsidiary agreement would be to deprive them of any increase in the value thereof. They therefore refused to complete the main agreement unless the defendants in substitution for the subsidiary agreement agreed to indemnify them against any reduction in value of the shares below the price of USD 2.50 each during the deferment period. The defendants, fearing the consequences of delay in completion of the main agreement, so agreed, the agreement being expressed to be in consideration of the plaintiffs having agreed to sell their shares in the private company. The main agreement was performed, and thereafter the value of the shares fell below USD 2.50 each. The plaintiffs claimed an indemnity, which was refused by the defendants on the grounds, inter alia, that the consideration for the indemnity agreement was past consideration and/or that any such agreement was voidable by reason of the economic duress applied by the plaintiffs."
    ],
    "CATEGORY": "Contracts &mdash; Consideration &mdash; Contractual Liability &mdash; Economic Duress &mdash; Operating Agreements",
    "CITATION": "Pao On v Lau Yiu Long [1980] AC 614",
    "YEAR": "1980",
    "CATEGORIES": [
        "Contracts",
        "Consideration",
        "Contractual Liability",
        "Economic Duress",
        "Operating Agreements"
    ],
    "HELD": [
        "that (1) an antecedent act could be valid consideration where it was done at the promisor&#8217;s request, where the parties understood that such act was to be remunerated by the conferment of a benefit and where such benefit would have been enforceable if promised in advance; and such criteria were here satisfied; (2) a promise to perform a contractual obligation for the benefit of a third party was good consideration; and (3) the commercial pressure to which the defendants had been subjected had not been such as to negative their consent to the indemnity agreement. (Casey&#8217;s Patents, Re [1892] 1 Ch. 104 applied and New Zealand Shipping Co Ltd v AM Satterthwaite &amp; Co Ltd (The Eurymedon) [1975] A.C. 154 applied)."
    ],
    "NUMBER": "408",
    "TYPE": "Headnotes",
    "NAME": "(wl) Pao On v Lau Yiu Long",
    "JUDGE": "Lord Wilberforce; Viscount Dilhorne; Lord Simon of Glaisdale; Lord Salmon; Lord Scarman",
    "CIT": "[1980] AC 614",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Collier v Wright (Holdings) Ltd",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "(wl) Jones v Padavatton",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) King's Norton Metal Co Ltd v Edridge, Merrett & Co",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) City and Westminster Properties v Mudd",
        "(wl) Albert v Motor Insurers' Bureau"
    ],
    "COURT": "EWHC",
    "SUMMARY": [
        "A promise which was intended to create legal relations and which was acted on was binding in law, despite the absence of consideration."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Equity &mdash; Promissory Estoppel",
    "CITATION": "Central London Property Trust v High Trees House Ltd [1947] KB 130",
    "YEAR": "1947",
    "ABSTRACT": [
        "The plaintiff lessor (C) sought to recover rent from the defendant lessee (H).",
        "By a lease made in 1937, C had granted H a tenancy of a block of flats in London for a term of 99 years at a ground rent of \u00a32,500 a year. The block of flats was a new one and was not fully occupied at the start of the Second World War owing to the absence of people from London. With war conditions prevailing, it was apparent to those responsible that the rent under the lease could not be paid out of the profits of the flats, and discussions took place between the directors of C and H which resulted in an written arrangement whereby the ground rent would be reduced as from the commencement of the lease to \u00a31,250 per annum. H paid the reduced rent from 1941 to the beginning of 1945, by which time all the flats in the block were fully let, and continued to pay it thereafter. C sought to recover \u00a3625, being the difference between rent at the rate of \u00a32,500 per annum and rent at the rate of \u00a31,250 per annum for the last two quarters of 1945. By its defence H pleaded that there had been an agreement that the rent should be \u00a31,250 only and that such agreement related to the whole term of the lease. In the alternative, H asserted that C was estopped from alleging that the rent exceeded \u00a31,250 per annum."
    ],
    "CATEGORIES": [
        "Contracts Other Related Subjects: Equity",
        "Promissory Estoppel"
    ],
    "HELD": [
        "Judgment for plaintiff.",
        "There had been a series of decisions over the last 50 years which, although they were said to be cases of estoppel, were not really such. They were cases in which a promise was made which was intended to create legal relations and which, to the knowledge of the person making the promise, was going to be acted on by the person to whom it was made and which was in fact acted on. In such cases, the courts had said that the promise had to be honoured. In each case, the court held the promise to be binding on the party making it, even though under the old common law it might be difficult to find any consideration for it. The courts had not gone so far as to give a cause of action in damages for the breach of such a promise, but they had refused to allow the party making it to act inconsistently with it. It was in that sense, and that sense only, that such a promise gave rise to an estoppel. The time had now come for the validity of such a promise to be recognised. The logical consequence, no doubt, was that a promise to accept a smaller sum in discharge of a larger sum, if acted on, was binding notwithstanding the absence of consideration; and if the fusion of law and equity led to that result, so much the better. A binding promise had been made in the instant case. As to the scope of that promise, the evidence showed that C had agreed that the ground rent would be reduced to \u00a31,250 a year as a temporary expedient while the block of flats was not fully, or substantially fully, let owing to the conditions prevailing. When the flats became fully let, early in 1945, the reduction ceased to apply. Rent was therefore payable at the full rate for the last two quarters of 1945."
    ],
    "NUMBER": "409",
    "TYPE": "Headnotes",
    "NAME": "(wl) Central London Property Trust v High Trees House Ltd",
    "JUDGE": "Denning J",
    "CIT": "[1947] KB 130",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Davis Contractors Ltd v Fareham Urban District Council",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Shogun Finance Ltd v Hudson"
    ],
    "COURT": "UKPC",
    "SUMMARY": [
        "Equitable estoppel; change of position",
        "There is an equitable principle of promissory estoppel that, when one party to a contract agrees in the absence of fresh consideration not to enforce his rights, an equity will be raised in favour of the other party. This equity is, however, subject to the qualifications: (1) that the other party has altered his position; (2) that the promisor can resile from his promise on giving reasonable notice, which need not be formal notice, giving the promisee a reasonable opportunity of resuming his position, and (3) the promise only becomes final and irrevocable if the promise cannot resume his position. P claimed hire-purchase instalments for motor lorries. D&#8217;s defence was the above equity, based on a letter from P written when D had reported trouble with the lorries . . . &#8220;we are agreeable to you withholding instalments due on the Seddon Tippers as long as they are withdrawn from active service.&#8221; D failed to establish any changes of position in reliance on this letter, but simply left the lorries out of service when they had been repaired and continued not to pay the instalments."
    ],
    "CATEGORY": "Equity Other Related Subjects: Contracts &mdash; Contract Terms &mdash; Estoppel &mdash; Hire Purchase",
    "CITATION": "Ajayi (EA) v Briscoe (Nigeria) Ltd [1964] 1 WLR 1326",
    "YEAR": "1964",
    "CATEGORIES": [
        "Equity Other Related Subjects: Contracts",
        "Contract Terms",
        "Estoppel",
        "Hire Purchase"
    ],
    "HELD": [
        "that P&#8217;s action succeeded. (Birmingham &amp; District Land Co v London &amp; North Western Railway Co (No.2) (1888) 40 Ch. D. 268 distinguished, and Tungsten Electric Co Ltd v Tool Metal Manufacturing Co Ltd (No.3) [1955] 1 W.L.R. 761 distinguished; CeCentral London Property Trust Ltd v High Trees House Ltd [1947] K.B. 130 considered, and Combe v Combe [1951] 2 K.B. 215 considered)."
    ],
    "NUMBER": "410",
    "TYPE": "Headnotes",
    "NAME": "(wl) Ajayi (EA) v Briscoe (Nigeria) Ltd",
    "JUDGE": "Lord Hodson; Lord Morris of Borth-y-Gest; Lord Guest",
    "CIT": "[1964] 1 WLR 1326",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Dickinson v Abel",
        "(wl) Koufos v Czarnikow Ltd (The Heron II)",
        "(wl) BRS v Arthur Crutchley Ltd",
        "(wl) Ramsgate Victoria Hotel v Montefiore",
        "(wl) Crossley v Faithful & Gould Holdings",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Daulia Ltd v Four Millbank Nominees Ltd",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp"
    ],
    "COURT": "EWHC",
    "SUMMARY": [
        "Costs; powers of court; absence of legal representation; assessment; guidelines",
        "If a court in criminal proceedings awards an excessive amount of costs it acts outside the discretion conferred on it under the Costs in Criminal Cases Act 1973 s.2, and the award can be quashed by the Divisional Court. The same is true if the court takes account of irrelevant factors in the award of costs. D owned a take-away food store which was visited twice by an environmental health inspector. He served 37 summonses on D and 35 on his son alleging breaches of the Food Hygiene (General) Regulations 1970. They pleaded guilty by post, and were not represented. The prosecuting authority were not legally represented. The justices ordered D to pay costs of GBP 15 in respect of 35 summonses, and GBP 25 in respect of the other two, making a total of GBP 575, as well as fining him GBP 975. D&#8217;s son was also fined, and ordered to pay GBP 525 in costs. The justices gave reasons for their award of costs. D applied to quash the orders on the grounds that they were harsh and oppressive or so far outside the normal sums imposed as to involve an error of law and that the justices approached the case with rigid criteria in mind without regard to the merits of the case."
    ],
    "CATEGORY": "Criminal Procedure &mdash; Assessment &mdash; Costs &mdash; Courts &mdash; Legal Representation",
    "CITATION": "Societe Italo-Belge v Palm and Vegetable Oils, Malaysia (The Post Chaser) [1982] 1 WLR 631",
    "YEAR": "1982",
    "CATEGORIES": [
        "Criminal Procedure",
        "Assessment",
        "Costs",
        "Courts",
        "Legal Representation"
    ],
    "HELD": [
        "granting the application, that although the local authority was entitled to be reimbursed for costs properly incurred, the amount of costs was so great that the inference to be drawn was that the justices had erred in law in exercising their discretion (R. v St Albans Crown Court Ex p. Cinnamond [1981] Q.B. 480 applied). The justices&#8217; reasons disclosed that they took into account the irrelevant matters of the source of the local authority&#8217;s revenue and its duty to prosecute such cases. It was inappropriate to use a scale of costs awarded in legal aid cases to a situation where a legally unqualified officer of the authority conducted the prosecution and there was no legal representation, or to multiply the costs by the number of summonses issued as a result of the inspection of the premises. In the circumstances the order for costs, which should have been GBP 74, would be quashed."
    ],
    "NUMBER": "411",
    "TYPE": "Headnotes",
    "NAME": "(wl) Societe Italo-Belge v Palm and Vegetable Oils, Malaysia (The Post Chaser)",
    "JUDGE": "Lord Lane LCJ; Woolf J",
    "CIT": "[1982] 1 WLR 631",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) City and Westminster Properties v Mudd",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Grogan v Robin Meredith Plant Hire",
        "(wl) Eliason v Henshaw",
        "(wl) Shogun Finance Ltd v Hudson",
        "(wl) Schawel v Reade",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd"
    ],
    "YEAR": "1966",
    "COURT": "EWCA",
    "SUMMARY": [
        "Accord and satisfaction; cheque for lesser amount",
        "There is no legal accord and satisfaction where a creditor accepts form his debtor his cheque for a lesser amount in full satisfaction of a larger debt. Per Lord Denning, M.R.: If there is a genuine accord, acted on by the debtor to his detriment, equity prevents the creditor from suing for the rest of the debt. P was in desperate straits for money and accepted from D a GBP 300 cheque for a GBP 482 13s. 1d. debt &#8220;in completion of the account.&#8221; This was done under pressure from D&#8217;s wife, who knew of P&#8217;s straits. In an action by P for the remaining GBP 182 13s. 1d., held, that the pressure prevented any true accord and there was no defence to the action. ( Pinnell&#8217;s Case 77 E.R. 237 applied; Foakes v Beer (1884) 9 App. Cas. 605 applied; Goddard &amp; Son v O&#8217;Brien (1882) 9 Q.B.D. 37 overruled; Hughes v Metropolitan Railway Co (1877) 2 App. Cas. 439 distinguished; Central London Property Trust v High Trees House [1947-51] C.L.Y. 5601 distinguished)."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Banking and Finance &mdash; Accord and Satisfaction &mdash; Cheques &mdash; Defences",
    "JUDGE": "Lord Denning MR; Danckwerts LJ; Winn LJ",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Banking and Finance",
        "Accord and Satisfaction",
        "Cheques",
        "Defences"
    ],
    "NUMBER": "412",
    "TYPE": "Headnotes",
    "NAME": "(wl) D & C Builders Ltd v Rees",
    "CITATION": "D &amp; C Builders Ltd v Rees [1966] 2 QB 617",
    "CIT": "[1966] 2 QB 617",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Re Selectmove Ltd",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "(wl) British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Bolton v Mahadeva",
        "(wl) Edwards v Skyways",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co"
    ],
    "COUNSEL": "For the appellant: David Uff. For the respondent: Siward Atkins.",
    "COURT": "EWCA",
    "SUMMARY": [
        "A statutory demand was set aside where the debtor had an arguable case of promissory estoppel."
    ],
    "CATEGORY": "Contracts &mdash; Agreements &mdash; Promissory Estoppel &mdash; Statutory Demands",
    "CITATION": "Collier v Wright (Holdings) Ltd [2007] EWCA Civ 1329",
    "YEAR": "2007",
    "ABSTRACT": [
        "The appellant (C) appealed against a decision not to set aside a statutory demand served on him by the respondent (W).",
        "W had obtained a judgment by consent against three partners of whom C was one. The partners&#8217; liability was joint. The consent order provided for the three partners to pay the judgment debt by monthly instalments. C had paid a third of the debt by instalments. His partners had become bankrupt. W served a statutory demand on C for the balance of the judgment debt. C applied to set aside the demand relying on an alleged agreement by W that if C continued to pay his share of the judgment W would not look to him but only to his partners for the balance.",
        "C submitted that (1) his alleged agreement with W was binding because by agreeing to accept sole responsibility for his one-third share he gave consideration for W&#8217;s promise to accept him as a debtor for only a one-third share of the judgment debt; (2) a promissory estoppel prevented W from proceeding against him for more than a one-third share of the debt."
    ],
    "CATEGORIES": [
        "Contracts",
        "Agreements",
        "Promissory Estoppel",
        "Statutory Demands"
    ],
    "HELD": [
        "Appeal allowed.",
        "(1) The mere fact that a creditor agreed with a joint debtor to accept payment from him alone of his proportionate share did not result in a binding agreement. The alleged agreement made between C and W was merely to accept a lesser sum from C than that which was due and that was not a binding agreement in law since it had no consideration to support it, Foakes v Beer (1884) 9 App. Cas. 605 applied. (2) There was a real prospect of success on the promissory estoppel issue. It was arguable that there was an agreement or representation by W not to sue C for the full judgment sum. It could be sufficient reliance for the purpose of promissory estoppel if a lesser payment was made as agreed, provided there was an accord, D&amp;C Builders Ltd v Rees [1966] 2 Q.B. 617 considered. It was arguable that it would be inequitable for W to resile from its promise, D&amp;C Builders Ltd v Rees considered."
    ],
    "NUMBER": "413",
    "TYPE": "Headnotes",
    "NAME": "(wl) Collier v Wright (Holdings) Ltd",
    "JUDGE": "Mummery LJ; Arden LJ; Longmore LJ",
    "CIT": "[2007] EWCA Civ 1329",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Collier v Wright (Holdings) Ltd",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Edwards v Skyways",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Bolton v Mahadeva",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Variation; resumption of legal rights after suspension",
        "There are some cases where a period of suspension of legal rights terminates on the happening of a certain event, or the cessation of a previously existing state of affairs, or on the lapse of a reasonable period thereafter. In such cases, no notice of any kind may be necessary. But in other cases, where there is nothing to fix the end of the period which may be dependent on the will of the person who has made the concession, equity will, no doubt, require some notice together with a reasonable period for re-adjustment before the grantor is allowed to enforce his strict rights. In such cases the notice need not take any particular form, nor need it specify a date for the termination of the period. The principle should be applied with great caution to purely creditor-and-debtor relationships which involve no question of forfeiture or cancellation. In 1938 the plaintiffs, who were the registered proprietors of letters patent relating to hard metal alloys, granted the defendants a licence under the patents to sell and use the contract material on payment of a royalty of 10 per cent on the net value of all contract material sold or used. The agreement further provided that if the aggregate quantity of the contract material sold or used by the defendants other than contract materials supplied to them by the plaintiffs or their licensees under the patents should exceed a quota of fifty kilograms in any month, they should pay to the plaintiffs compensation equal to 30 per cent of the sum which represented the excess net value. The compensation or penalty rates presented the defendants with an ever-increasing burden by reason of the growth in production resulting from war-time requirements. As a result the plaintiffs decided that they would not continue to demand payment of the compensation under the agreement and in fact did not enforce such payment throughout the war. The defendants thereupon based their production policy on the footing that only the 10 per cent royalty would be payable whilst the arrangement continued in force. In July, 1945, the defendants commenced proceedings against the plaintiffs, claiming damages for fraud. By their counterclaim (which was delivered with the defence on March 26, 1946), the plaintiffs alleged that since March 31, 1942, the defendants had sold and used contract material, some of which was made in accordance with the revelant patents, but, in breach of their obligations under the deed, had not since that date rendered any accounts or paid the sums due for royalties and compensation. They waived their claim to enforce payment of compensation in respect of deliveries made before the end of hostilities with Germany. Devlin, J. dismissed the action, the defendants having failed to establish the charges of fraudulent misrepresentation, but he gave judgment for the plaintiffs on the counterclaim holding that the arrangement for suspension of payment of compensation had been terminated by the presentation of a new agreement to the defendants. The Court of Appeal held that the presentation of the new agreement did not operate to determine the arrangement for suspension and held that up to the date of the counterclaim no notice requiring the payment of compensation had been given. In the present proceedings the plaintiffs alleged that the delivery of the counterclaim in the first action was a sufficient notice of their intention to enforce payment of compensation and that the time between the delivery of the counterclaim and January 1, 1947, was a reasonable time. Pearson, J. held that the delivery of the counterclaim in the first action terminated the arrangement for suspension. The Court of Appeal held that the arrangement for suspension was not terminated by the delivery of the counterclaim in the first action; that the defendants were entitled to express notice if the old terms were to be enforced again; and that such notice should specify either some future date, or at least a reasonable period, from which, or on the expiration of which, the payments were to be resumed."
    ],
    "CATEGORY": "Contracts &mdash; Legal Rights &mdash; Penalty Clauses &mdash; Suspension &mdash; Variation",
    "CITATION": "Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd [1955] 1 WLR 761",
    "YEAR": "1955",
    "CATEGORIES": [
        "Contracts",
        "Legal Rights",
        "Penalty Clauses",
        "Suspension",
        "Variation"
    ],
    "HELD": [
        "on appeal, the delivery of the counterclaim was sufficient notice of termination of the arrangement for suspension of payment of compensation; the compensation clause did not impose a penalty, nor was it in restraint of trade, nor did it offend against the Patents and Designs Act 1907 s.38(1)(a) , which invalidates a clause in a licence restricting the licensee from using material supplied by a person other than the licensor; consequently, the appeal must be allowed. Hughes v Metropolitan Railway Co (1877) 2 App. Cas. 439 applied; and Birmingham &amp; District Land Co v London &amp; North Western Railway Co (No.2) (1888) 40 Ch. D. 268 applied; Canadian Pacific Railway Co v King, The [1931] A.C. 414 distinguished)."
    ],
    "NUMBER": "414",
    "TYPE": "Headnotes",
    "NAME": "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
    "JUDGE": "Viscount Simonds; Lord Oaksey; Lord Tucker; Lord Cohen",
    "CIT": "[1955] 1 WLR 761",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) The Brimnes",
        "(wl) King's Norton Metal Co Ltd v Edridge, Merrett & Co",
        "(wl) Bolton v Mahadeva",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) White & Carter (Councils) Ltd v McGregor",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Shogun Finance Ltd v Hudson",
        "(wl) Henderson v Merrett Syndicates",
        "(wl) Dickinson v Abel",
        "(wl) Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Insurance; passenger; hire or reward",
        "An employee who regularly carries fellow-employees to work in his car with the understood expectation of some compensation is carrying them &#8220;for hire or reward.&#8221; Q regularly gave lifts to some of his fellow-employees. The judge found that Q expected to receive and his passengers expected to pay something for each lift, although the amount varied. The judge also found that no contractual relationship was intended by either party. A, a passenger, was killed through Q&#8217;s negligence and A&#8217;s widow obtained judgment against Q which remained unsatisfied because Q&#8217;s insurance company failed. A&#8217;s widow sued the Motor Insurers&#8217; Bureau which denied liability on the ground that the carriage concerned was not for &#8220;hire or reward.&#8221;"
    ],
    "CATEGORY": "Road Traffic Other Related Subjects: Transport &mdash; Insurance &mdash; Cars &mdash; Hiring &mdash; Motor Insurance &mdash; Motor Insurers' Bureau &mdash; Passengers &mdash; Payments",
    "CITATION": "Albert v Motor Insurers&#8217; Bureau [1972] AC 301",
    "YEAR": "1972",
    "CATEGORIES": [
        "Road Traffic Other Related Subjects: Transport",
        "Insurance",
        "Cars",
        "Hiring",
        "Motor Insurance",
        "Motor Insurers' Bureau",
        "Passengers",
        "Payments"
    ],
    "HELD": [
        "that a contract for payment was unnecessary and that the systematic carrying of passengers in the expectation of payment constituted the vehicle one used for carrying passengers for hire or reward. ( Coward v Motor Insurers&#8217; Bureau [1963] 1 Q.B. 259 considered and Connell v Motor Insurers&#8217; Bureau [1969] 2 Q.B. 494 considered)."
    ],
    "NUMBER": "415",
    "TYPE": "Headnotes",
    "NAME": "(wl) Albert v Motor Insurers' Bureau",
    "JUDGE": "Lord Donovan; Viscount Dilhorne; Lord Pearson; Lord Diplock; Lord Cross of Chelsea",
    "CIT": "[1972] AC 301",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Pettitt v Pettitt",
        "(wl) Collier v Wright (Holdings) Ltd",
        "(wl) Re Selectmove Ltd",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Errington v Errington and Woods",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) Chappell & Co v Nestle Co Ltd",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) BRS v Arthur Crutchley Ltd",
        "(wl) Barry v Davies",
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) L J Korbetis v Transgrain Shipping BV"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Matrimonial home; agreement after separation",
        "The presumption of fact against an intention to create legal relations between husband and wife living in amity does not apply to arrangements made between them when they were separated or about to separate. Before deserting the wife, the husband wrote on a piece of paper that &#8220;. . . when the mortgage repayment has been completed I will agree to transfer the property into your sole ownership.&#8221; She paid off the mortgage, the property being in the joint names of both parties."
    ],
    "CATEGORY": "Family Law Other Related Subjects: Real Property &mdash; Agreements &mdash; Matrimonial Home &mdash; Separation",
    "CITATION": "Merritt v Merritt [1970] 1 WLR 1211",
    "YEAR": "1970",
    "CATEGORIES": [
        "Family Law Other Related Subjects: Real Property",
        "Agreements",
        "Matrimonial Home",
        "Separation"
    ],
    "HELD": [
        "that the wife was entitled to a declaration that she was the sole owner of the house and an order that the husband join in transferring it to her. ( Balfour v Balfour [1919] 2 K.B. 571 considered; and Gould v Gould [1970] 1 Q.B. 275 considered; Jones v Padavatton [1969] 1 W.L.R. 328 distinguished)."
    ],
    "NUMBER": "416",
    "TYPE": "Headnotes",
    "NAME": "(wl) Merritt v Merritt",
    "JUDGE": "Lord Denning MR; Widgery LJ; Karminski LJ",
    "CIT": "[1970] 1 WLR 1211",
    "FLAGS": [
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Dickinson v Abel",
        "(wl) Merritt v Merritt",
        "(wl) McRae v Commonwealth Disposals Commission",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) Caparo Industries plc v Dickman",
        "(wl) Societe Italo-Belge v Palm and Vegetable Oils, Malaysia (The Post Chaser)",
        "(wl) Errington v Errington and Woods",
        "(wl) Gibson v Manchester City Council",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "(wl) Canada Steamship Lines Ltd v The King"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Matrimonial home; husband&#8217;s work on wife&#8217;s house",
        "The Married Women&#8217;s Property Act 1882 s.17 is purely procedural; it does not confer on the court an unfettered discretion to override existing rights in property, or to apply any notion of family assets not to be found in English law in determining disputes as to title or possession after a marriage has broken down. Such issues involve questions of social policy which should be dealt with by Parliament. The legal title to H and W&#8217;s former matrimonial home was in W alone. H had not paid any money towards its purchase but he had redecorated and improved the home, thus enhancing its value. Following a divorce H issued proceedings under s.17 claiming an interest in the proceeds of sale of the home."
    ],
    "CATEGORY": "Family Law &mdash; Matrimonial Home &mdash; Sale of Land",
    "CITATION": "Pettitt v Pettitt [1970] AC 777",
    "YEAR": "1970",
    "CATEGORIES": [
        "Family Law",
        "Matrimonial Home",
        "Sale of Land"
    ],
    "HELD": [
        "allowing W&#8217;s appeal, (1) that s.17 was merely procedural, and (2) that in the absence of any agreement or estoppel to the contrary W was absolutely entitled to the home or the proceeds of its sale. ( Appleton v Appleton [1965] 1 W.L.R. 25 overruled)."
    ],
    "NUMBER": "417",
    "TYPE": "Headnotes",
    "NAME": "(wl) Pettitt v Pettitt",
    "JUDGE": "Lord Reid; Lord Morris of Borth-y-Gest; Lord Hodson; Lord Upjohn; Lord Diplock",
    "CIT": "[1970] AC 777",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Brogden v Metropolitan Railway",
        "(wl) Edwards v Skyways",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Parker v Clark",
        "(wl) City and Westminster Properties v Mudd",
        "(wl) Branca v Cobarro",
        "(wl) Schawel v Reade",
        "(wl) Barry v Davies",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Partridge v Crittenden",
        "(wl) Canada Steamship Lines Ltd v The King",
        "(wl) Entores v Miles Far East Corporation"
    ],
    "YEAR": "1969",
    "COURT": "EWCA",
    "SUMMARY": [
        "Intention to create legal relations; family agreement",
        "Per Danckwerts, L J: there is possibly a presumption that members of a family do not intend agreements between themselves to have the force of contracts. A mother agreed with her daughter, a secretary in the United States, that if she would give up her job and read for the Bar in England the mother would provide 200 (West Indian) dollars per month maintenance for her; the daughter came to England and began to read for the Bar. Later the agreement was varied, the mother agreeing to provide a house for the daughter. On the mother&#8217;s claim for possession of the house, held (Salmon, L J dissenting)(1) that the arrangement was not intended to be legally binding; and (2) that, consequently, the mother was entitled to possession. Balfour v Balfour [1919] 2 K.B. 571 applied."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Family Law &mdash; Enforcement &mdash; Families &mdash; Intention",
    "JUDGE": "Danckwerts LJ; Salmon LJ; Fenton Atkinson LJ",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Family Law",
        "Enforcement",
        "Families",
        "Intention"
    ],
    "NUMBER": "418",
    "TYPE": "Headnotes",
    "NAME": "(wl) Jones v Padavatton",
    "CITATION": "Jones v Padavatton [1969] 1 WLR 328",
    "CIT": "[1969] 1 WLR 328",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Edwards v Skyways",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Chappell & Co v Nestle Co Ltd",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Partridge v Crittenden",
        "(wl) Alpenstow v Regalian Properties"
    ],
    "COURT": "EWHC",
    "SUMMARY": [
        "Statute of Frauds; contract to leave property on death",
        "For a contract to be made it must be the intention of both parties to create an arrangement binding in law; a written offer may be a sufficient memorandum within the Law of Property Act 1925 s.40(1), although there is no contract until after it has been accepted. C. wrote to P. offering to share his house with P. and Mrs. P. on terms as to sharing expenses, also offering that he and his wife would on their death leave their house to Mrs. P., her sister and her daughter, and suggesting that P. and Mrs. P. should sell their cottage. P. accepted the offer and the two couples shared the C.s&#8217; house until the P.s left as an alternative to being evicted."
    ],
    "CATEGORY": "Contracts &mdash; Formation of Contract &mdash; Intention &mdash; Succession",
    "CITATION": "Parker v Clark [1960] 1 WLR 286",
    "YEAR": "1960",
    "CATEGORIES": [
        "Contracts",
        "Formation of Contract",
        "Intention",
        "Succession"
    ],
    "HELD": [
        "both sides having intended to create a legally binding arrangement, there was a good contract of which C.&#8217;s letter was a sufficient memorandum; accordingly the P.s were entitled to damages for breach of their right to live in the C.s&#8217; house until the death of the survivor of the C.s, and Mrs. P. was entitled to damages for loss of the value of her prospects of taking a share of the C.s&#8217; house at their death. (Hammersley v De Biel 8 E.R. 1312 applied; not following dictum of Fry J. in Munday v Asprey (1880) 13 Ch. D. 855 applied)."
    ],
    "NUMBER": "419",
    "TYPE": "Headnotes",
    "NAME": "(wl) Parker v Clark",
    "JUDGE": "Devlin J",
    "CIT": "[1960] 1 WLR 286"
},
{
    "RELATED": [
        "(wl) Re Selectmove Ltd",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) Parker v Clark",
        "(wl) Sudbrook Trading Estate Ltd v Eggleton",
        "(wl) Nicolene v Simmonds",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Combe v Combe",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Co"
    ],
    "YEAR": "1964",
    "COURT": "EWHC",
    "SUMMARY": [
        "Intention to create legal relations; promise of ex gratia payment",
        "1. Where an agreement is reached in the course of business relations and there was an intention to agree, there is a heavy onus on the party who asserts that no legal effect was intended. 2. The words &#8220;ex gratia&#8221; in a promise to pay do not carry a necessary, or even a probable, implication that the agreement is to be without legal effect. The words merely indicate that there was no pre-existing obligation to pay. An airline company agreed with the British Airline Pilots Association to make to redundant pilots &#8220;an ex gratia payment&#8221; of a specified size. There was consideration for this promise. In an action by a redundant pilot for his payment, held that there was an enforceable right to it, and the action succeeded. (Rose &amp; Frank Co v JR Crompton &amp; Bros Ltd [1923] 2 K.B. 261 considered)."
    ],
    "CATEGORY": "Contracts &mdash; Consideration &mdash; Ex Gratia Payments &mdash; Intention",
    "JUDGE": "Megaw J",
    "CATEGORIES": [
        "Contracts",
        "Consideration",
        "Ex Gratia Payments",
        "Intention"
    ],
    "NUMBER": "420",
    "TYPE": "Headnotes",
    "NAME": "(wl) Edwards v Skyways",
    "CITATION": "Edwards v Skyways [1964] 1 WLR 349",
    "CIT": "[1964] 1 WLR 349",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Scally v Southern Health and Social Services Board",
        "(wl) Crossley v Faithful & Gould Holdings",
        "(wl) Couchman v Hill",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Fisher v Bell",
        "(wl) City and Westminster Properties v Mudd",
        "(wl) McCutcheon v David MacBrayne Ltd",
        "(wl) Combe v Combe",
        "(wl) D & C Builders Ltd v Rees",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd"
    ],
    "COUNSEL": "For E: Robin Allen Q.C. and Paul Epstein. For L: James Goudie Q.C., Sean Jones and Anya Proops.",
    "COURT": "EWCA",
    "SUMMARY": [
        "L, the head of a barristers&#8217; chambers, appealed against a declaration that E&#8217;s acceptance of an unpaid pupillage was a binding apprenticeship and that E was therefore a worker entitled to the national minimum wage. L, challenging the existence of an apprenticeship, contended that the arrangement was educational in nature, not commercial, and that it was not enforceable due to a lack of consideration. The court, while finding that a binding contract did exist, held that E was not an apprentice nor a &#8220;worker&#8221; within the meaning of the National Minimum Wage Act 1998, because there had been no expectation upon her to do any work for L or do anything other than further her own training.",
        "E accepted an unpaid 12 month pupillage with a barristers&#8217; chambers. In friendly litigation brought at the Bar Council&#8217;s instigation, E sought and was granted declarations ([2000] I.R.L.R. 18) that her acceptance of the pupillage created an apprenticeship contract, that she was a &#8220;worker&#8221; within the meaning of the National Minimum Wage Act 1998 s.54(3)(a) and that, being over 26 years old, she was entitled by virtue of the National Minimum Wage Regulations 1999 Reg.12 to be paid the national minimum wage during her pupillage. L, a barrister belonging to the chambers, appealed, contending that the offer to provide E with education and training was not enforceable as a contract since there had been no intention to create legal relations and E had provided no consideration. Furthermore, L argued, the relationship between the parties was regulated by Bar Council guidelines relating to pupillage which rendered a further contract unnecessary."
    ],
    "CATEGORY": "Employment &mdash; Apprenticeship &mdash; Barristers &mdash; Contract of Employment &mdash; Minimum Wage &mdash; Pupillage",
    "CITATION": "Edmonds v Lawson [2000] QB 501",
    "YEAR": "2000",
    "CATEGORIES": [
        "Employment",
        "Apprenticeship",
        "Barristers",
        "Contract of Employment",
        "Minimum Wage",
        "Pupillage"
    ],
    "HELD": [
        "allowing the appeal, that (1) there was a binding contract for the provision of education and training which impliedly incorporated regulatory materials governing pupillage; (2) a broad view had to be taken of the relationship between E and the barristers&#8217; chambers. It was in the chambers&#8217; long term interests to attract talented pupils and, regardless of whether E was a prospective candidate for tenancy or not, her agreement to that potentially productive relationship had been consideration for the offer, and (3) the construction of &#8220;apprenticeship&#8221; in s.54(2) of the 1998 Act was intended to be unlegalistic and covered learned professions. However, a cardinal ingredient of an apprenticeship was a mutual covenant whereby the master undertook to educate and train the apprentice, who, in return, was bound to serve and work for the master. In the instant case, there had been no expectation on E to provide valuable service and she was not obliged to do anything which was not conducive to her own training, hence she did not work under a contract of apprenticeship or an equivalent contract."
    ],
    "NUMBER": "421",
    "TYPE": "Headnotes",
    "NAME": "(wl) Edmonds v Lawson",
    "JUDGE": "Lord Bingham of Cornhill; Pill LJ; Hale LJ",
    "CIT": "[2000] QB 501",
    "FLAGS": [
        "Approved",
        "Hale",
        "Bingham"
    ]
},
{
    "RELATED": [
        "(wl) McRae v Commonwealth Disposals Commission",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "(wl) Dickinson v Abel",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) The Brimnes",
        "(wl) Tinn v Hoffman & Co",
        "(wl) McCutcheon v David MacBrayne Ltd"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Comfort letters; effect; intention to create legal relationship",
        "&#8220;Comfort letters&#8221; in which one company assumes a moral but not a legal obligation to help another have no contractual effect. The plaintiff bank agreed with the defendants to make a loan facility of up to GBP 10m available to the defendants&#8217; wholly owned subsidiary M which traded in tin on the London metal exchange. As part of the arrangement the defendants furnished to the plaintiff two letters of comfort each of which stated that &#8220;it is our policy to ensure that the business of M is at all times in a position to meet its liabilities to you under the loan facility arrangements.&#8221; In 1985, the tin market collapsed and M went into liquidation owing the plaintiff bank the whole loan. The plaintiff sought payment from the defendants who refused to pay. The plaintiff brought an action against them, and the judge held that the plaintiff was entitled to recover."
    ],
    "CATEGORY": "Company Law &mdash; Comfort Letters &mdash; Contractual Liability &mdash; Groups of Companies &mdash; Loans",
    "CITATION": "Kleinwort Benson Ltd v Malaysia Mining Corporation [1989] 1 WLR 379",
    "YEAR": "1989",
    "CATEGORIES": [
        "Company Law",
        "Comfort Letters",
        "Contractual Liability",
        "Groups of Companies",
        "Loans"
    ],
    "HELD": [
        "allowing the appeal, that a letter of comfort from a parent company to a lender did not have contractual effect if it was merely a statement of present fact regarding the parent company&#8217;s intentions and was not a contractual promise as to the parent company&#8217;s future conduct. On the facts, the letter of comfort was in terms a statement of present fact and not a promise as to future conduct and in the context in which the letters were written was not intended to be anything other than a representation of fact giving rise to no more than a moral responsibility on the part of the defendants to meet M&#8217;s debt ( Edwards v Skyways [1964] 1 W.L.R. 349 distinguished; and Esso Petroleum Co Ltd v Mardon [1976] Q.B. 801 considered)."
    ],
    "NUMBER": "422",
    "TYPE": "Headnotes",
    "NAME": "(wl) Kleinwort Benson Ltd v Malaysia Mining Corporation",
    "JUDGE": "Ralph Gibson LJ; Fox LJ; Nicholls LJ",
    "CIT": "[1989] 1 WLR 379",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Davis Contractors Ltd v Fareham Urban District Council",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Eliason v Henshaw",
        "(wl) Pettitt v Pettitt",
        "(wl) Edmonds v Lawson",
        "(wl) City and Westminster Properties v Mudd",
        "(wl) Dickinson v Abel",
        "(wl) Errington v Errington and Woods",
        "(wl) Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Entores v Miles Far East Corporation"
    ],
    "COUNSEL": "For TCE: Stephen Males. For RM: Mark Turner. For G: Not represented.",
    "COURT": "EWCA",
    "SUMMARY": [
        "Buidling and engineering contracts; whether time sheet could vary contract",
        "TCE, a civil engineering contractor, appealed against a decision that it should indemnify RM against liability for personal injuries. TCE hired a plant driver from RM who presented a time sheet for the signature of TCE&#8217;s agent at the end of each week which contained the words &#8220;All hire undertaken under CPA conditions&#8221;. TCE argued that this did not vary the contract to incorporate the CPA conditions and therefore they were not bound to indemnify RM against third party liability."
    ],
    "CATEGORY": "Construction Law &mdash; Building and Engineering Contracts &mdash; Supply of Services",
    "CITATION": "Grogan v Robin Meredith Plant Hire [1996] CLC 1127",
    "YEAR": "1996",
    "CATEGORIES": [
        "Construction Law",
        "Building and Engineering Contracts",
        "Supply of Services"
    ],
    "HELD": [
        "allowing the appeal, that a time sheet for work done under an existing contract was a record of a party&#8217;s performance of contractual obligations. It was not a document with contractual effect. Contractual effect could only be established by variation of the original contract. The CPA conditions were therefore not incorporated and TCE were not bound to indemnify RM."
    ],
    "NUMBER": "423",
    "TYPE": "Headnotes",
    "NAME": "(wl) Grogan v Robin Meredith Plant Hire",
    "JUDGE": "Russell LJ; McCowan LJ; Auld LJ",
    "CIT": "[1996] CLC 1127",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Nicolene v Simmonds",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Exemption clause; misrepresentation",
        "If a person wishes to exempt himself from a liability which the common law imposes on him, he can only do it by an express stipulation brought home to the party affected and assented to by him as part of the contract. If the party affected signs a written document, knowing it to be a contract which governs the relations between both parties, his signature is irrefragable evidence of his assent to the whole contract, including the exempting clauses, unless the signature is shown to be obtained by fraud or misrepresentation. Any behaviour by words or conduct is sufficient to be a misrepresentation if it is such as to mislead the other party about the existence or extent of the exemption. An innocent as well as a fraudulent misrepresentation is sufficient to disentitle the creator of it to the benefit of the exemption. The plaintiff had deposited her wedding dress with the defendants for cleaning. She was asked to sign a document which contained in it a condition excluding all liability on the part of the defendants for any damage to any article in their keeping. Before she signed the document, she asked why she was to do so and the assistant told her that the defendants would not accept any responsibility for damage to the beads or sequins on the dress. She did not read all the document. When the dress was returned there was a stain on the front of it, which had not been there before. The county court judge found that the defendants had not discharged the onus of showing that they had not been negligent, because there was a time while the dress was in their possession in transit during which the stain might have been caused, and he held that the oral statement by the assistant amounted to a misrepresentation so as to preclude the defendants from relying on the document limiting their liability for damage."
    ],
    "CATEGORY": "Contracts &mdash; Contract Terms &mdash; Enforcement &mdash; Exclusion Clauses &mdash; Misrepresentation",
    "CITATION": "Curtis v Chemical Cleaning &amp; Dyeing Co [1951] 1 KB 805",
    "YEAR": "1951",
    "CATEGORIES": [
        "Contracts",
        "Contract Terms",
        "Enforcement",
        "Exclusion Clauses",
        "Misrepresentation"
    ],
    "HELD": [
        "on appeal, that there plainly had been a misrepresentation, and owing to that misrepresentation the exception never became part of the contract between the parties, Low v Bouverie [1891] 3 Ch. 82 , R. v Lord Kylsant [1932] 1 K.B. 442 , L&#8217;Estrange v F Graucob Ltd [1934] 2 K.B. 394 and Olley v Marlborough Court Ltd [1948] 1 All E.R. 955 applied. Per Denning, L.J.: &#8220;I do not wish it to be supposed that the cleaners would have been better off if the assistant had simply handed over the document to the customer without asking her to sign it; or if a customer was not so inquiring as the plaintiff, but was an unsuspecting person who signed whatever she was asked without question&#8221;:"
    ],
    "NUMBER": "424",
    "TYPE": "Headnotes",
    "NAME": "(wl) Curtis v Chemical Cleaning & Dyeing Co",
    "CIT": "[1951] 1 KB 805",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) BRS v Arthur Crutchley Ltd",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Canada Steamship Lines Ltd v The King",
        "(wl) Nicolene v Simmonds",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) Couchman v Hill",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Oscar Chess Ltd v Williams"
    ],
    "COUNSEL": "For the appellant: Montague Berryman KC, Phineas Quass, Dingle Foot. For the respondent: Glyn-Jones KC, GG Baker.",
    "COURT": "EWCA",
    "SUMMARY": [
        "A hotel could not rely on a notice displayed in its bedroom to exempt it from liability for negligence. Guests would not see the notice until after they had been accepted as guests, meaning that it could not form part of the contract between hotel and guest."
    ],
    "CATEGORY": "Negligence Other Related Subjects: Contracts &mdash; Exclusion Clauses &mdash; Hotels &mdash; Intention to Create Legal Relations &mdash; Notices &mdash; Theft",
    "CITATION": "Olley v Marlborough Court Hotel [1949] 1 KB 532",
    "YEAR": "1949",
    "ABSTRACT": [
        "The appellant hotel owner (M) appealed against a decision ( [1948] 1 All E.R. 955 ) that it had negligently allowed the theft of the possessions of the respondent guest (O) from its hotel.",
        "M ran a residential hotel where O had stayed for several months. In O&#8217;s bedroom was a notice stating that M would not be liable for articles lost or stolen unless handed to M for safe custody. O went out of the hotel, leaving her room key on a key rack in reception. While M&#8217;s staff were not watching, a man took the key and stole items from O&#8217;s room. The judge found that M had been negligent, that the negligence had caused O&#8217;s loss, that the hotel was a private hotel rather than a common inn, and that although O had seen the notice, its terms were ambiguous and had not absolved M from liability.",
        "M argued that (1) on the facts, it had not been negligent; (2) the notice formed part of the contract between it and O and operated to exempt it from liability for negligence; (3) its liability was limited to that of a residential hotel."
    ],
    "CATEGORIES": [
        "Negligence Other Related Subjects: Contracts",
        "Exclusion Clauses",
        "Hotels",
        "Intention to Create Legal Relations",
        "Notices",
        "Theft"
    ],
    "HELD": [
        "Appeal dismissed.",
        "(1) M had been negligent and was liable at common law for O&#8217;s loss. O had left the key in M&#8217;s charge, and it was M&#8217;s duty to take reasonable care to see that it was not taken by an unauthorised person. It had been taken, and reasonably foreseeable consequences had followed: a thief had used it to steal from the room. (2) M could not rely on the notice in the bedroom. It could not form part of the contract. Those relying on a contract to exempt themselves from common law liability had to strictly prove its terms and the intention to create legal relations. The best way of proving intention was by a written document signed by the party to be bound. Another way was handing him before or at the time of the contract a written notice specifying its terms and making it clear that the contract was on those terms. The same effect could be achieved by a prominent public notice made plain for the party to see when he made the contract, or by an express oral stipulation. Nothing short of one of those ways would suffice. Notices put up in bedrooms did not make a contract: as a rule, guests did not see them until after they had been accepted as guests. (3) The question of whether, had O agreed to be bound by it, the notice would have exempted M from liability for its negligence should not depend on whether the hotel was a common inn with the liability of an insurer, or a private hotel with liability only for negligence. It should depend on the words of the contract. In order to exempt a person from liability for negligence, the exemption should be clear on the face of the contract; it should not depend on what view the courts might take of the nature of the hotel. Whether it was a common inn or a private hotel, a notice in the terms of that in the instant case would not exempt the hotel from liability for negligence but only from any liability as insurer. The notice could be construed as a warning that the hotel was not liable in the absence of negligence. As such it served a useful purpose of warning the guest to take care of his things; it was unnecessary to go further and construe it as a contractual exemption."
    ],
    "NUMBER": "425",
    "TYPE": "Headnotes",
    "NAME": "(wl) Olley v Marlborough Court Hotel",
    "JUDGE": "Bucknill LJ; Denning LJ; Singleton LJ",
    "CIT": "[1949] 1 KB 532",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Edwards v Skyways",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) White & Carter (Councils) Ltd v McGregor",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Chappell & Co v Nestle Co Ltd",
        "(wl) Albert v Motor Insurers' Bureau",
        "(wl) Parker v Clark",
        "(wl) Alpenstow v Regalian Properties"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Hire; plant hire; implied terms",
        "An owner&#8217;s contractual conditions may be incorporated into a contract of hire on the basis of a common understanding between the parties that such conditions applied. P and D were both engaged in the business of hiring out earth-moving equipment. D were also involved in drainage work on marshy ground and urgently requiring a crane, agreed to hire such a crane from P, terms of payment being agreed but no mention being made of P&#8217;s conditions of hire. P sent D a copy of such conditions which provided, inter alia, that the hirer would be responsible for all expenses arising out of the crane&#8217;s use. Before D signed the form containing the conditions, the crane sank into the marsh through no fault of D and P claimed from D the cost of recovering the crane."
    ],
    "CATEGORY": "Contracts &mdash; Cranes &mdash; Hiring &mdash; Land Drainage &mdash; Notice &mdash; Sale of Goods",
    "CITATION": "British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd [1975] QB 303",
    "YEAR": "1975",
    "CATEGORIES": [
        "Contracts",
        "Cranes",
        "Hiring",
        "Land Drainage",
        "Notice",
        "Sale of Goods"
    ],
    "HELD": [
        "allowing P&#8217;s claim, that P&#8217;s conditions of hire applied since both parties were in the trade and of equal bargaining power and on the evidence D and P both understood that P&#8217;s conditions of hire would apply. (Dictum of Lord Reid in McCutcheon v David MacBrayne Ltd [1964] 1 W.L.R. 125 applied; Hollier v Rambler Motors (AMC) Ltd [1972] 2 Q.B. 71 distinguished)."
    ],
    "NUMBER": "426",
    "TYPE": "Headnotes",
    "NAME": "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
    "JUDGE": "Lord Denning MR; Megaw LJ; Sir Eric Sachs",
    "CIT": "[1975] QB 303",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) McCutcheon v David MacBrayne Ltd",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Branca v Cobarro",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Parker v Clark"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Conditions; printed on delivery note; onerous and unusual conditions; whether brought sufficiently to attention; whether term of contract",
        "Clear and reasonable efforts must be made to bring any particularly onerous and unusual conditions to the attention of the other party if they are to form part of a contract. The defendants, an advertising agency, required photographs for a 1950&#8217;s presentation. The plaintiffs despatched 47 transparencies with a delivery note which stated that the transparencies were to be returned in 14 days, and that a holding fee of GBP 5 per day for each transparency would be charged if they were not. The defendants did not use the transparencies, put them to one side and forgot about them for a further two weeks. To their no doubt considerable consternation an invoice arrived for GBP 3,783 holding fee. They refused to pay. The plaintiffs obtained judgment."
    ],
    "CATEGORY": "Contracts &mdash; Conditions &mdash; Contract Terms &mdash; Notice",
    "CITATION": "Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd [1989] QB 433",
    "YEAR": "1989",
    "CATEGORIES": [
        "Contracts",
        "Conditions",
        "Contract Terms",
        "Notice"
    ],
    "HELD": [
        "allowing the appeal, that where a condition was particularly onerous or unusual, the party seeking to enforce it had to show that it had been fairly and reasonably brought to the other&#8217;s attention. The condition was unreasonable and extortionate and had not been sufficiently brought to the defendant&#8217;s attention. It did not form part of the contract (Thornton v Shoe Lane Parking [1971] 2 Q.B. 163 applied)."
    ],
    "NUMBER": "427",
    "TYPE": "Headnotes",
    "NAME": "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
    "JUDGE": "Dillon LJ; Bingham LJ",
    "CIT": "[1989] QB 433",
    "FLAGS": [
        "Approved",
        "Bingham"
    ]
},
{
    "RELATED": [
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) Canada Steamship Lines Ltd v The King",
        "(wl) Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "(wl) Branca v Cobarro"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Conditions and warranties; notice",
        "In the absence of any contractual document, a consignor of goods cannot, by a course of previous dealing, be bound by conditions of which he is generally aware but the specific terms of which he has no knowledge.Per Lord Devlin: Previous dealings are relevant only if they prove knowledge of the terms, actual and not constructive, and assent to them. A required his motor car to be shipped by R, and A&#8217;s agent received a receipt for the freight paid. The ship sank and the car was a total loss. R contended that he was absolved from liability for negligence in accordance with the terms of the conditions of carriage displayed at his office. The normal practice in accepting goods for shipment was to give the consignor a &#8220;risk note,&#8221; stating the conditions of carriage, which was to be signed by the consignor. No such note was given on this occasion, but on previous occasions A or his agent had sometimes signed a &#8220;risk note.&#8221; Both A and his agent knew that certain conditions were imposed but neither knew specifically what they were."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Negligence &mdash; Carriage By Sea &mdash; Conditions &mdash; Notice &mdash; Oral Contracts",
    "CITATION": "McCutcheon v David MacBrayne Ltd [1964] 1 WLR 125",
    "YEAR": "1964",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Negligence",
        "Carriage By Sea",
        "Conditions",
        "Notice",
        "Oral Contracts"
    ],
    "HELD": [
        "allowing A&#8217;s appeal, that this was an oral contract and the conditions relied on were not imported into it so as to exempt R from liability in negligence. (Reversing decision of Court of Session, Second Division; distinguished observations of Baggallay L.J. in Parker v South Eastern Railway Co (1876-77) L.R. 2 C.P.D. 416)."
    ],
    "NUMBER": "428",
    "TYPE": "Headnotes",
    "NAME": "(wl) McCutcheon v David MacBrayne Ltd",
    "JUDGE": "Lord Reid; Lord Hodson; Lord Guest; Lord Devlin; Lord Pearce",
    "CIT": "[1964] 1 WLR 125",
    "FLAGS": [
        "Criticised"
    ]
},
{
    "RELATED": [
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Couchman v Hill",
        "(wl) Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Lewis v Averay",
        "(wl) Albert v Motor Insurers' Bureau",
        "(wl) Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "(wl) Davis Contractors Ltd v Fareham Urban District Council"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Conditions and warranties; representation not a warranty",
        "The following principles apply in considering the question whether a representation is a condition, a warranty or an innocent misrepresentation: 1. Where an assumption is fundamental to a contract that does not prove that it is a term of the contract. If the assumption turns out to have been wrong the result will be that there was a mistake of fundamental importance by both parties to the contract. That mistake does not make the contract a nullity from the beginning, but it does in some circumstances enable the contract to be set aside in equity. 2. A &#8220;warranty&#8221; denotes a binding promise. The word is also used in order to denote a subsidiary term in a contract as distinct from a vital term which is called a &#8220;condition.&#8221; 3. A warranty as a statement which is a term of the contract must be distinguished from an innocent misrepresentation. The distinction is best expressed by the ruling of Holt C.J. in Pasley v. Freeman , &#8220;was it intended as a warranty or not?&#8221; 4. The question whether a warranty was intended depends upon the conduct of the parties, on their words and behavior, rather than on their thoughts. If an intelligent bystander would reasonable infer that a warranty was intended, that will suffice. And this, when the facts are not in dispute, is a question of law. 5. When the seller states a fact which is or should be within his own knowledge and of which the buyer is ignorant, intending that the buyer should act on it and he does so, it is easy to infer a warranty. So also if the seller makes a promise about something which is or should be within his own control. If, however, the seller, when he states a fact, makes it clear that he has no knowledge of his own but has got his information elsewhere, and is merely passing it on, it is not so easy to imply a warranty. 6. If an oral representation is afterwards recorded in writing, it is good evidence that it was intended as a warranty. If it is not put into writing, it is evidence against a warranty being intended; but it is by no means decisive. The defendant sold to the plaintiffs, who were motor traders, a Morris car, which according to the registration book was first registered in 1948, for GBP 290. Eight months later the plaintiffs discovered that the car was made in 1939. If they had known this they would have given only GBP 175 for it. The defendant honestly believed that it was a 1948 model. The plaintiffs claimed damages for breach of contract."
    ],
    "CATEGORY": "Sale of Goods &mdash; Cars &mdash; Contract Terms &mdash; Sale of Goods &mdash; Warranties",
    "CITATION": "Oscar Chess Ltd v Williams [1957] 1 WLR 370",
    "YEAR": "1957",
    "CATEGORIES": [
        "Sale of Goods",
        "Cars",
        "Contract Terms",
        "Sale of Goods",
        "Warranties"
    ],
    "HELD": [
        "on the facts, the defendant, in offering a 1948 Morris and producing the registration book, did not intend to bind himself so as to warrant that it was a 1948 model; accordingly the plaintiffs&#8217; claim failed. Pasley v Freeman 100 E.R. 450 applied; and Heilbut Symons &amp; Co v Buckleton [1913] A.C. 30 applied"
    ],
    "NUMBER": "429",
    "TYPE": "Headnotes",
    "NAME": "(wl) Oscar Chess Ltd v Williams",
    "JUDGE": "Denning LJ; Hodson LJ; Morris LJ",
    "CIT": "[1957] 1 WLR 370",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Tekdata Interconnections Ltd v Amphenol Ltd",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) Couchman v Hill",
        "(wl) Royscot Trust v Rogerson",
        "(wl) Car & Universal Finance Co Ltd v Caldwell"
    ],
    "YEAR": "1965",
    "COURT": "EWCA",
    "SUMMARY": [
        "Conditions and warranties; mileage of car",
        "If a representation is made in the course of dealings for a contract for the very purpose of inducing the other party to act upon it by entering into the contract, that is prima facie ground for inferring that it was intended as a warranty. The maker of the representation can rebut this by showing that he was entirely innocent of fault in making it and that it would not be reasonable in the circumstances for him to be bound by it. During negotiations for the purchase of a second-hand Bentley the seller said it had done only 20,000 miles since fitted with a replacement engine and gearbox. This was wrong, the true figure being nearer 100,000, as the seller could have discovered by asking the manufacturer. On a claim for damages for breach of warranty as to this mileage, held that it was a warranty, not a mere innocent misrepresentation, and the action succeeded. ( Heilbut Symons &amp; Co v Buckleton [1913] A.C. 30 considered; Oscar Chess v Williams [1957] 1 W.L.R. 370 distinguished)."
    ],
    "CATEGORY": "Sale of Goods Other Related Subjects: Contracts &mdash; Contracts of Sale &mdash; Misrepresentation &mdash; Warranties",
    "JUDGE": "Lord Denning MR; Danckwerts LJ; Salmon LJ",
    "CATEGORIES": [
        "Sale of Goods Other Related Subjects: Contracts",
        "Contracts of Sale",
        "Misrepresentation",
        "Warranties"
    ],
    "NUMBER": "430",
    "TYPE": "Headnotes",
    "NAME": "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
    "CITATION": "Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd [1965] 1 WLR 623",
    "CIT": "[1965] 1 WLR 623",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Tinn v Hoffman & Co",
        "(wl) Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) Karsales (Harrow) Ltd v Wallis",
        "(wl) Koufos v Czarnikow Ltd (The Heron II)",
        "(wl) Nicolene v Simmonds",
        "(wl) East v Maurer",
        "(wl) Royscot Trust v Rogerson",
        "(wl) Chappell & Co v Nestle Co Ltd",
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) Lewis v Averay"
    ],
    "COUNSEL": "For the claimant: Guy Morpuss QC, Patricia Edwards. For the first defendant: Hilary Heilbron QC, David Scannell.",
    "COURT": "EWHC",
    "SUMMARY": [
        "The court assessed damages in a case where a manufacturer of aircraft seats had admitted the late delivery and, in certain instances, the non-delivery of seats to the claimant airline."
    ],
    "CATEGORY": "Damages Other Related Subjects: Contracts &mdash; Aviation &mdash; Aircraft Components &mdash; Breach of Contract &mdash; Measure of Damages &mdash; Mitigation",
    "CITATION": "Schawel v Reade [2015] EWHC 1250 (Comm)",
    "YEAR": "2015",
    "ABSTRACT": [
        "The claimant airline (T) claimed damages for the breach of three contracts made with the defendant (K), a Japanese company which manufactured aircraft seats.",
        "Under the contracts, K had agreed to supply economy-class seats for three groups of aircraft. Some of the seats were delivered late and others were not delivered at all. Among other consequences of those defaults, T was prevented from using five new aircraft for around 18 months until seats were obtained from another supplier. K had admitted liability. The issues which remained in dispute concerned the measure of damages. The largest item of damages claimed (just under $162 million) was the cost of leasing aircraft from a third party for a three-year period. In addition, damages of $21 million were sought in respect of the cost of buying and installing replacement seats for some of the aircraft. A central plank of the defence was that, even where costs were incurred by T as a result of K&#8217;s breaches of contract, T had also gained certain benefits from the mitigating actions taken which had to be brought into account in calculating damages. Thus, K claimed that T could not recover the cost of the leases, as the benefits gained from leasing the aircraft and other mitigating steps taken by T not only eliminated the losses which would otherwise have resulted from the loss of aircraft capacity caused by K&#8217;s breaches of contract but covered the cost of the leases as well. K also asserted that the replacement seats bought by T were lighter than the seats ordered and that the installation of lighter seats had generated and would continue to generate savings in the cost of fuel for which T should give credit. K also maintained that certain credits granted to T when it bought further aircraft were attributable to the delays in the delivery of aircraft caused by K&#8217;s breaches and had therefore to be brought into account."
    ],
    "CATEGORIES": [
        "Damages Other Related Subjects: Contracts",
        "Aviation",
        "Aircraft Components",
        "Breach of Contract",
        "Measure of Damages",
        "Mitigation"
    ],
    "HELD": [
        "Damages assessed.",
        "(1) When T entered into the leases, it could reasonably have expected to obtain replacement seats for the relevant aircraft and bring them into service well within two years of the lease terms. Accordingly, while the main reason for leasing the aircraft was to mitigate the consequences of K&#8217;s breaches of contract, that reason did not justify leasing the aircraft for three years rather than two. The choice of a three-year rather than a two-year lease term was driven by other commercial considerations. The decision to lease the aircraft for a third year was not a step which was taken nor which it would have been reasonable for T to take in mitigation of loss and was therefore not attributable to K&#8217;s breaches of contract. K had failed to prove that the net benefits which T had obtained from having the three leased aircraft in its fleet during the first two years of the leases were sufficient to offset all the losses resulting from the delayed entry into service, or the restricted use, of the aircraft caused by K&#8217;s breaches of contract. T was entitled to recover lease costs of $107 million (see paras 56, 62, 138-139 of judgment). (2) If as a result of buying lighter replacement seats in mitigation of its loss T had saved or would save money, the amount saved would have to be brought into account in the assessment of damages. However, the burden of proof was on K to establish the fact and amount of any such saving. It had not discharged that burden in relation to what were known as the Recaro seats. However, in relation to what were known as the ZIM seats, the expert evidence did justify a finding that T had incurred a saving which should be brought into account (paras 144, 152, 158). (3) T had obtained a price reduction from the supplier of the aircraft in which K&#8217;s seats were to be installed. There were two effective causes of that reduction: K&#8217;s breach of contract and the bargaining power which T was able to exploit through being a good customer of the supplier. When the defendant&#8217;s breach of contract combined with another effective cause to result in loss to the claimant, the loss was recoverable; the same principle had to apply to gains. Credit had therefore to be given in the calculation of damages for the benefit to T of the price reduction. Further, T had been granted various credits on the purchase of new aircraft after the relevant events. Three credits remained in dispute. One was a credit to offset the amount of an invoice which the supplier had issued to T claiming &#8220;disruption costs&#8221; resulting from the delayed delivery caused by K&#8217;s breaches. T had failed to prove that it was liable to pay the sum offset and was therefore not entitled to recover that sum from K. The receipt by T of the other two credits had not been caused by K&#8217;s breaches of contract. It was reasonable to infer that the supplier would have been willing to make similar credits available to T as an incentive to buy new aircraft irrespective of the problems caused by K&#8217;s breaches of contract. Those credits were therefore not to be brought into account in the assessment of damages (paras 172, 176-179, 187-188, 191)."
    ],
    "NUMBER": "431",
    "TYPE": "Headnotes",
    "NAME": "(wl) Schawel v Reade",
    "JUDGE": "Leggatt J",
    "CIT": "[2015] EWHC 1250 (Comm)"
},
{
    "RELATED": [
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Chappell & Co v Nestle Co Ltd",
        "(wl) Barry v Davies",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council"
    ],
    "COUNSEL": "For I: Nicholas Dowding Q.C. and Martin Rodger. For E: Robert Bailey-King.",
    "COURT": "EWHC",
    "SUMMARY": [
        "IPC applied for an injunction to restrain EC from breaking a beer tie contained in its lease and for an account of damages for breach of the clause. EC counterclaimed that, notwithstanding an &#8220;entire agreement&#8221; clause in the lease, IPC had given a collateral warranty that the tie would be released. The court held that the clause in the lease confirming that it constituted the entire agreement deprived the alleged warranty of all legal effect, rendered it inadmissible, and was not in breach of the Misrepresentation Act 1967 s.3.",
        "I applied for an injunction to restrain E from breaking a beer tie contained in its lease and for an account of damages for breach of the clause. E counterclaimed that, notwithstanding an &#8220;entire agreement&#8221; clause in the lease, I had given a collateral warranty that the tie would be released. E had relied upon the undertaking given by I to the Secretary of State for Trade and Industry that the number of pubs owned by I, which were subject to a tie in agreement, would be restricted by 1992 and, that all pubs still under I&#8217;s ownership would be released from the tie by 1998."
    ],
    "CATEGORY": "Contracts &mdash; Beer &mdash; Collateral Contracts &mdash; Misrepresentation &mdash; Tie-Ins &mdash; Warranties",
    "CITATION": "Inntrepreneur Pub Co v East Crown Ltd [2000] 2 Lloyd&#8217;s Rep 611",
    "YEAR": "2000",
    "CATEGORIES": [
        "Contracts",
        "Beer",
        "Collateral Contracts",
        "Misrepresentation",
        "Tie-Ins",
        "Warranties"
    ],
    "HELD": [
        "giving judgment for I and dismissing the counterclaim, that the &#8220;entire agreement&#8221; clause contained in the lease not only had the effect of rendering evidence of the alleged collateral warranty inadmissible, but also deprived the warranty of all legal effect, Deepak Fertilisers &amp; Petrochemicals Corp Ltd v Davy McKee (London) Ltd [1998] 2 Lloyd&#8217;s Rep. 139 applied. Further, the agreement clause was not in breach of the Misrepresentation Act 1967 s.3 which was inapplicable to a contractual provision which defined where the terms of the contract were to be found, McGrath v Shah (1989) 57 P. &amp; C.R. 452 applied. In any event, the reference to a release from the tie in 1991 was insufficient to support the giving of the alleged collateral warranty to E which, owing to the passage of time, would have been invalid at the time of the execution of the agreement."
    ],
    "NUMBER": "432",
    "TYPE": "Headnotes",
    "NAME": "(wl) Inntrepreneur Pub Co v East Crown Ltd",
    "JUDGE": "Lightman J",
    "CIT": "[2000] 2 Lloyd&#8217;s Rep 611",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd",
        "(wl) Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "(wl) Olley v Marlborough Court Hotel",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Nicolene v Simmonds",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Car & Universal Finance Co Ltd v Caldwell",
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen"
    ],
    "YEAR": "1947",
    "COURT": "EWCA",
    "SUMMARY": [
        "Conditions and warranties; verbal condition overriding written condition",
        "A printed condition in a catalogue protecting the vendor from personal liability in the case of any error of description can be overridden by a condition or warranty orally expressed on the basis of which the contract is made. The plaintiff purchased two heifers at an auction sale which were described in the catalogue as &#8220;unserved&#8221;. The catalogue contained the following condition: &#8220;The lots are sold with all faults, imperfections, and errors of description&#8221;. Another condition stated that the accuracy of the information was not guaranteed and that no compensation would be paid for any errors of description. Before the sale the plaintiff asked the defendant as well as his auctioneer: &#8220;Can you confirm heifers unserved.&#8221; and received from both the answer: &#8220;Yes&#8221;. Two months later a six months&#8217; old foetus was removed from one of the heifers which died as a result of carrying a calf at too young an age. Held, the catalogue expressly protected the vendor in the event of an error of description and the plaintiff could not succeed so far as his action was based on the catalogue. However, the question and answer amounted to an oral offer of warranty which overrode the stultifying condition in the printed terms and that offer was accepted by the plaintiff when he bid and the contract was made on that basis when the lot was knocked down to him."
    ],
    "CATEGORY": "Sale of Goods &mdash; Exclusion Clauses &mdash; Oral Contracts &mdash; Sale of Goods &mdash; Warranties",
    "JUDGE": "Scott LJ; Bucknill LJ; Tucker LJ",
    "CATEGORIES": [
        "Sale of Goods",
        "Exclusion Clauses",
        "Oral Contracts",
        "Sale of Goods",
        "Warranties"
    ],
    "NUMBER": "433",
    "TYPE": "Headnotes",
    "NAME": "(wl) Couchman v Hill",
    "CITATION": "Couchman v Hill [1947] KB 554",
    "CIT": "[1947] KB 554",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Errington v Errington and Woods",
        "(wl) White & Carter (Councils) Ltd v McGregor",
        "(wl) The Brimnes",
        "(wl) Liverpool City Council v Irwin",
        "(wl) Solle v Butcher",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) McRae v Commonwealth Disposals Commission",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Rose v Pim",
        "(wl) Royscot Trust v Rogerson",
        "(wl) Karsales (Harrow) Ltd v Wallis",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd"
    ],
    "COURT": "EWHC",
    "SUMMARY": [
        "Covenant; breach of covenant; forfeiture; waiver",
        "By a lease dated April 5, 1944, the landlords let premises to the tenant, the tenant covenanting not to use the premises except as a shop. To the knowledge of the landlords, the tenant slept on the premises from time to time. In 1947 the draft of a new lease containing a covenant by the tenant &#8220;to use the demised premises as and for showrooms, workrooms and offices only,&#8221; and not to permit the premises to be used for sleeping, was sent to the tenant. The tenant objected to the last part of the clause, and the landlords told the tenant orally that if he signed the lease the landlords would not object to his continuing to reside on the premises, and the completed lease omitted any reference to sleeping on the premises. The landlords subsequently brought an action for forfeiture of the lease on the ground of breach of covenant and the tenant counterclaimed for rectification."
    ],
    "CATEGORY": "Landlord and Tenant &mdash; Breach &mdash; Covenants &mdash; Repudiation &mdash; Waiver",
    "CITATION": "City and Westminster Properties v Mudd [1959] Ch 129",
    "YEAR": "1959",
    "CATEGORIES": [
        "Landlord and Tenant",
        "Breach",
        "Covenants",
        "Repudiation",
        "Waiver"
    ],
    "HELD": [
        "(1) having regard to the nature of the property and to the covenant to use it for showrooms, etc., only, the tenant by using it for residential purposes was in breach of covenant and the counterclaim for rectification failed; (2) although the landlords&#8217; knowledge waived past breaches, that knowledge did not amount to a release by them of the covenant; (3) the claim for forfeiture failed because the tenant had executed the lease in reliance on a promise made to him by the landlords at the time not to enforce against him personally the covenant to use the premises for business purposes only, and thus an enforceable contract had been constituted from which the landlords could not resile. ( William Porter &amp; Co Ltd, Re [1937] 2 All E.R. 361 applied)."
    ],
    "NUMBER": "434",
    "TYPE": "Headnotes",
    "NAME": "(wl) City and Westminster Properties v Mudd",
    "JUDGE": "Harman J",
    "CIT": "[1959] Ch 129",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Couchman v Hill",
        "(wl) Nicolene v Simmonds",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Sudbrook Trading Estate Ltd v Eggleton",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) White & Carter (Councils) Ltd v McGregor"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Exemption clause; printed conditions; oral promise",
        "Where printed conditions in a contract are repugnant to a binding oral promise they do not provide exemption from liability for breach of that promise. A Co. had acted as forwarding agents for E Co., who were importers of machines from Italy, since 1959. Until 1967 the machines were packed in crates and always shipped under deck. In that year it was proposed to use containers in the future. A gave E an oral assurance that if containers were used they would be shipped under deck. On the faith of that promise E agreed a new contract with A, incorporating the standard conditions of the forwarding trade for the carriage of an injection-moulding machine in a container. As a result of an oversight the container was shipped on deck. The ship met a swell and the container was lost overboard. E claimed damages for the loss alleging breach of the contract with A. A contended that there was no contractual promise that the goods would be carried under deck or, alternatively, that the printed terms and conditions exempted them from liability thereunder. The judge dismissed the action. E appealed."
    ],
    "CATEGORY": "Contracts &mdash; Exclusion Clauses &mdash; Oral Contracts &mdash; Standard Forms of Contract",
    "CITATION": "J Evans &amp; Son (Portsmouth) v Andrea Merzario Ltd [1976] 1 WLR 1078",
    "YEAR": "1976",
    "CATEGORIES": [
        "Contracts",
        "Exclusion Clauses",
        "Oral Contracts",
        "Standard Forms of Contract"
    ],
    "HELD": [
        "allowing the appeal, that (1) the oral assurance amounted to an enforceable contractual promise; (2) the oral promise overrode the printed conditions. (Dictum of Lord Denning M.R. in Mendelssohn v Normand [1970] 1 Q.B. 177 applied)."
    ],
    "NUMBER": "435",
    "TYPE": "Headnotes",
    "NAME": "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
    "JUDGE": "Lord Denning MR; Roskill LJ; Geoffrey Lane LJ",
    "CIT": "[1976] 1 WLR 1078",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) McCullough v Lane Fox and Partners Ltd",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) Alpenstow v Regalian Properties",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Pao On v Lau Yiu Long"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Negligence; negligent mis-statement; duty of care; special relationship in pre-contract negotiations",
        "Where a special relationship exists, a negligent mis-statement may be not only a breach of contractual warranty, but also an actionable tort as a breach of the duty of care which exists throughout pre-contractual negotiations and which survives the making of the ultimate contract. Esso granted a tenancy of a new filling station to D. During negotiations they told him that they estimated an annual &#8220;throughput&#8221; of petrol at 200,000 gallons a year by the third year. Due to the physical characteristics and layout of the site, the figure after three years was still under 100,000. D lost all his money. He entered into a new tenancy with Esso at a reduced rent plus a surcharge on petrol sold. The losses continued and D was unable to pay cash for the petrol. Esso cut off his supplies and eventually he had to surrender possession. He counterclaimed for breach of warranty, and for negligent misrepresentation."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Negligence &mdash; Contracts &mdash; Misrepresentation &mdash; Negligence",
    "CITATION": "Esso Petroleum Co Ltd v Mardon [1976] QB 801",
    "YEAR": "1976",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Negligence",
        "Contracts",
        "Misrepresentation",
        "Negligence"
    ],
    "HELD": [
        "(1) the statement as to potential throughput was a contractual warranty, and the plaintiffs were liable for damages for its breach; (2) the statement was a negligent representation made by a party holding himself out as having special expertise in circumstances where a duty of care existed to take care that it was correct; (3) the measure of damage in both cases was the same, i.e. what D had lost by being induced to enter into the contract, which should be assessed on the same lines as damages for personal injuries to include estimated loss of earnings. ( Hedley Byrne &amp; Co Ltd v Heller &amp; Partners Ltd [1964] A.C. 465 applied Bisset v Wilkinson [1927] A.C. 177 distinguished)."
    ],
    "NUMBER": "436",
    "TYPE": "Headnotes",
    "NAME": "(wl) Esso Petroleum Co Ltd v Mardon",
    "JUDGE": "Lord Denning MR; Ormrod LJ; Shaw LJ",
    "CIT": "[1976] QB 801",
    "FLAGS": [
        "Criticised",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Fisher v Bell",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Sale of ship; description of future goods",
        "Even if a strict and technical view must be taken as regards the description of unascertained future goods, such as commodities, other contracts for the sale of goods should be treated like other contracts generally and a particular item in a description will only be treated as a condition if it constitutes a substantial ingredient of the &#8220;identity&#8221; of the thing sold. A Japanese tanker was chartered in order to finance building before work started. The charterparty referred to the vessel as one to be built at Osaka, hull number 354. Because of its size it was eventually built at Oshima, hull number 004. Its physical attributes conformed with those required under the charter. Then due to the oil crisis the market collapsed. The charterers rejected the vessel on the ground that, by analogy with contracts for the sale of goods, the vessel did not comply with its contractual description."
    ],
    "CATEGORY": "Shipping Other Related Subjects: Sale of Goods &mdash; Contract Terms &mdash; Sale of Goods &mdash; Ships",
    "CITATION": "Reardon Smith Line Ltd v Yngvar Hansen-Tangen [1976] 1 WLR 989",
    "YEAR": "1976",
    "CATEGORIES": [
        "Shipping Other Related Subjects: Sale of Goods",
        "Contract Terms",
        "Sale of Goods",
        "Ships"
    ],
    "HELD": [
        "some of the cases on description in sale of goods were excessively technical; they should not be extended and were due for fresh examination. The hull and yard number had no special significance and could not be treated as a condition. In any event, the words were never part of the description, they were there merely to identify the vessel, which was the one contracted for. (Dictum of Roskill L.J. in Cehave NV v Bremer Handels GmbH (The Hansa Nord) [1976] Q.B. 44 approved)."
    ],
    "NUMBER": "437",
    "TYPE": "Headnotes",
    "NAME": "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
    "JUDGE": "Lord Wilberforce; Viscount Dilhorne; Lord Simon of Glaisdale; Lord Kilbrandon; Lord Russell of Killowen",
    "CIT": "[1976] 1 WLR 989",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Canada Steamship Lines Ltd v The King",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) Car & Universal Finance Co Ltd v Caldwell",
        "(wl) Solle v Butcher",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) Branca v Cobarro",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) William Sindall plc v Cambridgeshire County Council",
        "(wl) Eliason v Henshaw",
        "(wl) Daulia Ltd v Four Millbank Nominees Ltd",
        "(wl) Tinn v Hoffman & Co"
    ],
    "COUNSEL": "For ICS: Geoffrey Vos Q.C., Denis Brock (Solicitor Advocate) and Guy Morpuss. For WBBS: David Oliver Q.C., Andrew Hochhauser Q.C. and Vernon Flynn.",
    "COURT": "UKHL",
    "SUMMARY": [
        "Investors Compensation Scheme; home income plans; investors had validly assigned right to sue building society in damages but retained right to seek rescission of mortgage",
        "On the advice of financial advisers, a number of home owners entered into home income plans involving the mortgaging of their homes with W, which caused the investors severe loss when economic conditions deteriorated. The investors claimed compensation from ICS by completing a claim form and ICS brought proceedings against W and numerous law firms involved in the mortgages, whilst some of the investors commenced separate actions against W for rescission of the mortgages and damages. The claim form stated that the investors had assigned absolutely to ICS all third party claims except &#8220;any claim (whether sounding in rescission for undue influence or otherwise) that you have against the...society in which you claim an abatement of sums which you would otherwise have to repay to the society...&#8221;. ICS appealed against a Court of Appeal decision that the investors had not validly assigned their right to sue W in damages to ICS."
    ],
    "CATEGORY": "Banking and Finance Other Related Subjects: Contracts &mdash; Assignment &mdash; Home Income Plans &mdash; Interpretation &mdash; Investors Compensation Scheme &mdash; Rescission",
    "CITATION": "Investors&#8217; Compensation Scheme Ltd v West Bromwich Building Society [1998] 1 WLR 896",
    "YEAR": "1998",
    "CATEGORIES": [
        "Banking and Finance Other Related Subjects: Contracts",
        "Assignment",
        "Home Income Plans",
        "Interpretation",
        "Investors Compensation Scheme",
        "Rescission"
    ],
    "HELD": [
        "allowing the appeal, that on the proper construction of the claim form, particularly in the light of the accompanying explanatory note, it was clear that all claims for damages and compensation by the investors had been validly assigned to ICS, such that the investors were not entitled to maintain their claims against W, but ICS could validly maintain them. The investors retained the right to seek rescission of their mortgages on whatever terms the court saw fit, as the right to seek rescission was not assignable as a chose in action, but was a right which attached to the mortgaged property and could only be enforced by the owner of the property. Similarly, the possibility of an abatement of the debt as part of the process of rescission was not an assignable chose in action, and so did not reduce the scope of the chose in action which had been assigned to ICS. The fact that the quantum of damages recovered by ICS might be affected by whether or not the investors managed to secure rescission of their mortgages did not mean that the investors had tried to assign different remedies in respect of the same chose in action."
    ],
    "NUMBER": "438",
    "TYPE": "Headnotes",
    "NAME": "(wl) Investors' Compensation Scheme Ltd v West Bromwich Building Society",
    "JUDGE": "Lord Goff of Chieveley; Lord Lloyd of Berwick; Lord Hoffmann; Lord Hope of Craighead; Lord Clyde",
    "CIT": "[1998] 1 WLR 896",
    "FLAGS": [
        "Approved",
        "Hoffmann"
    ]
},
{
    "RELATED": [
        "(wl) Car & Universal Finance Co Ltd v Caldwell",
        "(wl) Couchman v Hill",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Canada Steamship Lines Ltd v The King",
        "(wl) Lewis v Averay",
        "(wl) Olley v Marlborough Court Hotel",
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Exclusion clause; whether fair and reasonable; approach of appellate court",
        "Although conditions of a contract for sale of goods may strictly limit liability, the question is whether it would be &#8220;fair or reasonable&#8221; to rely on them within the meaning of the Sale of Goods Act 1979. P ordered late cabbage seed from D who were seed merchants. The conditions of sale limited D&#8217;s liability to the replacement or refund of the value of the seed. The seed proved utterly wrong for the purposes it was required, was not late cabbage and was unmerchantable. The value of the seed was GBP 207.60; the loss to P was approximately GBP 61,000."
    ],
    "CATEGORY": "Sale of Goods &mdash; Conditions &mdash; Contracts of Sale &mdash; Exclusion Clauses &mdash; Limit of Liability",
    "CITATION": "George Mitchell (Chesterhall) Ltd v Finney Lock Seeds [1983] 2 AC 803",
    "YEAR": "1983",
    "CATEGORIES": [
        "Sale of Goods",
        "Conditions",
        "Contracts of Sale",
        "Exclusion Clauses",
        "Limit of Liability"
    ],
    "HELD": [
        "dismissing D&#8217;s appeal, that although the conditions did limit their liability under contract, reliance on the conditions would not be fair and reasonable within the meaning of the Sale of Goods Act 1979 s.55 . ( Ailsa Craig Fishing Co Ltd v Malvern Fishing Co Ltd (The Strathallan) [1983] 1 W.L.R. 964 applied)."
    ],
    "NUMBER": "439",
    "TYPE": "Headnotes",
    "NAME": "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
    "JUDGE": "Lord Diplock; Lord Scarman; Lord Roskill; Lord Bridge of Harwich; Lord Brightman",
    "CIT": "[1983] 2 AC 803",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Canada Steamship Lines Ltd v The King",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Alpenstow v Regalian Properties",
        "(wl) Sudbrook Trading Estate Ltd v Eggleton",
        "(wl) Collier v Wright (Holdings) Ltd",
        "(wl) White & Carter (Councils) Ltd v McGregor",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Re Selectmove Ltd",
        "(wl) Bolton v Mahadeva",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Shogun Finance Ltd v Hudson"
    ],
    "COUNSEL": "For BCCI: Christopher Jeans Q.C. and Daniel Stilitz. For N: Robin Allen Q.C., Isaac Jacob and Thomas Coghlin.",
    "COURT": "UKHL",
    "SUMMARY": [
        "BC appealed against a ruling that although the general language used in an ACAS COT3 settlement agreement signed by N, a former employee of BC, was sufficient to include potential claims not at that time known or identified, it would be unconscionable for BC to rely upon it. After the agreement had been signed, N had sought to pursue a &#8220;stigma&#8221; claim against BC based on the breach of implied duty not to carry on a corrupt business. Finding that the clause could not be read literally, the court held that neither party could realistically have anticipated N&#8217;s claim and that on an equitable construction of their agreement, it was impossible to conclude, in the absence of an express indication, that they intended the agreement to extend to the release of rights which they could never have contemplated or foreseen.",
        "BCCI appealed against a decision ([2000] 3 All E.R. 51) that although the general language used in an ACAS COT3 settlement agreement signed by N, a former employee of BCCI, was sufficient to include potential claims not at that time known or identified, it would be unconscionable for BCCI to rely upon it. The agreements had been entered into by the redundant employees of BCCI in full and final settlement of all or any claims that existed or might exist against BCCI. After the agreement had been signed, N had sought to pursue a &#8220;stigma&#8221; claim against BCCI based on the breach of implied duty not to carry on a corrupt business, which he contended had handicapped him in his applications for other employment."
    ],
    "CATEGORY": "Employment Other Related Subjects: Contracts &mdash; Acas &mdash; Contracts &mdash; Interpretation &mdash; Release &mdash; Unconscionability",
    "CITATION": "Bank of Credit and Commerce International SA v Ali [2001] UKHL 8",
    "YEAR": "2001",
    "CATEGORIES": [
        "Employment Other Related Subjects: Contracts",
        "Acas",
        "Contracts",
        "Interpretation",
        "Release",
        "Unconscionability"
    ],
    "HELD": [
        "dismissing the appeal, (Lord Hoffmann dissenting), that the clause could not be read to mean literally that BCCI was released from all future liability. A long line of authority had stated that in the absence of express language, the courts were reluctant to infer that a person had intended to surrender rights and claims of which he was unaware, Grant v John Grant &amp; Sons Pty Ltd (1954) 91 C.L.R. 112 considered. Neither party could realistically have anticipated N&#8217;s claim and on an equitable construction of their agreement, it was impossible to conclude, in the absence of an express indication, that they had intended the agreement to extend to the release of rights which they could never have contemplated or foreseen."
    ],
    "NUMBER": "440",
    "TYPE": "Headnotes",
    "NAME": "(wl) Bank of Credit and Commerce International SA v Ali",
    "JUDGE": "Lord Bingham of Cornhill; Lord Browne-Wilkinson; Lord Nicholls of Birkenhead; Lord Hoffmann; Lord Clyde",
    "CIT": "[2001] UKHL 8",
    "FLAGS": [
        "Approved",
        "Bingham",
        "Hoffmann"
    ]
},
{
    "RELATED": [
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Davis Contractors Ltd v Fareham Urban District Council",
        "(wl) Ingram v Little",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Solle v Butcher",
        "(wl) Eliason v Henshaw",
        "(wl) Branca v Cobarro",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Canada Steamship Lines Ltd v The King",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd"
    ],
    "COUNSEL": "For the appellant: Christopher Nugee QC, Julian Greenhill. For the respondent: Robert Miles QC, Timothy Morshead.",
    "COURT": "UKHL",
    "SUMMARY": [
        "Their Lordships indicated, in obiter dicta, that there was no clearly established case for revisiting the rule in Prenn v Simmonds [1971] 1 W.L.R. 1381 that pre-contractual negotiations were inadmissible in construing a contract; furthermore, Partenreederei MS Karen Oltmann v Scarsdale Shipping Co (The Karen Oltmann) [1976] 2 Lloyd&#8217;s Rep. 708 was an illegitimate extension of the &#8220;private dictionary&#8221; principle which, taken to its logical conclusion, would destroy the exclusionary rule and any advantages which it might have."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Construction Law &mdash; Admissibility &mdash; Agreement &mdash; Construction Contracts &mdash; Contract Terms &mdash; Interpretation &mdash; Mistake &mdash; Negotiations &mdash; Rectification",
    "CITATION": "Chartbrook Ltd v Persimmon Homes Ltd [2009] UKHL 38",
    "YEAR": "2009",
    "ABSTRACT": [
        "The appellant developer (P) appealed against a decision ( [2008] EWCA Civ 183, [2008] 2 All E.R. (Comm) 387 ) in favour of the respondent (C) concerning the interpretation of an agreement to develop C&#8217;s land.",
        "Under the agreement P was to obtain planning permission, construct a development on the site and then sell the properties. The price payable by P under the agreement included an &#8220;Additional Residential Payment&#8221; (ARP) defined as &#8220;23.4% of the price achieved for each Residential Unit in excess of the Minimum Guaranteed Residential Unit Value less the Costs and Incentives&#8221;. The judge at first instance and the Court of Appeal agreed with C&#8217;s interpretation of the definition of the ARP.",
        "P&#8217;s argument, if it failed on the construction issue, was that the House should take into account the pre-contractual negotiations. P submitted that the rule in Prenn v Simmonds [1971] 1 W.L.R. 1381 that pre-contractual negotiations were inadmissible in construing a contract was illogical and prevented a court from putting itself in the position of the parties and ascertaining their true intent. P also submitted that the judge and the Court of Appeal had misunderstood the principles on which rectification could be decreed."
    ],
    "CATEGORIES": [
        "Contracts Other Related Subjects: Construction Law",
        "Admissibility",
        "Agreement",
        "Construction Contracts",
        "Contract Terms",
        "Interpretation",
        "Mistake",
        "Negotiations",
        "Rectification"
    ],
    "HELD": [
        "Appeal allowed.",
        "(1) Lawrence Collins L.J. below had rightly concluded that P had demonstrated that something had gone wrong with the language in the contract. To interpret the definition of the ARP in accordance with ordinary rules of syntax made no commercial sense. The ARP had to mean the amount by which 23.4 per cent of the achieved price exceeded the minimum guaranteed residential unit value. There was no limit to the amount of &#8220;red ink&#8221; or verbal rearrangement or correction which the court was allowed when determining whether there was a clear mistake. All that was required was that it should be clear that something had gone wrong with the language and that it should be clear what a reasonable person would have understood the parties to have meant, Investors Compensation Scheme Ltd v West Bromwich Building Society (No.1) [1998] 1 W.L.R. 896 , East v Pantiles (Plant Hire) [1982] 2 E.G.L.R. 111 and KPMG v Network Rail Infrastructure Ltd [2007] EWCA Civ 363, [2007] Bus. L.R. 1336 applied. Both of those requirements were satisfied in the instant case. (2) (Obiter) (a) It would not be inconsistent with the English objective theory of contractual interpretation to admit evidence of previous communications between the parties as part of the background which might cast light on what they meant by the language they used. Prima facie, pre-contractual negotiations were potentially relevant background, Bank of Credit and Commerce International SA (In Liquidation) v Ali (No.1) [2001] UKHL 8, [2002] 1 A.C. 251 considered. However, such material would usually be inadmissible because it was irrelevant to the question before the court, namely what the parties would reasonably be taken to have meant by the language eventually used in the agreement. There was no clearly established case for departing from the exclusionary rule, even though it might mean that in some cases parties would be bound by a contract in terms which, upon a full investigation of the course of negotiations, a reasonable observer would not have taken them to have intended, Prenn considered. There was a power to depart from the rule, but that power was only intended to be applied in a small number of cases in which previous decisions of the House were thought to be impeding the proper development of the law or to have led to results which were unjust or contrary to public policy, Jones v Secretary of State for Social Services [1972] A.C. 944 considered; (b) Evidence could be adduced that the parties to a contract habitually used words in an unconventional sense in order to support an argument that words in the contract should bear a similar unconventional meaning (the &#8220;private dictionary&#8221; principle). However, the decision in Partenreederei MS Karen Oltmann v Scarsdale Shipping Co (The Karen Oltmann) [1976] 2 Lloyd&#8217;s Rep. 708 , which involved a choice between two perfectly conventional meanings of the word &#8220;after&#8221;, was an illegitimate extension of the &#8220;private dictionary&#8221; principle which, taken to its logical conclusion, would destroy the exclusionary rule and any advantages which it might have, The Karen Oltmann considered. (3) (Obiter) Joscelyne v Nissen [1970] 2 Q.B. 86 extended the availability of rectification to cases where there had not been any enforceable prior agreement, Joscelyne considered. In considering rectification, the question was what an objective observer would have thought the parties&#8217; intentions were, Frederick E Rose (London) Ltd v William H Pim Junior &amp; Co Ltd [1953] 2 Q.B. 450 and Etablissements Levy (Georges et Paul) v Adderley Navigation Co Panama SA (The Olympic Pride) [1980] 2 Lloyd&#8217;s Rep. 67 considered. Evidence as to what terms a party understood to have been agreed could be significant in a case where the prior consensus was based on oral exchanges or conduct, but where the prior consensus was expressed entirely in writing such evidence was likely to carry very little weight, Carmichael v National Power Plc [1999] 1 W.L.R. 2042 and George Cohen Sons &amp; Co Ltd v Docks and Inland Waterways Executive (1950) 84 Ll. L. Rep. 97 considered. However, it would not be inadmissible. In the instant case, on the assumption that the judge was right in his construction of the ARP definition, both parties were mistaken in thinking that it reflected their prior consensus, so P was entitled to rectification."
    ],
    "NUMBER": "441",
    "TYPE": "Headnotes",
    "NAME": "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
    "JUDGE": "Lord Hope of Craighead; Lord Hoffmann; Lord Rodger of Earlsferry; Lord Walker of Gestingthorpe; Baroness Hale of Richmond",
    "CIT": "[2009] UKHL 38",
    "FLAGS": [
        "Approved",
        "Hale",
        "Hoffmann"
    ]
},
{
    "RELATED": [
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) Eliason v Henshaw",
        "(wl) Karsales (Harrow) Ltd v Wallis",
        "(wl) Crossley v Faithful & Gould Holdings",
        "(wl) Branca v Cobarro",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) Liverpool City Council v Irwin",
        "(wl) Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "(wl) Canada Steamship Lines Ltd v The King",
        "(wl) Scally v Southern Health and Social Services Board",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd"
    ],
    "COUNSEL": "For the appellants: Richard Snowden QC, Eamon Courtenay SC (Belize Bar). For the respondents: David Oliver QC.",
    "COURT": "UKPC",
    "SUMMARY": [
        "In every case in which it was said that some provision ought to be implied in a contract, the question for the court would be whether such a provision would spell out in express words what the contract, read against the relevant background, would reasonably be understood to mean."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Company Law &mdash; Articles of Association &mdash; Belize &mdash; Directors &mdash; Implied Terms &mdash; Interpretation &mdash; Vacation of Office",
    "CITATION": "Attorney General of Belize v Belize Telecom Ltd [2009] UKPC 10",
    "YEAR": "2009",
    "ABSTRACT": [
        "The appellants (X) appealed against a decision of the Court of Appeal of Belize on the construction of an article in the articles of association of a company (B) which had been formed to take over the undertaking of the Belize Telecommunications Authority.",
        "The article provided as follows: &#8220;The holder of the Special Share shall so long as it is the holder of C Ordinary shares amounting to 37.5% or more of the issued share capital of the Company be entitled at any time by written notice served upon the Company to appoint two of the Directors designated C Directors and by like notice to remove any Director so appointed and appoint another in his or her place&#8221;. The first respondent (R) acquired from the Belize Government the special share referred to in the article and a majority of the issued share capital. It appointed eight directors, including two special C directors. R pledged the ordinary shares to the Government to secure borrowings which had financed the purchase. Within less than a year, however, it defaulted on its obligations. Pursuant to the pledge agreement, the Government took back a substantial number of the ordinary shares. The result was that R was left with the special share and C shares amounting to less than 37.5 per cent of the issued share capital. The question which then arose was whether the two special C directors appointed by R remained members of the board. Under the articles, the only person who had the power to remove them was the person who would have had the power to appoint them, namely a special shareholder holding C shares amounting to 37.5 per cent of the issued share capital. But the result of R&#8217;s default was that no such person existed, nor was there any express provision in the articles that in such circumstances a special C director vacated office. The Court of Appeal rejected X&#8217;s contention that the articles should be construed as providing by implication that a director appointed by virtue of a specified shareholding would vacate his office if there was no longer any holder of such a shareholding."
    ],
    "CATEGORIES": [
        "Contracts Other Related Subjects: Company Law",
        "Articles of Association",
        "Belize",
        "Directors",
        "Implied Terms",
        "Interpretation",
        "Vacation of Office"
    ],
    "HELD": [
        "Appeal allowed.",
        "(1) It was appropriate to make some general observations about the process of implying terms into a contract. The proposition that the implication of a term was an exercise in the construction of the relevant instrument as a whole was not only a matter of logic (as a court had no power to alter what the instrument meant) but also well supported by authority. In every case in which it was said that some provision ought to be implied in an instrument, the question for the court would be whether such a provision would spell out in express words what the instrument, read against the relevant background, would reasonably be understood to mean. It would be noticed from Lord Pearson&#8217;s speech in Trollope &amp; Colls Ltd v North West Metropolitan Regional Hospital Board [1973] 1 W.L.R. 601 that that question could be reformulated in various ways which a court might find helpful in providing an answer - the implied term had to &#8220;go without saying&#8221;, it had to be &#8220;necessary to give business efficacy to the contract&#8221; and so on - but those were not to be treated as different or additional tests. There was only one question, namely what the instrument, read as a whole against the relevant background, would reasonably be understood to mean. In BP Refinery (Westernport) Pty Ltd v Shire of Hastings 180 C.L.R. 266, Lord Simon of Glaisdale had said that the following conditions had to be met before a term could be implied: it had to be reasonable and equitable; it had to be necessary to give business efficacy to the contract, so that no term would be implied if the contract was effective without it; it had to be so obvious that &#8220;it [went] without saying&#8221;; it had to be capable of clear expression; further, it had not to contradict any express term of the contract. That list was best regarded, not as series of independent tests which had each to be surmounted, but rather as a collection of different ways in which judges had tried to express the central idea that the proposed implied term had to spell out what the contract actually meant, or in which they had explained why they did not think that it did so, Trollope, BP Refinery, Equitable Life Assurance Society v Hyman [2002] 1 A.C. 408 and Moorcock, The (1889) 14 P.D. 64 considered. (2) The Court of Appeal had been wrong not to imply the term argued for by X into the article. The implication was required to avoid defeating what appeared to have been the overriding purpose of the machinery of appointment and removal of directors, namely to ensure that the board reflected the appropriate shareholder interests in accordance with the scheme laid out in the articles."
    ],
    "NUMBER": "442",
    "TYPE": "Headnotes",
    "NAME": "(wl) Attorney General of Belize v Belize Telecom Ltd",
    "JUDGE": "Lord Hoffmann; Lord Rodger of Earlsferry; Baroness Hale of Richmond; Lord Carswell; Lord Brown of Eaton-under-Heywood",
    "CIT": "[2009] UKPC 10",
    "FLAGS": [
        "Criticised",
        "Hale",
        "Hoffmann"
    ]
},
{
    "RELATED": [
        "(wl) Solle v Butcher",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Scally v Southern Health and Social Services Board",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Karsales (Harrow) Ltd v Wallis",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Errington v Errington and Woods",
        "(wl) Crossley v Faithful & Gould Holdings",
        "(wl) City and Westminster Properties v Mudd",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord"
    ],
    "YEAR": "1977",
    "COURT": "UKHL",
    "SUMMARY": [
        "Implied obligations; liability in tower-blocks; maintenance of common parts",
        "Where the landlords of multi-storey dwellings retain control of the common parts of the buildings, there is by necessary implication an obligation on them to take reasonable care to maintain the common stairs and their lighting, the lifts and communal rubbish chutes in reasonable repair, and that obligation can only be avoided by express exclusion in the contract of letting. In an action brought by the council for possession of a maisonette on the ninth floor of a 15- storey tower block, the tenants, who had withheld rent in protest against the appalling state of repair of, in particular, the lifts and staircases in the building, counterclaimed for damages for breach of a duty to repair and maintain the common parts of the building. The council had made repeated efforts at considerable expense to keep the lifts in working order and to provide safe access to the maisonettes but their efforts had been frustrated by incessant vandalism. The county court judge awarded nominal damages for breach of an implied duty to keep the common parts in repair. On appeal, the Court of Appeal held, Lord Denning M.R. dissenting, that there was no such duty. On appeal to the House of Lords, held, allowing the appeal, that where an essential means of access to units in a building was retained in the landlord&#8217;s occupation, then unless the obligation to maintain them was clearly placed on the tenants, the nature of the contract and circumstances required that it should be placed on the landlord. The obligation, however, was to take reasonable care to keep the means of access in reasonable repair and usability with the recognition that the tenants had the responsibilities of a reasonable set of tenants, and there had not been shown to be any breach of such obligation by the council. (Decision of C.A. varied; Miller v Hancock [1893] 2 Q.B. 177 approved in part; Lister v Romford Ice and Cold Storage Co Ltd [1957] A.C. 555 applied, De Meza v Ve Ri Best Manufacturing Co 160 E.G. 364 applied and Penn v Gatenex Co [1958] 2 Q.B. 210 applied; Huggett v Miers [1908] 2 K.B. 278 distinguished and Devine v London Housing Society Ltd [1950] 2 All E.R. 1173 distinguished Moorcock, The (1889) 14 P.D. 64 considered)."
    ],
    "CATEGORY": "Landlord and Tenant &mdash; Access &mdash; Flats &mdash; Implied Terms &mdash; Repairs &mdash; Tenancies",
    "JUDGE": "Lord Wilberforce; Lord Cross of Chelsea; Lord Salmon; Lord Edmund-Davies; Lord Fraser of Tullybelton",
    "CATEGORIES": [
        "Landlord and Tenant",
        "Access",
        "Flats",
        "Implied Terms",
        "Repairs",
        "Tenancies"
    ],
    "NUMBER": "443",
    "TYPE": "Headnotes",
    "NAME": "(wl) Liverpool City Council v Irwin",
    "CITATION": "Liverpool City Council v Irwin [1977] AC 239",
    "CIT": "[1977] AC 239",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Hedley Byrne & Co Ltd v Heller & Partners",
        "(wl) Caparo Industries plc v Dickman",
        "(wl) Crossley v Faithful & Gould Holdings",
        "(wl) Edmonds v Lawson",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "(wl) McRae v Commonwealth Disposals Commission",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Henderson v Merrett Syndicates",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) Karsales (Harrow) Ltd v Wallis",
        "(wl) Liverpool City Council v Irwin"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Contract of employment; incorporating statutory superannuation scheme; failure to inform employees of rights; whether implied term requiring notification of such rights; whether claims time barred",
        "Where the terms of an employee&#8217;s contract had not been negotiated with the individual employee but resulted from negotiations with a representative body or were otherwise incorporated by reference, and a particular term of the contract made available to the employee a valuable right contingent upon his taking action to avail himself of its benefit and the employee could not reasonably be expected to be aware of the term, it was an implied term of the contract that the employer was under an obligation to take reasonable steps to bring the term in question to the employee&#8217;s attention. Ps were medical practitioners employed by Ds in Northern Ireland under contracts of employment which incorporated the regulations from time to time in force governing superannuation rights and liabilities of persons employed in the Health Service. Under the 1962 Regulations an employee had to complete 40 years&#8217; contributory service to qualify for a full pension. The 1974 Regulations gave employees the right to purchase &#8220;added years&#8221; on certain terms, to qualify for a full pension. The right was exercisable within 12 months of February 10, 1975, by persons already employed and within 12 months by persons taking up employment thereafter. There was a discretion to extend the 12-month time limit and to vary the terms of purchase when the time limit was extended. The 1983 Regulations removed this discretion and substituted a new less favourable right to purchase. Ps were not given notice of their right to purchase &#8220;added years&#8221; and accordingly failed to take up their rights before the 1983 Regulations came into force. Ps brought claims against Ds claiming an implied breach of contract and breach of statutory duty under s.4(1) of the 1965 Act. At trial the claims based on breach of statutory duty were abandoned. The judge dismissed the other claims. The Court of Appeal of Northern Ireland permitted Ps to revive the claims based on breach of statutory duty and allowed the appeal."
    ],
    "CATEGORY": "Employment &mdash; Collective Bargaining &mdash; Contract of Employment &mdash; Duty of Care &mdash; Economic Loss &mdash; Implied Terms",
    "CITATION": "Scally v Southern Health and Social Services Board [1992] 1 AC 294",
    "YEAR": "1992",
    "CATEGORIES": [
        "Employment",
        "Collective Bargaining",
        "Contract of Employment",
        "Duty of Care",
        "Economic Loss",
        "Implied Terms"
    ],
    "HELD": [
        "dismissing Ds&#8217; appeal, that (1) where the terms of an employee&#8217;s contract of employment had not been negotiated with the individual employee but resulted from negotiations with a representative body or were otherwise incorporated by reference, and a particular term of the contract made available to the employee a valuable right contingent upon his taking action to avail himself of its benefit and the employee could not, in all the circumstances, reasonably be expected to be aware of the term unless it was drawn to his attention, it was an implied term of the contract that the employer was under an obligation to take reasonable steps to bring it to the attention of the employee. Accordingly, there was such an implied term in Ps&#8217; contract of which Ds were in breach; (2) the actions were not time-barred because Ds had been in breach of a continuing obligation to bring the right to purchase &#8220;added years&#8221; to Ps&#8217; attention under the 1974 Regulations until they were superseded by the 1983 Regulations. Per curiam: a breach by an employer of the duty imposed by s.4(1) of the 1965 Act to give an employee written particulars of the terms of his employment is remediable only by recourse to an industrial tribunal as provided by s.5 and confers no civil right of action in the employee founding in damages."
    ],
    "NUMBER": "444",
    "TYPE": "Headnotes",
    "NAME": "(wl) Scally v Southern Health and Social Services Board",
    "JUDGE": "Lord Lowry; Lord Jauncey of Tullichettle; Lord Goff of Chieveley; Lord Roskill; Lord Bridge",
    "CIT": "[1992] 1 AC 294",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Scally v Southern Health and Social Services Board",
        "(wl) Dresdner Kleinwort Ltd v Attrill",
        "(wl) Edmonds v Lawson",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "(wl) Karsales (Harrow) Ltd v Wallis",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) Liverpool City Council v Irwin",
        "(wl) Caparo Industries plc v Dickman",
        "(wl) Carlill v Carbolic Smoke Ball Company",
        "(wl) McRae v Commonwealth Disposals Commission"
    ],
    "COUNSEL": "For the appellant: A White QC. For the defendant: J Cavanagh QC, D Oudkerk.",
    "COURT": "EWCA",
    "SUMMARY": [
        "It was not an implied term of every contract of employment that an employer ought to take reasonable care of an employee&#8217;s economic well being.",
        "C appealed against a decision dismissing his claim for damages for breach of an implied term of his contract of employment with F. C was a senior employee and director of F. Under his contract of employment he was entitled, if absent from work due to illness, to be paid his full salary for up to six months&#8217; absence and thereafter such remuneration as the board of F might in its discretion allow. He was a member of F&#8217;s long term disability insurance scheme, under which he was entitled, so long as he remained an employee of F, to the payment of benefits in the event that he was &#8220;totally unable by reason of sickness....to follow his occupation&#8221;, and thereafter to payment of such benefits as the scheme&#8217;s insurer might think fit. C suffered a nervous breakdown which rendered him unfit for further work and he consequently submitted a claim under the scheme. Terms were discussed between C and F in relation to C&#8217;s retirement, as a result of which C wrote a letter, in terms suggested by F, in which he tendered his resignation with effect from June 1997. As a consequence of that letter C ceased to be entitled under the scheme to payments of benefit as of right after June 1997, and the scheme insurer only continued to make discretionary payments until June 1998. C sought damages representing past and future loss of benefit on the basis that F had acted in breach of an implied term of his contract of employment to take reasonable care of C&#8217;s economic well being by (i) asking him to submit a resignation letter knowing the effect that that would have on C&#8217;s right to benefits under the scheme, or (ii) failing to warn him of the effect that the letter would have on his entitlement to those benefits."
    ],
    "CATEGORY": "Employment Other Related Subjects: Contracts &mdash; Contract of Employment &mdash; Early Retirement &mdash; Employers' Duties &mdash; Ill Health &mdash; Implied Terms",
    "CITATION": "Crossley v Faithful &amp; Gould Holdings [2004] EWCA Civ 293",
    "YEAR": "2004",
    "CATEGORIES": [
        "Employment Other Related Subjects: Contracts",
        "Contract of Employment",
        "Early Retirement",
        "Employers' Duties",
        "Ill Health",
        "Implied Terms"
    ],
    "HELD": [
        "dismissing the appeal, that the judge had been right to reject the proposition that it was an implied term of every contract of employment that an employer ought to take reasonable care of an employee&#8217;s economic well being. In deciding whether such a term was to be implied, it was better to focus on questions of reasonableness, fairness and the balancing of competing policy considerations rather than on the elusive concept of &#8220;necessity&#8221;. The implication of such a term would introduce a major extension of the relevant law, when in the recent decisions of Scally v Southern Health and Social Services Board [1992] 1 A.C. 294 and Spring v Guardian Assurance Plc [1995] 2 A.C. 296 the House of Lords had refused to do so. Secondly, such an implied term would impose an unfair and unreasonable burden upon employers, Scally , Spring , University of Nottingham v Eyett (No.1) [1999] 2 All E.R. 437 and Hagen v ICI Chemicals &amp; Polymers Ltd [2002] I.R.L.R. 31 applied, Outram v Academy Plastics Ltd [2001] I.C.R. 367 considered, Reid v Rush &amp; Tompkins Group [1990] 1 W.L.R. 212 doubted. On the evidence, it was clear that C had decided to retire on his own initiative. F had not caused or contributed to that decision. It was equally clear that F was reasonably entitled to conclude that C knew, or reasonably had open to him the means of finding out, the terms of the scheme, including those as to cessation of the right to benefit on termination of employment."
    ],
    "NUMBER": "445",
    "TYPE": "Headnotes",
    "NAME": "(wl) Crossley v Faithful & Gould Holdings",
    "JUDGE": "Sir Andrew Morritt VC; Dyson LJ; Thomas LJ",
    "CIT": "[2004] EWCA Civ 293",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) The Brimnes",
        "(wl) Koufos v Czarnikow Ltd (The Heron II)",
        "(wl) Couchman v Hill",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Carriage by sea; charterparty; warranty of seaworthiness",
        "By a time charterparty, charterers hired a ship &#8220;. . . she being in every way fitted for ordinary cargo service.&#8221; The owners were to &#8220;maintain her in a thoroughly efficient state in hull and machinery during service.&#8221; The ship was delivered to the charterers in February 1957 in reasonably good condition, but chiefly owing to an inadequate engine room staff, there were serious breakdowns on the first voyage, resulting in lengthy delays and considerable expense on repairs. In June 1957, the charterers, who had no reasonable grounds for thinking that the vessel could be made seaworthy before September 1957, repudiated the contract. The ship was in fact made thoroughly seaworthy by the middle of September, and the owners sued the charterers for wrongful repudiation of the charterparty. Salmon, J. held that the owners were entitled to damages. The charterers appealed."
    ],
    "CATEGORY": "Shipping &mdash; Charterparties &mdash; Seaworthiness &mdash; Warranties",
    "CITATION": "Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd [1962] 2 QB 26",
    "YEAR": "1962",
    "CATEGORIES": [
        "Shipping",
        "Charterparties",
        "Seaworthiness",
        "Warranties"
    ],
    "HELD": [
        "although the owners were admittedly in breach of their obligation to deliver a seaworthy ship, seaworthiness was not a condition of the charterparty the breach of which entitled the charterers at once to repudiate; since, therefore, the delays caused by the breakdowns and repairs were not sufficient for the contract to be frustrated, the charterers&#8217; claim failed and the appeal must be dismissed. Havelock v Geddes (1809) 10 Ea. 555 applied; Davidson v Gwynne 104 E.R. 149 applied; Tarrabochia v Hickie 156 E.R. 1168 applied; J&amp;E Kish v Charles Taylor &amp; Sons &amp; Co [1912] A.C. 604 applied; Jackson v Union Marine Insurance Co Ltd (1874-75) L.R. 10 C.P. 125 considered; Universal Cargo Carriers Corp v Citati (No.1) [1957] 1 W.L.R. 979 approved and applied. Per Diplock, L.J.: The shipowner&#8217;s undertaking to deliver a seaworthy ship is neither a &#8220;condition&#8221; nor a &#8220;warranty&#8221; but one of that large class of contractual undertakings one breach of which may have the same effect as that ascribed to a breach of &#8220;condition&#8221; under the Sale of Goods Act 1893 and a different breach of which may have only the same effect as that ascribed to a breach of &#8220;warranty&#8221; under that Act."
    ],
    "NUMBER": "446",
    "TYPE": "Headnotes",
    "NAME": "(wl) Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd",
    "JUDGE": "Sellers LJ; Upjohn LJ; Diplock LJ",
    "CIT": "[1962] 2 QB 26",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Carlill v Carbolic Smoke Ball Co",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Davis Contractors Ltd v Fareham Urban District Council",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) Photo Production Ltd v Securicor Transport"
    ],
    "YEAR": "1981",
    "COURT": "UKHL",
    "SUMMARY": [
        "Terms; notice of readiness to load; whether notice given in time",
        "In general, time is of the essence in a mercantile contract, and a term as to time of performance of an obligation by one party as a condition precedent to the performance of an obligation by the other party will generally be treated as a condition. By a contract dated January 30, 1974, buyers agreed to purchase 15,000 tons of soya bean meal, shipment to take place in consignments of 5,000 tons in May, June and July 1975. By cl.7 of the Grain and Feed Trade Association Ltd.&#8217;s standard form contract 119, which was incorporated, it was provided that &#8220;Period of delivery during May 1975 at buyers&#8217; call. Buyers shall give at least 15 days&#8217; notice of probable readiness of vessel.&#8221; The buyers gave notice under cl.8 extending the period for delivery to one calendar month. The last day upon which the sellers could ship the goods therefore became June 30, 1975, and the last day for the buyers to give notice was June 12. The buyers did not give notice until June 17. The judge held that the term as to the time for giving notice was not a condition and that in any event there had been no breach. The Court of Appeal allowed the sellers&#8217; appeal. On appeal to the House of Lords, held, that, in general, time was of the essence in a mercantile contract; in such a contract, where a term had to be performed by one party as a condition precedent to the ability of the other party to perform another term, especially an essential term such as the nomination of a single loading port, the term as to time for performance of the former obligation would in general fall to be treated as a condition. cl.7 was a condition since until notice was given the sellers could not know which loading port to nominate ( Hongkong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd (The Hongkong Fir) [1962] 2 Q.B. 26 and United Scientific Holdings Ltd v Burnley BC [1978] A.C. 904 considered; Toprak Mahsulleri Ofisi v Finagrain Compagnie Commerciale Agricole et Financiere SA [1979] 2 Lloyd&#8217;s Rep. 98 approved)."
    ],
    "CATEGORY": "Sale of Goods &mdash; Contract Terms &mdash; Notice &mdash; Time Limits",
    "JUDGE": "Lord Wilberforce; Lord Fraser of Tullybelton; Lord Lowry; Lord Roskill; Lord Scarman",
    "CATEGORIES": [
        "Sale of Goods",
        "Contract Terms",
        "Notice",
        "Time Limits"
    ],
    "NUMBER": "447",
    "TYPE": "Headnotes",
    "NAME": "(wl) Bunge Corporation v Tradax Export SA",
    "CITATION": "Bunge Corporation v Tradax Export SA [1981] 1 WLR 711",
    "CIT": "[1981] 1 WLR 711",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "(wl) Royscot Trust v Rogerson",
        "(wl) Scally v Southern Health and Social Services Board",
        "(wl) Attorney General of Belize v Belize Telecom Ltd",
        "(wl) Liverpool City Council v Irwin",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Crossley v Faithful & Gould Holdings",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "(wl) Schawel v Reade",
        "(wl) Ocean Tramp Tankers Corporation v V"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Breach of condition",
        "In a hire-purchase agreement, when the hirer has himself previously seen and examined the goods and made application for hire-purchase on the basis of his inspection of them, there is an obligation on the lender to deliver the goods in substantially the same condition as when they were seen, and it makes no difference that the lender is a finance company which has bought the goods in the interval without seeing them. The lender must know, from the ordinary course of business, that the hirer applies on the faith of his inspection and on the understanding that the goods will be delivered in substantially the same condition, and it is an implied term of the agreement that pending delivery the goods will be kept in suitable order and repair for the purposes of the bailment. Nor can the lender rely on an exempting clause if he delivers something &#8220;different in kind&#8221; from that contracted for, or if he breaks a &#8220;fundamental term&#8221; or a &#8220;fundamental contractual obligation&#8221;: in other words, a breach which goes to the root of the contract disentitles the party in breach from relying on an exempting clause. S. showed the defendant a second-hand Buick car. The defendant found it to be in excellent condition and decided to buy it, but as he had not the money to pay the price asked he arranged to buy it through M F, Ltd, a hire-purchase finance company, whose forms the defendant duly completed. In due course the forms were submitted to M F, Ltd, through the plaintiff company. M F, Ltd accepted the application, and the transaction was concluded by the plaintiff company buying the car from S and reselling it to M F, Ltd, and by M F, Ltd then letting it out an hire-purchase terms to the defendant. These terms provided, inter alia: &#8220;No condition or warranty that the vehicle is roadworthy, or as to its age, condition or fitness for any purpose is given by the owner or implied herein.&#8221; When S delivered the car to the defendant it was in a deplorable condition and would not go, and he refused to accept it. It was then towed away to S&#8217;s premises. M F, Ltd assigned their rights under the agreement to the plaintiffs, and the plaintiffs brought proceedings against the defendant to recover unpaid hiring charges, interest and damages. The defendant by his defence admitted the agreement between himself and M F, Ltd, but claimed that it was a term and condition, express or implied, thereof that the car to be hired thereunder should correspond with the car submitted by S."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Consumer Law &mdash; Breach of Contract &mdash; Conditions of Sale &mdash; Hire Purchase &mdash; Implied Terms",
    "CITATION": "Karsales (Harrow) Ltd v Wallis [1956] 1 WLR 936",
    "YEAR": "1956",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Consumer Law",
        "Breach of Contract",
        "Conditions of Sale",
        "Hire Purchase",
        "Implied Terms"
    ],
    "HELD": [
        "the lender was in breach of the implied obligation to deliver the car in substantially the same condition as when the defendant saw it first, and, that breach going to the root of the contract, the lender was not entitled to rely on the exemption clause in the agreement, so that he was not entitled to succeed; in any case, when goods are let on hire-purchase and there is a refusal by the hirer to take them, the proper remedy is damages for failure to accept delivery, and, since the assignment by M F, Ltd to the plaintiff did not cover a claim for damages, the plaintiff company was on that ground debarred from succeeding. Alexander v Railway Executive [1951] 2 K.B. 882 considered; and Smeaton Hanscomb &amp; Co v. Sassoon I Setty, Son &amp; Co (No.1) [1953] C.L.Y. 144 considered; Andrews Bros (Bournemouth) Ltd v Singer &amp; Co Ltd [1934] 1 K.B. 17 considered; National Cash Register Co Ltd v Stanley [1921] 3 K.B. 292 followed."
    ],
    "NUMBER": "448",
    "TYPE": "Headnotes",
    "NAME": "(wl) Karsales (Harrow) Ltd v Wallis",
    "JUDGE": "Denning LJ; Birkett LJ; Parker LJ",
    "CIT": "[1956] 1 WLR 936",
    "FLAGS": [
        "Criticised",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Nicolene v Simmonds",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Exclusion clause; fundamental breach",
        "The so-called doctrine of fundamental breach does not operate so as to prevent reliance upon an exclusion of liability clause upon the contract being brought to an end. The defendants contracted with the plaintiffs to provide a night- patrol service at the latter&#8217;s factory premises. The contract excluded liability on the defendants&#8217; part for &#8220;any injurious act or default of any employee of the (defendants) unless such act or default could have been foreseen and avoided by the exercise of due diligence on the part of the employer; nor in any event shall the company be held responsible for any loss suffered through fire or any other cause except in so far as is solely attributable to the negligence of the company&#8217;s employees acting within the cause of their employment.&#8221; One of the defendants&#8217; employees who had been satisfactorily employed by them for some three months deliberately started a small fire in the factory, the fire getting out of control and burning down the factory. The Court of Appeal reversed the trial judge&#8217;s ruling that the defendants could rely upon the contract as excluding their liability."
    ],
    "CATEGORY": "Contracts &mdash; Contract Terms &mdash; Contractual Liability &mdash; Exclusion Clauses &mdash; Fundamental Breach &mdash; Security Companies",
    "CITATION": "Photo Production Ltd v Securicor Transport [1980] AC 827",
    "YEAR": "1980",
    "CATEGORIES": [
        "Contracts",
        "Contract Terms",
        "Contractual Liability",
        "Exclusion Clauses",
        "Fundamental Breach",
        "Security Companies"
    ],
    "HELD": [
        "allowing the defendants&#8217; appeal, that whether an exclusion clause was apt to exclude or limit liability was a matter of construction of the contract; that the fact that a breach may be such as to justify the innocent party in terminating or treating as repudiated the contract did not mean that the terms of the contract in so far as they governed liability were not to be enforced; that, generally, parties to a contract, when they bargained on equal terms, should be at liberty to apportion liability in the contract as they saw fit; and that the wording of the exclusion clause in the instant case was adequate to exclude liability for what occurred. (Decision of Court of Appeal reversed Suisse Atlantique Societe d&#8217;Armement SA v NV Rotterdamsche Kolen Centrale [1967] 1 A.C. 361 ; Charterhouse Credit Co v Tolly [1963] 2 Q.B. 683 , Harbutt&#8217;s Plasticine Ltd v Wayne Tank &amp; Pump Co Ltd [1970] 1 Q.B. 447 and Wathes (Western) Ltd v Austins (Menswear) Ltd [1976] 1 Lloyd&#8217;s Rep. 14 overruled)."
    ],
    "NUMBER": "449",
    "TYPE": "Headnotes",
    "NAME": "(wl) Photo Production Ltd v Securicor Transport",
    "JUDGE": "Lord Wilberforce; Lord Diplock; Lord Salmon; Lord Keith of Kinkel; Lord Scarman",
    "CIT": "[1980] AC 827",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Nicolene v Simmonds",
        "(wl) Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "(wl) Eliason v Henshaw",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Branca v Cobarro",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Olley v Marlborough Court Hotel",
        "(wl) Bank of Credit and Commerce International SA v Ali"
    ],
    "YEAR": "1952",
    "COURT": "UKPC",
    "SUMMARY": [
        "Exemption clause",
        "The duty of a court in approaching the consideration of clauses which purport to exempt one party to a contract from liability may be summarised as follows: 1. If the clause contains language which expressly exempts A, the person in whose favour it is made, from the consequence of the negligence of his own servants, effect must be given to that provision. 2. If there is no express reference to negligence, the court must consider whether the words used are wide enough, in their ordinary meaning, to cover negligence on the part of the servants of A. If a doubt arises at this point, it must be resolved against A. 3. If the words used are wide enough for the above purpose, the court must then consider whether the head of damage may be based on some ground other than that of negligence. The other ground must not be so fanciful or remote that A cannot be supposed to have desired protection against it; but, subject to this qualification, the existence of a possible head of damage other than that of negligence is fatal to A even if the words used are, prima facie, wide enough to cover negligence on the part of his servants. The appellants, a Quebec company, presented a petition of right against the Crown, alleging that a fire in a freight shed occupied by the appellants under a lease from the Crown was caused by the negligence of the Crown&#8217;s servants and that goods to the value of half a million dollars, of which 40,000 dollars-worth of goods belonged to the appellant and the remainder to others, were destroyed. The fire occurred when servants of the Crown were doing repairs in the shed at the request of the appellants. Part of the work consisted of drilling a hole in a steel beam and for this purpose an oxy-acetylene cutting torch was used instead of a hand drill. Sparks from the torch fell on some bales of cotton waste in the shed and started a fire which destroyed the shed and all its contents. In answer to the petition the Crown denied negligence but alleged that, if they were guilty of negligence, cl. 7 of the lease exempted them from any liability to the appellants. Cl. 7 provided: &#8220;That the lessee shall not have any claim or demand against the lessor for . . . damage . . . to the said shed.. . or to any . . . goods . . . at any time . . . being . . . in the said shed.&#8221; The Crown also brought in the appellants as third parties to the petition of six other petitioners who had suffered loss in the fire, alleging that if the Crown were guilty of negligence the appellants were liable to indemnify the Crown against the consequences of its negligence under cl. 17 which provided: &#8220;That the lessee shall at all times indemnify . . . the lessor from and against all claims and demands loss costs damages actions suits or other proceedings. . . in any manner based upon occasioned by or attributable to the execution of these presents or any action. . . done. . . by virtue hereof . . .&#8221; It was shown that by the law of Quebec the lessor would be liable for damage to the shed without any negligence on his part if such damage were caused by an inherent defect in the shed, by the operations of a third party on adjacent land, or by the act of a trespasser. Held, (1) under cl. 7 the Crown had failed to limit its liability in respect of negligence in clear terms; (2) even if the words in cl. 17 &#8220;any action done by virtue hereof&#8221; could be applied to a negligent act done in the course of carrying out an obligation, the head of damage might be based on some ground other than that of negligence, and, for this reason and also because the Crown had failed to impose on the appellants in clear terms the burdensome obligation of an indemnity for the whole of the damage by the Crown however negligent its servants might be, the Crown&#8217;s claim for an indemnity under cl. 17 also failed. (Alderslade v Hendon Laundry Ltd [1945] K.B. 189 applied)."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Negligence &mdash; Canada &mdash; Crown Servants &mdash; Exclusion Clauses &mdash; Interpretation",
    "JUDGE": "Lord Porter; Lord Asquith of Bishopstone; Lord Cohen; Lord Morton of Henryton; Lord Normand",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Negligence",
        "Canada",
        "Crown Servants",
        "Exclusion Clauses",
        "Interpretation"
    ],
    "NUMBER": "450",
    "TYPE": "Headnotes",
    "NAME": "(wl) Canada Steamship Lines Ltd v The King",
    "CITATION": "Canada Steamship Lines Ltd v The King [1952] AC 192",
    "CIT": "[1952] AC 192",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Canada Steamship Lines Ltd v The King",
        "(wl) Couchman v Hill",
        "(wl) Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "(wl) McCullough v Lane Fox and Partners Ltd",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) BRS v Arthur Crutchley Ltd"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Conditions and warranties; exemption clause; course of dealing",
        "Three or four transactions in five years are probably not enough to establish a course of dealing. P telephoned D&#8217;s garage and asked if they would repair his car. D&#8217;s manager said that they would if P had it towed to the garage. While in the garage the car was damaged by a fire which started as a result of the garage&#8217;s negligence. On three or four occasions in the previous five years P had had repairs carried out at the garage and on each of those occasions had signed a form which, under the place for signature, stated &#8220;The Company is not responsible for damage caused by fire to customer&#8217;s cars on the premises.&#8221; In an action by P claiming damages for negligence, D contended that, although P had not signed the form on this occasion, the exemption clause thereon had been incorporated in the oral contract between them by a course of dealing, and that its effect was to exclude liability for negligently causing a fire while P&#8217;s car was in their care."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Negligence &mdash; Cars &mdash; Contract Terms &mdash; Exclusion Clauses &mdash; Negligence &mdash; Repairs",
    "CITATION": "Hollier v Rambler Motors (AMC) Ltd [1972] 2 QB 71",
    "YEAR": "1972",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Negligence",
        "Cars",
        "Contract Terms",
        "Exclusion Clauses",
        "Negligence",
        "Repairs"
    ],
    "HELD": [
        "that D were liable to P for their negligence because (1) they had not established a course of dealing and so the clause was not incorporated into the oral contract; and (2) even if it had been, the wording of the clause was not sufficiently plain to exclude liability for negligence. Per Salmon, L.J. In order to establish that a term has been implied into a contract by a course of dealing, it is not essential to show that the party charged had actual and not merely constructive knowledge of the term and with such actual knowledge had in fact assented to it. (Dictum of Denning, L.J. in Olley v Marlborough Court Ltd [1948] 1 All E.R. 955 applied, dicta of Scrutton, L.J. in Rutter v Palmer [1922] 2 K.B. 87 explained; and of Lord Greene M.R. in Alderslade v Hendon Laundry Ltd [1945] K.B. 189 explained; Turner v Civil Service Supply Association Ltd [1926] 1 K.B. 50 overruled and Fagan v Green &amp; Edwards Ltd [1926] 1 K.B. 102 overruled; dictum of Lord Devlin in McCutcheon v David MacBrayne Ltd [1964] 1 W.L.R. 125 disapproved)."
    ],
    "NUMBER": "451",
    "TYPE": "Headnotes",
    "NAME": "(wl) Hollier v Rambler Motors (AMC) Ltd",
    "JUDGE": "Salmon LJ; Stamp LJ; Latey J",
    "CIT": "[1972] 2 QB 71",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) Parker v Clark",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) McCullough v Lane Fox and Partners Ltd",
        "(wl) Edwards v Skyways",
        "(wl) Shogun Finance Ltd v Hudson",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd"
    ],
    "COURT": "EWHC",
    "SUMMARY": [
        "A misrepresentation of law was actionable in the light of the House of Lords decision in Kleinwort Benson Ltd v Lincoln City Council [1999] 2 A.C. 349, as a judge at first instance was bound to refuse to apply previous decisions that otherwise would be binding if they were inconsistent, although not expressly overruled, with a subsequent decision of the House of Lords.",
        "P sought to recover damages for misrepresentation from H following the sale of commercial property used as a car park by NCP. The land in question had been licensed to NCP pursuant to an agreement in 1988. The terms upon which the property was occupied satisfied all the requirements prescribed by Street v Mountford [1985] A.C. 809, namely exclusive possession for a term at a rent with the effect that a business tenancy agreement was created pursuant to the Landlord and Tenant Act 1954. Although aware of the likelihood that a tenancy existed, the sales documentation drawn up for an auction sale of the premises was careful to refer to the land in terms that suggested that only a licence agreement existed. H maintained that any misrepresentation was a misrepresentation as to law which was not actionable."
    ],
    "CATEGORY": "Contracts &mdash; Commercial Property &mdash; Misrepresentation &mdash; Mistake of Law &mdash; Sale By Auction",
    "CITATION": "Pankhania v Hackney Borough Council [2002] EWHC 2441 (Ch)",
    "YEAR": "2002",
    "CATEGORIES": [
        "Contracts",
        "Commercial Property",
        "Misrepresentation",
        "Mistake of Law",
        "Sale By Auction"
    ],
    "HELD": [
        "giving judgment for the claimant in part, that on a proper construction of the representations made in the catalogue, H, by its agents, had represented that the arrangement between H and NCP had the legal character of a licence and was terminable on three months notice. In view of the fact that the true legal character of NCP&#8217;s interest was a business tenancy protected under the 1954 Act there was a clear misrepresentation. The &#8220;misrepresentation of law&#8221; rule no longer existed following the decision of the House of Lords in Kleinwort Benson Ltd v Lincoln City Council [1999] 2 A.C. 349 and accordingly the misrepresentation was actionable, Kleinwort considered. The terminology used had been deliberate with the aim of concealing the existence of a protected tenancy. P had been induced to purchase in reliance upon the representation and it had been reasonable for him so to rely."
    ],
    "NUMBER": "452",
    "TYPE": "Headnotes",
    "NAME": "(wl) Pankhania v Hackney Borough Council",
    "JUDGE": "Rex Tedd QC",
    "CIT": "[2002] EWHC 2441 (Ch)",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) Nicolene v Simmonds",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Chappell & Co v Nestle Co Ltd",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd"
    ],
    "YEAR": "2002",
    "COURT": "EWCA",
    "SUMMARY": [
        "Certain conduct by a popular music group together with related documentation amounted to a series of continuing misrepresentations to the effect that the group was unaware that any member had declared an intention to leave before the minimum term of a tour sponsorship agreement expired."
    ],
    "CATEGORY": "Contracts &mdash; Misrepresentation &mdash; Music Industry &mdash; Sponsorship",
    "JUDGE": "Sir Andrew Morritt VC; Chadwick LJ; Rix LJ",
    "CATEGORIES": [
        "Contracts",
        "Misrepresentation",
        "Music Industry",
        "Sponsorship"
    ],
    "NUMBER": "453",
    "TYPE": "Headnotes",
    "NAME": "(wl) Spice Girls Ltd v Aprilia World Service BV",
    "CITATION": "Spice Girls Ltd v Aprilia World Service BV [2002] EWCA Civ 15",
    "CIT": "[2002] EWCA Civ 15",
    "COUNSEL": "For S: Ian Mill Q.C. and Vernon Flynn. For A: Andrew Sutcliffe Q.C."
},
{
    "RELATED": [
        "(wl) Caparo Industries plc v Dickman",
        "(wl) Henderson v Merrett Syndicates",
        "(wl) Scally v Southern Health and Social Services Board",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Eliason v Henshaw",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) McCullough v Lane Fox and Partners Ltd",
        "(wl) McRae v Commonwealth Disposals Commission",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) BRS v Arthur Crutchley Ltd",
        "(wl) Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis"
    ],
    "COUNSEL": "For the appellants: Gerald Gardiner QC, DGA Lowe. For the respondents: John Foster QC, JM Shaw, L Blom-Cooper, B Anns.",
    "COURT": "UKHL",
    "SUMMARY": [
        "In making a statement at the request of another, a duty of care would be owed by the representor to the inquirer if it was plain that in seeking information or advice from the representor the inquirer was reasonably trusting him to exercise such a degree of care as the circumstances required and the representor knew or ought to have known that the inquirer was doing so. If in those circumstances the representor gave information or advice which was negligent he would be liable for any pecuniary or personal damage caused to the inquirer, but where the representor had expressly excluded responsibility for reliance on his statement no liability arose."
    ],
    "CATEGORY": "Negligence &mdash; Advice &mdash; Banks &mdash; Duty of Care &mdash; Economic Loss &mdash; Negligent Misstatement &mdash; Professional Negligence &mdash; Reliance",
    "CITATION": "Hedley Byrne &amp; Co Ltd v Heller &amp; Partners [1964] AC 465",
    "YEAR": "1964",
    "ABSTRACT": [
        "The appellant company (H) appealed against the Court of Appeal&#8217;s decision that it could not recover damages arising from moneys lost in reliance on the credit reference given by the respondent bank (X) in respect of one of X&#8217;s customers (E).",
        "H was an advertising agent who had placed substantial orders for advertising space for E, for which H was personally liable. H had then enquired of X as to the creditworthiness of E, and in reliance on the representations H refrained from cancelling the orders to relieve its personal liability. H became doubtful about the financial position of E, and it sought a further reference &#8220;without responsibility&#8221; from X. X&#8217;s response to H, stated to be &#8220;for your private use and without responsibility on the part of the bank&#8221;, was that E was considered good for its ordinary business engagements. After that communication, H lost money when E went into liquidation. H sought to recover the money lost by a claim in negligence against X. By authority binding upon them, both the judge at first instance and the Court of Appeal considered themselves driven to the conclusion that no such action could lie in the absence of a contract or fiduciary relationship, and that no special relationship involving a duty of care could be inferred."
    ],
    "CATEGORIES": [
        "Negligence",
        "Advice",
        "Banks",
        "Duty of Care",
        "Economic Loss",
        "Negligent Misstatement",
        "Professional Negligence",
        "Reliance"
    ],
    "HELD": [
        "Appeal dismissed.",
        "(1) (Per Lord Reid) The principle in Donoghue v Stevenson [1932] A.C. 562 had no direct bearing on the instant case. Donoghue set out to reflect the standards of the reasonable man but reasonable people often stated opinions without taking care, so the law had to treat words and acts differently . It was clear that liability for negligent misstatement could not be founded on the Donoghue principle alone; something more was required, namely that the representor had expressly or impliedly undertaken responsibility for their statement, Donoghue considered. The decision in Derry v Peek (1889) 14 App. Cas. 337 had not established any universal rule that, in the absence of any contract, an innocent (not fraudulent) but negligent misrepresentation could not give rise to an action, Nocton v Lord Ashburton [1914] A.C. 932 applied, Derry considered. In the light of the decision in Robinson v National Bank of Scotland Ltd 1916 S.C. (H.L.) 154, concerning a duty of care arising from other &#8220;special relationships&#8221;,there was no logical stopping place short of all those relationships where the party seeking the advice was reasonably trusting the other to exercise such a degree of care as the circumstances required, and where the representor knew or should reasonably have known that the inquirer would rely on him, Robinson applied, Candler v Crane Christmas &amp; Co [1951] 2 K.B. 164 overruled, Le Lievre v Gould [1893] 1 Q.B. 491 not followed and Cann v Willson (1888) 39 Ch. D. 39 approved. The relevant question in the instant case was whether an undertaking to assume a duty to take care could be inferred. Since H&#8217;s inquiry had been requested &#8220;without responsibility&#8221; from X, it was clear that no such duty could be inferred. (2) (Per Lord Morris) It should be regarded as settled that if someone possessed of a special skill undertook, irrespective of contract, to apply that skill for the assistance of another person who relied upon such skill, a duty of care should arise. That the service was given by words made no difference. Where a person was so placed that others could reasonably rely on his skill, and that person allowed his advice to be passed on to another whom he knew or should have known would rely on it, a duty of care also arose. (3) (Per Lord Hodson) A banker giving references as to credit-worthiness was not under a legal obligation to do more than to give honest answers to the best of his actual knowledge. However, in accordance with Lord Morris, where a person gave advice in the knowledge that it would reasonably be relied upon, a duty of care arose. (4) (Per Lord Devlin) The problem in issue was a by-product of the doctrine of consideration in English law. The special relationship required to establish a duty of care arose in relationships &#8220;equivalent to contract&#8221; where there was an assumption of responsibility which, but for the absence of consideration, would constitute a contract. The responsibility was not one implied by law, but one which was voluntarily accepted either generally where a general relationship was created or specifically in relation to a particular transaction. Where there was a general relationship (such as that of solicitor/client, banker/customer, although there were others yet to be established) it was unnecessary to prove any more than its existence, and the duty followed. Where a particular relationship was created ad hoc (as in the instant case) the facts had to be examined to see if there was an express or implied undertaking of responsibility. (5) (Per Lord Pearce) To import a duty of care, the relationship between the parties had normally to concern a business or professional transaction whose nature made clear the gravity of the inquiry."
    ],
    "NUMBER": "454",
    "TYPE": "Headnotes",
    "NAME": "(wl) Hedley Byrne & Co Ltd v Heller & Partners",
    "JUDGE": "Lord Reid; Lord Morris; Lord Hodson; Lord Devlin; Lord Pearce",
    "CIT": "[1964] AC 465",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Hedley Byrne & Co Ltd v Heller & Partners",
        "(wl) Henderson v Merrett Syndicates",
        "(wl) Scally v Southern Health and Social Services Board",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) BRS v Arthur Crutchley Ltd",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Eliason v Henshaw",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) McRae v Commonwealth Disposals Commission",
        "(wl) McCullough v Lane Fox and Partners Ltd",
        "(wl) Oscar Chess Ltd v Williams"
    ],
    "COUNSEL": "For C: Christopher Bathurst Q.C., Michael Brindle and Craig Orr. For TR: Peter Goldsmith Q.C. and Stephen Moriarty.",
    "COURT": "UKHL",
    "SUMMARY": [
        "Professional negligence; Auditors&#8217; report to shareholders; No duty of care owed to shareholders or investors",
        "TR, a firm of accountants, appealed against a decision of the Court of Appeal (Times, August 5, 1988) that they owed a duty of care to shareholders when preparing an auditor&#8217;s report as required by statute. C had brought an action against D and another, directors of F, a public company in respect of which the report had been prepared, alleging negligent misstatement. C had purchased shares in F as part of a take over bid and, placing reliance on TR&#8217;s report, had bought further shares. The report was subsequently proved to have to given a false picture of F&#8217;s profits and C suffered a loss. The Court of Appeal had drawn a distinction between existing shareholders, to whom TR owed a duty and potential investors in respect of whom no duty was owed. TR submitted that it did not owe a duty to either group, since the necessary degree of proximity between the parties was missing."
    ],
    "CATEGORY": "Negligence &mdash; Auditors &mdash; Duty of Care &mdash; Economic Loss &mdash; Professional Negligence &mdash; Shareholders",
    "CITATION": "Caparo Industries plc v Dickman [1990] 2 AC 605",
    "YEAR": "1990",
    "CATEGORIES": [
        "Negligence",
        "Auditors",
        "Duty of Care",
        "Economic Loss",
        "Professional Negligence",
        "Shareholders"
    ],
    "HELD": [
        "allowing the appeal, that no duty was owed either to existing shareholders, or to potential investors, since for a duty to arise, three factors had to exist, namely: (1) a sufficient degree of proximity in the relationship between the parties; (2) the knowledge that the report would be communicated to the shareholder or investor in connection with a particular transaction in the contemplation of the parties, Smith v Eric S Bush (A Firm) [1990] 1 A.C. 831 applied, and (3) the shareholder or investor would place reliance on the report when deciding whether to enter into the relevant transaction. Auditors of a public company routinely preparing accounts, in contrast to the preparation of a report for a specific purpose for an identified party, owed no duty to the public at large who might place reliance on company accounts when making investment decisions. To impose such a liability would open the floodgates to an indeterminately wide class of people, JEB Fasteners Ltd v Marks Bloom &amp; Co [1981] 3 All E.R. 289 distinguished. Furthermore, it was necessary to impose some limit on liability for economic loss arising in the absence of a contractual relationship between the parties."
    ],
    "NUMBER": "455",
    "TYPE": "Headnotes",
    "NAME": "(wl) Caparo Industries plc v Dickman",
    "JUDGE": "Lord Jauncey of Tullichettle; Lord Oliver of Aylmerton; Lord Roskill; Lord Ackner; Lord Bridge of Harwich",
    "CIT": "[1990] 2 AC 605",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Hedley Byrne & Co Ltd v Heller & Partners",
        "(wl) Caparo Industries plc v Dickman",
        "(wl) Albert v Motor Insurers' Bureau",
        "(wl) Scally v Southern Health and Social Services Board",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) McCullough v Lane Fox and Partners Ltd",
        "(wl) Eliason v Henshaw",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) BRS v Arthur Crutchley Ltd",
        "(wl) Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "(wl) McRae v Commonwealth Disposals Commission",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd"
    ],
    "COUNSEL": "For members&#8217; agents: Bernard Eder Q.C., David Foxton and Christopher Butcher. For managing agents: Anthony Temple Q.C., John Rowland, Aiden Christie Houghton. For Names: Anthony Boswood Q.C., Geoffrey Vos Q.C., Stephen Moriarty, Marcus Smith, Jonathan Gaisman and David Lord.",
    "COURT": "UKHL",
    "SUMMARY": [
        "Lloyd&#8217;s underwriting agent; reliance by names on services; implied contractual terms of care and skill; whether tortious liability thereby excluded",
        "Where a person undertakes to perform professional or quasi- professional services for another, this commitment, where relied upon by the person on whose behalf these services are performed, may be sufficient to give rise to a duty of care in tort, regardless of the contractual relationship between the parties. Members of certain Lloyd&#8217;s syndicates brought an action against D, the underwriting agents who managed these syndicates, alleging that D had been negligent in the management of the syndicates. The relationships between the parties were governed by agency agreements, which contained implied terms as to the due care and skill to be exercised by D. The issues before the court were whether a duty of care in tort was owed, despite the contractual relationship between the parties, whether managing agents, who had been appointed as sub-agents by D owed such a duty of care and whether D were responsible for any lack of skill or care shown by the managing agents whom they had appointed. At first instance and appeal the issues were all decided in favour of P and D appealed to the House of Lords."
    ],
    "CATEGORY": "Negligence &mdash; Agents' Liabilities &mdash; Duty of Care &mdash; Insurance &mdash; Lloyd'S &mdash; Professional Negligence",
    "CITATION": "Henderson v Merrett Syndicates [1995] 2 AC 145",
    "YEAR": "1995",
    "CATEGORIES": [
        "Negligence",
        "Agents' Liabilities",
        "Duty of Care",
        "Insurance",
        "Lloyd'S",
        "Professional Negligence"
    ],
    "HELD": [
        "dismissing D&#8217;s appeal, that (1) the duty of exercising reasonable skill and care exists where a person undertakes to perform professional or quasi-professional services for another; (2) the undertaking of such duties, together with a reliance on them is sufficient to give rise to a duty of care in tort, unless this is precluded by contractual agreement between the parties; (3) D undertook to act as the underwriting agents of P and so were liable for any lack of skill or care on the part of the managing agents to whom they delegated their underwriting duties Hedley Byrne &amp; Co v Heller &amp; Partners [1964] A.C. 265, [1963] C.L.Y. 2416 applied; Midland Bank Trust Co Ltd v Hett Stubbs &amp; Kemp [1979] Ch. 384 approved."
    ],
    "NUMBER": "456",
    "TYPE": "Headnotes",
    "NAME": "(wl) Henderson v Merrett Syndicates",
    "JUDGE": "Lord Keith of Kinkel; Lord Goff of Chieveley; Lord Browne-Wilkinson; Lord Mustill; Lord Nolan",
    "CIT": "[1995] 2 AC 145",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) Henderson v Merrett Syndicates",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) BRS v Arthur Crutchley Ltd",
        "(wl) Hedley Byrne & Co Ltd v Heller & Partners",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) Royscot Trust v Rogerson",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Spice Girls Ltd v Aprilia World Service BV"
    ],
    "COUNSEL": "For M: Paul Morgan Q.C. and Philip Havers Q.C. For LF: Rupert Jackson Q.C. and Richard Lynagh.",
    "COURT": "EWCA",
    "SUMMARY": [
        "Professional negligence; estate agents; negligent misrepresentation as to size of land; duty of care; effect of disclaimer",
        "M, the purchaser of a property, appealed from a decision that he was not entitled to damages for negligent mis-statement against LF, a firm of estate agents, who had misrepresented the size of a plot of land adjoining the property. It was decided that a duty of care was established but that M had failed to show that he had suffered financial loss"
    ],
    "CATEGORY": "Negligence &mdash; Estate Agents &mdash; Misrepresentation &mdash; Negligence",
    "CITATION": "McCullough v Lane Fox and Partners Ltd 49 Con LR 124",
    "CATEGORIES": [
        "Negligence",
        "Estate Agents",
        "Misrepresentation",
        "Negligence"
    ],
    "HELD": [
        "appeal dismissed. LF did not owe a duty of care to M because they had included a disclaimer in their sales particulars which negatived the element of proximity and the assumption of responsibility for the statement required to establish negligence, Hedley Byrne &amp; Co Ltd v Heller &amp; Partners Ltd [1964] A.C. 465 followed. Furthermore, it was not unfair within s.11 of the Unfair Contract Terms Act 1977 to allow LF to rely on the disclaimer."
    ],
    "NUMBER": "457",
    "TYPE": "Headnotes",
    "NAME": "(wl) McCullough v Lane Fox and Partners Ltd",
    "JUDGE": "Nourse LJ; Hobhouse LJ; Sir Christopher Slade",
    "CIT": "49 Con LR 124",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Royscot Trust v Rogerson",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "(wl) Lewis v Averay",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) H Parsons (Livestock) Ltd v Uttley Ingham & Co",
        "(wl) Walford v Miles",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) McCullough v Lane Fox and Partners Ltd",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Spice Girls Ltd v Aprilia World Service BV"
    ],
    "YEAR": "1969",
    "COURT": "EWCA",
    "SUMMARY": [
        "Fraudulent misrepresentation; damages; purchase of business",
        "Damages for fraudulent misrepresentation are completely at large and extend to the limit of the loss actually suffered by the plaintiff as a result of the misrepresentation. Per curiam: wherever it can do so without injustice to the other party, the Court of Appeal will not allow a party to be prejudiced by errors on the part of his counsel at the trial. The plaintiff purchased an ironmongers&#8217; business from X. He did so on the strength of X&#8217;s representations (a) as to the size of the weekly wages bill and (b) that all the trade was conducted from the shop. In fact both representations were false to the knowledge of X inasmuch as a part-time traveller was employed whose wages were not disclosed to the plaintiff and by whom half the trade of the business was conducted (ie, outside the shop). The plaintiff sued for damages for fraudulent misrepresentation and for conspiracy. He succeeded, and on his counsel&#8217;s submission the judge awarded GBP 1,500 damages, this sum being based on the cost of the services of a part-time traveller. On appeal by the plaintiff, held, allowing the appeal, (1) that the damages awarded had been calculated, erroneously, on the basis that they were damages for breach of contract; (2) that the damages ought to extend to the whole of the plaintiff&#8217;s loss; and (3) that, on the facts, the sum of GBP 5,500 would be awarded. (Dictum of Lord Atkin in Clark v Urquhart [1930] A.C. 28 and dictum of Lord Esher M.R. in Firbank&#8217;s Executors v Humphreys (1887) L.R. 18 Q.B.D. 54 applied; McConnel v Wright [1903] Ch.546 considered)."
    ],
    "CATEGORY": "Company Law Other Related Subjects: Damages &mdash; Damages &mdash; Fraud &mdash; Misrepresentation &mdash; Sale of Business",
    "JUDGE": "Lord Denning MR; Winn LJ; Sachs LJ",
    "CATEGORIES": [
        "Company Law Other Related Subjects: Damages",
        "Damages",
        "Fraud",
        "Misrepresentation",
        "Sale of Business"
    ],
    "NUMBER": "458",
    "TYPE": "Headnotes",
    "NAME": "(wl) Doyle v Olby (Ironmngers) Ltd",
    "CITATION": "Doyle v Olby (Ironmngers) Ltd [1969] 2 QB 158",
    "CIT": "[1969] 2 QB 158",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "(wl) Royscot Trust v Rogerson",
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) Tinn v Hoffman & Co",
        "(wl) Koufos v Czarnikow Ltd (The Heron II)",
        "(wl) Schawel v Reade",
        "(wl) H Parsons (Livestock) Ltd v Uttley Ingham & Co",
        "(wl) The Brimnes",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Brogden v Metropolitan Railway",
        "(wl) Grogan v Robin Meredith Plant Hire"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Deceit; whether loss of expected profit recoverable",
        "Damages for deceit should compensate the plaintiff for all losses suffered, including loss of profits that could reasonably have been anticipated. D ran two hairdressing salons in neighbouring areas. P purchased one of the salons. During negotiations, D had falsely represented that he personally would not be working at his other salon. P failed to make a profit, and discovered that D was working full time at his salon. P was unable to sell the salon for three years. At trial P was awarded damages of GBP 33,328, including GBP 15,000 for loss of profits during the period in which P owned the business. D appealed against the award for loss of profits."
    ],
    "CATEGORY": "Damages &mdash; Deceit &mdash; Measure of Damages &mdash; Profits",
    "CITATION": "East v Maurer [1991] 1 WLR 461",
    "YEAR": "1991",
    "CATEGORIES": [
        "Damages",
        "Deceit",
        "Measure of Damages",
        "Profits"
    ],
    "HELD": [
        "allowing the appeal in part, that (1) damages for deceit were assessed on the basis that P should be compensated for all losses suffered, and that where the losses were made in the course of running a business, the assessment of damages would include both actual losses incurrred and loss of profits that could reasonably have been anticipated; (2) P had failed to earn expected profits from the business and was entitled to the loss of expected profits, but the judge had erred in assessing damages on the basis that D&#8217;s statement amounted to a warranty that the business would have remained at the same level, and appropriate damages for loss of expected profits were GBP 10,000 (Doyle v Olby (Ironmongers) Ltd [1969] 2 Q.B. 158 applied)."
    ],
    "NUMBER": "459",
    "TYPE": "Headnotes",
    "NAME": "(wl) East v Maurer",
    "JUDGE": "Mustill LJ; Butler-Sloss J; Beldam LJ",
    "CIT": "[1991] 1 WLR 461",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) McCullough v Lane Fox and Partners Ltd",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) Hedley Byrne & Co Ltd v Heller & Partners",
        "(wl) Couchman v Hill",
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) BRS v Arthur Crutchley Ltd",
        "(wl) Canada Steamship Lines Ltd v The King"
    ],
    "YEAR": "1978",
    "COURT": "EWCA",
    "SUMMARY": [
        "Negligent misrepresentation; pre-contractual statement; absolute obligation",
        "The liability of the representor under the Misrepresentation Act 1967 (c.7) s.2(1) does not depend upon his being under a duty of care. In negotiations leading to a contract, the statute imposes an absolute obligation not to state facts which the representor cannot prove he had reasonable grounds to believe. A Ltd, civil engineering contractors, entered negotiations with H Ltd for the hire of two sea-going barges, owned by H Ltd, for carrying vast quantities of clay out to sea. At a meeting on July 11, 1974, the owners&#8217; marine manager orally represented to A Ltd that the capacity of the barges was 1,600 tonnes deadweight. He based that figure on his recollection of an entry in Lloyd&#8217;s Register which gave the capacities as 1,800 tonnes. The Register was erroneous, and the correct deadweight capacity was 1,055 tonnes, which could have been ascertained from the ship&#8217;s document in possession of H Ltd A Ltd continued negotiations without obtaining any other figure for the vital matter of deadweight capacity, and took the barges into use under a charterparty. The charterparty included an exception clause that the charterers&#8217; acceptance at handing over the barges should be conclusive that they had examined them and found them fit for their purpose. After about six months&#8217; use, A Ltd discovered the correct capacity and paid GBP 20,000 for the hire, refusing to pay any more. H Ltd withdrew the barges and issued proceedings claiming outstanding hire charges. A Ltd denied liability, and counterclaimed for damages alleging, inter alia, (1) breaches of collateral warranties in the representations before contract; (2) negligence arising from a special relationship between the parties and (3) liability under s.2(1) of the Act. Bristow, J. gave judgment for H Ltd On appeal by A Ltd, and cross-notice by H Ltd, held, allowing the appeal in part, that (1) there was nothing in the pre-contract negotiations which could amount to a collateral warranty; (2) per Bridge and Shaw L.JJ., the misrepresentation at the meeting of July 11, 1974, as to the deadweight capacity, was a most material matter and H Ltd had not proven that their marine manager had reasonable grounds for believing, and did believe, that the facts represented were true; (3) per Shaw and Bridge, L.J.J., H Ltd could not escape liability by reliance on the exception clause, since it was a provision which came within s.3 of the Act and was therefore of no effect unless the court allowed reliance upon it as being &#8220;fair and reasonable in the circumstances of the case&#8221; and since it was not &#8220;fair and reasonable&#8221; to allow reliance upon it, the cross-appeal should be dismissed. Per Shaw L.J., A Ltd also had a cause of action in negligence at common law."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Negligence &mdash; Contract Terms &mdash; Misrepresentation &mdash; Negligence &mdash; Warranties",
    "JUDGE": "Lord Denning MR; Bridge LJ; Shaw LJ",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Negligence",
        "Contract Terms",
        "Misrepresentation",
        "Negligence",
        "Warranties"
    ],
    "NUMBER": "460",
    "TYPE": "Headnotes",
    "NAME": "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
    "CITATION": "Howard Marine &amp; Dredging Co Ltd v A Ogden &amp; Sons (Excavation) Ltd [1978] QB 574",
    "CIT": "[1978] QB 574",
    "FLAGS": [
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) H Parsons (Livestock) Ltd v Uttley Ingham & Co",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) East v Maurer",
        "(wl) Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) McCullough v Lane Fox and Partners Ltd",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "(wl) Schawel v Reade"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Innocent misrepresentation; appropriate measure of damages; whether equivalent to those for fraudulent misrepresentation; whether sale novus actus interveniens",
        "The measure for damages for innocent misrepresentation under the Misrepresentation Act 1967 s.2(1) is the measure for fraudulent misrepresentation. D, a car dealer, agreed to sell a car on hire-purchase to a customer, C, for GBP 7,600, of which GBP 1,200 was paid as a deposit. D, in its proposal to the finance company P, mis-stated these figures as GBP 8,000 and GBP 1,600 respectively. On the basis of these figures P (who required a minimum deposit of 20 per cent of the purchase price) purchased the car from the dealer for GBP 6,400 and entered into a hire-purchase agreement with C. In August 1987, C dishonestly sold the car and paid no further instalments. GBP 3,625.24 remained to be paid by C to P. Judgment in default was entered for P for GBP 1,600 on the basis of the sale of a car at GBP 6,000. D appealed and P cross-appealed."
    ],
    "CATEGORY": "Damages &mdash; Foreseeability &mdash; Hire Purchase &mdash; Measure of Damages &mdash; Misrepresentation",
    "CITATION": "Royscot Trust v Rogerson [1991] 2 QB 297",
    "YEAR": "1991",
    "CATEGORIES": [
        "Damages",
        "Foreseeability",
        "Hire Purchase",
        "Measure of Damages",
        "Misrepresentation"
    ],
    "HELD": [
        "dismissing the appeal and allowing the cross-appeal, that (1) the measure of damages recoverable for innocent misrepresentation under s.2(1) of the 1967 Act was the measure for fraudulent misrepresentation rather than for negligence; (2) P was entitled to recover damages for all losses suffered by it, flowing from the dealer&#8217;s misrepresentation, provided that they were not too remote; (3) since it was reasonably foreseeable by D that C might wrongfully sell the car and P thereby would suffer loss, the sale by C was not a novus actus interveniens; accordingly the judge&#8217;s order was varied ( Doyle v Olby (Ironmongers) Ltd [1969] 2 Q.B. 158 applied)."
    ],
    "NUMBER": "461",
    "TYPE": "Headnotes",
    "NAME": "(wl) Royscot Trust v Rogerson",
    "JUDGE": "Balcombe LJ; Ralph Gibson LJ",
    "CIT": "[1991] 2 QB 297",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) Caparo Industries plc v Dickman",
        "(wl) Barry v Davies",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) McRae v Commonwealth Disposals Commission",
        "(wl) Hedley Byrne & Co Ltd v Heller & Partners",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Scally v Southern Health and Social Services Board",
        "(wl) Royscot Trust v Rogerson",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) McCullough v Lane Fox and Partners Ltd"
    ],
    "COURT": "EWHC",
    "SUMMARY": [
        "Conveyancing; duty of care; misrepresentation by vendor; whether vendor&#8217;s solicitor owed duty of care to purchaser",
        "A vendor&#8217;s solicitor does not owe a duty of care to a purchaser in ordinary conveyancing transactions. A plea of contributory negligence is available in answer to a claim for misrepresentation under the Misrepresentation Act 1967 s.2. R granted an underlease to G at a premium of GBP 30,000. The headlease granted to R contained a clause giving the head lessor the right to terminate the headleases for redevelopment. In negotiations for the underlease, G&#8217;s solicitors enquired whether there were any rights affecting the superior, leasehold title which would inhibit G&#8217;s enjoyment of the property. R&#8217;s solicitors answered &#8220;not to the lessor&#8217;s knowledge&#8221;. Subsequently the head lessor exercised the break- clause option and G sought damages against R and against R&#8217;s solicitors alleging negligent misrepresentation."
    ],
    "CATEGORY": "Legal Profession Other Related Subjects: Agency &mdash; Agency &mdash; Conveyancing &mdash; Duty of Care &mdash; Misrepresentation &mdash; Solicitors",
    "CITATION": "Gran Gelato Ltd v Richcliff (Group) Ltd [1992] Ch 560",
    "YEAR": "1992",
    "CATEGORIES": [
        "Legal Profession Other Related Subjects: Agency",
        "Agency",
        "Conveyancing",
        "Duty of Care",
        "Misrepresentation",
        "Solicitors"
    ],
    "HELD": [
        "dismissing the claim against the solicitors and giving judgment for G against R, that in normal conveyancing transactions a purchaser had a remedy against the seller for any misrepresentations and so a seller&#8217;s solicitor owed the buyer no duty of care. If a solicitor stepped outside the role of solicitor for his client and accepted a direct responsibility to the buyer then a duty of care might arise, but that had not happened here. The answer given to the enquiry was a misrepresentation by R upon which G had relied and G was entitled to damages. A defence that G had been contributorily negligent (by failing to call for the head lease) was open to R but, on the facts, did not succeed."
    ],
    "NUMBER": "462",
    "TYPE": "Headnotes",
    "NAME": "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
    "JUDGE": "Sir Donald Nicholls VC",
    "CIT": "[1992] Ch 560",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) Lewis v Averay",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Solle v Butcher",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "(wl) Couchman v Hill",
        "(wl) William Sindall plc v Cambridgeshire County Council"
    ],
    "YEAR": "1965",
    "COURT": "EWCA",
    "SUMMARY": [
        "Rescission; election; communication",
        "Where a fraudulent rogue absconds, a seller of goods sufficiently exercises his election to rescind if he at once, on discovering the fraud, takes all possible steps to regain the goods, even though he cannot find the rogue nor communicate with him. C sold a motor-car to N and accepted a cheque in part payment. The cheque was dishonoured the following morning, whereupon C asked both the police and the Automobile Association to trace the motor-car. N sold the car to M company, a firm of motor dealers, who had notice from which they could have inferred that N had acquired the car fraudulently. Immediately after acquiring the car, M filled up hire-purchase forms, selling the car to G and C, a finance company, in which M expressly warranted that the car belonged absolutely to themselves. Seventeen days after the transaction between C and N, C demanded the return of the car from M company, who claimed to have a good title to it. Eventually, C and U, another finance company, bought the car in good faith without notice of any defect in title. On the trial of the issue whether the car belonged to C and U or to C, held that (1) the title to the car was vested in C as he had rescinded the contract of sale when he asked the police to recover the car; but (2) M, the dealers, were not the agents of G and C, the first finance company, so as to fix G and C with notice of the defective title. (Decision of Lord Denning, M.R. ([1963] 2 All E.R. 547) affirmed in part; dicta of Lord Blackburn in Scarf v Jardine (1882) 7 App. Cas. 345 distinguished and of Lord Hatherley L.C. in Reese River Silver Mining Co Ltd v Smith (1869-70) L.R. 4 H.L. 64 distinguished)."
    ],
    "CATEGORY": "Sale of Goods &mdash; Contracts of Sale &mdash; Rescission &mdash; Title to Goods",
    "JUDGE": "Sellers LJ; Davies LJ; Upjohn LJ",
    "CATEGORIES": [
        "Sale of Goods",
        "Contracts of Sale",
        "Rescission",
        "Title to Goods"
    ],
    "NUMBER": "463",
    "TYPE": "Headnotes",
    "NAME": "(wl) Car & Universal Finance Co Ltd v Caldwell",
    "CITATION": "Car &amp; Universal Finance Co Ltd v Caldwell [1965] 1 QB 525",
    "CIT": "[1965] 1 QB 525",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "(wl) Solle v Butcher",
        "(wl) Car & Universal Finance Co Ltd v Caldwell",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Holwell Securities Ltd v Hughes",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Grogan v Robin Meredith Plant Hire",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Gibson v Manchester City Council",
        "(wl) Bank of Credit and Commerce International SA v Ali"
    ],
    "COUNSEL": "For C: Terence Etherton Q.C. and Steven Kovats. For WS: Jules Sher Q.C. and Reziya Harrison.",
    "COURT": "EWCA",
    "SUMMARY": [
        "Contract for sale; rescission; mutual mistake; misrepresentation; contract for purchase of land pursuant to the National Conditions of Sale; undisclosed foul sewer discovered after completion; whether purchaser entitled to rescind; whether damages to be awarded; appropriate measure of damages",
        "In a contract for the sale of land incorporating the National Conditions of Sale, there is no action in mistake or misrepresentation when an encumbrance that was not within the knowledge of the vendor at the time of the contract is subsequently discovered to have existed at the time of the contract. A contract was concluded for the sale and purchase of development land. The contract incorporated the National Conditions of Sale (20th ed.). The property was sold subject to, inter alia, any easements, liabilities and public rights affecting it. This was subject to V&#8217;s duty to disclose all latent liabilities and easements known to it. P was deemed to have full notice of all easements, rights and privileges affecting it, with no obligation on V to define them. V replied to enquiries before contract stating that so far as it was aware there were no rights of easement or public rights affecting the property other than as disclosed in the contract. After completion a private foul sewer was discovered running under the property. P purported to rescind on the grounds of misrepresentation and common fundamental mistake. P applied for a declaration that the contract had been rescinded and for repayment of the purchase price, the value of the site having halved in value since completion. The declaration was granted and V appealed."
    ],
    "CATEGORY": "Real Property &mdash; Easements &mdash; Preliminary Inquiries &mdash; Real Property &mdash; Rescission &mdash; Standard Forms of Contract",
    "CITATION": "William Sindall plc v Cambridgeshire County Council [1994] 1 WLR 1016",
    "YEAR": "1994",
    "CATEGORIES": [
        "Real Property",
        "Easements",
        "Preliminary Inquiries",
        "Real Property",
        "Rescission",
        "Standard Forms of Contract"
    ],
    "HELD": [
        "allowing the appeal, that (1) V was required to disclose easements and encumbrances of which it had knowledge or means of knowledge. The National Conditions of Sale left no room for rescission on the grounds of mistake and cast the risk on to P as to the existence of encumbrances; (2) there was no evidence of misrepresentation by V, either negligent or otherwise; (3) the presence of the sewer did not seriously interfere with the use of the land so it would be inequitable for the contract to be rescinded. Damages would have been awarded in lieu of rescission under the Misrepresentation Act 1967 s.2(2), had there been misrepresentation (Associated Japanese Bank (International) Ltd v Credit du Nord SA [1989] 1 W.L.R. 255 applied; Grist v Bailey [1967] Ch. 532, Laurence v Lexcourt Holdings [1978] 1 W.L.R. 1128 doubted). [Per curiam: The appropriate measure of damages awarded in lieu of rescission under the Misrepresentation Act 1967, s.2(2), is different from that under s.2(1), being the difference in value between what P was misled into thinking he was buying and the value of what he in fact received, and damages should therefore never exceed the sum which would have been payable had the representation been a warranty.]"
    ],
    "NUMBER": "464",
    "TYPE": "Headnotes",
    "NAME": "(wl) William Sindall plc v Cambridgeshire County Council",
    "JUDGE": "Russell LJ; Evans LJ; Hoffmann LJ",
    "CIT": "[1994] 1 WLR 1016",
    "FLAGS": [
        "Approved",
        "Hoffmann"
    ]
},
{
    "RELATED": [
        "(wl) King's Norton Metal Co Ltd v Edridge, Merrett & Co",
        "(wl) Albert v Motor Insurers' Bureau",
        "(wl) Henderson v Merrett Syndicates",
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) Gibson v Manchester City Council",
        "(wl) Mountford v Scott",
        "(wl) William Sindall plc v Cambridgeshire County Council",
        "(wl) The Brimnes",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Holwell Securities Ltd v Hughes",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) Hedley Byrne & Co Ltd v Heller & Partners"
    ],
    "COUNSEL": "For the applicants: Thomas Munby. For the first respondent: Simon Davenport QC, Aidan Casey. For the second respondent: Phillip Gale.",
    "COURT": "EWHC",
    "SUMMARY": [
        "On an application under the Insolvency Act 1986 Sch.B1 para.63 by the administrators of two insolvent insurance intermediaries, the court gave directions for the distribution of funds held in the companies&#8217; client accounts which were subject to the statutory trust regime in Chapter 5 of the Client Assets Sourcebook in the Financial Conduct Authority Handbook."
    ],
    "CATEGORY": "Insolvency Other Related Subjects: Trusts &mdash; Insurance &mdash; Administration &mdash; Administrators' Powers and Duties &mdash; Apportionment &mdash; Client Accounts &mdash; Distribution &mdash; Equitable Jurisdiction &mdash; Insurance Intermediaries &mdash; Insurance Premiums &mdash; Remuneration &mdash; Statutory Trusts",
    "CITATION": "Overbrooke Estates Ltd v Glencombe Properties Ltd [2015] EWHC 3721 (Ch)",
    "YEAR": "2015",
    "ABSTRACT": [
        "The administrators of two insolvent insurance intermediaries applied, under the Insolvency Act 1986 Sch.B1 para.63 or alternatively pursuant to the court&#8217;s inherent equitable jurisdiction, for directions for the distribution of moneys held in client accounts.",
        "Before they went into administration, the companies operated in common ownership. Although insolvent, they had significant funds in client accounts representing insurance premiums that had been received from customers and not yet paid on to insurers. Those accounts were subject to the statutory trust regime in Chapter 5 of the Client Assets Sourcebook (CASS 5) in the Financial Conduct Authority Handbook. CASS 5.6.7R provided that, in the event of insolvency, client money had to be treated as pooled and then distributed so that each client received a sum calculated in accordance with a specific method set out in CASS 5.5.67R. The administrators took the view that, since neither company had kept proper records of the entitlement to client account funds, it would be impracticable to attempt to ascertain that entitlement with certainty. Accordingly, they proposed a scheme of distribution and identified a schedule of issues in respect of which they sought particular guidance.",
        "The issues concerned (1) the question whether the funds in the client accounts were subject to the statutory trusts or belonged to the companies; (2) the ascertainment of entitlement to moneys subject to the statutory trusts and their apportionment among various claimants; (3) a possible claim on behalf of the first company against the statutory trust pool of the second; (4) the administrators&#8217; entitlement to remuneration out of the funds in the statutory trusts."
    ],
    "CATEGORIES": [
        "Insolvency Other Related Subjects: Trusts",
        "Insurance",
        "Administration",
        "Administrators' Powers and Duties",
        "Apportionment",
        "Client Accounts",
        "Distribution",
        "Equitable Jurisdiction",
        "Insurance Intermediaries",
        "Insurance Premiums",
        "Remuneration",
        "Statutory Trusts"
    ],
    "HELD": [
        "Directions given.",
        "(1) The trusts&#8217; purpose was to protect the customers of the business and their continuing administration was within the scope of the companies&#8217; affairs for the purposes of Sch.B1 para.59 of the Act. Thus, the court had power under Sch.B1 para.63 to give directions to the administrators in respect of those funds even though they did not form part of the company&#8217;s assets, Denny v Yeldon [1995] 3 All E.R. 624 applied. Although para.63 did not specify the scope of the directions that might properly be given, the court was entitled to exercise its inherent equitable jurisdiction when seised of an application under that provision, MF Global UK Ltd (In Special Administration), Re [2013] EWHC 1655 (Ch), [2013] 1 W.L.R. 3874 applied (see paras 49-55 of judgment).",
        "(2) Client money was received and held on the statutory trusts unless the firm was acting in accordance with CASS 5.4, the conditions for which were not fulfilled in the instant case. Moreover, there was nothing to suggest that deductions for commission, interest or any other matters should be made (paras 60, 64, 67). All clients with a client money entitlement were to be regarded as entitled to participate in the relevant pool, not merely those whose contributions were identifiable. Claims against the pool were not affected where the cover had been provided gratuitously, and any claims by intermediaries for fees or commission would be considered (paras 71, 73, 78).",
        "(3) There was no reason why one statutory trust should not in principle be able to trace into the assets of another statutory trust where there had been a breach of trust. Although CASS statutory trusts had to be understood in terms of their own regulatory scheme and were not confined by the general law of trusts, that did not mean that victims of wrongs against the trust were deprived of an equitable remedy. Where the breach of trust had applied prior to pooling, the effect of successful tracing in support of a claim would be to augment the pool to the benefit of those who were beneficiaries of a statutory trust before pooling occurred (paras 118-119).",
        "(4) If it became clear that poor record-keeping created a need for significant work to be done by the administrators to identify claimants, an application ought to be made to the court for directions and for prior sanction of remuneration. The words &#8220;costs properly attributable to the distribution of the client money&#8221; in CASS 5.3.2R meant the costs incurred for the purpose of enabling such distribution to be made and the costs of making such a distribution. Any work that might properly be done to enable the administrators to distribute the trust moneys was capable of being remunerated under that rule; therefore, there was no reason to have recourse to a general equitable jurisdiction. However, if it had been held that the rule related only to the costs of making the distribution, the jurisdiction under Berkeley Applegate (Investment Consultants) Ltd (No.1), Re [1989] Ch. 32 would have been available in respect of costs relating to preliminary work not covered by the rule. According to that jurisdiction, where the court was considering the enforcement of a claim to an equitable interest in property, it had a discretion to require that an allowance be made for costs incurred and for skill and labour expended in connection with the administration of that property, Berkeley Applegate considered (paras 139, 144-147)."
    ],
    "NUMBER": "465",
    "TYPE": "Headnotes",
    "NAME": "(wl) Overbrooke Estates Ltd v Glencombe Properties Ltd",
    "JUDGE": "Judge Keyser QC",
    "CIT": "[2015] EWHC 3721 (Ch)"
},
{
    "RELATED": [
        "(wl) Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "(wl) Davis Contractors Ltd v Fareham Urban District Council",
        "(wl) Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "(wl) Koufos v Czarnikow Ltd (The Heron II)",
        "(wl) King's Norton Metal Co Ltd v Edridge, Merrett & Co",
        "(wl) McCutcheon v David MacBrayne Ltd",
        "(wl) Albert v Motor Insurers' Bureau",
        "(wl) Dick Bentley Productions Ltd v Harold Smith (Motors) Ltd",
        "(wl) Barry v Davies",
        "(wl) Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Branca v Cobarro"
    ],
    "COUNSEL": "For the defendant/appellant in the first appeal: Andrew P McLaughlin. For the claimants/respondents in the first appeal: Richard Stead. For the claimant/appellant in the second appeal: Gerard Clarke, Mark Vinall. For the defendants/respondents in the second appeal: Ben Blakemore. For the claimant/appellant in the third appeal: Vikram Sachdeva, Jack Anderson. For the second defendant/ second respondent in the third appeal: David Mohyuddin, Ian Tucker. For the interveners: David Holland QC.",
    "COURT": "EWCA",
    "SUMMARY": [
        "The court clarified and further explained the guidance given in Mitchell v News Group Newspapers Ltd [2013] EWCA Civ 1537, [2014] 1 W.L.R. 795 regarding the proper approach to be taken by the courts to the issue of relief from sanctions pursuant to CPR r.3.9. The court also emphasised the duty on parties to assist the court in furthering the overriding objective, outlining the expected standards of compliance and co-operation between litigants and warning that opportunism and unreasonably contested applications for relief from sanctions would be penalised."
    ],
    "CATEGORY": "Civil Procedure Other Related Subjects: Legal Profession &mdash; Case Management &mdash; Conditional Fee Agreements &mdash; Delay &mdash; Judgments and Orders &mdash; Judicial Decision-Making &mdash; Non-Compliance &mdash; Penalties &mdash; Professional Conduct &mdash; Proportionality &mdash; Relief From Sanctions",
    "CITATION": "Raffles v Wichelhaus [2014] EWCA Civ 906",
    "YEAR": "2014",
    "ABSTRACT": [
        "In three conjoined appeals in which one or other party had sought relief from sanctions arising pursuant to CPR r.3.9, the court was required to determine the correct approach to the rule and to the guidance given in Mitchell v News Group Newspapers Ltd [2013] EWCA Civ 1537, [2014] 1 W.L.R. 795.",
        "The respective judges had purported to apply the Mitchell guidance, but in each case, the parties had been treated inconsistently. M itchell had received criticism for having a &#8220;triviality&#8221; test which effectively amounted to an &#8220;exceptionality&#8221; test, where the latter had been rejected by Sir Rupert Jackson&#8217;s &#8220;Review of Civil Litigation costs: Final Report&#8221; in December 2009. It had also been criticised for describing factors (a) and (b) in r.3.9(1) as &#8220;paramount considerations&#8221; and downplaying the requirement for the court to consider all the circumstances of the case. It had been further criticised for causing disproportionate penalties to be imposed for breaches which had little practical effect on litigation. The instant court was required to examine those criticisms."
    ],
    "CATEGORIES": [
        "Civil Procedure Other Related Subjects: Legal Profession",
        "Case Management",
        "Conditional Fee Agreements",
        "Delay",
        "Judgments and Orders",
        "Judicial Decision-Making",
        "Non-Compliance",
        "Penalties",
        "Professional Conduct",
        "Proportionality",
        "Relief From Sanctions"
    ],
    "HELD": [
        "Appeals allowed.",
        "(Jackson LJ concurring in the result but dissenting in part in the reasoning) (1) The text of r.3.9(1) contained three elements: identification of the &#8220;failure to comply&#8221;; consideration of &#8220;all the circumstances of the case&#8221;; and consideration of factors (a) and (b). The guidance given in paras 40 and 41 of Mitchell as to how that approach was to be applied in practice remained substantially sound, but it needed to be clarified and further explained. Some first instance judges had ignored the fact that it was necessary to consider all the circumstances of a case; others had adopted a more traditional approach of giving pre-eminence to the need to decide claims on their merits when there was no room for such an approach in the post-Jackson era. Useful amplification of the Mitchell guidance had already been given in some of the authorities immediately following the Mitchell decision, but some judges were being unduly draconian in their approaches, and others unduly relaxed. The view that an application for relief was bound to fail unless a default could be characterised as trivial, or unless there was a good reason for it, was leading to manifestly unjust decisions and was an approach which was not mandated by what the court said in Mitchell . The following clarification was intended to create a reasonably consistent judicial approach to the application of r.3.9, making it unnecessary to refer to earlier authorities in future, and assisting in reducing the need for satellite litigation. In future, judges were to adopt a three-stage approach: (a) they had to identify and assess the seriousness or significance of the relevant failure. Triviality was not part of that stage. There were clearly degrees of seriousness and significance. The assessment ought not to involve consideration of past unrelated failures, only the seriousness and significance of the very breach in respect of which relief from sanctions was sought. If a breach was not serious or significant, relief would usually be granted and there would be no need to spend much time on the second and third stages; (b) the second stage did not derive from r.3.9 but was nevertheless important: the court had to consider why the failure or default occurred. It would be inappropriate to produce an encyclopedia of good and bad reasons; paragraph 41 of Mitchell gave some examples but they were nothing more than that; (c) the third stage required the court to consider all the circumstances of the case. A serious breach for no reason was not automatically prevented from attracting relief. Factors (a) and (b) in r.3.9 remained of particular importance and were to be given particular weight at the third stage. Therefore, if the effect of a breach was to prevent the efficient and proportionate conduct of litigation, that would weigh against relief being granted. Likewise, the old lax culture of non-compliance with rules, practice directions and orders was no longer tolerated, and compliance had to be considered in every case. However, other relevant factors would also be relevant and would vary on a case-by-case basis (see paras 22-38, 81-82 of judgment). (2) Litigation could not be conducted efficiently and proportionately without fostering a culture of compliance and co-operation. CPR r.1.3 required parties to help the court to further the overriding objective and those who opportunistically and unreasonably opposed applications for relief from sanctions breached that obligation. Where the failure was neither serious nor significant, where a good reason was demonstrated, and where it was otherwise obvious that relief from sanctions should be granted, parties ought to agree that relief should be granted. In any event, extensions of time of up to 28 days ought readily to be given, as envisaged by r.3.8(4). Contested applications for relief ought to arise only in exceptional cases (paras 39-44). (3) The judges in each of the three appeals had erred in their case management powers and their orders were set aside."
    ],
    "NUMBER": "466",
    "TYPE": "Headnotes",
    "NAME": "(wl) Raffles v Wichelhaus",
    "JUDGE": "Lord Dyson MR; Jackson LJ; Vos LJ",
    "CIT": "[2014] EWCA Civ 906",
    "FLAGS": [
        "Criticised"
    ]
},
{
    "RELATED": [
        "(wl) Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "(wl) Albert v Motor Insurers' Bureau",
        "(wl) Raffles v Wichelhaus",
        "(wl) Henderson v Merrett Syndicates",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Solle v Butcher",
        "(wl) Daulia Ltd v Four Millbank Nominees Ltd",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Brogden v Metropolitan Railway",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd"
    ],
    "COUNSEL": "For the appellant: Lesley Anderson QC, Martin Budworth. For the respondent: Lord Marks QC, James Wibberley.",
    "COURT": "EWCA",
    "SUMMARY": [
        "An insurer which made settlement offers directly to a number of personal injury claimants had done so in order to avoid paying the costs of a firm of solicitors which had entered into conditional fee agreements with the claimants. Although the claimants had no personal liability to pay the solicitors&#8217; fees under the terms of the conditional fee agreement the solicitors had an interest which the insurer had notice of and the principle of equitable intervention operated to require the insurer to pay the solicitors&#8217; fees."
    ],
    "CATEGORY": "Personal Injury Other Related Subjects: Legal Advice and Funding &mdash; Torts &mdash; Civil Procedure &mdash; Insurance &mdash; Conditional Fee Agreements &mdash; Fees &mdash; Insurance Companies &mdash; Liens &mdash; Personal Injury Claims &mdash; Pre-Action Protocols &mdash; Settlement &mdash; Solicitors' Remuneration",
    "CITATION": "King&#8217;s Norton Metal Co Ltd v Edridge, Merrett &amp; Co [2015] EWCA Civ 1230",
    "YEAR": "2015",
    "ABSTRACT": [
        "A firm of solicitors (G) appealed against the dismissal ([2014] EWHC 3062 (QB), [2015] R.T.R. 14) of its claim against the respondent insurer.",
        "G had entered into conditional fee agreements (CFAs) to represent six clients in personal injury claims against the insurer. The insurer had settled the claims directly with the clients on an inclusive basis, meaning that G had been deprived of their costs. G had therefore brought the instant claim in order to recover their fees, disbursements and success fees from the insurer. They sought equitable intervention by the court, claiming that the insurer had wrongfully prevented them from establishing a lien on the settlement sums for their costs. The CFAs incorporated a Law Society document which provided that a client who won the claim would pay G&#8217;s charges, disbursements and a success fee, which it could claim from its opponent. However, each client also received a client care letter which indicated that if the client won, G would be able to recover their fees, disbursements and success fee from the opponent and had the right to take recovery action in the client&#8217;s name. Each CFA was subject to the Cancellation of Contracts made in a Consumer&#8217;s Home or Place of Work etc. Regulations 2008, meaning that each client had the right to cancel his retainer within a seven-day period. In the case of two of the clients, the insurer made the offer to compromise within that seven-day period.",
        "The issues were whether:",
        "(i) the principle of equitable intervention set out in Khans Solicitors v Chifuntwe [2013] EWCA Civ 481, [2014] 1 W.L.R. 1185 could operate only where a defendant had express notice of a lien;",
        "(ii) a lien could arise in circumstances where the clients were under no personal liability to pay G&#8217;s fees;",
        "(iii) the insurer&#8217;s liability was affected by the fact that an offer might have been made at a time when a retainer could still be cancelled."
    ],
    "CATEGORIES": [
        "Personal Injury Other Related Subjects: Legal Advice and Funding",
        "Torts",
        "Civil Procedure",
        "Insurance",
        "Conditional Fee Agreements",
        "Fees",
        "Insurance Companies",
        "Liens",
        "Personal Injury Claims",
        "Pre-Action Protocols",
        "Settlement",
        "Solicitors' Remuneration"
    ],
    "HELD": [
        "Appeal allowed.",
        "(1) There was no reason in principle why implied, rather than express, notice of a lien should not be sufficient for the operation of the principle of equitable intervention. In any event, express notice had been given in the instant case. It was apparent from transcripts of telephone calls that the insurer had intended to avoid paying G&#8217;s costs by entering into a settlement directly with the clients. The insurer&#8217;s knowledge of and participation in the scheme established by the Pre-Action Protocol for Low Value Personal Injury Claims in Road Traffic Accidents meant that it was well aware of G&#8217;s interest in receiving its fixed costs and other sums due under the scheme, Khans applied (see paras 25-26, 28-29 of judgment).",
        "(2) There was a tension between the provisions in the CFAs. The provision in the client care letter had to prevail because it was expressed to be for the avoidance of doubt. That meant that G had no recourse against their clients for the fees and were limited to what they could recover from the losing side. In those circumstances, they would not have a lien over assets received in their clients&#8217; account because the clients had no underlying liability to them. However, under the normal course of events, G would have an entitlement to recover the fixed costs and other sums payable under the Protocol scheme. That was either an entitlement of the solicitors themselves or, alternatively, an entitlement to bring proceedings in the name of the clients to recover those sums. In either case, G had an interest which equity could protect and which was deserving of protection. The insurer was aware of that interest because of its knowledge of and participation in the Protocol scheme. That might involve an extension of the principle in Khans , but there was no reason why that principle should not apply in the circumstances of the case. The Protocol scheme was not mandatory and it was therefore open to the insurer to enter into compromise agreements with the claimants outside the Protocol. However, that was not what had happened. In each case, the client had authorised G to commence the Protocol process on his behalf and the insurer had voluntarily entered into the Protocol process. Neither the clients nor the insurer had formally exited the process before entering into the compromise agreements. The insurer had acted with the intention of defeating G&#8217;s entitlement under the scheme, Khans applied (paras 18, 30-32).",
        "(3) The fact that an offer might have been made at a time when a retainer could still be cancelled could not relieve the insurer of liability. It would have been open to the insurer to make the offer conditional upon cancellation of G&#8217; retainer within the permitted period, but it did not do so. In each case, the insurer assumed the risk that its offer might be accepted after the expiry of the cancellation period. In any event, in none of the underlying cases was the retainer cancelled or otherwise terminated (paras 21, 34-37).",
        "(4) The insurer entered into each compromise agreement with notice of G&#8217;s entitlement and the principle of equitable intervention required it to pay to G the sums payable on settlement under the Protocol scheme (para.38)."
    ],
    "NUMBER": "467",
    "TYPE": "Headnotes",
    "NAME": "(wl) King's Norton Metal Co Ltd v Edridge, Merrett & Co",
    "JUDGE": "Laws LJ; Elias LJ; Lloyd Jones LJ",
    "CIT": "[2015] EWCA Civ 1230"
},
{
    "RELATED": [
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Parker v Clark",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Daulia Ltd v Four Millbank Nominees Ltd",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) Partridge v Crittenden",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) Entores v Miles Far East Corporation",
        "(wl) Solle v Butcher",
        "(wl) Lewis v Averay",
        "(wl) Tekdata Interconnections Ltd v Amphenol Ltd"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Mistake",
        "Where A makes an offer to B, in the belief (known to B) that B is X, there is no offer capable of acceptance by B. B said he would buy A&#8217;s motor-car for GBP 717, and produced a cheque book. A was not prepared to accept a cheque and refused to sell. B then stated that he was X and gave an address. A checked the telephone directory and discovered that there was a person named X living at the address given. A then agreed to let B have the car against a cheque for GBP 717, which was later dishonoured. B had meanwhile sold the car to the defendant, who purchased in good faith. In an action for damages for conversion Slade J. gave judgment for A, and the defendant appealed."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Sale of Goods &mdash; Formation of Contract &mdash; Mistake",
    "CITATION": "Ingram v Little [1961] 1 QB 31",
    "YEAR": "1961",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Sale of Goods",
        "Formation of Contract",
        "Mistake"
    ],
    "HELD": [
        "dismissing the appeal, as A intended to deal only with the genuine X, B was incapable of accepting A&#8217;s offer to sell the car, so that the property therein remained in A. Cundy v Lindsay (1878) 3 App. Cas. 459 considered; Hardman v Booth 158 E.R. 1107 considered; and Lake v Simmons [1927] A.C. 487 considered; King&#8217;s Norton Metal Co v Edridge Merrett &amp; Co (1897) 14 T.L.R. 98 distinguished; and Phillips v Brooks Ltd [1919] 2 K.B. 243 distinguished."
    ],
    "NUMBER": "468",
    "TYPE": "Headnotes",
    "NAME": "(wl) Ingram v Little",
    "JUDGE": "Sellers LJ; Pearce LJ; Devlin LJ",
    "CIT": "[1961] 1 QB 31",
    "FLAGS": [
        "Criticised"
    ]
},
{
    "RELATED": [
        "(wl) Car & Universal Finance Co Ltd v Caldwell",
        "(wl) Shogun Finance Ltd v Hudson",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Pharmaceutical Society of Great Britain v Boots Cash Chemists (Southern) Ltd",
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) Fisher v Bell",
        "(wl) Couchman v Hill",
        "(wl) Ingram v Little",
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "(wl) George Mitchell (Chesterhall) Ltd v Finney Lock Seeds",
        "(wl) Oscar Chess Ltd v Williams"
    ],
    "YEAR": "1972",
    "COURT": "EWCA",
    "SUMMARY": [
        "Mistake; identity of purchaser",
        "Where A and B are present together, and A sells goods to B, there is a very strong presumption that A intended to contract with B, and not with C, whose identity B had falsely assumed. R called on L, who had a car for sale. R called himself &#8220;G,&#8221; who was a well-known television actor, and produced a film studio pass in G&#8217;s name bearing R&#8217;s photograph. L accepted R&#8217;s cheque and allowed R to take the car and logbook away. The cheque was worthless. Later R, pretending to be L, sold the car to A, who had no reason to suspect anything was wrong. When L discovered A had the car, he sued him for its return. On appeal, held, that L had been intending to, and did, contract with R, the person physically present, so that the title to the car had passed to L and thence, the contract not having been avoided in the meantime, to A. ( Phillips v Brooks Ltd [1919] 2 K.B. 243 approved; Ingram v Little [1961] 1 Q.B. 31 doubted)."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Sale of Goods &mdash; Fraud &mdash; Sale of Goods &mdash; Third Parties &mdash; Title to Goods",
    "JUDGE": "Lord Denning MR; Phillimore LJ; Megaw LJ",
    "CATEGORIES": [
        "Contracts Other Related Subjects: Sale of Goods",
        "Fraud",
        "Sale of Goods",
        "Third Parties",
        "Title to Goods"
    ],
    "NUMBER": "469",
    "TYPE": "Headnotes",
    "NAME": "(wl) Lewis v Averay",
    "CITATION": "Lewis v Averay [1972] 1 QB 198",
    "CIT": "[1972] 1 QB 198",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Lewis v Averay",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Royscot Trust v Rogerson",
        "(wl) British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "(wl) Albert v Motor Insurers' Bureau",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Rose v Pim",
        "(wl) Parker v Clark",
        "(wl) Collier v Wright (Holdings) Ltd",
        "(wl) Nicolene v Simmonds"
    ],
    "COUNSEL": "For S: George Bompas Q.C. and Sunil Iyer. For H: Jeremy Cousins Q.C., Nicholas George and Jeremy Richmond.",
    "COURT": "UKHL",
    "SUMMARY": [
        "A hire purchase agreement by which a fraudster obtained a car from a finance company by falsely pretending to be someone else was a nullity and a purchaser of the car from the fraudster could not obtain good title under the Hire Purchase Act 1964 s.27.",
        "H, the purchaser of a motor car, appealed against a decision ([2001] EWCA Civ 1000, [2002] Q.B. 834, [2001] C.L.Y. 917) that he had not obtained a good title to a car under the Hire Purchase Act 1964 s.27 on the ground that R, the person he bought it from, was a fraudster who obtained it from S, a finance company, under a void agreement. R had entered into a hire purchase agreement with S at a car dealer&#8217;s premises and obtained the car by falsely pretending to be another person, P. R then sold the car to H. H acted in good faith and would have obtained a good title by virtue of s.27 if R&#8217;s possession was under the hire purchase agreement. The judge at first instance ([2000] C.L.Y. 2600) held that the agreement with R was a nullity and gave judgment for S. The Court of Appeal by a majority upheld that decision on the basis that the agreement, if made with anyone, was made with P and that R was not the hirer named in the agreement. In the instant appeal, H argued that in the circumstances S had contracted face to face with R."
    ],
    "CATEGORY": "Consumer Law &mdash; Cars &mdash; Contracts &mdash; Fraudulent Misrepresentation &mdash; Hire Purchase &mdash; Third Parties &mdash; Title to Goods",
    "CITATION": "Shogun Finance Ltd v Hudson [2003] UKHL 62",
    "YEAR": "2003",
    "CATEGORIES": [
        "Consumer Law",
        "Cars",
        "Contracts",
        "Fraudulent Misrepresentation",
        "Hire Purchase",
        "Third Parties",
        "Title to Goods"
    ],
    "HELD": [
        "dismissing the appeal (Lord Nicholls of Birkenhead and Lord Millett dissenting), that (1) the agreement had been concluded in writing and the identification of the parties to that agreement depended on its construction and on that basis, P was the hirer under the agreement with S; (2) in a consumer credit transaction, the identity of the customer was fundamental to the whole transaction because it was essential to the credit checking of the borrower, and as the agreement with P was concluded without his authority, it was a nullity; (3) there was no meeting of minds between S and R as R never had any face to face dealings with S. The car dealer was the agent of S in delivering the car to R but was acting without authority since its authority was to deliver to P. Further, there was no contract with R and no bailment of the car by S to R; (4) the purported signature on the hire purchase agreement was not P&#8217;s and that agreement therefore lacked an essential ingredient and was never an offer eligible for acceptance, and (5) according to Lord Nicholls of Birkenhead and Lord Millett, in a case of mistaken identity, a person should be presumed to contract with the person with whom he was actually dealing."
    ],
    "NUMBER": "470",
    "TYPE": "Headnotes",
    "NAME": "(wl) Shogun Finance Ltd v Hudson",
    "JUDGE": "Lord Millett; Lord Nicholls of Birkenhead; Lord Hobhouse of Woodborough; Lord Phillips of Worth Matravers; Lord Walker of Gestingthorpe",
    "CIT": "[2003] UKHL 62",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Gran Gelato Ltd v Richcliff (Group) Ltd",
        "(wl) Hedley Byrne & Co Ltd v Heller & Partners",
        "(wl) Henderson v Merrett Syndicates",
        "(wl) Caparo Industries plc v Dickman",
        "(wl) Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "(wl) Scally v Southern Health and Social Services Board",
        "(wl) Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "(wl) Butler Machine Tool Co Ltd v Ex-Cell-O Corp",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) Overbrooke Estates Ltd v Glencombe Properties Ltd",
        "(wl) Karsales (Harrow) Ltd v Wallis"
    ],
    "COUNSEL": "For the claimant: Clive Freedman QC, Neil Mendoza. For the defendants: Paul Rees QC, Neil Sheldon.",
    "COURT": "EWHC",
    "SUMMARY": [
        "The Registrar of Companies had a common law duty of care, when entering a winding-up order on the companies register, to take reasonable care to ensure that the order was not registered against the wrong company."
    ],
    "CATEGORY": "Negligence Other Related Subjects: Government Administration &mdash; Company Law &mdash; Assumption of Responsibility &mdash; Breach of Duty of Care &mdash; Causation &mdash; Companies House &mdash; Duty of Care &mdash; Proximity &mdash; Register of Companies &mdash; Registrar of Companies &mdash; Special Relationships &mdash; Statutory Duties",
    "CITATION": "McRae v Commonwealth Disposals Commission [2015] EWHC 115 (QB)",
    "YEAR": "2015",
    "ABSTRACT": [
        "The court was required to determine preliminary issues in a claim for negligence and breach of statutory duty against the defendant Registrar of Companies.",
        "The claimant was the former managing director of a company called Taylor and Sons Limited. The company was a steel fabricator. It was a well-respected and substantial business. In 2009 a winding-up order was made against an unrelated company, Taylor and Son Limited, and sent to the registrar. The order did not contain a company number. The registrar inadvertently amended the registration details of the claimant&#8217;s company, as its name was very similar, showing it to be in liquidation. The company&#8217;s accountant noticed the mistake and contacted the registrar, who rectified public online records later the same day but was unable to correct subscription services for several weeks. The company&#8217;s suppliers and creditors, including the company&#8217;s bank, became aware of the false entry on the register and suspended the company&#8217;s credit. The company subsequently went into administration. The court was required to determine whether (i) the registrar owed the company a duty of care under the Companies Act 2006 to exercise reasonable care and skill so as to ensure that incorrect information was not entered on to the register; (ii) the registrar owed the company a duty of care under common law; (iii) the registrar&#8217;s breach of duty had caused the company to enter administration."
    ],
    "CATEGORIES": [
        "Negligence Other Related Subjects: Government Administration",
        "Company Law",
        "Assumption of Responsibility",
        "Breach of Duty of Care",
        "Causation",
        "Companies House",
        "Duty of Care",
        "Proximity",
        "Register of Companies",
        "Registrar of Companies",
        "Special Relationships",
        "Statutory Duties"
    ],
    "HELD": [
        "Preliminary issues determined in favour of claimant.",
        "(1) The court was not satisfied that there was a cause of action for damages for breach of statutory duty against the registrar in relation to his functions under the 2006 Act. The Act regulated the keeping of the register and imposed duties on the registrar for that purpose. The register published information which was available to the whole world, because it was available on the internet. The common law of negligence had control mechanisms designed to restrict the class of person who could claim damages for economic loss. However, the imposition of a statutory duty giving rise to a claim for damages at the suit of anyone who suffered economic loss by reason of any act or omission in breach of the statutory duty would create a very wide duty indeed. There was nothing in the Act to justify a finding that that was the intention of Parliament (see para.106 of judgment). (2) If a person did an act which was capable of causing harm to a particular person if done carelessly, he would have assumed responsibility to that person in respect of that task, White v Jones [1995] 2 A.C. 207 followed. In determining whether an assumption of responsibility and duty of care existed, the court took the following factors into account: (a) unless a remedy was provided by the common law of negligence, a company damaged by carelessness in these circumstances would have no remedy; (b) it was not difficult for the registrar&#8217;s staff to avoid errors of the instant type; (c) there were no public policy reasons for denying a duty of care; (d) the statutory duty or contractual relationship between the company and the registrar did not limit the nature and extent of the responsibility; (e) balancing the harm done to the company against the potential adverse impact on the registrar, it was clear that the balance favoured the loss falling on the registrar rather than the company; (f) it was likely that the imposition of a duty would improve the accuracy of the register, which was plainly in the public interest. It was fair, just and reasonable to impose a duty of care upon the registrar. A special relationship between the registrar and the company arose because it was foreseeable that if a company was wrongly said to be in liquidation, it would suffer serious harm. The nature of the exercise also supported the existence of such a relationship. The company was not consulted before an entry was made and had no opportunity to protest that the entry, if made, would be a mistake. Foreseeability and proximity had been established, Caparo Industries Plc v Dickman [1990] 2 A.C. 605, Ministry of Housing and Local Government v Sharp [1970] 2 Q.B. 223 and Customs and Excise Commissioners v Barclays Bank Plc [2006] UKHL 28, [2007] 1 A.C. 181 followed. Accordingly, the registrar owed a duty of care when entering a winding-up order on the register to take reasonable care to ensure that the order was not registered against the wrong company. The duty was owed to any company which was not in liquidation but which was wrongly recorded on the register as having been wound up by order of the court. The duty extended to take reasonable care to enter the order on the record of the company named in the order, and not any other company. It did not extend to checking information supplied by third parties, but only to entering that information accurately on the register (paras 108-118). (3) The registrar&#8217;s error had been a disaster for the company. The rumour of insolvency spread and the suppliers&#8217; immediate reaction was to refuse further credit to the company. Prior to the error, the suppliers had been trading on ordinary 30-day credit terms, and actually affording longer periods of credit than that. The company&#8217;s main customer terminated the company&#8217;s contract because of its concerns about the company&#8217;s future, which were fuelled by rumours resulting from the error. The bank refused to lend further money to the company. The claimant had proved that the reason the company went into administration was the error made by the registrar (paras 37, 39, 47-48)."
    ],
    "NUMBER": "471",
    "TYPE": "Headnotes",
    "NAME": "(wl) McRae v Commonwealth Disposals Commission",
    "JUDGE": "Edis J",
    "CIT": "[2015] EWHC 115 (QB)",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Ingram v Little",
        "(wl) Parker v Clark",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Chappell & Co v Nestle Co Ltd",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Spice Girls Ltd v Aprilia World Service BV"
    ],
    "COURT": "EWHC",
    "FLAGS": [
        "Approved"
    ],
    "CATEGORY": "Contracts &mdash; Formation of Contract &mdash; Guarantees &mdash; Mistake",
    "CITATION": "Associated Japanese Bank (International) Ltd v Credit du Nord [1989] 1 WLR 255",
    "YEAR": "1989",
    "CATEGORIES": [
        "Contracts",
        "Formation of Contract",
        "Guarantees",
        "Mistake"
    ],
    "HELD": [
        "The issue was whether the guarantee would only become effective if four existing machines were in fact leased out. It was of prime importance that the subject matter of the contract was non existent. The test of common law mistake was satisfied and the guarantee void ab initio."
    ],
    "NUMBER": "472",
    "TYPE": "Headnotes",
    "NAME": "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
    "JUDGE": "Steyn J",
    "CIT": "[1989] 1 WLR 255"
},
{
    "RELATED": [
        "(wl) Liverpool City Council v Irwin",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) Ingram v Little",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Errington v Errington and Woods",
        "(wl) City and Westminster Properties v Mudd",
        "(wl) Investors' Compensation Scheme Ltd v West Bromwich Building Society",
        "(wl) Car & Universal Finance Co Ltd v Caldwell",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Centrovincial Estates v Merchant Investors Assurance Company Ltd",
        "(wl) William Sindall plc v Cambridgeshire County Council"
    ],
    "YEAR": "1950",
    "COURT": "EWCA",
    "SUMMARY": [
        "War-damaged house; loss of identity",
        "As a matter of general principle, where a house within the Landlord and tenant Acts is so structurally altered that it becomes a new dwelling-house by reason of change of identity, the new premises shed all the attributes of the old. Whether any particular alterations come within this principle is a question of fact, but the inclusion of a garage in the demise has no material effect on the identity of the dwelling-house. Where there is a mutual mistake as to the effect of the structural alteration on the identity of the house, the Court, acting on the principle laid down in Cooper v Phibbs (1867) L.R. 2 H.L. 149 , will set aside a lease entered into under such a common misapprehension. The demised premises, a flat, had been let in 1939 at a standard rent of GBP 140 a year, and in repairing war-damage the landlord had made substantial alterations to the flat. Had the necessary notices been served, the increase in respect of improvements permitted under s.2(1) of the Act of 1920 would have brought the rent up to approximately GBP 250 a year, but the landlord and the tenant, who was a surveyor and a partner with the landlord in a firm of estate agents, were satisfied that the reconstructed flat was not subject to the previous standard rent of GBP 140 a year, and no notices were served. On completion of the work, the landlord let the flat, together with a garage which had not been previously demised, on a seven years&#8217; lease at GBP 250 a year. Subsequently, the tenant sought a declaration that the standard rent was GBP 140 a year and claimed repayment of the amount overpaid. Held, (1) disregarding the garage, which was not material to the question, the alterations were not such as to change the identity of the flat, and, since it was clear from the decision in Welch v Nagy [1950] 1 K.B. 455 , that no rule of estoppel could oust the jurisdiction of the court under the Acts, the tenant was not estopped by conduct, and the standard rent of GBP 140 a year applied; (2) (Jenkins, L.J., dissenting) there was a mutual mistake which was fundamental and in no way due to any fault of the landlord, so that in equity the landlord was entitled to have the lease set aside. ( Cooper v. Phibbs and Welch v. Nagy applied; Garrard v Frankel 54 E.R. 961 applied; Paget v Marshall (1884) 28 Ch. D. 255 applied; and Langford Property Co Ltd v Batten [1949] 2 All E.R. 422 applied; Wilde v Gibson 9 E.R. 897 considered; Lansdown v Lansdown 25 E.R. 441 referred to; Bingham v Bingham 27 E.R. 934 referred to; Angel v Jay [1911] 1 K.B. 666 referred to; Bell v Lever Brothers Ltd [1931] 1 K.B. 557 referred to; MacKenzie v Royal Bank of Canada [1934] A.C. 468 referred to; Seddon v North Eastern Salt Co Ltd [1905] 1 Ch. 326 referred to; and Asher v Seaford Court Estates [1949] 2 K.B. 481 referred to)."
    ],
    "CATEGORY": "Landlord and Tenant &mdash; Alterations &mdash; Leases &mdash; Mistake &mdash; Rent Control &mdash; Repairs &mdash; Rescission &mdash; War Damage",
    "JUDGE": "Bucknill LJ; Denning LJ; Jenkins LJ",
    "CATEGORIES": [
        "Landlord and Tenant",
        "Alterations",
        "Leases",
        "Mistake",
        "Rent Control",
        "Repairs",
        "Rescission",
        "War Damage"
    ],
    "NUMBER": "473",
    "TYPE": "Headnotes",
    "NAME": "(wl) Solle v Butcher",
    "CITATION": "Solle v Butcher [1950] 1 KB 671",
    "CIT": "[1950] 1 KB 671",
    "FLAGS": [
        "Criticised",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Solle v Butcher",
        "(wl) Spice Girls Ltd v Aprilia World Service BV",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Alpenstow v Regalian Properties",
        "(wl) Collier v Wright (Holdings) Ltd",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Bolton v Mahadeva",
        "(wl) Shogun Finance Ltd v Hudson",
        "(wl) The Brimnes",
        "(wl) Parker v Clark"
    ],
    "COUNSEL": "For G: Huw Davies. For T: John Reeder Q.C. and Rachel Toney.",
    "COURT": "EWCA",
    "SUMMARY": [
        "Defendant chartered vessel to give assistance on basis of wrong information about its location - Defendant cancelled contract and declined to pay - Contract not void at common law for mutual mistake - Vessels not so far apart as to make contractual services which could have been provided substantially different from contractual services envisaged by parties - No equitable discretion to rescind for mistake contract which was valid at law.",
        "T appealed against an order that it was liable to pay to G a sum representing the cancellation fee under a binding contract between the parties. T had been engaged to provide salvage services to a ship which had suffered serious structural damage at sea. T had contracted with G to hire G&#8217;s merchant vessel for a minimum of five days to help with crew evacuation. Both parties had believed that the two ships were in close proximity to each other but it had subsequently emerged that they were not and T had cancelled the arrangement and refused to pay anything in respect of hire charges. Upon the issue of proceedings for a sum representing the hire charges for the minimum period or alternatively damages for wrongful repudiation of the contract, judgment had been given for G. In its appeal, T, relying upon the test of mistake identified in Bell v Lever Brothers Ltd [1932] A.C. 161 reasserted that the contract had been concluded by reason of a fundamental mistake of fact which had deprived the contract of the consideration underlying it. T maintained that the contract was either void in law or it was voidable so that T was entitled to relief in equity by way of rescission following Solle v Butcher [1950] 1 K.B. 671."
    ],
    "CATEGORY": "Contracts &mdash; Avoidance &mdash; Equitable Principles &mdash; Mistake &mdash; Rescission &mdash; Shipping",
    "CITATION": "Great Peace Shipping Ltd v Tsavliris (International) Ltd [2002] EWCA Civ 1407",
    "YEAR": "2002",
    "CATEGORIES": [
        "Contracts",
        "Avoidance",
        "Equitable Principles",
        "Mistake",
        "Rescission",
        "Shipping"
    ],
    "HELD": [
        "dismissing the appeal, that precedents covering the effect of mistake on contract had historically been difficult to reconcile and the instant case provided the first opportunity to clarify the relationship between Bell and Solle . It was important to analyse the rights and obligations created by the contract before considering the effect of an alleged mistake. Bell indicated that equitable intervention such as that demonstrated in Cooper v Phibbs (1867) L.R. 2 H.L. 149 was permissible where the common law would have ruled the contract void for mistake and it was thought to be unlikely that the court in Bell had overlooked an equitable right to rescind an agreement in different circumstances. Whereas Bell was concerned with the question whether the mistake had the effect of producing a situation where the parties were only able to provide something essentially different from that which they had contracted to provide, Solle and the cases which followed it were more concerned with circumstances where the effect of the mistake made the contract a bad bargain for one of the parties. The two cases were irreconcilable and the only way to restore coherence to that area of the law was to declare that there was no jurisdiction to grant rescission of a contract on the ground of common mistake where the contract was valid and enforceable as far as the ordinary principles of contract law were concerned, Solle doubted and Bell applied. In the instant case, the contract between the parties was binding and upon cancellation of it, there was no injustice in the cancellation fee provided for in the contract becoming payable. Cooper considered."
    ],
    "NUMBER": "474",
    "TYPE": "Headnotes",
    "NAME": "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
    "JUDGE": "Lord Phillips MR; May LJ; Laws LJ",
    "CIT": "[2002] EWCA Civ 1407",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Grogan v Robin Meredith Plant Hire",
        "(wl) Ajayi (EA) v Briscoe (Nigeria) Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Bunge Corporation v Tradax Export SA",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Raffles v Wichelhaus",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Chartbrook Ltd v Persimmon Homes Ltd"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Building contract; delay",
        "Per Lord Reid: &#8220;It appears to me that frustration depends, at least in most cases, not on adding any implied term but on the true construction of the terms which are in the contract, read in the light of the nature of the contract and of the relevant surrounding circumstances when the contract was made. . . . On this view, there is no need to consider what the parties thought, or how they or reasonable men in their shoes would have dealt with the new situation if they had foreseen it. The question is whether the contract which they did make is, on its true construction, wide enough to apply to the new situation: if it is not, then it is at an end.&#8221; Per Lord Radcliffe: &#8220;. . . frustration occurs whenever the law recognises that, without default of either party, a contractual obligation has become incapable of being performed because the circumstances in which performance is called for would render it a thing radically different from that which was undertaken by the contract. Non haec in foedera veni. It was not this that I promised to do.&#8221; In 1946 the plaintiffs agreed to build 78 houses for the defendants. The contract price was GBP 85,836. The work was to be completed within eight months. Before the contract was signed the plaintiffs had written to the defendants: &#8220;Our tender is subject to adequate supplies of material and labour being available as and when required to carry out the work within the time specified.&#8221; Owing to bad weather, but more particularly to an unforeseen shortage of available labour, due to an unexpected lag in the demobilisation of troops after the war, the work took 22 months to complete. The contractors received the contract price, but they claimed that by reason of the delay they were entitled to treat the contract as void and to be paid on a quantum meruit. Lord Goddard C.J. held that on the wording of the contract the contractors were entitled to throw over the contract and sue on a quantum meruit basis. The Court of Appeal had remitted the case to the arbitrator for further findings. The appeal was heard after the arbitrator had made a supplemental award, when it was allowed on the grounds that (1) the condition in the letter meant that, if adequate supplies of material and labour should not be available when wanted, the contractors would be excused from completing the work within eight months but would be given a reasonable time; that the condition affected the time, but not the price; and that, so interpreted, the condition had been fully honoured; and that (2) when an owner employed a builder to do work for a fixed sum, his whole object was to secure himself against the unexpected difficulties which so often arose; and that the court could seriously damage the sanctity of contracts if it allowed a builder to charge more simply because, without anyone&#8217;s fault, the work took him much longer than he thought."
    ],
    "CATEGORY": "Construction Law &mdash; Building and Engineering Contracts &mdash; Contract Terms &mdash; Delay &mdash; Frustration",
    "CITATION": "Davis Contractors Ltd v Fareham Urban District Council [1956] AC 696",
    "YEAR": "1956",
    "CATEGORIES": [
        "Construction Law",
        "Building and Engineering Contracts",
        "Contract Terms",
        "Delay",
        "Frustration"
    ],
    "HELD": [
        "on appeal to the House of Lords, (1) the letter merely formed part of the negotiations which led up to the contract and its terms were not incorporated into that contract; (2) in a contract of this kind the contractor undertook to do the work for a definite sum, and he took the risk of the cost being greater or less than he expected; if delay occurred through no one&#8217;s fault, that might be in the contemplation of the contract and there might be provision for extra time being given; to that extent the other party took the risk of delay; but he did not take the risk of the cost being increased by such delay; it might be that delay could be of a character so different from anything contemplated that the contract would be at an end, but in this case the most that could be said was that the delay was greater in degree than was to be expected; it was not caused by any new and unforeseeable factor or event; the job proved to be more onerous but it never became a job of a different kind from that contemplated in the contract; therefore the appeal must be dismissed. FA Tamplin Steamship Co Ltd v Anglo Mexican Petroleum Products Co Ltd [1916] 2 A.C. 397 applied; Denny Mott &amp; Dickson Ltd v James B Fraser &amp; Co Ltd [1944] A.C. 265 applied; Bank Line Ltd v Arthur Capel &amp; Co [1919] A.C. 435 applied; and British Movietonews v London and District Cinemas [1952] A.C. 166 applied; Bush v Whitehaven Trustees (1888) 52 J.P. 392 criticised."
    ],
    "NUMBER": "475",
    "TYPE": "Headnotes",
    "NAME": "(wl) Davis Contractors Ltd v Fareham Urban District Council",
    "JUDGE": "Viscount Simonds; Lord Morton of Henryton; Lord Reid; Lord Radcliffe; Lord Somervell of Harrow",
    "CIT": "[1956] AC 696",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "(wl) Associated Japanese Bank (International) Ltd v Credit du Nord",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) Solle v Butcher",
        "(wl) Harvela Investments Ltd v Royal Trust of Canada Ltd",
        "(wl) Sudbrook Trading Estate Ltd v Eggleton",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Holwell Securities Ltd v Hughes",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Nicolene v Simmonds"
    ],
    "YEAR": "1981",
    "COURT": "UKHL",
    "SUMMARY": [
        "Lease; termination by frustration",
        "The doctrine of frustration of contracts is in principle applicable to leases, although the occasions on which it may be applied are rare. A warehouse was demised to the defendants for a 10-year period. The only access to the warehouse was by a street which the local authority closed, after five years of the term had elapsed, for a 20-month period. In an action for unpaid rent the defendants claimed that the lease had been frustrated. The judge held that a lease could not be frustrated. On appeal direct to the House of Lords, held, dismissing the appeal, (1) frustration could be applied to leases in rare cases; (2) on the facts here the doctrine did not apply. (Dictum in Davis Contractors v Fareham Urban DC [1956] A.C. 696 applied)."
    ],
    "CATEGORY": "Landlord and Tenant Other Related Subjects: Housing &mdash; Real Property &mdash; Contracts &mdash; Frustration &mdash; Leases &mdash; Termination",
    "JUDGE": "Lord Hailsham LC; Lord Wilberforce; Lord Simon of Glaisdale; Lord Russell of Killowen; Lord Roskill",
    "CATEGORIES": [
        "Landlord and Tenant Other Related Subjects: Housing",
        "Real Property",
        "Contracts",
        "Frustration",
        "Leases",
        "Termination"
    ],
    "NUMBER": "476",
    "TYPE": "Headnotes",
    "NAME": "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
    "CITATION": "National Carriers Ltd v Panalpina (Northern) Ltd [1981] AC 675",
    "CIT": "[1981] AC 675",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "(wl) The Brimnes",
        "(wl) Koufos v Czarnikow Ltd (The Heron II)",
        "(wl) Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Karsales (Harrow) Ltd v Wallis",
        "(wl) McCutcheon v David MacBrayne Ltd",
        "(wl) Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
        "(wl) Schawel v Reade",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Nicolene v Simmonds"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Carriage by sea; charterparty; &#8220;time&#8221; charter for single voyage",
        "Pearson J. was wrong in The Massalia in holding that a reference in a charterparty to sending a telegraph &#8220;on passing Suez Canal&#8221; imported an obligation to pass through the canal leading to frustration of the contract on the canal&#8217;s closure. Charterers took a vessel on a time charterparty for a &#8220;trip out to India via Black Sea&#8221; including a war clause forbidding the charterers to bring her within a dangerous zone without the owners&#8217; consent. The vessel was trapped in the Suez Canal, which was a dangerous zone when she entered it. On her release the charterers claimed that the contract was frustrated and the owners treated this as a repudiation and claimed damages."
    ],
    "CATEGORY": "Shipping &mdash; Breach of Contract &mdash; Carriage By Sea &mdash; Charterparties &mdash; Time &mdash; War Zones",
    "CITATION": "Ocean Tramp Tankers Corporation v V [1964] 2 QB 226",
    "YEAR": "1964",
    "CATEGORIES": [
        "Shipping",
        "Breach of Contract",
        "Carriage By Sea",
        "Charterparties",
        "Time",
        "War Zones"
    ],
    "HELD": [
        "that this was a time charterparty, the voyage being the measure of time, and the vessel was under the charterers&#8217; orders in entering the canal; they were therefore in breach of the war clause and the closure of the canal did not, on the facts, frustrate the venture because the situation was not fundamentally different. (Decision of Megaw, J. ([1963] 2 Lloyd&#8217;s Rep. 155) reversed; Societe Franco-Tunisienne d&#8217;Armement-Tunis v Sidermar SpA [1961] 2 Q.B. 278 overruled; observations of Lord Radcliffe in Davis Contractors v Fareham Urban DC [1956] A.C. 696 applied)."
    ],
    "NUMBER": "477",
    "TYPE": "Headnotes",
    "NAME": "(wl) Ocean Tramp Tankers Corporation v V",
    "JUDGE": "Lord Denning MR; Danckwerts LJ; Donovan LJ",
    "CIT": "[1964] 2 QB 226",
    "FLAGS": [
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd",
        "(wl) McCutcheon v David MacBrayne Ltd",
        "(wl) Tinn v Hoffman & Co",
        "(wl) The Brimnes",
        "(wl) Koufos v Czarnikow Ltd (The Heron II)",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Davis Contractors Ltd v Fareham Urban District Council",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Bank of Credit and Commerce International SA v Ali",
        "(wl) Parker v Clark"
    ],
    "COURT": "EWHC",
    "SUMMARY": [
        "Carriage by sea; charterparty; war; frustration; date",
        "It is the acts of war themselves which might prevent further performance of a contract, and not the formal declaration of war. Thus, there is no automatic frustration of a contract by a declaration of war. X became trapped in the Shatt al-Arab when hostilities commenced between Iran and Iraq. A dispute arose as to when the contract became frustrated: C contended that it was the date of the formal declaration of war and O contended that it was the date on which it became generally accepted in shipping circles that passage out of the Shatt al-Arab was likely to be impossible for some considerable while to come. The arbitrator found in favour of O."
    ],
    "CATEGORY": "Shipping Other Related Subjects: Contracts &mdash; Carriage By Sea &mdash; Charterparties &mdash; Frustration &mdash; Time &mdash; War",
    "CITATION": "Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis [1983] 1 WLR 1469",
    "YEAR": "1983",
    "CATEGORIES": [
        "Shipping Other Related Subjects: Contracts",
        "Carriage By Sea",
        "Charterparties",
        "Frustration",
        "Time",
        "War"
    ],
    "HELD": [
        "dismissing C&#8217;s appeal, that the date found by the arbitrator as the date on which the contract became frustrated, was within the area of permissible dates and the court would not interfere with his findings. A declaration of war did not of itself prevent and thus discharge performance of a contract, unless it made the contract illegal, as, for example, involving trading with the enemy. It was the acts of war themselves that operated to prevent further performance of the contract, and thus the arbitrator had been entitled to conclude that it was only when the actual physical war itself was such as to prevent further performance of the contract, that it became discharged."
    ],
    "NUMBER": "478",
    "TYPE": "Headnotes",
    "NAME": "(wl) Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
    "JUDGE": "Mustill J",
    "CIT": "[1983] 1 WLR 1469",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Photo Production Ltd v Securicor Transport",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Pao On v Lau Yiu Long",
        "(wl) Nicolene v Simmonds",
        "(wl) Hollier v Rambler Motors (AMC) Ltd",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) J Evans & Son (Portsmouth) v Andrea Merzario Ltd",
        "(wl) Canada Steamship Lines Ltd v The King",
        "(wl) Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "(wl) Courtney & Fairbairn Ltd v Tolaini Bros (Hotels) Ltd",
        "(wl) Olley v Marlborough Court Hotel"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Exclusion clause; fundamental breach",
        "The so-called doctrine of fundamental breach does not operate so as to prevent reliance upon an exclusion of liability clause upon the contract being brought to an end. The defendants contracted with the plaintiffs to provide a night- patrol service at the latter&#8217;s factory premises. The contract excluded liability on the defendants&#8217; part for &#8220;any injurious act or default of any employee of the (defendants) unless such act or default could have been foreseen and avoided by the exercise of due diligence on the part of the employer; nor in any event shall the company be held responsible for any loss suffered through fire or any other cause except in so far as is solely attributable to the negligence of the company&#8217;s employees acting within the cause of their employment.&#8221; One of the defendants&#8217; employees who had been satisfactorily employed by them for some three months deliberately started a small fire in the factory, the fire getting out of control and burning down the factory. The Court of Appeal reversed the trial judge&#8217;s ruling that the defendants could rely upon the contract as excluding their liability."
    ],
    "CATEGORY": "Contracts &mdash; Contract Terms &mdash; Contractual Liability &mdash; Exclusion Clauses &mdash; Fundamental Breach &mdash; Security Companies",
    "CITATION": "Photo Production Ltd v Securicor Transport Ltd [1980] AC 827",
    "YEAR": "1980",
    "CATEGORIES": [
        "Contracts",
        "Contract Terms",
        "Contractual Liability",
        "Exclusion Clauses",
        "Fundamental Breach",
        "Security Companies"
    ],
    "HELD": [
        "allowing the defendants&#8217; appeal, that whether an exclusion clause was apt to exclude or limit liability was a matter of construction of the contract; that the fact that a breach may be such as to justify the innocent party in terminating or treating as repudiated the contract did not mean that the terms of the contract in so far as they governed liability were not to be enforced; that, generally, parties to a contract, when they bargained on equal terms, should be at liberty to apportion liability in the contract as they saw fit; and that the wording of the exclusion clause in the instant case was adequate to exclude liability for what occurred. (Decision of Court of Appeal reversed Suisse Atlantique Societe d&#8217;Armement SA v NV Rotterdamsche Kolen Centrale [1967] 1 A.C. 361 ; Charterhouse Credit Co v Tolly [1963] 2 Q.B. 683 , Harbutt&#8217;s Plasticine Ltd v Wayne Tank &amp; Pump Co Ltd [1970] 1 Q.B. 447 and Wathes (Western) Ltd v Austins (Menswear) Ltd [1976] 1 Lloyd&#8217;s Rep. 14 overruled)."
    ],
    "NUMBER": "479",
    "TYPE": "Headnotes",
    "NAME": "(wl) Photo Production Ltd v Securicor Transport Ltd",
    "JUDGE": "Lord Wilberforce; Lord Diplock; Lord Salmon; Lord Keith of Kinkel; Lord Scarman",
    "CIT": "[1980] AC 827",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) White & Carter (Councils) Ltd v McGregor",
        "(wl) Dickinson v Abel",
        "(wl) Pankhania v Hackney Borough Council",
        "(wl) British Steel Corporation v Cleveland Bridge and Engineering Co Ltd",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Inntrepreneur Pub Co v East Crown Ltd",
        "(wl) Shogun Finance Ltd v Hudson",
        "(wl) Collier v Wright (Holdings) Ltd",
        "(wl) Rose v Pim",
        "(wl) Chappell & Co v Nestle Co Ltd",
        "(wl) Photo Production Ltd v Securicor Transport Ltd",
        "(wl) The Brimnes"
    ],
    "YEAR": "1972",
    "COURT": "EWCA",
    "SUMMARY": [
        "Performance; lump sum contract; installation of water heater; defects amounting to incomplete performance",
        "Where a contractor instals for a lump sum payment a heating system which does not heat adequately and gives off fumes, he is not entitled to recover any part of the contract price. B, a plumbing and heating contractor, agreed to instal a combined heating and domestic hot water system in M&#8217;s house for GBP 560. There were numerous defects in the work, which caused the system not to heat adequately and to give off fumes, and which would cost GBP 174 to repair. M refused to pay. The county court judge held that there had been substantial performance of the contract, and gave judgment for B, subject to an appropriate set-off in favour of M. On appeal by M, held, allowing the appeal, that having regard to the nature of the defects and the cost of remedying them, B could not be said substantially to have performed the contract, and he was therefore not entitled to recover anything. ( H Dakin &amp; Co v Lee [1916] 1 K.B. 566 distinguished and Hoenig v Isaacs [1952] 2 All E.R. 176 distinguished)."
    ],
    "CATEGORY": "Contracts &mdash; Part Performance &mdash; Payments",
    "JUDGE": "Sachs LJ; Buckley LJ; Cairns LJ",
    "CATEGORIES": [
        "Contracts",
        "Part Performance",
        "Payments"
    ],
    "NUMBER": "480",
    "TYPE": "Headnotes",
    "NAME": "(wl) Bolton v Mahadeva",
    "CITATION": "Bolton v Mahadeva [1972] 1 WLR 1009",
    "CIT": "[1972] 1 WLR 1009",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Bolton v Mahadeva",
        "(wl) The Brimnes",
        "(wl) National Carriers Ltd v Panalpina (Northern) Ltd",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council",
        "(wl) L J Korbetis v Transgrain Shipping BV",
        "(wl) Alpenstow v Regalian Properties",
        "(wl) Edwards v Skyways",
        "(wl) Shogun Finance Ltd v Hudson",
        "(wl) Interfoto Picture Library Ltd v Stiletto Visual Productions Ltd",
        "(wl) Esso Petroleum Co Ltd v Mardon",
        "(wl) British Bank for Foreign Trade Ltd v Novinex Ltd",
        "(wl) Rose v Pim"
    ],
    "COURT": "UKHL",
    "SUMMARY": [
        "Repudiation; not accepted; other parties&#8217; right to performance",
        "It is a rule of Scottish, and semble likewise of English, law that if one party to a contract repudiates it, the other is at liberty nonetheless to perform it, if he can do so without the co-operation of the repudiating party, and if he does so he can insist on the repudiating party paying in full the amount due under the contract. He is not obliged to accept the repudiation and sue for damages. Per Lord Reid: It might be different if it is proved that the contractor had no interest at all in enforcing the contract.A Scottish garage proprietor, by his agent, agreed with a Scottish advertising contractor for the display of advertisements in Scotland for his garage for three years. The fee was payable weekly and the contract provided that if any payment was four weeks in arrear the whole three years&#8217; payments should immediately become payable. On the same day the proprietor wrote to the contractor to cancel the contract. The contractor refused to do so, displayed the advertisements in accordance with it, and when the first payment was four weeks overdue, sued for the whole three years&#8217; payments."
    ],
    "CATEGORY": "Contracts &mdash; Payments &mdash; Performance &mdash; Repudiation &mdash; Scotland",
    "CITATION": "White &amp; Carter (Councils) Ltd v McGregor [1962] AC 413",
    "YEAR": "1962",
    "CATEGORIES": [
        "Contracts",
        "Payments",
        "Performance",
        "Repudiation",
        "Scotland"
    ],
    "HELD": [
        "that the whole was due Langford &amp; Co Ltd v Dutch 1952 S.C. 15 overruled."
    ],
    "NUMBER": "481",
    "TYPE": "Headnotes",
    "NAME": "(wl) White & Carter (Councils) Ltd v McGregor",
    "JUDGE": "Lord Reid; Lord Morton of Henryton; Lord Tucker; Lord Keith of Avonholm; Lord Hodson",
    "CIT": "[1962] AC 413",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Karsales (Harrow) Ltd v Wallis",
        "(wl) Thornton v Shoe Lane Parking",
        "(wl) Raffles v Wichelhaus",
        "(wl) Schawel v Reade",
        "(wl) McRae v Commonwealth Disposals Commission",
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Kleinwort Benson Ltd v Malaysia Mining Corporation",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Nicolene v Simmonds",
        "(wl) Fisher v Bell",
        "(wl) Blackpool and Fylde Aeroclub Ltd v Blackpool Borough Council"
    ],
    "COUNSEL": "For Cavendish: Joanna Smith QC, Richard Leiper, James McCreath, Edwin Peel. For Beavis: John de Waal QC, David Lewis, Ryan Hocking. For the first respondent: Michael Bloch QC, Camilla Bingham QC. For the second respondent: Jonathan Kirk QC, David Altaras, Thomas Samuels. For the intervener: Christopher Butcher QC.",
    "COURT": "UKSC",
    "SUMMARY": [
        "In determining whether a contractual provision was penal, the true test was whether it was a secondary obligation which imposed a detriment on the contract-breaker out of all proportion to the innocent party&#8217;s legitimate interest in the enforcement of the primary obligation."
    ],
    "CATEGORY": "Contracts Other Related Subjects: Consumer Law &mdash; Company Law &mdash; Road Traffic &mdash; Breach of Contract &mdash; Car Parks &mdash; Commercial Contracts &mdash; Consumer Contracts &mdash; Penalties &mdash; Penalty Clauses &mdash; Share Purchases &mdash; Unfair Contract Terms",
    "CITATION": "Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis [2015] UKSC 67",
    "YEAR": "2015",
    "ABSTRACT": [
        "In conjoined appeals, the Supreme Court considered the law relating to contractual penalty clauses.",
        "Cavendish&#8217;s appeal related to clauses in a share sale agreement which restricted competition by the seller of the shares and stipulated a reduced price in the event of default on his part. Beavis&#8217;s appeal related to a parking charge of \u00a385 imposed for overstaying the permitted period of free parking."
    ],
    "CATEGORIES": [
        "Contracts Other Related Subjects: Consumer Law",
        "Company Law",
        "Road Traffic",
        "Breach of Contract",
        "Car Parks",
        "Commercial Contracts",
        "Consumer Contracts",
        "Penalties",
        "Penalty Clauses",
        "Share Purchases",
        "Unfair Contract Terms"
    ],
    "HELD": [
        "Appeals allowed in part.",
        "(Lord Toulson dissenting in part) (1) The purpose of the law relating to penalty clauses was to prevent a claimant recovering a sum of money in respect of a breach of contract committed by the defendant which bore little or no relationship to the loss actually suffered by the claimant as a result of the breach, Export Credits Guarantee Department v Universal Oil Products Co [1983] 1 W.L.R. 399 applied. The penalty rule regulated only the remedies available for breach of a party&#8217;s primary obligations, not the primary obligations themselves. That concept provided the whole basis of the classic distinction in law between a penalty and a genuine pre-estimate of loss, the former being essentially a way of punishing the contract-breaker rather than compensating the innocent party (see paras 11-13 of judgment). Clydebank Engineering &amp; Shipbuilding Co Ltd v Don Jose Ramos Yzquierdo y Castaneda [1905] A.C. 6 held that a contractual provision would be penal if it was &#8220;unconscionable and extravagant&#8221;. In Dunlop Pneumatic Tyre Co Ltd v New Garage &amp; Motor Co Ltd [1915] A.C. 79, Lord Dunedin agreed that that was the essential question. Lord Atkinson considered that the question was the nature and extent of the innocent party&#8217;s interest in the performance of the relevant obligation. In determining whether a contractual provision was penal, the true test was whether it was a secondary obligation which imposed a detriment on the contract-breaker out of all proportion to any legitimate interest of the innocent party in the enforcement of the primary obligation. The innocent party could have no proper interest in simply punishing the defaulter. His interest was in performance or in some appropriate alternative to performance. Compensation was not necessarily the only legitimate interest that the innocent party might have in the performance of the defaulter&#8217;s primary obligations, Clydebank , Dunlop , Lordsvale Finance Plc v Bank of Zambia [1996] Q.B. 752, United International Pictures v Cine Bes Filmcilik ve Yapimcilik AS [2003] EWCA Civ 1669, [2004] 1 C.L.C. 401, Murray v Leisureplay Plc [2005] EWCA Civ 963, [2005] I.R.L.R. 946 and White &amp; Carter (Councils) Ltd v McGregor [1962] A.C. 413 applied (paras 19-32). Although the penalty rule was open to criticism, it would not be appropriate for the instant court to abolish it or extend it (paras 36-43). (2) In Cavendish&#8217;s appeal, the first clause under consideration was, in reality, a price adjustment clause. It was a primary obligation, rather than a secondary provision. Although it had no relationship with the measure of loss attributable to the breach, Cavendish had a legitimate interest in the observance of the restrictive covenants which extended beyond the recovery of that loss. Viewed in the context of a carefully negotiated agreement between informed and legally advised parties at arm&#8217;s length, the clause could not be regarded as extravagant, exorbitant or unconscionable. It was not a penalty (paras 74-78, 175-181). The second clause, which contained a price formula for the sale of retained shares, was justified by the same legitimate interest. It was not a penalty, Jobson v Johnson [1989] 1 W.L.R. 1026 doubted (paras 79-88, 182-187). (3) In Beavis&#8217;s appeal, the parking charge had two main objectives: to manage the efficient use of parking space in the interests of the nearby retail outlets and of their customers, and to provide an income stream to enable ParkingEye to meet the costs of operating the scheme and make a profit. Those objectives were perfectly reasonable. The charge was not a penalty: ParkingEye had a legitimate interest in charging overstaying motorists which extended beyond the recovery of any loss. There was no reason to suppose that \u00a385 was out of all proportion to ParkingEye&#8217;s interests. Motorists regularly used the car park knowing of the charge, which was some evidence of its reasonableness. They clearly regarded the risk of having to pay \u00a385 for overstaying as an acceptable price to pay for the convenience of parking there. The fact that some customers underestimated or overlooked the time required or taken for shopping, or whatever else they were doing, did not make the scheme excessive or unconscionable (paras 97-101, 198). The parking charge did not infringe the Unfair Terms in Consumer Contracts Regulations 1999. A reasonable motorist in Beavis&#8217;s position would have agreed to the term imposing the charge in individual contract negotiations, Aziz v Caixa d&#8217;Estalvis de Catalunya, Tarragona i Manresa (Catalunyacaixa) (C-415/11) [2013] 3 C.M.L.R. 5 applied (paras 102-114, 200-213). (4) (Per Lord Mance) The courts below had found some support in the Protection of Freedoms Act 2012 for the view that charges like the parking charge in Beavis&#8217;s case were not to be regarded as unenforceable. That was a misreading of the Act. The reference in Sch.4 para.1 to a relevant &#8220;obligation&#8221; did not exclude the penalty doctrine. On the contrary, if a contractually-stipulated charge was a penalty, there would be no obligation (para.191). (Per Lord Toulson) The penalty clause made no allowance for circumstances, allowed no period of grace and provided no room for adjustment. ParkingEye had failed to show factual grounds on which it could reasonably assume that a customer using the car park would have agreed, in individual negotiations, to pay \u00a385 if he overstayed for even one minute, Aziz considered (paras 306-314)."
    ],
    "NUMBER": "482",
    "TYPE": "Headnotes",
    "NAME": "(wl) Cavendish Square Holding BV v Talal El Makdessi; ParkingEye Ltd v Beavis",
    "JUDGE": "Lord Neuberger PSC; Lord Mance JSC; Lord Clarke JSC; Lord Sumption JSC; Lord Carnwath JSC; Lord Toulson JSC; Lord Hodge JSC",
    "CIT": "[2015] UKSC 67",
    "FLAGS": [
        "Approved",
        "Neuberger"
    ]
},
{
    "RELATED": [
        "(wl) East v Maurer",
        "(wl) H Parsons (Livestock) Ltd v Uttley Ingham & Co",
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) Royscot Trust v Rogerson",
        "(wl) Davis Contractors Ltd v Fareham Urban District Council",
        "(wl) Koufos v Czarnikow Ltd (The Heron II)",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Raffles v Wichelhaus",
        "(wl) Oscar Chess Ltd v Williams",
        "(wl) City and Westminster Properties v Mudd",
        "(wl) Howard Marine & Dredging Co Ltd v A Ogden & Sons (Excavation) Ltd",
        "(wl) Daulia Ltd v Four Millbank Nominees Ltd"
    ],
    "YEAR": "1949",
    "COURT": "EWCA",
    "SUMMARY": [
        "Remoteness; loss of profit arising from delay in delivery",
        "In considering the authorities on remoteness of damage the following general propositions emerge: (1) It is well settled that the governing purpose of damages is to put the party whose rights have been violated in the same position, so far as money can do so, as if his rights had been observed. This purpose, if relentlessly pursued, would provide him with a complete indemnity for all losses de facto resulting from a particular breach, however improbable, however unpredictable. This, in contract at least, is recognised as too harsh a rule; (2) in cases of breach of contract the aggrieved party is only entitled to recover such part of the loss actually resulting as was at the time of the contract reasonably foreseeable as liable to result from the breach; (3) what was at that time reasonably foreseeable depends on the knowledge then possessed by the parties, or, at all events, by the party who later commits the breach; (4) for this purpose, knowledge &#8220;possessed&#8221; is of two kinds - one imputed, the other actual. Everyone, as a reasonable person, is taken to know the &#8220;ordinary course of things&#8221; and, consequently, what loss is liable to result from a breach of that ordinary course. This is the subject-matter of the &#8220;first rule&#8221; in, Hadley v Baxendale 156 E.R. 145 , but to this knowledge, which a contract-breaker is assumed to possess, whether he actually possesses it or not, there may have to be added in a particular case knowledge which he actually possesses of special circumstances outside the &#8220;ordinary course of things&#8221; of such a kind that a breach in those special circumstances would be liable to cause more loss. Such a case attracts the operation of the &#8220;second rule&#8221; so as to make additional loss also recoverable; (5) in order to make the contract-breaker liable under either rule, it is not necessary that he should actually have asked himself what loss is liable to result from a breach. It suffices that, if he had considered the question, he would, as a reasonable man, have concluded that the loss in question was liable to result, and (6) nor, finally, to make a particular loss recoverable, need it be proved that on a given state of knowledge the defendant could, as a reasonable man, foresee that a breach must necessarily result in that loss. It is enough if he could foresee it was likely to result. It is enough - to borrow from the language of Lord du Parcq in Monarch Steamship Co v A/B Karlshamns Oljefabriker [1947-51] C.L.Y. 2562 if the loss (or some factor without which it would not have occurred) is a &#8220;serious possibility&#8221; or a &#8220;real danger&#8221;. (Perhaps the colloquialism &#8220;on the cards&#8221; indicates the shade of meaning with greater accuracy than &#8220;likely&#8221; to result.) Applying these general principles to a case where the plaintiffs, a laundry company, claimed damages from the defendants, an engineering company, for delay in supplying a boiler, which - so the defendants had been informed - was to &#8220;be put into use in the shortest possible space of time&#8221;, it was held that the obvious purpose for which a boiler in a business such as the plaintiff company&#8217;s was to be used leapt to the eye, and that no supplier, let alone an engineering company which had promised delivery of such an article by a particular date, with knowledge that it was to be put into use immediately on delivery, could reasonably contend that it could not foresee that loss of profit or loss of business would be liable to result to the purchaser from a long delay in delivery thereof, with the consequence that the plaintiffs were entitled to damages for loss of profits resulting from the enforced delay in extending their business, Monarch Steamship Co v A/B Karlshamns Oljefabriker[1947-51] C.L.Y. 2562 ; Hadley v Baxendale 156 E.R. 145 , British Columbia Saw Mill Co Ltd v Nettleship (1867-68) L.R. 3 C.P. 499 distinguished; and Portman v Middleton 140 E.R. 1108 distinguished."
    ],
    "CATEGORY": "Damages &mdash; Delay &mdash; Profits &mdash; Remoteness",
    "JUDGE": "Asquith LJ",
    "CATEGORIES": [
        "Damages",
        "Delay",
        "Profits",
        "Remoteness"
    ],
    "NUMBER": "483",
    "TYPE": "Headnotes",
    "NAME": "(wl) Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
    "CITATION": "Victoria Laundry (Windsor) Ltd v Newman Industries Ltd [1949] 2 KB 528",
    "CIT": "[1949] 2 KB 528",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Hong Kong Fir Shipping Co Ltd v Kawasaki Kisen Kaisha Ltd",
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) The Brimnes",
        "(wl) Royscot Trust v Rogerson",
        "(wl) Davis Contractors Ltd v Fareham Urban District Council",
        "(wl) Tinn v Hoffman & Co",
        "(wl) Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "(wl) Great Peace Shipping Ltd v Tsavliris (International) Ltd",
        "(wl) Schawel v Reade",
        "(wl) Raffles v Wichelhaus",
        "(wl) L J Korbetis v Transgrain Shipping BV"
    ],
    "YEAR": "1969",
    "COURT": "UKHL",
    "SUMMARY": [
        "Carriage by sea; charterparty; delay; measure of damages",
        "Where a party is in breach of a contract for the carriage of commodities, the price of which commodities is liable to fluctuate, he ought to have foreseen such fluctuation; accordingly if the price falls this is reflected in the measure of damages. The appellant shipowner entered into a charterparty with the respondents, who were merchants. Under the terms of the charterparty the ship was to be loaded with sugar at Constanza on or after October 27, 1960, and was to proceed therefrom with all convenient speed to Basrah. In fact the ship called at several ports en route to Basrah thus taking some nine days longer to arrive than it would have done had it sailed directly to Basrah. The price of sugar at Basrah fell during those nine days, and in the result the respondents&#8217; sugar was sold for GBP 4,183 16s. 8d. less than it would have been had it arrived promptly. Disputes having arisen an umpire found as facts, inter alia, (a) that sugar was regularly bought and sold at Basrah, which fact was known to the appellant; (b) that the price of sugar there fluctuated from time to time; (c) that shipowners generally knew that there was some urgency in carrying sugar, a perishable commodity, to its destination; and (d) that the appellant did not know that the respondents intended to sell the sugar promptly on arrival. The appellant admitted that the delay was in breach of the charterparty. As to the measure of damages, held (1) that on the facts the appellant ought to have foreseen that delay would involve a serious possibility of a real danger that the price of sugar would decline; and (2) that the proper damages were therefore GBP 4,183 16s. 8d., the difference between the price which the sugar ought to have fetched if it had arrived on time and the price which it in fact fetched. (The &#8220;serious possibility of real danger,&#8221; per Lords Upjohn and Pearce, was expressed in differing terms by Lords Reid, Morris of Borth-y-Gest, and Hodson.) ( Parana, The (1877) 2 P.D. 118 not followed and Notting Hill, The (1884) 9 P.D. 105 not followed; Hadley v Baxendale 156 E.R. 145 applied, Victoria Laundry (Windsor) v Newman Industries [1947-51] C.L.Y. 2565 applied and Dunn v Bucknall Bros [1902] 2 K.B. 614 applied)."
    ],
    "CATEGORY": "Shipping &mdash; Charterparties &mdash; Delay &mdash; Measure of Damages",
    "JUDGE": "Lord Reid; Lord Hodson; Lord Morris of Borth-y-Gest; Lord Pearce; Lord Upjohn",
    "CATEGORIES": [
        "Shipping",
        "Charterparties",
        "Delay",
        "Measure of Damages"
    ],
    "NUMBER": "484",
    "TYPE": "Headnotes",
    "NAME": "(wl) Koufos v Czarnikow Ltd (The Heron II)",
    "CITATION": "Koufos v Czarnikow Ltd (The Heron II) [1969] 1 AC 350",
    "CIT": "[1969] 1 AC 350",
    "FLAGS": [
        "Approved"
    ]
},
{
    "RELATED": [
        "(wl) Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "(wl) Royscot Trust v Rogerson",
        "(wl) East v Maurer",
        "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) Curtis v Chemical Cleaning & Dyeing Co",
        "(wl) Errington v Errington and Woods",
        "(wl) British Crane Hire Corporation Ltd v Ipswich Plant Hire Ltd",
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) Tool Metal Manufacturing Co Ltd v Tungsten Electric Co Ltd",
        "(wl) Olley v Marlborough Court Hotel",
        "(wl) Ramsgate Victoria Hotel v Montefiore"
    ],
    "COURT": "EWCA",
    "SUMMARY": [
        "Remoteness; foreseeability; pig food unfit for consumption",
        "Where parties contemplate the type of consequence which may follow a breach of contract, they will be liable for specific damage of that type, even where the specific damage was not foreseeable. The defendants sold a pig-food hopper to the plaintiffs. It was defective. The nuts in it went mouldy. 254 pigs died as a result of eating mouldy nuts. At the time of the contract it was found, as a fact, that the parties could not have foreseen serious illness arising as a result of the consumption of mouldy nuts."
    ],
    "CATEGORY": "Damages &mdash; Foreseeability &mdash; Remoteness &mdash; Satisfactory Quality",
    "CITATION": "H Parsons (Livestock) Ltd v Uttley Ingham &amp; Co [1978] QB 791",
    "YEAR": "1978",
    "CATEGORIES": [
        "Damages",
        "Foreseeability",
        "Remoteness",
        "Satisfactory Quality"
    ],
    "HELD": [
        "dismissing D&#8217;s appeal, that it would have been in the contemplation of the parties that there was a real possibility of harm coming to the pigs if their food was made unfit by reason of the condition of the hopper. The fact that they could not foresee the extent of the harm was immaterial and P could recover the cost of his pigs."
    ],
    "NUMBER": "485",
    "TYPE": "Headnotes",
    "NAME": "(wl) H Parsons (Livestock) Ltd v Uttley Ingham & Co",
    "JUDGE": "Lord Denning MR; Orr LJ; Scarman LJ",
    "CIT": "[1978] QB 791",
    "FLAGS": [
        "Approved",
        "Denning"
    ]
},
{
    "RELATED": [
        "(wl) Finelvet AG v Vinava Shipping Co Ltd, The Chrysalis",
        "(wl) Royscot Trust v Rogerson",
        "(wl) Ocean Tramp Tankers Corporation v V",
        "(wl) East v Maurer",
        "(wl) Schawel v Reade",
        "(wl) Tinn v Hoffman & Co",
        "(wl) Koufos v Czarnikow Ltd (The Heron II)",
        "(wl) Doyle v Olby (Ironmngers) Ltd",
        "(wl) H Parsons (Livestock) Ltd v Uttley Ingham & Co",
        "(wl) Victoria Laundry (Windsor) Ltd v Newman Industries Ltd",
        "(wl) Reardon Smith Line Ltd v Yngvar Hansen-Tangen",
        "(wl) L J Korbetis v Transgrain Shipping BV"
    ],
    "COUNSEL": "For the appellant: Dominic Kendrick QC, Benjamin Parker. For the respondent: Simon Croall QC, Ruth Hosking.",
    "COURT": "UKHL",
    "SUMMARY": [
        "When assessing damages for the late redelivery of a chartered vessel, the court should in the usual case restrict the charterer&#8217;s liability to the difference between the market rate and the charter rate for the overrun period."
    ],
    "CATEGORY": "Shipping Other Related Subjects: Contracts &mdash; Damages &mdash; Breach of Contract &mdash; Charterparties &mdash; Late Delivery &mdash; Measure of Damages &mdash; Ships",
    "CITATION": "Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas) [2008] UKHL 48",
    "YEAR": "2008",
    "ABSTRACT": [
        "The appellant charterer (T) appealed against a decision ([2007] EWCA Civ 901, [2008] 1 All E.R. (Comm) 685) upholding an arbitrators&#8217; ruling on the damages to which the respondent shipowner (M) was entitled following the late return of the ship which T had chartered from it.",
        "M had let out its ship to T for a period of five to seven months, to end no later than midnight on May 2, 2004. T notified M that the ship would be back no later than then. M therefore contracted to let the ship to new charterers for a period of about four to six months, promising that they could have the ship no later than May 8, 2004. The agreed price of hire was $39,500 a day. The ship was delayed on its last voyage and M did not get it back until May 11, 2004. The new charterers agreed to take the ship, but by then the market had fallen sharply and they would only take it at a reduced price of $31,500 a day. The issue before the arbitrators was whether T was liable to pay only for the use of the ship for the number of days that it was late at the market rate then prevailing or whether, as M had argued, T was liable to pay the difference between what M would have got from the new charter had the ship been returned in time and what it in fact got. The arbitrators, by a majority, adopted the latter approach. They concluded that the loss on the new fixture fell within the first rule in Hadley v Baxendale 156 E.R. 145 as arising &#8220;naturally, i.e. according to the usual course of things, from such breach of contract itself&#8221;. It fell within that rule because it was damage &#8220;of a kind which the [charterer], when he made the contract, ought to have realised was not unlikely to result from a breach of contract [by delay in redelivery]&#8220;. The dissenting arbitrator did not deny that T would have known that M would be very likely to enter into a following fixture during the course of the charter and that late delivery might cause that fixture to be lost. However, he concluded that a reasonable man in T&#8217;s position would not have understood that he was assuming liability for the risk of the type of loss in question. He stated that the general understanding in the shipping market was that liability was restricted to the difference between the market rate and the charter rate for the overrun period and that &#8220;any departure from this rule [is] likely to give rise to a real risk of serious commercial uncertainty which the industry as a whole would regard as undesirable&#8221;."
    ],
    "CATEGORIES": [
        "Shipping Other Related Subjects: Contracts",
        "Damages",
        "Breach of Contract",
        "Charterparties",
        "Late Delivery",
        "Measure of Damages",
        "Ships"
    ],
    "HELD": [
        "Appeal allowed.",
        "In accepting M&#8217;s submission that what mattered was that the type of loss claimed was foreseeable, the majority arbitrators had applied too crude a test, and it was an error of law to adopt it. The common basis on which the parties had contracted was essential to the rule in Hadley v Baxendale as a whole. In Koufos v C Czarnikow Ltd (The Heron II) [1969] 1 A.C. 350 their Lordships had had well in mind that it was not simply a question of probability but also of what the contracting parties had to be taken to have had in mind, having regard to the nature and object of their business transaction. What mattered was whether the common intention of reasonable parties to a charterparty of this sort would have been that, in the event of a relatively short delay in redelivery, an extraordinary loss, measured over the whole term of the renewed fixture, was, in the words of Lord Reid in The Heron II , &#8220;sufficiently likely to result from the breach of contract to make it proper to hold that the loss flowed naturally from the breach or that loss of that kind should have been within [the defaulting party&#8217;s] contemplation&#8221;. That would not have been the common intention of reasonable contracting parties. It was contrary to the principle stated in Victoria Laundry (Windsor) v Newman Industries [1949] 2 K.B. 528, and reaffirmed in The Heron II , to suppose that the parties were contracting on the basis that T would be liable for any loss, however large, occasioned by a delay in redelivery in circumstances where it had no knowledge of, or control over, the new fixture entered into by M, Hadley v Baxendale , The Heron II and Victoria Laundry applied."
    ],
    "NUMBER": "486",
    "TYPE": "Headnotes",
    "NAME": "(wl) Transfield Shipping Inc v Mercator Shipping Inc (The Achilleas)",
    "JUDGE": "Lord Hoffmann; Lord Hope of Craighead; Lord Rodger of Earlsferry; Lord Walker of Gestingthorpe; Baroness Hale of Richmond",
    "CIT": "[2008] UKHL 48",
    "FLAGS": [
        "Approved",
        "Hale",
        "Hoffmann"
    ]
}];"; 

cardsLen = 487;

